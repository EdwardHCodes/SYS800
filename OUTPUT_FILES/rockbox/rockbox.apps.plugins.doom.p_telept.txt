 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Teleportation.
 *
 *----------------------------------------------------------------------------- TELEPORTATION killough 5/3/98: reformatted, cleaned up don't teleport missiles Don't teleport if hit back of line,  so you can get out of teleporter. killough 1/31/98: improve performance by using P_FindSectorFromLineTag instead of simple linear search. killough 5/12/98: exclude voodoo dolls: killough 8/9/98  spawn teleport fog and emit sound at source spawn teleport fog and emit sound at destination don't move for a bit
             * cph - DEMOSYNC - BOOM had (player) here?  killough 10/98: kill all bobbing momentum too  Silent TELEPORTATION, by Lee Killough Primarily for rooms-over-rooms etc. don't teleport missiles Don't teleport if hit back of line, so you can get out of teleporter. Height of thing above ground, in case of mid-air teleports: Get the angle between the exit thing and source linedef. Rotate 90 degrees, so that walking perpendicularly across teleporter linedef causes thing to exit in the direction indicated by the exit thing. Sine, cosine of angle adjustment Momentum of thing crossing teleporter linedef Whether this is a player, and if so, a pointer to its player_t Attempt to teleport, aborting if blocked killough 8/9/98  Rotate thing according to difference in angles Adjust z position to be same height above ground as before Rotate thing's momentum to come out of exit just like it entered Adjust player's view, in case there has been a height change Voodoo dolls are excluded by making sure player->mo == thing. Save the current deltaviewheight, used in stepping Clear deltaviewheight, since we don't want any changes Set player's view according to the newly set parameters Reset the delta to have the same dynamics as before Silent linedef-based TELEPORTATION, by Lee Killough Primarily for rooms-over-rooms etc. This is the complete player-preserving kind of teleporter. It has advantages over the teleporter with thing exits. maximum fixed_t units to move object to avoid hiccups Get the thing's position along the source linedef Get the angle between the two linedefs, for rotating orientation and momentum. Rotate 180 degrees, and flip the position across the exit linedef, if reversed. Interpolate position across the exit linedef Sine, cosine of angle adjustment Maximum distance thing can be moved away from interpolated exit, to ensure that it is on the correct side of exit linedef Whether this is a player, and if so, a pointer to its player_t. Voodoo dolls are excluded by making sure thing->player->mo==thing. Whether walking towards first side of exit linedef steps down Height of thing above ground Side to exit the linedef on positionally. Notes: This flag concerns exit position, not momentum. Due to roundoff error, the thing can land on either the left or the right side of the exit linedef, and steps must be taken to make sure it does not end up on the wrong side. Exit momentum is always towards side 1 in a reversed teleporter, and always towards side 0 otherwise. Exiting positionally on side 1 is always safe, as far as avoiding oscillations and stuck-in-wall problems, but may not be optimum for non-reversed teleporters. Exiting on side 0 can cause oscillations if momentum is towards side 1, as it is with reversed teleporters. Exiting on side 1 slightly improves player viewing when going down a step on a non-reversed teleporter. Make sure we are on correct side of exit linedef. Attempt to teleport, aborting if blocked killough 8/9/98  Adjust z position to be same height above ground as before. Ground level at the exit is measured as the higher of the two floor heights at the exit linedef. Rotate thing's orientation according to difference in linedef angles Momentum of thing crossing teleporter linedef Rotate thing's momentum to come out of exit just like it entered Adjust a player's view, in case there has been a height change Save the current deltaviewheight, used in stepping Clear deltaviewheight, since we don't want any changes now Set player's view according to the newly set parameters Reset the delta to have the same dynamics as before Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Teleportation.
 *
 *----------------------------------------------------------------------------- TELEPORTATION killough 5/3/98: reformatted, cleaned up don't teleport missiles Don't teleport if hit back of line,  so you can get out of teleporter. killough 1/31/98: improve performance by using P_FindSectorFromLineTag instead of simple linear search. killough 5/12/98: exclude voodoo dolls: killough 8/9/98  spawn teleport fog and emit sound at source spawn teleport fog and emit sound at destination don't move for a bit
             * cph - DEMOSYNC - BOOM had (player) here?  killough 10/98: kill all bobbing momentum too  Silent TELEPORTATION, by Lee Killough Primarily for rooms-over-rooms etc. don't teleport missiles Don't teleport if hit back of line, so you can get out of teleporter. Height of thing above ground, in case of mid-air teleports: Get the angle between the exit thing and source linedef. Rotate 90 degrees, so that walking perpendicularly across teleporter linedef causes thing to exit in the direction indicated by the exit thing. Sine, cosine of angle adjustment Momentum of thing crossing teleporter linedef Whether this is a player, and if so, a pointer to its player_t Attempt to teleport, aborting if blocked killough 8/9/98  Rotate thing according to difference in angles Adjust z position to be same height above ground as before Rotate thing's momentum to come out of exit just like it entered Adjust player's view, in case there has been a height change Voodoo dolls are excluded by making sure player->mo == thing. Save the current deltaviewheight, used in stepping Clear deltaviewheight, since we don't want any changes Set player's view according to the newly set parameters Reset the delta to have the same dynamics as before Silent linedef-based TELEPORTATION, by Lee Killough Primarily for rooms-over-rooms etc. This is the complete player-preserving kind of teleporter. It has advantages over the teleporter with thing exits. maximum fixed_t units to move object to avoid hiccups Get the thing's position along the source linedef Get the angle between the two linedefs, for rotating orientation and momentum. Rotate 180 degrees, and flip the position across the exit linedef, if reversed. Interpolate position across the exit linedef Sine, cosine of angle adjustment Maximum distance thing can be moved away from interpolated exit, to ensure that it is on the correct side of exit linedef Whether this is a player, and if so, a pointer to its player_t. Voodoo dolls are excluded by making sure thing->player->mo==thing. Whether walking towards first side of exit linedef steps down Height of thing above ground Side to exit the linedef on positionally. Notes: This flag concerns exit position, not momentum. Due to roundoff error, the thing can land on either the left or the right side of the exit linedef, and steps must be taken to make sure it does not end up on the wrong side. Exit momentum is always towards side 1 in a reversed teleporter, and always towards side 0 otherwise. Exiting positionally on side 1 is always safe, as far as avoiding oscillations and stuck-in-wall problems, but may not be optimum for non-reversed teleporters. Exiting on side 0 can cause oscillations if momentum is towards side 1, as it is with reversed teleporters. Exiting on side 1 slightly improves player viewing when going down a step on a non-reversed teleporter. Make sure we are on correct side of exit linedef. Attempt to teleport, aborting if blocked killough 8/9/98  Adjust z position to be same height above ground as before. Ground level at the exit is measured as the higher of the two floor heights at the exit linedef. Rotate thing's orientation according to difference in linedef angles Momentum of thing crossing teleporter linedef Rotate thing's momentum to come out of exit just like it entered Adjust a player's view, in case there has been a height change Save the current deltaviewheight, used in stepping Clear deltaviewheight, since we don't want any changes now Set player's view according to the newly set parameters Reset the delta to have the same dynamics as before Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Teleportation.
 *
 *----------------------------------------------------------------------------- TELEPORTATION killough 5/3/98: reformatted, cleaned up don't teleport missiles Don't teleport if hit back of line,  so you can get out of teleporter. killough 1/31/98: improve performance by using P_FindSectorFromLineTag instead of simple linear search. killough 5/12/98: exclude voodoo dolls: killough 8/9/98  spawn teleport fog and emit sound at source spawn teleport fog and emit sound at destination don't move for a bit
             * cph - DEMOSYNC - BOOM had (player) here?  killough 10/98: kill all bobbing momentum too  Silent TELEPORTATION, by Lee Killough Primarily for rooms-over-rooms etc. don't teleport missiles Don't teleport if hit back of line, so you can get out of teleporter. Height of thing above ground, in case of mid-air teleports: Get the angle between the exit thing and source linedef. Rotate 90 degrees, so that walking perpendicularly across teleporter linedef causes thing to exit in the direction indicated by the exit thing. Sine, cosine of angle adjustment Momentum of thing crossing teleporter linedef Whether this is a player, and if so, a pointer to its player_t Attempt to teleport, aborting if blocked killough 8/9/98  Rotate thing according to difference in angles Adjust z position to be same height above ground as before Rotate thing's momentum to come out of exit just like it entered Adjust player's view, in case there has been a height change Voodoo dolls are excluded by making sure player->mo == thing. Save the current deltaviewheight, used in stepping Clear deltaviewheight, since we don't want any changes Set player's view according to the newly set parameters Reset the delta to have the same dynamics as before Silent linedef-based TELEPORTATION, by Lee Killough Primarily for rooms-over-rooms etc. This is the complete player-preserving kind of teleporter. It has advantages over the teleporter with thing exits. maximum fixed_t units to move object to avoid hiccups Get the thing's position along the source linedef Get the angle between the two linedefs, for rotating orientation and momentum. Rotate 180 degrees, and flip the position across the exit linedef, if reversed. Interpolate position across the exit linedef Sine, cosine of angle adjustment Maximum distance thing can be moved away from interpolated exit, to ensure that it is on the correct side of exit linedef Whether this is a player, and if so, a pointer to its player_t. Voodoo dolls are excluded by making sure thing->player->mo==thing. Whether walking towards first side of exit linedef steps down Height of thing above ground Side to exit the linedef on positionally. Notes: This flag concerns exit position, not momentum. Due to roundoff error, the thing can land on either the left or the right side of the exit linedef, and steps must be taken to make sure it does not end up on the wrong side. Exit momentum is always towards side 1 in a reversed teleporter, and always towards side 0 otherwise. Exiting positionally on side 1 is always safe, as far as avoiding oscillations and stuck-in-wall problems, but may not be optimum for non-reversed teleporters. Exiting on side 0 can cause oscillations if momentum is towards side 1, as it is with reversed teleporters. Exiting on side 1 slightly improves player viewing when going down a step on a non-reversed teleporter. Make sure we are on correct side of exit linedef. Attempt to teleport, aborting if blocked killough 8/9/98  Adjust z position to be same height above ground as before. Ground level at the exit is measured as the higher of the two floor heights at the exit linedef. Rotate thing's orientation according to difference in linedef angles Momentum of thing crossing teleporter linedef Rotate thing's momentum to come out of exit just like it entered Adjust a player's view, in case there has been a height change Save the current deltaviewheight, used in stepping Clear deltaviewheight, since we don't want any changes now Set player's view according to the newly set parameters Reset the delta to have the same dynamics as before