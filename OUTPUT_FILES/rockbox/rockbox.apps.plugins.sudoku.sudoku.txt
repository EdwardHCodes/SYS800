**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *****************************************************************************
Sudoku by Dave Chapman

User instructions
-----------------

Use the arrow keys to move cursor, and press SELECT/ON/F2 to increment
the number under the cursor.

At any time during the game, press On to bring up the game menu with
further options:

 Save
 Reload
 Clear
 Solve

Sudoku is implemented as a "viewer" for a ".ss" file, as generated by
Simple Sudoku and other applications - http://angusj.com/sudoku/

In-progress game positions are saved in the original .ss file, with
A-I used to indicate numbers entered by the user.

Example ".ss" file, and one with a saved state:

...|...|...     ...|...|...
2..|8.4|9.1     2.C|8.4|9.1
...|1.6|32.     E..|1.6|32.
-----------     -----------
...|..5|.4.     ...|..5|.4.
8..|423|..6     8..|423|..6
.3.|9..|...     .3D|9..|A..
-----------     -----------
.63|7.9|...     .63|7.9|...
4.9|5.2|..8     4.9|5.2|.C8
...|...|...     ...|...|...

 The bitmaps  Default game - used to initialise sudoku.ss if it doesn't exist.  Horizontal layout, scratchpad at the left  Archos Recorders and Ondios - 112x64, 9 cells @ 8x6 with 10 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  C200, 9 cells @ 8x8 with 8 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iAudio M3, Samsung YH820, 9 cells @ 9x9 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iPod Mini - 138x110, 9 cells @ 10x10 with 14 border lines  iriver H10 5-6GB - 128x128, 9 cells @ 10x10 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iAudio X5, Iriver H1x0, iPod G3, G4 - 160x128;  iPod Nano - 176x132, 9 cells @ 12x12 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Iriver h300, iPod Color/Photo - 220x176, 9 cells @ 16x16 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iPod Video - 320x240, 9 cells @ 24x24 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  M:Robe 500 - 640x480, 9 cells @ 48x48 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Vertical layout, scratchpad at the bottom  e200, 9 cells @ 16x16 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Gigabeat - 240x320, 9 cells @ 24x24 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Philips GoGear SA9200 - 128x160, 9 cells @ 10x10 with 14 border tiles  Pixels between border and mark  Pixels between two marks  Mark width and height  Layout  Current config file version  Minimum config file version to accept  settings  Size dependent build-time calculations  !SMALL_BOARD  Copies the current to the saved board  Copies the saved to the current board  initialize the saved board so reload function works  Check the status of the board, assuming a change at the cursor location  First, check the column  Second, check the row  Finally, check the 3x3 sub-grid  We passed all the checks :)  Load game - only ".ss" is officially supported, but any sensible
   text representation (one line per row) may load.
 A buffer to read a sudoku board from  Ignore any other characters  Check that the board is valid - we need to check every row/column
       and block individually  Save a copy of the saved state - so we can reload without using the
       disk  Add a blank line at end  Save a copy of the saved state - so we can reload without
           using the disk  We have four types of cell:
       1) User-entered number
       2) Starting number
       3) Cursor in cell
     Clear the display buffer  Draw the gridlines - differently for different targets  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Horizontal layout  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Layout  SUDOKU_BUTTON_POSSIBLE  Draw the numbers  We have four types of cell:
               1) User-entered number
               2) Starting number
               3) Cursor in cell
             Draw the possible number markings on the board  draw markings in dark grey  SUDOKU_BUTTON_POSSIBLE  update the screen  initialize the saved board so reload function works  Menu used when user is in edit mode - i.e. creating a new game manually  Save new game  Quit  Check that the character at the cursor position is legal  Ignore any button presses during the splash  Move Cursor  Redraw current and old cells  plugin entry point  copy to running config  We have been started as a plugin - try default sudoku.ss  No previous game saved, use the default  The main game loop  Exit game  Ignore any button presses during the splash  Increment digit  Slow down the repeat speed to 1/3 second  Increment digit  Slow down the repeat speed to 1/3 second  Decrement digit  move cursor left  move cursor right  move cursor up  move cursor down  Don't let the user leave a game in a bad state  Ignore any button presses during the splash  Quit  Toggle current number in the possiblevals structure  Change scroll wheel direction  Quit if USB has been connected  save settings if changed **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *****************************************************************************
Sudoku by Dave Chapman

User instructions
-----------------

Use the arrow keys to move cursor, and press SELECT/ON/F2 to increment
the number under the cursor.

At any time during the game, press On to bring up the game menu with
further options:

 Save
 Reload
 Clear
 Solve

Sudoku is implemented as a "viewer" for a ".ss" file, as generated by
Simple Sudoku and other applications - http://angusj.com/sudoku/

In-progress game positions are saved in the original .ss file, with
A-I used to indicate numbers entered by the user.

Example ".ss" file, and one with a saved state:

...|...|...     ...|...|...
2..|8.4|9.1     2.C|8.4|9.1
...|1.6|32.     E..|1.6|32.
-----------     -----------
...|..5|.4.     ...|..5|.4.
8..|423|..6     8..|423|..6
.3.|9..|...     .3D|9..|A..
-----------     -----------
.63|7.9|...     .63|7.9|...
4.9|5.2|..8     4.9|5.2|.C8
...|...|...     ...|...|...

 The bitmaps  Default game - used to initialise sudoku.ss if it doesn't exist.  Horizontal layout, scratchpad at the left  Archos Recorders and Ondios - 112x64, 9 cells @ 8x6 with 10 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  C200, 9 cells @ 8x8 with 8 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iAudio M3, Samsung YH820, 9 cells @ 9x9 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iPod Mini - 138x110, 9 cells @ 10x10 with 14 border lines  iriver H10 5-6GB - 128x128, 9 cells @ 10x10 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iAudio X5, Iriver H1x0, iPod G3, G4 - 160x128;  iPod Nano - 176x132, 9 cells @ 12x12 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Iriver h300, iPod Color/Photo - 220x176, 9 cells @ 16x16 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iPod Video - 320x240, 9 cells @ 24x24 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  M:Robe 500 - 640x480, 9 cells @ 48x48 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Vertical layout, scratchpad at the bottom  e200, 9 cells @ 16x16 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Gigabeat - 240x320, 9 cells @ 24x24 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Philips GoGear SA9200 - 128x160, 9 cells @ 10x10 with 14 border tiles  Pixels between border and mark  Pixels between two marks  Mark width and height  Layout  Current config file version  Minimum config file version to accept  settings  Size dependent build-time calculations  !SMALL_BOARD  Copies the current to the saved board  Copies the saved to the current board  initialize the saved board so reload function works  Check the status of the board, assuming a change at the cursor location  First, check the column  Second, check the row  Finally, check the 3x3 sub-grid  We passed all the checks :)  Load game - only ".ss" is officially supported, but any sensible
   text representation (one line per row) may load.
 A buffer to read a sudoku board from  Ignore any other characters  Check that the board is valid - we need to check every row/column
       and block individually  Save a copy of the saved state - so we can reload without using the
       disk  Add a blank line at end  Save a copy of the saved state - so we can reload without
           using the disk  We have four types of cell:
       1) User-entered number
       2) Starting number
       3) Cursor in cell
     Clear the display buffer  Draw the gridlines - differently for different targets  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Horizontal layout  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Layout  SUDOKU_BUTTON_POSSIBLE  Draw the numbers  We have four types of cell:
               1) User-entered number
               2) Starting number
               3) Cursor in cell
             Draw the possible number markings on the board  draw markings in dark grey  SUDOKU_BUTTON_POSSIBLE  update the screen  initialize the saved board so reload function works  Menu used when user is in edit mode - i.e. creating a new game manually  Save new game  Quit  Check that the character at the cursor position is legal  Ignore any button presses during the splash  Move Cursor  Redraw current and old cells  plugin entry point  copy to running config  We have been started as a plugin - try default sudoku.ss  No previous game saved, use the default  The main game loop  Exit game  Ignore any button presses during the splash  Increment digit  Slow down the repeat speed to 1/3 second  Increment digit  Slow down the repeat speed to 1/3 second  Decrement digit  move cursor left  move cursor right  move cursor up  move cursor down  Don't let the user leave a game in a bad state  Ignore any button presses during the splash  Quit  Toggle current number in the possiblevals structure  Change scroll wheel direction  Quit if USB has been connected  save settings if changed **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *****************************************************************************
Sudoku by Dave Chapman

User instructions
-----------------

Use the arrow keys to move cursor, and press SELECT/ON/F2 to increment
the number under the cursor.

At any time during the game, press On to bring up the game menu with
further options:

 Save
 Reload
 Clear
 Solve

Sudoku is implemented as a "viewer" for a ".ss" file, as generated by
Simple Sudoku and other applications - http://angusj.com/sudoku/

In-progress game positions are saved in the original .ss file, with
A-I used to indicate numbers entered by the user.

Example ".ss" file, and one with a saved state:

...|...|...     ...|...|...
2..|8.4|9.1     2.C|8.4|9.1
...|1.6|32.     E..|1.6|32.
-----------     -----------
...|..5|.4.     ...|..5|.4.
8..|423|..6     8..|423|..6
.3.|9..|...     .3D|9..|A..
-----------     -----------
.63|7.9|...     .63|7.9|...
4.9|5.2|..8     4.9|5.2|.C8
...|...|...     ...|...|...

 The bitmaps  Default game - used to initialise sudoku.ss if it doesn't exist.  Horizontal layout, scratchpad at the left  Archos Recorders and Ondios - 112x64, 9 cells @ 8x6 with 10 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  C200, 9 cells @ 8x8 with 8 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iAudio M3, Samsung YH820, 9 cells @ 9x9 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iPod Mini - 138x110, 9 cells @ 10x10 with 14 border lines  iriver H10 5-6GB - 128x128, 9 cells @ 10x10 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iAudio X5, Iriver H1x0, iPod G3, G4 - 160x128;  iPod Nano - 176x132, 9 cells @ 12x12 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Iriver h300, iPod Color/Photo - 220x176, 9 cells @ 16x16 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  iPod Video - 320x240, 9 cells @ 24x24 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  M:Robe 500 - 640x480, 9 cells @ 48x48 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Vertical layout, scratchpad at the bottom  e200, 9 cells @ 16x16 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Gigabeat - 240x320, 9 cells @ 24x24 with 14 border lines  Pixels between border and mark  Pixels between two marks  Mark width and height  Philips GoGear SA9200 - 128x160, 9 cells @ 10x10 with 14 border tiles  Pixels between border and mark  Pixels between two marks  Mark width and height  Layout  Current config file version  Minimum config file version to accept  settings  Size dependent build-time calculations  !SMALL_BOARD  Copies the current to the saved board  Copies the saved to the current board  initialize the saved board so reload function works  Check the status of the board, assuming a change at the cursor location  First, check the column  Second, check the row  Finally, check the 3x3 sub-grid  We passed all the checks :)  Load game - only ".ss" is officially supported, but any sensible
   text representation (one line per row) may load.
 A buffer to read a sudoku board from  Ignore any other characters  Check that the board is valid - we need to check every row/column
       and block individually  Save a copy of the saved state - so we can reload without using the
       disk  Add a blank line at end  Save a copy of the saved state - so we can reload without
           using the disk  We have four types of cell:
       1) User-entered number
       2) Starting number
       3) Cursor in cell
     Clear the display buffer  Draw the gridlines - differently for different targets  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Horizontal layout  Small targets - draw dotted/single lines  Solid Line  Dotted line  Large targets - draw single/double lines  Layout  SUDOKU_BUTTON_POSSIBLE  Draw the numbers  We have four types of cell:
               1) User-entered number
               2) Starting number
               3) Cursor in cell
             Draw the possible number markings on the board  draw markings in dark grey  SUDOKU_BUTTON_POSSIBLE  update the screen  initialize the saved board so reload function works  Menu used when user is in edit mode - i.e. creating a new game manually  Save new game  Quit  Check that the character at the cursor position is legal  Ignore any button presses during the splash  Move Cursor  Redraw current and old cells  plugin entry point  copy to running config  We have been started as a plugin - try default sudoku.ss  No previous game saved, use the default  The main game loop  Exit game  Ignore any button presses during the splash  Increment digit  Slow down the repeat speed to 1/3 second  Increment digit  Slow down the repeat speed to 1/3 second  Decrement digit  move cursor left  move cursor right  move cursor up  move cursor down  Don't let the user leave a game in a bad state  Ignore any button presses during the splash  Quit  Toggle current number in the possiblevals structure  Change scroll wheel direction  Quit if USB has been connected  save settings if changed 