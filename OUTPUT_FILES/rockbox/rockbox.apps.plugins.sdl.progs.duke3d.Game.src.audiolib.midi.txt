
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: MIDI.C

   author: James R. Dose
   date:   May 25, 1994

   Midi song file playback routines.

   (c) Copyright 1994 James R. Dose.  All Rights Reserved.
******************************************************************************************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: _MIDI_ReadNumber

   Reads a variable length number from a MIDI track.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ReadDelta

   Reads a variable length encoded delta delay time from the MIDI data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ResetTracks

   Sets the track pointers to the beginning of the song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_AdvanceTick

   Increment tick counters.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SysEx

   Interpret SysEx Event.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_MetaEvent

   Interpret Meta Event.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_InterpretControllerInfo

   Interprets the MIDI controller info.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ServiceRoutine

   Task that interperates the MIDI data.
--------------------------------------------------------------------- NOTE: We have to use a stack frame here because of a strange bug that occurs with Watcom.  This means that we cannot access Task!Turned off to test if it works with Watcom 10a#pragma aux _MIDI_ServiceRoutine frame;
static void test
   (
   task *Task
   )
   {
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   }
---------------------------------------------------------------------
   Function: _MIDI_SendControlChange

   Sends a control change to the proper device
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_RerouteMidiChannel

   Sets callback function to reroute MIDI commands from specified
   function.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_AllNotesOff

   Sends all notes off commands on all midi channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SetChannelVolume

   Sets the volume of the specified midi channel.
--------------------------------------------------------------------- For user volume For user volume---------------------------------------------------------------------
   Function: MIDI_SetUserChannelVolume

   Sets the volume of the specified midi channel.
--------------------------------------------------------------------- Convert channel from 1-16 to 0-15---------------------------------------------------------------------
   Function: MIDI_ResetUserChannelVolume

   Sets the volume of the specified midi channel.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SendChannelVolumes

   Sets the volume on all the midi channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_Reset

   Resets the MIDI device to General Midi defaults.
--------------------------------------------------------------------- Pitch Bend Sensitivity MSB  Pitch Bend Sensitivity LSB ---------------------------------------------------------------------
   Function: MIDI_SetVolume

   Sets the total volume of the music.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetVolume

   Returns the total volume of the music.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetContext

   Sets the song context.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetContext

   Returns the current song context.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetLoopFlag

   Sets whether the song should loop when finished or not.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_ContinueSong

   Continues playback of a paused song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_PauseSong

   Pauses playback of the current song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SongPlaying

   Returns whether a song is playing or not.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetMidiFuncs

   Selects the routines that send the MIDI data to the music device.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_StopSong

   Stops playback of the currently playing song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_PlaySong

   Begins playback of a MIDI song.
--------------------------------------------------------------------- If a SMPTE time division is given, just set to 96 so no errors occur      MIDI_SetErrorCode( MIDI_DPMI_Error );   _MIDI_PlayRoutine = TS_ScheduleTask( test, 100, 1, NULL );---------------------------------------------------------------------
   Function: MIDI_SetTempo

   Sets the song tempo.
---------------------------------------------------------------------      TS_SetTaskRate( _MIDI_PlayRoutine, tickspersecond / 4 );---------------------------------------------------------------------
   Function: MIDI_GetTempo

   Returns the song tempo.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ProcessNextTick

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongTick

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongTime

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongPosition

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetSongPosition

   Returns the position of the song pointer in Measures, beats, ticks.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetSongLength

   Returns the length of the song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_InitEMIDI

   Sets up the EMIDI
---------------------------------------------------------------------printf( "Include track %d on card %d\n", tracknum, c2 );printf( "Track excluded %d on card %d\n", tracknum, c2 );printf( "Exclude track %d on card %d\n", tracknum, c2 );printf( "Program change on track %d\n", tracknum );printf( "Volume change on track %d\n", tracknum );---------------------------------------------------------------------
   Function: MIDI_LoadTimbres

   Preloads the timbres on cards that use patch-caching.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_UnlockMemory

   Unlocks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_LockMemory

   Locks all neccessary data.
---------------------------------------------------------------------      MIDI_SetErrorCode( MIDI_DPMI_Error );
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: MIDI.C

   author: James R. Dose
   date:   May 25, 1994

   Midi song file playback routines.

   (c) Copyright 1994 James R. Dose.  All Rights Reserved.
******************************************************************************************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: _MIDI_ReadNumber

   Reads a variable length number from a MIDI track.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ReadDelta

   Reads a variable length encoded delta delay time from the MIDI data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ResetTracks

   Sets the track pointers to the beginning of the song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_AdvanceTick

   Increment tick counters.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SysEx

   Interpret SysEx Event.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_MetaEvent

   Interpret Meta Event.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_InterpretControllerInfo

   Interprets the MIDI controller info.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ServiceRoutine

   Task that interperates the MIDI data.
--------------------------------------------------------------------- NOTE: We have to use a stack frame here because of a strange bug that occurs with Watcom.  This means that we cannot access Task!Turned off to test if it works with Watcom 10a#pragma aux _MIDI_ServiceRoutine frame;
static void test
   (
   task *Task
   )
   {
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   }
---------------------------------------------------------------------
   Function: _MIDI_SendControlChange

   Sends a control change to the proper device
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_RerouteMidiChannel

   Sets callback function to reroute MIDI commands from specified
   function.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_AllNotesOff

   Sends all notes off commands on all midi channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SetChannelVolume

   Sets the volume of the specified midi channel.
--------------------------------------------------------------------- For user volume For user volume---------------------------------------------------------------------
   Function: MIDI_SetUserChannelVolume

   Sets the volume of the specified midi channel.
--------------------------------------------------------------------- Convert channel from 1-16 to 0-15---------------------------------------------------------------------
   Function: MIDI_ResetUserChannelVolume

   Sets the volume of the specified midi channel.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SendChannelVolumes

   Sets the volume on all the midi channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_Reset

   Resets the MIDI device to General Midi defaults.
--------------------------------------------------------------------- Pitch Bend Sensitivity MSB  Pitch Bend Sensitivity LSB ---------------------------------------------------------------------
   Function: MIDI_SetVolume

   Sets the total volume of the music.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetVolume

   Returns the total volume of the music.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetContext

   Sets the song context.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetContext

   Returns the current song context.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetLoopFlag

   Sets whether the song should loop when finished or not.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_ContinueSong

   Continues playback of a paused song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_PauseSong

   Pauses playback of the current song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SongPlaying

   Returns whether a song is playing or not.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetMidiFuncs

   Selects the routines that send the MIDI data to the music device.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_StopSong

   Stops playback of the currently playing song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_PlaySong

   Begins playback of a MIDI song.
--------------------------------------------------------------------- If a SMPTE time division is given, just set to 96 so no errors occur      MIDI_SetErrorCode( MIDI_DPMI_Error );   _MIDI_PlayRoutine = TS_ScheduleTask( test, 100, 1, NULL );---------------------------------------------------------------------
   Function: MIDI_SetTempo

   Sets the song tempo.
---------------------------------------------------------------------      TS_SetTaskRate( _MIDI_PlayRoutine, tickspersecond / 4 );---------------------------------------------------------------------
   Function: MIDI_GetTempo

   Returns the song tempo.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ProcessNextTick

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongTick

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongTime

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongPosition

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetSongPosition

   Returns the position of the song pointer in Measures, beats, ticks.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetSongLength

   Returns the length of the song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_InitEMIDI

   Sets up the EMIDI
---------------------------------------------------------------------printf( "Include track %d on card %d\n", tracknum, c2 );printf( "Track excluded %d on card %d\n", tracknum, c2 );printf( "Exclude track %d on card %d\n", tracknum, c2 );printf( "Program change on track %d\n", tracknum );printf( "Volume change on track %d\n", tracknum );---------------------------------------------------------------------
   Function: MIDI_LoadTimbres

   Preloads the timbres on cards that use patch-caching.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_UnlockMemory

   Unlocks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_LockMemory

   Locks all neccessary data.
---------------------------------------------------------------------      MIDI_SetErrorCode( MIDI_DPMI_Error );
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: MIDI.C

   author: James R. Dose
   date:   May 25, 1994

   Midi song file playback routines.

   (c) Copyright 1994 James R. Dose.  All Rights Reserved.
******************************************************************************************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: _MIDI_ReadNumber

   Reads a variable length number from a MIDI track.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ReadDelta

   Reads a variable length encoded delta delay time from the MIDI data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ResetTracks

   Sets the track pointers to the beginning of the song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_AdvanceTick

   Increment tick counters.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SysEx

   Interpret SysEx Event.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_MetaEvent

   Interpret Meta Event.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_InterpretControllerInfo

   Interprets the MIDI controller info.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ServiceRoutine

   Task that interperates the MIDI data.
--------------------------------------------------------------------- NOTE: We have to use a stack frame here because of a strange bug that occurs with Watcom.  This means that we cannot access Task!Turned off to test if it works with Watcom 10a#pragma aux _MIDI_ServiceRoutine frame;
static void test
   (
   task *Task
   )
   {
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   _MIDI_ServiceRoutine( Task );
   }
---------------------------------------------------------------------
   Function: _MIDI_SendControlChange

   Sends a control change to the proper device
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_RerouteMidiChannel

   Sets callback function to reroute MIDI commands from specified
   function.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_AllNotesOff

   Sends all notes off commands on all midi channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SetChannelVolume

   Sets the volume of the specified midi channel.
--------------------------------------------------------------------- For user volume For user volume---------------------------------------------------------------------
   Function: MIDI_SetUserChannelVolume

   Sets the volume of the specified midi channel.
--------------------------------------------------------------------- Convert channel from 1-16 to 0-15---------------------------------------------------------------------
   Function: MIDI_ResetUserChannelVolume

   Sets the volume of the specified midi channel.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_SendChannelVolumes

   Sets the volume on all the midi channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_Reset

   Resets the MIDI device to General Midi defaults.
--------------------------------------------------------------------- Pitch Bend Sensitivity MSB  Pitch Bend Sensitivity LSB ---------------------------------------------------------------------
   Function: MIDI_SetVolume

   Sets the total volume of the music.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetVolume

   Returns the total volume of the music.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetContext

   Sets the song context.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetContext

   Returns the current song context.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetLoopFlag

   Sets whether the song should loop when finished or not.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_ContinueSong

   Continues playback of a paused song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_PauseSong

   Pauses playback of the current song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SongPlaying

   Returns whether a song is playing or not.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetMidiFuncs

   Selects the routines that send the MIDI data to the music device.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_StopSong

   Stops playback of the currently playing song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_PlaySong

   Begins playback of a MIDI song.
--------------------------------------------------------------------- If a SMPTE time division is given, just set to 96 so no errors occur      MIDI_SetErrorCode( MIDI_DPMI_Error );   _MIDI_PlayRoutine = TS_ScheduleTask( test, 100, 1, NULL );---------------------------------------------------------------------
   Function: MIDI_SetTempo

   Sets the song tempo.
---------------------------------------------------------------------      TS_SetTaskRate( _MIDI_PlayRoutine, tickspersecond / 4 );---------------------------------------------------------------------
   Function: MIDI_GetTempo

   Returns the song tempo.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: _MIDI_ProcessNextTick

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongTick

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongTime

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_SetSongPosition

   Sets the position of the song pointer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetSongPosition

   Returns the position of the song pointer in Measures, beats, ticks.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_GetSongLength

   Returns the length of the song.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_InitEMIDI

   Sets up the EMIDI
---------------------------------------------------------------------printf( "Include track %d on card %d\n", tracknum, c2 );printf( "Track excluded %d on card %d\n", tracknum, c2 );printf( "Exclude track %d on card %d\n", tracknum, c2 );printf( "Program change on track %d\n", tracknum );printf( "Volume change on track %d\n", tracknum );---------------------------------------------------------------------
   Function: MIDI_LoadTimbres

   Preloads the timbres on cards that use patch-caching.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_UnlockMemory

   Unlocks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MIDI_LockMemory

   Locks all neccessary data.
---------------------------------------------------------------------      MIDI_SetErrorCode( MIDI_DPMI_Error );