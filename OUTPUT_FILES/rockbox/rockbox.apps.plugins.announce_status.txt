**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 *
 * Copyright (C) 2003-2005 Jörg Hohensohn
 * Copyright (C) 2020 BILGUS
 *
 *
 *
 * Usage: Start plugin, it will stay in the background.
 *
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ******************************************************************************************** constants ********************************** prototypes ***************** implements a scrolling screen  return the current track time in seconds  return the total length of the current track  return the track number  update the play message with Rockbox info  the thread running it all  main loop  entry ***************** data types ********************************** globals ***************** communication to the worker thread  signal to the thread that we want to exit  worker thread id  thread event queue ***************** communication with Rockbox playback ***************** return the track number if (rb->audio_status() == (AUDIO_STATUS_PLAY | AUDIO_STATUS_PAUSE)) track numbers start with 1 ***************** config functions **************** don't want to change these so save a copy  restore other settings ***************** helper fuctions *****************rb->talk_force_enqueue_next();rb->talk_force_enqueue_next(); equivalent of the function found in playlist.c  first_index should always be index 0 for display purposes rb->splashf(100, "%d", selection); only add premade tags once TimeDateTrackPlaylistBatterySleepRuntime sep Clear All inspect it test itcancel save  redraw *
  Shows the settings menu
 bool old_val;sep***************** main thread + helper ***************** for 1 sec tick  init the worker thread  put the thread's queue in the bcast list  remove the thread's queue from the broadcast list  callback to end the TSR plugin, called before a new one gets loaded  dont let it start again ***************** main ***************** If the loading failed, save a new config file  need buffer for custom keyboard layout  stay resident **************** Plugin Entry Point **************** now go ahead and have fun!  announce the time  announce elapsed play for this track rb->splash(10, current_token);
                Date and time functions
            (valid_time(tm)) prefix suffix connectives 
                Sleep timer and runtime
             prefix suffix connectives  prefix suffix connectives 
                Current track information
             prefix suffix connectives 
                Current playlist information
             prefix suffix connectives 
                Battery
             prefix suffix connectives 
                Catch your breath
            **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 *
 * Copyright (C) 2003-2005 Jörg Hohensohn
 * Copyright (C) 2020 BILGUS
 *
 *
 *
 * Usage: Start plugin, it will stay in the background.
 *
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ******************************************************************************************** constants ********************************** prototypes ***************** implements a scrolling screen  return the current track time in seconds  return the total length of the current track  return the track number  update the play message with Rockbox info  the thread running it all  main loop  entry ***************** data types ********************************** globals ***************** communication to the worker thread  signal to the thread that we want to exit  worker thread id  thread event queue ***************** communication with Rockbox playback ***************** return the track number if (rb->audio_status() == (AUDIO_STATUS_PLAY | AUDIO_STATUS_PAUSE)) track numbers start with 1 ***************** config functions **************** don't want to change these so save a copy  restore other settings ***************** helper fuctions *****************rb->talk_force_enqueue_next();rb->talk_force_enqueue_next(); equivalent of the function found in playlist.c  first_index should always be index 0 for display purposes rb->splashf(100, "%d", selection); only add premade tags once TimeDateTrackPlaylistBatterySleepRuntime sep Clear All inspect it test itcancel save  redraw *
  Shows the settings menu
 bool old_val;sep***************** main thread + helper ***************** for 1 sec tick  init the worker thread  put the thread's queue in the bcast list  remove the thread's queue from the broadcast list  callback to end the TSR plugin, called before a new one gets loaded  dont let it start again ***************** main ***************** If the loading failed, save a new config file  need buffer for custom keyboard layout  stay resident **************** Plugin Entry Point **************** now go ahead and have fun!  announce the time  announce elapsed play for this track rb->splash(10, current_token);
                Date and time functions
            (valid_time(tm)) prefix suffix connectives 
                Sleep timer and runtime
             prefix suffix connectives  prefix suffix connectives 
                Current track information
             prefix suffix connectives 
                Current playlist information
             prefix suffix connectives 
                Battery
             prefix suffix connectives 
                Catch your breath
            **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 *
 * Copyright (C) 2003-2005 Jörg Hohensohn
 * Copyright (C) 2020 BILGUS
 *
 *
 *
 * Usage: Start plugin, it will stay in the background.
 *
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ******************************************************************************************** constants ********************************** prototypes ***************** implements a scrolling screen  return the current track time in seconds  return the total length of the current track  return the track number  update the play message with Rockbox info  the thread running it all  main loop  entry ***************** data types ********************************** globals ***************** communication to the worker thread  signal to the thread that we want to exit  worker thread id  thread event queue ***************** communication with Rockbox playback ***************** return the track number if (rb->audio_status() == (AUDIO_STATUS_PLAY | AUDIO_STATUS_PAUSE)) track numbers start with 1 ***************** config functions **************** don't want to change these so save a copy  restore other settings ***************** helper fuctions *****************rb->talk_force_enqueue_next();rb->talk_force_enqueue_next(); equivalent of the function found in playlist.c  first_index should always be index 0 for display purposes rb->splashf(100, "%d", selection); only add premade tags once TimeDateTrackPlaylistBatterySleepRuntime sep Clear All inspect it test itcancel save  redraw *
  Shows the settings menu
 bool old_val;sep***************** main thread + helper ***************** for 1 sec tick  init the worker thread  put the thread's queue in the bcast list  remove the thread's queue from the broadcast list  callback to end the TSR plugin, called before a new one gets loaded  dont let it start again ***************** main ***************** If the loading failed, save a new config file  need buffer for custom keyboard layout  stay resident **************** Plugin Entry Point **************** now go ahead and have fun!  announce the time  announce elapsed play for this track rb->splash(10, current_token);
                Date and time functions
            (valid_time(tm)) prefix suffix connectives 
                Sleep timer and runtime
             prefix suffix connectives  prefix suffix connectives 
                Current track information
             prefix suffix connectives 
                Current playlist information
             prefix suffix connectives 
                Battery
             prefix suffix connectives 
                Catch your breath
            