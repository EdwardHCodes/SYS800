 WL_PLAY.C
=============================================================================

                                                 LOCAL CONSTANTS

=============================================================================

=============================================================================

                                                 GLOBAL VARIABLES

=============================================================================
 true when shooting or screaming wall values only replacing refresh manager control info current user input range from -100 to 100 per tic===========================================================================
=============================================================================

                                                 LOCAL VARIABLES

=============================================================================
 LIST OF SONGS FOR EACH VERSION Episode One Boss level Secret level Episode Two Boss level Secret level Episode Three Boss level Secret level Episode Four Boss level Secret level Episode Five Boss level Secret level Episode Six Boss level Secret level//////////////////////////////////////////////////////////// SPEAR OF DESTINY TRACKS//////////////////////////////////////////////////////////// DON'T KNOW Trans Gr”sse Barnacle Wilhelm BOSS Super Mutant BOSS Death Knight BOSS Secret level Secret level (DON'T KNOW) Angel of Death BOSS
=============================================================================

                               USER CONTROL

=============================================================================

===================
=
= PollKeyboardButtons
=
===================
LOGF("button state: ");LOGF("%d ", buttonstate[i]);LOGF("\n");
===================
=
= PollMouseButtons
=
===================

===================
=
= PollJoystickButtons
=
===================

===================
=
= PollKeyboardMove
=
===================

===================
=
= PollMouseMove
=
===================

===================
=
= PollJoystickMove
=
===================

===================
=
= PollControls
=
= Gets user or demo input, call once each frame
=
= controlx              set between -100 and 100 per tic
= controly
= buttonheld[]  the state of the buttons LAST frame
= buttonstate[] the state of the buttons THIS frame
=
===================
 get timing info for last frame demo recording and playback needs to be constant wait up to DEMOTICS Wolf tics more than 2-times DEMOTICS behind? yes, set to current timecount read commands from demo buffer demo is done get button states    if (mouseenabled && IN_IsInputGrabbed())        PollMouseButtons (); get movements    if (mouseenabled && IN_IsInputGrabbed())        PollMouseMove (); bound movement to a maximum save info out to demo buffer TODO: Support 32-bit buttonbits==========================================================================/////////////////////////////////////////////////////////////////////////      CenterWindow() - Generates a window of a given width & height in the              middle of the screen/////////////////////////////////////////////////////////////////////////===========================================================================
=====================
=
= CheckKeys
=
=====================
 don't do anything with a faded screen SECRET CHEAT CODE: TAB-G-F10 SECRET CHEAT CODE: 'MLI' OPEN UP DEBUG KEYS TRYING THE KEEN CHEAT CODE! pause key weirdness can't be checked as a scan code Clear accumulated mouse movement F1-F7/ESC to enter control panel pop up quit dialog Clear accumulated mouse movement TAB-? debug keys dont let the blue borders flash Clear accumulated mouse movement===========================================================================
#############################################################################

                                  The objlist data structure

#############################################################################

objlist containt structures for every actor currently playing.  The structure
is accessed as a linked list starting at *player, ending when ob->next ==
NULL.  GetNewObj inserts a new object at the end of the list, meaning that
if an actor spawn another actor, the new one WILL get to think and react the
same frame.  RemoveObj unlinks the given object and returns it to the free
list, but does not damage the objects ->next pointer, so if the current object
removes itself, a linked list following loop can still safely get to the
next element.

<backwardly linked free list>

#############################################################################

=========================
=
= InitActorList
=
= Call to clear out the actor object lists returning them all to the free
= list.  Allocates a special spot for the player.
=
=========================
 init the actor lists give the player the first free spots===========================================================================
=========================
=
= GetNewActor
=
= Sets the global variable new to point to a free spot in objlist.
= The free spot is inserted at the end of the liked list
=
= When the object list is full, the caller can either have it bomb out ot
= return a dummy object pointer that will never get used
=
=========================
 new->next is allready NULL from memset===========================================================================
=========================
=
= RemoveObj
=
= Add the given object back into the free list, and unlink it from it's
= neighbors
=
=========================
 fix the next object's back link fix the previous object's forward link add it back in to the free list
=============================================================================

                                                MUSIC STUFF

=============================================================================

=================
=
= StopMusic
=
=================
==========================================================================
=================
=
= StartMusic
=
=================

=============================================================================

                                        PALETTE SHIFTING STUFF

=============================================================================

=====================
=
= InitRedShifts
=
=====================
 fade through intermediate frames
=====================
=
= ClearPaletteShifts
=
=====================

=====================
=
= StartBonusFlash
=
=====================
 white shift palette
=====================
=
= StartDamageFlash
=
=====================

=====================
=
= UpdatePaletteShifts
=
=====================
 back to normal
=====================
=
= FinishPaletteShifts
=
= Resets palette to normal if needed
=
=====================

=============================================================================

                                                CORE PLAYLOOP

=============================================================================

=====================
=
= DoActor
=
=====================
 non transitional object transitional object end of state action think==========================================================================
===================
=
= PlayLoop
=
===================
 Clear accumulated mouse movement actor thinking MAKE FUNNY FACE IF BJ DOESN'T MOVE FOR AWHILE JAB debug aids WL_PLAY.C
=============================================================================

                                                 LOCAL CONSTANTS

=============================================================================

=============================================================================

                                                 GLOBAL VARIABLES

=============================================================================
 true when shooting or screaming wall values only replacing refresh manager control info current user input range from -100 to 100 per tic===========================================================================
=============================================================================

                                                 LOCAL VARIABLES

=============================================================================
 LIST OF SONGS FOR EACH VERSION Episode One Boss level Secret level Episode Two Boss level Secret level Episode Three Boss level Secret level Episode Four Boss level Secret level Episode Five Boss level Secret level Episode Six Boss level Secret level//////////////////////////////////////////////////////////// SPEAR OF DESTINY TRACKS//////////////////////////////////////////////////////////// DON'T KNOW Trans Gr”sse Barnacle Wilhelm BOSS Super Mutant BOSS Death Knight BOSS Secret level Secret level (DON'T KNOW) Angel of Death BOSS
=============================================================================

                               USER CONTROL

=============================================================================

===================
=
= PollKeyboardButtons
=
===================
LOGF("button state: ");LOGF("%d ", buttonstate[i]);LOGF("\n");
===================
=
= PollMouseButtons
=
===================

===================
=
= PollJoystickButtons
=
===================

===================
=
= PollKeyboardMove
=
===================

===================
=
= PollMouseMove
=
===================

===================
=
= PollJoystickMove
=
===================

===================
=
= PollControls
=
= Gets user or demo input, call once each frame
=
= controlx              set between -100 and 100 per tic
= controly
= buttonheld[]  the state of the buttons LAST frame
= buttonstate[] the state of the buttons THIS frame
=
===================
 get timing info for last frame demo recording and playback needs to be constant wait up to DEMOTICS Wolf tics more than 2-times DEMOTICS behind? yes, set to current timecount read commands from demo buffer demo is done get button states    if (mouseenabled && IN_IsInputGrabbed())        PollMouseButtons (); get movements    if (mouseenabled && IN_IsInputGrabbed())        PollMouseMove (); bound movement to a maximum save info out to demo buffer TODO: Support 32-bit buttonbits==========================================================================/////////////////////////////////////////////////////////////////////////      CenterWindow() - Generates a window of a given width & height in the              middle of the screen/////////////////////////////////////////////////////////////////////////===========================================================================
=====================
=
= CheckKeys
=
=====================
 don't do anything with a faded screen SECRET CHEAT CODE: TAB-G-F10 SECRET CHEAT CODE: 'MLI' OPEN UP DEBUG KEYS TRYING THE KEEN CHEAT CODE! pause key weirdness can't be checked as a scan code Clear accumulated mouse movement F1-F7/ESC to enter control panel pop up quit dialog Clear accumulated mouse movement TAB-? debug keys dont let the blue borders flash Clear accumulated mouse movement===========================================================================
#############################################################################

                                  The objlist data structure

#############################################################################

objlist containt structures for every actor currently playing.  The structure
is accessed as a linked list starting at *player, ending when ob->next ==
NULL.  GetNewObj inserts a new object at the end of the list, meaning that
if an actor spawn another actor, the new one WILL get to think and react the
same frame.  RemoveObj unlinks the given object and returns it to the free
list, but does not damage the objects ->next pointer, so if the current object
removes itself, a linked list following loop can still safely get to the
next element.

<backwardly linked free list>

#############################################################################

=========================
=
= InitActorList
=
= Call to clear out the actor object lists returning them all to the free
= list.  Allocates a special spot for the player.
=
=========================
 init the actor lists give the player the first free spots===========================================================================
=========================
=
= GetNewActor
=
= Sets the global variable new to point to a free spot in objlist.
= The free spot is inserted at the end of the liked list
=
= When the object list is full, the caller can either have it bomb out ot
= return a dummy object pointer that will never get used
=
=========================
 new->next is allready NULL from memset===========================================================================
=========================
=
= RemoveObj
=
= Add the given object back into the free list, and unlink it from it's
= neighbors
=
=========================
 fix the next object's back link fix the previous object's forward link add it back in to the free list
=============================================================================

                                                MUSIC STUFF

=============================================================================

=================
=
= StopMusic
=
=================
==========================================================================
=================
=
= StartMusic
=
=================

=============================================================================

                                        PALETTE SHIFTING STUFF

=============================================================================

=====================
=
= InitRedShifts
=
=====================
 fade through intermediate frames
=====================
=
= ClearPaletteShifts
=
=====================

=====================
=
= StartBonusFlash
=
=====================
 white shift palette
=====================
=
= StartDamageFlash
=
=====================

=====================
=
= UpdatePaletteShifts
=
=====================
 back to normal
=====================
=
= FinishPaletteShifts
=
= Resets palette to normal if needed
=
=====================

=============================================================================

                                                CORE PLAYLOOP

=============================================================================

=====================
=
= DoActor
=
=====================
 non transitional object transitional object end of state action think==========================================================================
===================
=
= PlayLoop
=
===================
 Clear accumulated mouse movement actor thinking MAKE FUNNY FACE IF BJ DOESN'T MOVE FOR AWHILE JAB debug aids WL_PLAY.C
=============================================================================

                                                 LOCAL CONSTANTS

=============================================================================

=============================================================================

                                                 GLOBAL VARIABLES

=============================================================================
 true when shooting or screaming wall values only replacing refresh manager control info current user input range from -100 to 100 per tic===========================================================================
=============================================================================

                                                 LOCAL VARIABLES

=============================================================================
 LIST OF SONGS FOR EACH VERSION Episode One Boss level Secret level Episode Two Boss level Secret level Episode Three Boss level Secret level Episode Four Boss level Secret level Episode Five Boss level Secret level Episode Six Boss level Secret level//////////////////////////////////////////////////////////// SPEAR OF DESTINY TRACKS//////////////////////////////////////////////////////////// DON'T KNOW Trans Gr”sse Barnacle Wilhelm BOSS Super Mutant BOSS Death Knight BOSS Secret level Secret level (DON'T KNOW) Angel of Death BOSS
=============================================================================

                               USER CONTROL

=============================================================================

===================
=
= PollKeyboardButtons
=
===================
LOGF("button state: ");LOGF("%d ", buttonstate[i]);LOGF("\n");
===================
=
= PollMouseButtons
=
===================

===================
=
= PollJoystickButtons
=
===================

===================
=
= PollKeyboardMove
=
===================

===================
=
= PollMouseMove
=
===================

===================
=
= PollJoystickMove
=
===================

===================
=
= PollControls
=
= Gets user or demo input, call once each frame
=
= controlx              set between -100 and 100 per tic
= controly
= buttonheld[]  the state of the buttons LAST frame
= buttonstate[] the state of the buttons THIS frame
=
===================
 get timing info for last frame demo recording and playback needs to be constant wait up to DEMOTICS Wolf tics more than 2-times DEMOTICS behind? yes, set to current timecount read commands from demo buffer demo is done get button states    if (mouseenabled && IN_IsInputGrabbed())        PollMouseButtons (); get movements    if (mouseenabled && IN_IsInputGrabbed())        PollMouseMove (); bound movement to a maximum save info out to demo buffer TODO: Support 32-bit buttonbits==========================================================================/////////////////////////////////////////////////////////////////////////      CenterWindow() - Generates a window of a given width & height in the              middle of the screen/////////////////////////////////////////////////////////////////////////===========================================================================
=====================
=
= CheckKeys
=
=====================
 don't do anything with a faded screen SECRET CHEAT CODE: TAB-G-F10 SECRET CHEAT CODE: 'MLI' OPEN UP DEBUG KEYS TRYING THE KEEN CHEAT CODE! pause key weirdness can't be checked as a scan code Clear accumulated mouse movement F1-F7/ESC to enter control panel pop up quit dialog Clear accumulated mouse movement TAB-? debug keys dont let the blue borders flash Clear accumulated mouse movement===========================================================================
#############################################################################

                                  The objlist data structure

#############################################################################

objlist containt structures for every actor currently playing.  The structure
is accessed as a linked list starting at *player, ending when ob->next ==
NULL.  GetNewObj inserts a new object at the end of the list, meaning that
if an actor spawn another actor, the new one WILL get to think and react the
same frame.  RemoveObj unlinks the given object and returns it to the free
list, but does not damage the objects ->next pointer, so if the current object
removes itself, a linked list following loop can still safely get to the
next element.

<backwardly linked free list>

#############################################################################

=========================
=
= InitActorList
=
= Call to clear out the actor object lists returning them all to the free
= list.  Allocates a special spot for the player.
=
=========================
 init the actor lists give the player the first free spots===========================================================================
=========================
=
= GetNewActor
=
= Sets the global variable new to point to a free spot in objlist.
= The free spot is inserted at the end of the liked list
=
= When the object list is full, the caller can either have it bomb out ot
= return a dummy object pointer that will never get used
=
=========================
 new->next is allready NULL from memset===========================================================================
=========================
=
= RemoveObj
=
= Add the given object back into the free list, and unlink it from it's
= neighbors
=
=========================
 fix the next object's back link fix the previous object's forward link add it back in to the free list
=============================================================================

                                                MUSIC STUFF

=============================================================================

=================
=
= StopMusic
=
=================
==========================================================================
=================
=
= StartMusic
=
=================

=============================================================================

                                        PALETTE SHIFTING STUFF

=============================================================================

=====================
=
= InitRedShifts
=
=====================
 fade through intermediate frames
=====================
=
= ClearPaletteShifts
=
=====================

=====================
=
= StartBonusFlash
=
=====================
 white shift palette
=====================
=
= StartDamageFlash
=
=====================

=====================
=
= UpdatePaletteShifts
=
=====================
 back to normal
=====================
=
= FinishPaletteShifts
=
= Resets palette to normal if needed
=
=====================

=============================================================================

                                                CORE PLAYLOOP

=============================================================================

=====================
=
= DoActor
=
=====================
 non transitional object transitional object end of state action think==========================================================================
===================
=
= PlayLoop
=
===================
 Clear accumulated mouse movement actor thinking MAKE FUNNY FACE IF BJ DOESN'T MOVE FOR AWHILE JAB debug aids