**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (c) 2010 Thomas Martitz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * this notifies us in an interrupt-like fashion whether the user just
 * began or stopped the touch action + where (pixel coordinates) 
 * this writes in an interrupt-like fashion the button events that the user
 * generated by pressing/releasing them to a variable  ensure button_queue can be safely posted to  when reaching this point, rockbox can be considered ready because the
     * input system (button.c) is initialized. This implies the kernel and threading
     * is up and running  FIXME: do something smart  Get grid button/coordinates based on the current touchscreen mode
     *
     * Caveat: the caller seemingly depends on *data always being filled with
     *         the last known touchscreen position, so always call
     *         touchscreen_to_pixels()  Tell if anything is in the jack.
 * 
 * since this is called from the tick task, which isn't attached to
 * the dalvik VM, it's not permitted to make JNI calls (therefore
 * we need the above callback)  0 is disconnected, 1 and 2 are connected **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (c) 2010 Thomas Martitz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * this notifies us in an interrupt-like fashion whether the user just
 * began or stopped the touch action + where (pixel coordinates) 
 * this writes in an interrupt-like fashion the button events that the user
 * generated by pressing/releasing them to a variable  ensure button_queue can be safely posted to  when reaching this point, rockbox can be considered ready because the
     * input system (button.c) is initialized. This implies the kernel and threading
     * is up and running  FIXME: do something smart  Get grid button/coordinates based on the current touchscreen mode
     *
     * Caveat: the caller seemingly depends on *data always being filled with
     *         the last known touchscreen position, so always call
     *         touchscreen_to_pixels()  Tell if anything is in the jack.
 * 
 * since this is called from the tick task, which isn't attached to
 * the dalvik VM, it's not permitted to make JNI calls (therefore
 * we need the above callback)  0 is disconnected, 1 and 2 are connected **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (c) 2010 Thomas Martitz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * this notifies us in an interrupt-like fashion whether the user just
 * began or stopped the touch action + where (pixel coordinates) 
 * this writes in an interrupt-like fashion the button events that the user
 * generated by pressing/releasing them to a variable  ensure button_queue can be safely posted to  when reaching this point, rockbox can be considered ready because the
     * input system (button.c) is initialized. This implies the kernel and threading
     * is up and running  FIXME: do something smart  Get grid button/coordinates based on the current touchscreen mode
     *
     * Caveat: the caller seemingly depends on *data always being filled with
     *         the last known touchscreen position, so always call
     *         touchscreen_to_pixels()  Tell if anything is in the jack.
 * 
 * since this is called from the tick task, which isn't attached to
 * the dalvik VM, it's not permitted to make JNI calls (therefore
 * we need the above callback)  0 is disconnected, 1 and 2 are connected 