
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* Calculate frequency band tables  static function declarations  calculate the start QMF channel for the master frequency band table  parameter is also called k0  replaced with table (startMinTable)  replaced by offsetIndexTable  44100 <= sample_rate <= 64000  calculate the stop QMF channel for the master frequency band table  parameter is also called k2  replaced by table lookup  replaced by table lookup  diverging power series  needed?  bs_stop_freq <= 13  calculate the master frequency table from k0, k2, bs_freq_scale
   and bs_alter_scale

   version for bs_freq_scale = 0
 mft only defined for k2 > k0  replaced by float-less design 
   This function finds the number of bands using this formula:
    bands * log(a1/a0)/log(2.0) + 0.5
 table with log2() values  coef  coef  coef  convert r2 to real and then multiply and round  table with log() values  standard Taylor polynomial coefficients for exp(x) around 0  a polynomial around x=1 is more precise, as most values are around 1.07,
       but this is just fine already  coef  coef  coef  real 
   version for bs_freq_scale > 0
 mft only defined for k2 > k0 A_1 = (int32_t)((qk + REAL_CONST(0.5)) >> REAL_BITS); needed?  warped A_1 = (int32_t)((qk + REAL_CONST(0.5)) >> REAL_BITS); needed?  needed?  calculate the derived frequency border tables from f_master  The following relation shall be satisfied: bs_xover_band < N_Master  i = i + (int32_t)((sbr->N_low - i)/(sbr->N_Q + 1 - k));  build table for mapping k to g in hf patching  TODO: blegh, ugly  Modified to calculate for all possible bs_limiter_bands always
 * This reduces the number calls to this functions needed (now only on
 * header reset)
 TODO?? needed  TODO: BIG FAT PROBLEM remove (k-1)th element  remove kth element 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* Calculate frequency band tables  static function declarations  calculate the start QMF channel for the master frequency band table  parameter is also called k0  replaced with table (startMinTable)  replaced by offsetIndexTable  44100 <= sample_rate <= 64000  calculate the stop QMF channel for the master frequency band table  parameter is also called k2  replaced by table lookup  replaced by table lookup  diverging power series  needed?  bs_stop_freq <= 13  calculate the master frequency table from k0, k2, bs_freq_scale
   and bs_alter_scale

   version for bs_freq_scale = 0
 mft only defined for k2 > k0  replaced by float-less design 
   This function finds the number of bands using this formula:
    bands * log(a1/a0)/log(2.0) + 0.5
 table with log2() values  coef  coef  coef  convert r2 to real and then multiply and round  table with log() values  standard Taylor polynomial coefficients for exp(x) around 0  a polynomial around x=1 is more precise, as most values are around 1.07,
       but this is just fine already  coef  coef  coef  real 
   version for bs_freq_scale > 0
 mft only defined for k2 > k0 A_1 = (int32_t)((qk + REAL_CONST(0.5)) >> REAL_BITS); needed?  warped A_1 = (int32_t)((qk + REAL_CONST(0.5)) >> REAL_BITS); needed?  needed?  calculate the derived frequency border tables from f_master  The following relation shall be satisfied: bs_xover_band < N_Master  i = i + (int32_t)((sbr->N_low - i)/(sbr->N_Q + 1 - k));  build table for mapping k to g in hf patching  TODO: blegh, ugly  Modified to calculate for all possible bs_limiter_bands always
 * This reduces the number calls to this functions needed (now only on
 * header reset)
 TODO?? needed  TODO: BIG FAT PROBLEM remove (k-1)th element  remove kth element 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* Calculate frequency band tables  static function declarations  calculate the start QMF channel for the master frequency band table  parameter is also called k0  replaced with table (startMinTable)  replaced by offsetIndexTable  44100 <= sample_rate <= 64000  calculate the stop QMF channel for the master frequency band table  parameter is also called k2  replaced by table lookup  replaced by table lookup  diverging power series  needed?  bs_stop_freq <= 13  calculate the master frequency table from k0, k2, bs_freq_scale
   and bs_alter_scale

   version for bs_freq_scale = 0
 mft only defined for k2 > k0  replaced by float-less design 
   This function finds the number of bands using this formula:
    bands * log(a1/a0)/log(2.0) + 0.5
 table with log2() values  coef  coef  coef  convert r2 to real and then multiply and round  table with log() values  standard Taylor polynomial coefficients for exp(x) around 0  a polynomial around x=1 is more precise, as most values are around 1.07,
       but this is just fine already  coef  coef  coef  real 
   version for bs_freq_scale > 0
 mft only defined for k2 > k0 A_1 = (int32_t)((qk + REAL_CONST(0.5)) >> REAL_BITS); needed?  warped A_1 = (int32_t)((qk + REAL_CONST(0.5)) >> REAL_BITS); needed?  needed?  calculate the derived frequency border tables from f_master  The following relation shall be satisfied: bs_xover_band < N_Master  i = i + (int32_t)((sbr->N_low - i)/(sbr->N_Q + 1 - k));  build table for mapping k to g in hf patching  TODO: blegh, ugly  Modified to calculate for all possible bs_limiter_bands always
 * This reduces the number calls to this functions needed (now only on
 * header reset)
 TODO?? needed  TODO: BIG FAT PROBLEM remove (k-1)th element  remove kth element 