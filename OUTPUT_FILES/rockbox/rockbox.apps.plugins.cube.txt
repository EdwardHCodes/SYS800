**************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2002 Damien Teney
* modified to use int instead of float math by Andreas Zwirtes
* heavily extended by Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
************************************************************************** MYLCD_CFG_RB_XLCD or MYLCD_CFG_PGFX  MYLCD_CFG_GREYLIB or MYLCD_CFG_PGFX  Loops that the values are displayed  variable button definitions  initialised at runtime  = 1.25 (fixed point 24.8)  = 1.00  initial, unrotated cube corners  The 12 lines forming the edges  The 6 faces of the cube; points are in clockwise order when viewed
   from the outside  Just to prevent unnecessary lookups  calculate overall translation matrix  apply translation matrix to all points  Do viewport transformation for all points  backface culling; if the shape winds counter-clockwise, we are
             * looking at the backface, and the (simplified) cross product
             * is < 0. Do not draw it.  (LCD_DEPTH > 1) || GSLIB  backface culling; if the shape winds counter-clockwise, we are
             * looking at the backface, and the (simplified) cross product
             * is < 0. Do not draw it.  init lcd_ function pointers **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2002 Damien Teney
* modified to use int instead of float math by Andreas Zwirtes
* heavily extended by Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
************************************************************************** MYLCD_CFG_RB_XLCD or MYLCD_CFG_PGFX  MYLCD_CFG_GREYLIB or MYLCD_CFG_PGFX  Loops that the values are displayed  variable button definitions  initialised at runtime  = 1.25 (fixed point 24.8)  = 1.00  initial, unrotated cube corners  The 12 lines forming the edges  The 6 faces of the cube; points are in clockwise order when viewed
   from the outside  Just to prevent unnecessary lookups  calculate overall translation matrix  apply translation matrix to all points  Do viewport transformation for all points  backface culling; if the shape winds counter-clockwise, we are
             * looking at the backface, and the (simplified) cross product
             * is < 0. Do not draw it.  (LCD_DEPTH > 1) || GSLIB  backface culling; if the shape winds counter-clockwise, we are
             * looking at the backface, and the (simplified) cross product
             * is < 0. Do not draw it.  init lcd_ function pointers **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2002 Damien Teney
* modified to use int instead of float math by Andreas Zwirtes
* heavily extended by Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
************************************************************************** MYLCD_CFG_RB_XLCD or MYLCD_CFG_PGFX  MYLCD_CFG_GREYLIB or MYLCD_CFG_PGFX  Loops that the values are displayed  variable button definitions  initialised at runtime  = 1.25 (fixed point 24.8)  = 1.00  initial, unrotated cube corners  The 12 lines forming the edges  The 6 faces of the cube; points are in clockwise order when viewed
   from the outside  Just to prevent unnecessary lookups  calculate overall translation matrix  apply translation matrix to all points  Do viewport transformation for all points  backface culling; if the shape winds counter-clockwise, we are
             * looking at the backface, and the (simplified) cross product
             * is < 0. Do not draw it.  (LCD_DEPTH > 1) || GSLIB  backface culling; if the shape winds counter-clockwise, we are
             * looking at the backface, and the (simplified) cross product
             * is < 0. Do not draw it.  init lcd_ function pointers 