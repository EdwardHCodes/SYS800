
 *  Copyright (C) 2018 Paweł Dembicki <paweldembicki@gmail.com> 
 *
 *  Based on: mtdsplit_uimage.c
 *  Copyright (C) 2013 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 *
 
 * Jboot image header,
 * all data in little endian.
 stag + sch2 jboot joined headers in factory 0xFF , in sysupgrade must be the same as stag_id 0x04magic 0x2B24 timestamp calculated in jboot way lentgh of kernel + sch2 header negated jboot_checksum of sch2 + kernel negated jboot_checksum of stag header data magic 0x2124 0x00 for flat, 0x01 for jz, 0x02 for gzip, 0x03 for lzma 0x02 for sch2 ram entry address kernel image length kernel image crc ram start address rootfs flash address rootfls length rootfs crc32 sch2 header crc32, durring calculation this area is replaced by zero sch2 header length: 0x28 cmd line length, known zeros*
 * __mtdsplit_parse_jimage - scan partition and create kernel + rootfs parts
 *
 * @find_header: function to call for a block of data that will return offset
 *      of a valid jImage header if found
  find jImage on erase block boundaries  find the roots after the jImage  check rootfs presence at offset 0  default sanity checks *************************************************
 * Init
 *************************************************
 *  Copyright (C) 2018 Paweł Dembicki <paweldembicki@gmail.com> 
 *
 *  Based on: mtdsplit_uimage.c
 *  Copyright (C) 2013 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 *
 
 * Jboot image header,
 * all data in little endian.
 stag + sch2 jboot joined headers in factory 0xFF , in sysupgrade must be the same as stag_id 0x04magic 0x2B24 timestamp calculated in jboot way lentgh of kernel + sch2 header negated jboot_checksum of sch2 + kernel negated jboot_checksum of stag header data magic 0x2124 0x00 for flat, 0x01 for jz, 0x02 for gzip, 0x03 for lzma 0x02 for sch2 ram entry address kernel image length kernel image crc ram start address rootfs flash address rootfls length rootfs crc32 sch2 header crc32, durring calculation this area is replaced by zero sch2 header length: 0x28 cmd line length, known zeros*
 * __mtdsplit_parse_jimage - scan partition and create kernel + rootfs parts
 *
 * @find_header: function to call for a block of data that will return offset
 *      of a valid jImage header if found
  find jImage on erase block boundaries  find the roots after the jImage  check rootfs presence at offset 0  default sanity checks *************************************************
 * Init
 *************************************************