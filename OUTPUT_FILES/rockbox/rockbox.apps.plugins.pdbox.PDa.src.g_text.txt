 Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   changes by Thomas Musil IEM KUG Graz Austria 2001  the methods for calling the gui-objects from menu are implemented  all changes are labeled with      iemlib       ROCKBOX  ROCKBOX  ----------------- the "text" object.  ------------------  add a "text" object (comment) to a glist.  While this one goes for any glist,
    the other 3 below are for canvases only.  (why?)  This is called
    without args if invoked from the GUI; otherwise at least x and y
    are provided.   don't know it yet.  it would be nice to "activate" here, but then the second,
	    "put-me-down" click changes the text selection, which is quite
	    irritating, so I took this back out.  It's OK in messages
	    and objects though since there's no text in them at menu
	    creation.  gobj_activate(&x->te_g, gl, 1);  ----------------- the "object" object.  ------------------  LATER make the color reflect this  this is called if we've been created from the menu.  object creation routine.  These are called without any arguments if
    they're invoked from the
    gui; when pasting or restoring from a file, we get at least x and y.  make an object box for an object that's already there.  iemlib  iemlib  don't know it yet.  ---------------------- the "message" text item ------------------------  don't know it yet.  ---------------------- the "atom" text item ------------------------  this holds the value and the type  owning glist  value to toggle to  high end of drag range  low end of drag range  symbol to show as label next to box  "receive" name -- bind ourselvs to this  "send" name -- send to this on output  string buffer for typing  was shift key down when dragging started?  0-3 for left, right, above, below  a_symto after $0, $1, ...  expansion  prepend "-" as necessary to avoid empty strings, so we can
    use them in Pd messages.  A more complete solution would be
    to introduce some quoting mechanism; but then we'd be much more
    complicated.  undo previous operation: strip leading "-" if found.  ???  expand leading $0, $1, etc. in the symbol  we're being notified that no more keys will come for this grab  for numbers, only let reasonable characters through  LATER figure out how to avoid creating all these symbols!  ROCKBOX  message back from dialog window  glist_retext(x->a_glist, &x->a_text);  ---------------- gatom-specific widget functions --------------- , width, height  width = x2 - x1;  height = y2 - y1;  don't know it yet.  create from file. x, y, width, low-range, high-range, flags,
	    label, receive-name, send-name  sanity check because some very old patches have trash in this
	    field... remove this in 2003 or so:  ROCKBOX  ROCKBOX  -------------------- widget behavior for text objects ------------  for number boxes, we know width and height a priori, and should
	report them here so that graphs can get swelled to fit.  borrowed from TMARGIN, etc, in g_rtext.c  if we're invisible we don't know our size so we just lie about
	it.  This is called on invisible boxes to establish order of inlets
	and possibly other reasons.
	   To find out if the box is visible we can't just check the "vis"
	flag because we might be within the vis() routine and not have set
	that yet.  So we check directly whether the "rtext" list has been
	built.  LATER reconsider when "vis" flag should be on and off?  ROCKBOX  ROCKBOX  return true if the text box should be drawn.
    We don't show object boxes inside graphs.  if we have a "saveto" method, and if we don't happen to be
	    a canvas that's an abstraction, the saveto method does the work  otherwise just save the text  this one is for everyone but "gatoms"; it's imposed in m_class.c  -------------------- the "text" class  ------------  draw inlets and outlets for a text object or for a graph.  ROCKBOX  ROCKBOX  , width, height  width = x2 - x1;  height = y2 - y1;  draw inlets/outlets  ROCKBOX  ROCKBOX  ROCKBOX  ROCKBOX  change text; if T_OBJECT, remake it.  LATER we'll have an undo buffer
    which should be filled in here before making the change.  special case: if  pd args change just pass the message on.  normally, just destroy the old one and make a new one.  if it's an abstraction loadbang it here  if we made a new "pd" or changed a window name,
		update window list  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   changes by Thomas Musil IEM KUG Graz Austria 2001  the methods for calling the gui-objects from menu are implemented  all changes are labeled with      iemlib       ROCKBOX  ROCKBOX  ----------------- the "text" object.  ------------------  add a "text" object (comment) to a glist.  While this one goes for any glist,
    the other 3 below are for canvases only.  (why?)  This is called
    without args if invoked from the GUI; otherwise at least x and y
    are provided.   don't know it yet.  it would be nice to "activate" here, but then the second,
	    "put-me-down" click changes the text selection, which is quite
	    irritating, so I took this back out.  It's OK in messages
	    and objects though since there's no text in them at menu
	    creation.  gobj_activate(&x->te_g, gl, 1);  ----------------- the "object" object.  ------------------  LATER make the color reflect this  this is called if we've been created from the menu.  object creation routine.  These are called without any arguments if
    they're invoked from the
    gui; when pasting or restoring from a file, we get at least x and y.  make an object box for an object that's already there.  iemlib  iemlib  don't know it yet.  ---------------------- the "message" text item ------------------------  don't know it yet.  ---------------------- the "atom" text item ------------------------  this holds the value and the type  owning glist  value to toggle to  high end of drag range  low end of drag range  symbol to show as label next to box  "receive" name -- bind ourselvs to this  "send" name -- send to this on output  string buffer for typing  was shift key down when dragging started?  0-3 for left, right, above, below  a_symto after $0, $1, ...  expansion  prepend "-" as necessary to avoid empty strings, so we can
    use them in Pd messages.  A more complete solution would be
    to introduce some quoting mechanism; but then we'd be much more
    complicated.  undo previous operation: strip leading "-" if found.  ???  expand leading $0, $1, etc. in the symbol  we're being notified that no more keys will come for this grab  for numbers, only let reasonable characters through  LATER figure out how to avoid creating all these symbols!  ROCKBOX  message back from dialog window  glist_retext(x->a_glist, &x->a_text);  ---------------- gatom-specific widget functions --------------- , width, height  width = x2 - x1;  height = y2 - y1;  don't know it yet.  create from file. x, y, width, low-range, high-range, flags,
	    label, receive-name, send-name  sanity check because some very old patches have trash in this
	    field... remove this in 2003 or so:  ROCKBOX  ROCKBOX  -------------------- widget behavior for text objects ------------  for number boxes, we know width and height a priori, and should
	report them here so that graphs can get swelled to fit.  borrowed from TMARGIN, etc, in g_rtext.c  if we're invisible we don't know our size so we just lie about
	it.  This is called on invisible boxes to establish order of inlets
	and possibly other reasons.
	   To find out if the box is visible we can't just check the "vis"
	flag because we might be within the vis() routine and not have set
	that yet.  So we check directly whether the "rtext" list has been
	built.  LATER reconsider when "vis" flag should be on and off?  ROCKBOX  ROCKBOX  return true if the text box should be drawn.
    We don't show object boxes inside graphs.  if we have a "saveto" method, and if we don't happen to be
	    a canvas that's an abstraction, the saveto method does the work  otherwise just save the text  this one is for everyone but "gatoms"; it's imposed in m_class.c  -------------------- the "text" class  ------------  draw inlets and outlets for a text object or for a graph.  ROCKBOX  ROCKBOX  , width, height  width = x2 - x1;  height = y2 - y1;  draw inlets/outlets  ROCKBOX  ROCKBOX  ROCKBOX  ROCKBOX  change text; if T_OBJECT, remake it.  LATER we'll have an undo buffer
    which should be filled in here before making the change.  special case: if  pd args change just pass the message on.  normally, just destroy the old one and make a new one.  if it's an abstraction loadbang it here  if we made a new "pd" or changed a window name,
		update window list  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   changes by Thomas Musil IEM KUG Graz Austria 2001  the methods for calling the gui-objects from menu are implemented  all changes are labeled with      iemlib       ROCKBOX  ROCKBOX  ----------------- the "text" object.  ------------------  add a "text" object (comment) to a glist.  While this one goes for any glist,
    the other 3 below are for canvases only.  (why?)  This is called
    without args if invoked from the GUI; otherwise at least x and y
    are provided.   don't know it yet.  it would be nice to "activate" here, but then the second,
	    "put-me-down" click changes the text selection, which is quite
	    irritating, so I took this back out.  It's OK in messages
	    and objects though since there's no text in them at menu
	    creation.  gobj_activate(&x->te_g, gl, 1);  ----------------- the "object" object.  ------------------  LATER make the color reflect this  this is called if we've been created from the menu.  object creation routine.  These are called without any arguments if
    they're invoked from the
    gui; when pasting or restoring from a file, we get at least x and y.  make an object box for an object that's already there.  iemlib  iemlib  don't know it yet.  ---------------------- the "message" text item ------------------------  don't know it yet.  ---------------------- the "atom" text item ------------------------  this holds the value and the type  owning glist  value to toggle to  high end of drag range  low end of drag range  symbol to show as label next to box  "receive" name -- bind ourselvs to this  "send" name -- send to this on output  string buffer for typing  was shift key down when dragging started?  0-3 for left, right, above, below  a_symto after $0, $1, ...  expansion  prepend "-" as necessary to avoid empty strings, so we can
    use them in Pd messages.  A more complete solution would be
    to introduce some quoting mechanism; but then we'd be much more
    complicated.  undo previous operation: strip leading "-" if found.  ???  expand leading $0, $1, etc. in the symbol  we're being notified that no more keys will come for this grab  for numbers, only let reasonable characters through  LATER figure out how to avoid creating all these symbols!  ROCKBOX  message back from dialog window  glist_retext(x->a_glist, &x->a_text);  ---------------- gatom-specific widget functions --------------- , width, height  width = x2 - x1;  height = y2 - y1;  don't know it yet.  create from file. x, y, width, low-range, high-range, flags,
	    label, receive-name, send-name  sanity check because some very old patches have trash in this
	    field... remove this in 2003 or so:  ROCKBOX  ROCKBOX  -------------------- widget behavior for text objects ------------  for number boxes, we know width and height a priori, and should
	report them here so that graphs can get swelled to fit.  borrowed from TMARGIN, etc, in g_rtext.c  if we're invisible we don't know our size so we just lie about
	it.  This is called on invisible boxes to establish order of inlets
	and possibly other reasons.
	   To find out if the box is visible we can't just check the "vis"
	flag because we might be within the vis() routine and not have set
	that yet.  So we check directly whether the "rtext" list has been
	built.  LATER reconsider when "vis" flag should be on and off?  ROCKBOX  ROCKBOX  return true if the text box should be drawn.
    We don't show object boxes inside graphs.  if we have a "saveto" method, and if we don't happen to be
	    a canvas that's an abstraction, the saveto method does the work  otherwise just save the text  this one is for everyone but "gatoms"; it's imposed in m_class.c  -------------------- the "text" class  ------------  draw inlets and outlets for a text object or for a graph.  ROCKBOX  ROCKBOX  , width, height  width = x2 - x1;  height = y2 - y1;  draw inlets/outlets  ROCKBOX  ROCKBOX  ROCKBOX  ROCKBOX  change text; if T_OBJECT, remake it.  LATER we'll have an undo buffer
    which should be filled in here before making the change.  special case: if  pd args change just pass the message on.  normally, just destroy the old one and make a new one.  if it's an abstraction loadbang it here  if we made a new "pd" or changed a window name,
		update window list 