**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Dave Chapman
 *
 * Based on Rockbox iriver bootloader by Linus Nielsen Feltzing
 * and the ipodlinux bootloader by Daniel Palffy and Bernard Leach
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Maximum allowed firmware image size. The largest known current 
   (December 2006) firmware is about 7.5MB (Apple's firmware for the ipod video)
   so we set this to 8MB.  A buffer to load the Linux kernel or Rockbox into  check if number of seconds has past  mini 1G only  System font is 6 pixels wide  Immediately spindown the disk.  CONFIG_CPU  Reboot  100ms  The bootloader is started from the OSOS image on the firmware
 * partition. There are several ways it can be installed there:
 * appended to the Apple firmware, on its own, or appended to
 * Rockbox itself. The Apple ROM loader loads the entire OSOS
 * image to DRAM_START, whatever it contains. If the bootloader
 * is appended to another image then it will've modified the
 * entry point in the OSOS header such that the ROM will call the
 * bootloader rather than the main image.
 *
 * So, once the bootloader has control:
 *
 * 1) If the hold switch is on, or the menu button is being held,
 *    try to boot the Apple firmware.
 *   1a) First, it looks for apple_os.ipod on the FAT32 partition,
 *       in .rockbox or the root directory. If found it loads that
 *       without further checking and runs it.
 *   1b) Next, it checks to see if the OSOS image already loaded
 *       into RAM is in fact the Apple firmware with the bootloader
 *       appended. It looks at DRAM_START+0x20 for the string
 *       "portalplayer", and if it's there, just jumps back to
 *       DRAM_START where the entry point was before the bootloader
 *       was appended.
 *   1c) If neither of those worked, it displays an error and dies.
 *
 * 2) If the play button is being held, try to boot Linux. It looks
 *    for linux.bin in the root directory, and if it's not there,
 *    it displays an error and dies.
 *
 * 3) Otherwise, try to boot Rockbox.
 *   3a) First, it looks for rockbox.ipod on the FAT32 partition,
 *       in .rockbox or the root directory. If found it loads that
 *       without further checking and runs it.
 *   3b) Next, it checks to see if the OSOS image already loaded
 *       into RAM is in fact Rockbox with the bootloader appended.
 *       It looks at DRAM_START+0x20 for the string "Rockbox\1"
 *       (which is inserted there in crt0-pp.S), and if it's there,
 *       just humps back to DRAM_START where the entry point was
 *       before the bootloader was appended.
 *   3c) If neither of those worked, it displays an error and dies.
 *
 * The result is that any of the three install configurations work,
 * and that images of apple_os.ipod or rockbox.ipod on the FAT32
 * partition take priority over the contents of OSOS (this avoids
 * upgrades failing to work if OSOS is not updated).
 *
 * Loading from OSOS is somewhat faster than loading from FAT32,
 * because the Apple ROM doesn't have to deal with filesystems or
 * fragmentation, and is already loading from OSOS anyway. Thus,
 * the fastest boot configuration that still allows dual booting
 * is to install Rockbox into OSOS with the bootloader appended
 * (and delete/rename rockbox.ipod from the FAT32 partition).
 *
 * It is of course faster to just install Rockbox to OSOS alone,
 * but then it's impossible to boot the Apple firmware.
  Check the button hold status as soon as possible - to 
       give the user maximum chance to turn it off in order to
       reset the settings in rockbox.  Turns on the backlight  ADC and button drivers are not yet implemented  Enable bootloader messages  Show model  If either the hold switch was on, or the Menu button was held, then 
           try the Apple firmware  First try an apple_os.ipod file on the FAT32 partition
           (either in .rockbox or the root) 
          If apple_os.ipod doesn't exist, then check if there is an Apple 
               firmware image in RAM   We have a copy of the retailos in RAM, lets just run it.  Everything failed - just loop forever  if rockbox.ipod doesn't exist, then check if there is a Rockbox
               image in RAM   We have a copy of Rockbox in RAM, lets just run it.  If we get to here, then we haven't been able to load any firmware  We never get here, but keep gcc happy **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Dave Chapman
 *
 * Based on Rockbox iriver bootloader by Linus Nielsen Feltzing
 * and the ipodlinux bootloader by Daniel Palffy and Bernard Leach
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Maximum allowed firmware image size. The largest known current 
   (December 2006) firmware is about 7.5MB (Apple's firmware for the ipod video)
   so we set this to 8MB.  A buffer to load the Linux kernel or Rockbox into  check if number of seconds has past  mini 1G only  System font is 6 pixels wide  Immediately spindown the disk.  CONFIG_CPU  Reboot  100ms  The bootloader is started from the OSOS image on the firmware
 * partition. There are several ways it can be installed there:
 * appended to the Apple firmware, on its own, or appended to
 * Rockbox itself. The Apple ROM loader loads the entire OSOS
 * image to DRAM_START, whatever it contains. If the bootloader
 * is appended to another image then it will've modified the
 * entry point in the OSOS header such that the ROM will call the
 * bootloader rather than the main image.
 *
 * So, once the bootloader has control:
 *
 * 1) If the hold switch is on, or the menu button is being held,
 *    try to boot the Apple firmware.
 *   1a) First, it looks for apple_os.ipod on the FAT32 partition,
 *       in .rockbox or the root directory. If found it loads that
 *       without further checking and runs it.
 *   1b) Next, it checks to see if the OSOS image already loaded
 *       into RAM is in fact the Apple firmware with the bootloader
 *       appended. It looks at DRAM_START+0x20 for the string
 *       "portalplayer", and if it's there, just jumps back to
 *       DRAM_START where the entry point was before the bootloader
 *       was appended.
 *   1c) If neither of those worked, it displays an error and dies.
 *
 * 2) If the play button is being held, try to boot Linux. It looks
 *    for linux.bin in the root directory, and if it's not there,
 *    it displays an error and dies.
 *
 * 3) Otherwise, try to boot Rockbox.
 *   3a) First, it looks for rockbox.ipod on the FAT32 partition,
 *       in .rockbox or the root directory. If found it loads that
 *       without further checking and runs it.
 *   3b) Next, it checks to see if the OSOS image already loaded
 *       into RAM is in fact Rockbox with the bootloader appended.
 *       It looks at DRAM_START+0x20 for the string "Rockbox\1"
 *       (which is inserted there in crt0-pp.S), and if it's there,
 *       just humps back to DRAM_START where the entry point was
 *       before the bootloader was appended.
 *   3c) If neither of those worked, it displays an error and dies.
 *
 * The result is that any of the three install configurations work,
 * and that images of apple_os.ipod or rockbox.ipod on the FAT32
 * partition take priority over the contents of OSOS (this avoids
 * upgrades failing to work if OSOS is not updated).
 *
 * Loading from OSOS is somewhat faster than loading from FAT32,
 * because the Apple ROM doesn't have to deal with filesystems or
 * fragmentation, and is already loading from OSOS anyway. Thus,
 * the fastest boot configuration that still allows dual booting
 * is to install Rockbox into OSOS with the bootloader appended
 * (and delete/rename rockbox.ipod from the FAT32 partition).
 *
 * It is of course faster to just install Rockbox to OSOS alone,
 * but then it's impossible to boot the Apple firmware.
  Check the button hold status as soon as possible - to 
       give the user maximum chance to turn it off in order to
       reset the settings in rockbox.  Turns on the backlight  ADC and button drivers are not yet implemented  Enable bootloader messages  Show model  If either the hold switch was on, or the Menu button was held, then 
           try the Apple firmware  First try an apple_os.ipod file on the FAT32 partition
           (either in .rockbox or the root) 
          If apple_os.ipod doesn't exist, then check if there is an Apple 
               firmware image in RAM   We have a copy of the retailos in RAM, lets just run it.  Everything failed - just loop forever  if rockbox.ipod doesn't exist, then check if there is a Rockbox
               image in RAM   We have a copy of Rockbox in RAM, lets just run it.  If we get to here, then we haven't been able to load any firmware  We never get here, but keep gcc happy **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Dave Chapman
 *
 * Based on Rockbox iriver bootloader by Linus Nielsen Feltzing
 * and the ipodlinux bootloader by Daniel Palffy and Bernard Leach
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Maximum allowed firmware image size. The largest known current 
   (December 2006) firmware is about 7.5MB (Apple's firmware for the ipod video)
   so we set this to 8MB.  A buffer to load the Linux kernel or Rockbox into  check if number of seconds has past  mini 1G only  System font is 6 pixels wide  Immediately spindown the disk.  CONFIG_CPU  Reboot  100ms  The bootloader is started from the OSOS image on the firmware
 * partition. There are several ways it can be installed there:
 * appended to the Apple firmware, on its own, or appended to
 * Rockbox itself. The Apple ROM loader loads the entire OSOS
 * image to DRAM_START, whatever it contains. If the bootloader
 * is appended to another image then it will've modified the
 * entry point in the OSOS header such that the ROM will call the
 * bootloader rather than the main image.
 *
 * So, once the bootloader has control:
 *
 * 1) If the hold switch is on, or the menu button is being held,
 *    try to boot the Apple firmware.
 *   1a) First, it looks for apple_os.ipod on the FAT32 partition,
 *       in .rockbox or the root directory. If found it loads that
 *       without further checking and runs it.
 *   1b) Next, it checks to see if the OSOS image already loaded
 *       into RAM is in fact the Apple firmware with the bootloader
 *       appended. It looks at DRAM_START+0x20 for the string
 *       "portalplayer", and if it's there, just jumps back to
 *       DRAM_START where the entry point was before the bootloader
 *       was appended.
 *   1c) If neither of those worked, it displays an error and dies.
 *
 * 2) If the play button is being held, try to boot Linux. It looks
 *    for linux.bin in the root directory, and if it's not there,
 *    it displays an error and dies.
 *
 * 3) Otherwise, try to boot Rockbox.
 *   3a) First, it looks for rockbox.ipod on the FAT32 partition,
 *       in .rockbox or the root directory. If found it loads that
 *       without further checking and runs it.
 *   3b) Next, it checks to see if the OSOS image already loaded
 *       into RAM is in fact Rockbox with the bootloader appended.
 *       It looks at DRAM_START+0x20 for the string "Rockbox\1"
 *       (which is inserted there in crt0-pp.S), and if it's there,
 *       just humps back to DRAM_START where the entry point was
 *       before the bootloader was appended.
 *   3c) If neither of those worked, it displays an error and dies.
 *
 * The result is that any of the three install configurations work,
 * and that images of apple_os.ipod or rockbox.ipod on the FAT32
 * partition take priority over the contents of OSOS (this avoids
 * upgrades failing to work if OSOS is not updated).
 *
 * Loading from OSOS is somewhat faster than loading from FAT32,
 * because the Apple ROM doesn't have to deal with filesystems or
 * fragmentation, and is already loading from OSOS anyway. Thus,
 * the fastest boot configuration that still allows dual booting
 * is to install Rockbox into OSOS with the bootloader appended
 * (and delete/rename rockbox.ipod from the FAT32 partition).
 *
 * It is of course faster to just install Rockbox to OSOS alone,
 * but then it's impossible to boot the Apple firmware.
  Check the button hold status as soon as possible - to 
       give the user maximum chance to turn it off in order to
       reset the settings in rockbox.  Turns on the backlight  ADC and button drivers are not yet implemented  Enable bootloader messages  Show model  If either the hold switch was on, or the Menu button was held, then 
           try the Apple firmware  First try an apple_os.ipod file on the FAT32 partition
           (either in .rockbox or the root) 
          If apple_os.ipod doesn't exist, then check if there is an Apple 
               firmware image in RAM   We have a copy of the retailos in RAM, lets just run it.  Everything failed - just loop forever  if rockbox.ipod doesn't exist, then check if there is a Rockbox
               image in RAM   We have a copy of Rockbox in RAM, lets just run it.  If we get to here, then we haven't been able to load any firmware  We never get here, but keep gcc happy 