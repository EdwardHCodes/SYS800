 files.c - Transscription, recording and playback
 *	Copyright (c) 1995-1997 Stefan Jokisch
 *
 * Changes for Rockbox copyright 2009 Torne Wuff
 *
 * This file is part of Frotz.
 *
 * Frotz is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Frotz is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 
 * script_open
 *
 * Open the transscript file. 'AMFV' makes this more complicated as it
 * turns transscription on/off several times to exclude some text from
 * the transscription file. This wasn't a problem for the original V4
 * interpreters which always sent transscription to the printer, but it
 * means a problem to modern interpreters that offer to open a new file
 * every time transscription is turned on. Our solution is to append to
 * the old transscription file in V1 to V4, and to ask for a new file
 * name in V5+.
 *
  Opening in "at" mode doesn't work for script_erase_input...  script_open 
 * script_close
 *
 * Stop transscription.
 *
  script_close 
 * script_new_line
 *
 * Write a newline to the transscript file.
 *
  script_new_line 
 * script_char
 *
 * Write a single character to the transscript file.
 *
  script_char 
 * script_word
 *
 * Write a string to the transscript file.
 *
  script_word 
 * script_write_input
 *
 * Send an input line to the transscript file.
 *
  script_write_input 
 * script_erase_input
 *
 * Remove an input line from the transscript file.
 *
  script_erase_input 
 * script_mssg_on
 *
 * Start sending a "debugging" message to the transscript file.
 *
  script_mssg_on 
 * script_mssg_off
 *
 * Stop writing a "debugging" message.
 *
  script_mssg_off 
 * record_open
 *
 * Open a file to record the player's input.
 *
  record_open 
 * record_close
 *
 * Stop recording the player's input.
 *
  record_close 
 * record_code
 *
 * Helper function for record_char.
 *
  record_code 
 * record_char
 *
 * Write a character to the command file.
 *
  record_char 
 * record_write_key
 *
 * Copy a keystroke to the command file.
 *
  record_write_key 
 * record_write_input
 *
 * Copy a line of input to a command file.
 *
  record_write_input 
 * replay_open
 *
 * Open a file of commands for playback.
 *
  replay_open 
 * replay_close
 *
 * Stop playback of commands.
 *
  replay_close 
 * replay_code
 *
 * Helper function for replay_key and replay_line.
 *
  replay_code 
 * replay_char
 *
 * Read a character from the command file.
 *
  replay_char 
 * replay_read_key
 *
 * Read a keystroke from a command file.
 *
  replay_read_key 
 * replay_read_input
 *
 * Read a line of input from a command file.
 *
  replay_read_input  files.c - Transscription, recording and playback
 *	Copyright (c) 1995-1997 Stefan Jokisch
 *
 * Changes for Rockbox copyright 2009 Torne Wuff
 *
 * This file is part of Frotz.
 *
 * Frotz is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Frotz is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 
 * script_open
 *
 * Open the transscript file. 'AMFV' makes this more complicated as it
 * turns transscription on/off several times to exclude some text from
 * the transscription file. This wasn't a problem for the original V4
 * interpreters which always sent transscription to the printer, but it
 * means a problem to modern interpreters that offer to open a new file
 * every time transscription is turned on. Our solution is to append to
 * the old transscription file in V1 to V4, and to ask for a new file
 * name in V5+.
 *
  Opening in "at" mode doesn't work for script_erase_input...  script_open 
 * script_close
 *
 * Stop transscription.
 *
  script_close 
 * script_new_line
 *
 * Write a newline to the transscript file.
 *
  script_new_line 
 * script_char
 *
 * Write a single character to the transscript file.
 *
  script_char 
 * script_word
 *
 * Write a string to the transscript file.
 *
  script_word 
 * script_write_input
 *
 * Send an input line to the transscript file.
 *
  script_write_input 
 * script_erase_input
 *
 * Remove an input line from the transscript file.
 *
  script_erase_input 
 * script_mssg_on
 *
 * Start sending a "debugging" message to the transscript file.
 *
  script_mssg_on 
 * script_mssg_off
 *
 * Stop writing a "debugging" message.
 *
  script_mssg_off 
 * record_open
 *
 * Open a file to record the player's input.
 *
  record_open 
 * record_close
 *
 * Stop recording the player's input.
 *
  record_close 
 * record_code
 *
 * Helper function for record_char.
 *
  record_code 
 * record_char
 *
 * Write a character to the command file.
 *
  record_char 
 * record_write_key
 *
 * Copy a keystroke to the command file.
 *
  record_write_key 
 * record_write_input
 *
 * Copy a line of input to a command file.
 *
  record_write_input 
 * replay_open
 *
 * Open a file of commands for playback.
 *
  replay_open 
 * replay_close
 *
 * Stop playback of commands.
 *
  replay_close 
 * replay_code
 *
 * Helper function for replay_key and replay_line.
 *
  replay_code 
 * replay_char
 *
 * Read a character from the command file.
 *
  replay_char 
 * replay_read_key
 *
 * Read a keystroke from a command file.
 *
  replay_read_key 
 * replay_read_input
 *
 * Read a line of input from a command file.
 *
  replay_read_input  files.c - Transscription, recording and playback
 *	Copyright (c) 1995-1997 Stefan Jokisch
 *
 * Changes for Rockbox copyright 2009 Torne Wuff
 *
 * This file is part of Frotz.
 *
 * Frotz is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Frotz is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 
 * script_open
 *
 * Open the transscript file. 'AMFV' makes this more complicated as it
 * turns transscription on/off several times to exclude some text from
 * the transscription file. This wasn't a problem for the original V4
 * interpreters which always sent transscription to the printer, but it
 * means a problem to modern interpreters that offer to open a new file
 * every time transscription is turned on. Our solution is to append to
 * the old transscription file in V1 to V4, and to ask for a new file
 * name in V5+.
 *
  Opening in "at" mode doesn't work for script_erase_input...  script_open 
 * script_close
 *
 * Stop transscription.
 *
  script_close 
 * script_new_line
 *
 * Write a newline to the transscript file.
 *
  script_new_line 
 * script_char
 *
 * Write a single character to the transscript file.
 *
  script_char 
 * script_word
 *
 * Write a string to the transscript file.
 *
  script_word 
 * script_write_input
 *
 * Send an input line to the transscript file.
 *
  script_write_input 
 * script_erase_input
 *
 * Remove an input line from the transscript file.
 *
  script_erase_input 
 * script_mssg_on
 *
 * Start sending a "debugging" message to the transscript file.
 *
  script_mssg_on 
 * script_mssg_off
 *
 * Stop writing a "debugging" message.
 *
  script_mssg_off 
 * record_open
 *
 * Open a file to record the player's input.
 *
  record_open 
 * record_close
 *
 * Stop recording the player's input.
 *
  record_close 
 * record_code
 *
 * Helper function for record_char.
 *
  record_code 
 * record_char
 *
 * Write a character to the command file.
 *
  record_char 
 * record_write_key
 *
 * Copy a keystroke to the command file.
 *
  record_write_key 
 * record_write_input
 *
 * Copy a line of input to a command file.
 *
  record_write_input 
 * replay_open
 *
 * Open a file of commands for playback.
 *
  replay_open 
 * replay_close
 *
 * Stop playback of commands.
 *
  replay_close 
 * replay_code
 *
 * Helper function for replay_key and replay_line.
 *
  replay_code 
 * replay_char
 *
 * Read a character from the command file.
 *
  replay_char 
 * replay_read_key
 *
 * Read a keystroke from a command file.
 *
  replay_read_key 
 * replay_read_input
 *
 * Read a line of input from a command file.
 *
  replay_read_input 