
  SDL_image:  An example image loading library for use with SDL
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

 * XPM (X PixMap) image loader:
 *
 * Supports the XPMv3 format, EXCEPT:
 * - hotspot coordinates are ignored
 * - only colour ('c') colour symbols are used
 * - rgb.txt is not used (for portability), so only RGB colours
 *   are recognized (#rrggbb etc) - only a few basic colour names are
 *   handled
 *
 * The result is an 8bpp indexed surface if possible, otherwise 32bpp.
 * The colourkey is correctly set if transparency is used.
 * 
 * Besides the standard API, also provides
 *
 *     SDL_Surface *IMG_ReadXPMFromArray(char **xpm)
 *
 * that reads the image data from an XPM file included in the C source.
 *
 * TODO: include rgb.txt here. The full table (from solaris 2.6) only
 * requires about 13K in binary form.
  See if an image is contained in a data source  Hash table to look up colors from pixel strings  array of all entries  we know how many entries we need, so we can allocate
	   everything here  use power-of-2 sized hash table for decoding speed  in case malloc fails  fast lookup that works if cpp == 1  garbage in - garbage out  portable case-insensitive string comparison 
 * convert colour spec to RGB (in 0xrrggbb format).
 * return 1 if successful.
  poor man's rgb.txt 
 * Read next line from the source.
 * If len > 0, it's assumed to be at least len chars (for efficiency).
 * Return NULL and set error upon EOF or parse error.
  "\",\n\0"  read XPM from either array or RWops 
	 * The header string of an XPMv3 image has the format
	 *
	 * <width> <height> <ncolors> <cpp> [ <hotspot_x> <hotspot_y> ]
	 *
	 * where the hotspot coords are intended for mouse cursors.
	 * Right now we don't use the hotspots but it should be handled
	 * one day.
	  Create the new surface  Hmm, some SDL error (out of memory?)  Read the colors  parse a colour definition  skip symbolic colour names  Read the pixels  optimization for some common cases  Load a XPM type image from an RWops datasource  The error message has been set in SDL_RWFromFile  not LOAD_XPM  See if an image is contained in a data source  Load a XPM type image from an SDL datasource  not LOAD_XPM 
  SDL_image:  An example image loading library for use with SDL
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

 * XPM (X PixMap) image loader:
 *
 * Supports the XPMv3 format, EXCEPT:
 * - hotspot coordinates are ignored
 * - only colour ('c') colour symbols are used
 * - rgb.txt is not used (for portability), so only RGB colours
 *   are recognized (#rrggbb etc) - only a few basic colour names are
 *   handled
 *
 * The result is an 8bpp indexed surface if possible, otherwise 32bpp.
 * The colourkey is correctly set if transparency is used.
 * 
 * Besides the standard API, also provides
 *
 *     SDL_Surface *IMG_ReadXPMFromArray(char **xpm)
 *
 * that reads the image data from an XPM file included in the C source.
 *
 * TODO: include rgb.txt here. The full table (from solaris 2.6) only
 * requires about 13K in binary form.
  See if an image is contained in a data source  Hash table to look up colors from pixel strings  array of all entries  we know how many entries we need, so we can allocate
	   everything here  use power-of-2 sized hash table for decoding speed  in case malloc fails  fast lookup that works if cpp == 1  garbage in - garbage out  portable case-insensitive string comparison 
 * convert colour spec to RGB (in 0xrrggbb format).
 * return 1 if successful.
  poor man's rgb.txt 
 * Read next line from the source.
 * If len > 0, it's assumed to be at least len chars (for efficiency).
 * Return NULL and set error upon EOF or parse error.
  "\",\n\0"  read XPM from either array or RWops 
	 * The header string of an XPMv3 image has the format
	 *
	 * <width> <height> <ncolors> <cpp> [ <hotspot_x> <hotspot_y> ]
	 *
	 * where the hotspot coords are intended for mouse cursors.
	 * Right now we don't use the hotspots but it should be handled
	 * one day.
	  Create the new surface  Hmm, some SDL error (out of memory?)  Read the colors  parse a colour definition  skip symbolic colour names  Read the pixels  optimization for some common cases  Load a XPM type image from an RWops datasource  The error message has been set in SDL_RWFromFile  not LOAD_XPM  See if an image is contained in a data source  Load a XPM type image from an SDL datasource  not LOAD_XPM 
  SDL_image:  An example image loading library for use with SDL
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

 * XPM (X PixMap) image loader:
 *
 * Supports the XPMv3 format, EXCEPT:
 * - hotspot coordinates are ignored
 * - only colour ('c') colour symbols are used
 * - rgb.txt is not used (for portability), so only RGB colours
 *   are recognized (#rrggbb etc) - only a few basic colour names are
 *   handled
 *
 * The result is an 8bpp indexed surface if possible, otherwise 32bpp.
 * The colourkey is correctly set if transparency is used.
 * 
 * Besides the standard API, also provides
 *
 *     SDL_Surface *IMG_ReadXPMFromArray(char **xpm)
 *
 * that reads the image data from an XPM file included in the C source.
 *
 * TODO: include rgb.txt here. The full table (from solaris 2.6) only
 * requires about 13K in binary form.
  See if an image is contained in a data source  Hash table to look up colors from pixel strings  array of all entries  we know how many entries we need, so we can allocate
	   everything here  use power-of-2 sized hash table for decoding speed  in case malloc fails  fast lookup that works if cpp == 1  garbage in - garbage out  portable case-insensitive string comparison 
 * convert colour spec to RGB (in 0xrrggbb format).
 * return 1 if successful.
  poor man's rgb.txt 
 * Read next line from the source.
 * If len > 0, it's assumed to be at least len chars (for efficiency).
 * Return NULL and set error upon EOF or parse error.
  "\",\n\0"  read XPM from either array or RWops 
	 * The header string of an XPMv3 image has the format
	 *
	 * <width> <height> <ncolors> <cpp> [ <hotspot_x> <hotspot_y> ]
	 *
	 * where the hotspot coords are intended for mouse cursors.
	 * Right now we don't use the hotspots but it should be handled
	 * one day.
	  Create the new surface  Hmm, some SDL error (out of memory?)  Read the colors  parse a colour definition  skip symbolic colour names  Read the pixels  optimization for some common cases  Load a XPM type image from an RWops datasource  The error message has been set in SDL_RWFromFile  not LOAD_XPM  See if an image is contained in a data source  Load a XPM type image from an SDL datasource  not LOAD_XPM 