 buffer.c - Text buffering and word wrapping
 *	Copyright (c) 1995-1997 Stefan Jokisch
 *
 * This file is part of Frotz.
 *
 * Frotz is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Frotz is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 
 * flush_buffer
 *
 * Copy the contents of the text buffer to the output streams.
 *
  Make sure we stop when flush_buffer is called from flush_buffer.
       Note that this is difficult to avoid as we might print a newline
       during flush_buffer, which might cause a newline interrupt, that
       might execute any arbitrary opcode, which might flush the buffer.  Send the buffer to the output streams  Reset the buffer  flush_buffer 
 * print_char
 *
 * High level output function.
 *
  Characters 0 and ZC_RETURN are special cases  Flush the buffer before a whitespace or after a hyphen  Set the flag if this is part one of a style or font change  Remember the current character code  Insert the character into the buffer  print_char 
 * new_line
 *
 * High level newline function.
 *
  new_line 
 * init_buffer
 *
 * Initialize buffer variables.
 *
  buffer.c - Text buffering and word wrapping
 *	Copyright (c) 1995-1997 Stefan Jokisch
 *
 * This file is part of Frotz.
 *
 * Frotz is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Frotz is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 
 * flush_buffer
 *
 * Copy the contents of the text buffer to the output streams.
 *
  Make sure we stop when flush_buffer is called from flush_buffer.
       Note that this is difficult to avoid as we might print a newline
       during flush_buffer, which might cause a newline interrupt, that
       might execute any arbitrary opcode, which might flush the buffer.  Send the buffer to the output streams  Reset the buffer  flush_buffer 
 * print_char
 *
 * High level output function.
 *
  Characters 0 and ZC_RETURN are special cases  Flush the buffer before a whitespace or after a hyphen  Set the flag if this is part one of a style or font change  Remember the current character code  Insert the character into the buffer  print_char 
 * new_line
 *
 * High level newline function.
 *
  new_line 
 * init_buffer
 *
 * Initialize buffer variables.
 *
  buffer.c - Text buffering and word wrapping
 *	Copyright (c) 1995-1997 Stefan Jokisch
 *
 * This file is part of Frotz.
 *
 * Frotz is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Frotz is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 
 * flush_buffer
 *
 * Copy the contents of the text buffer to the output streams.
 *
  Make sure we stop when flush_buffer is called from flush_buffer.
       Note that this is difficult to avoid as we might print a newline
       during flush_buffer, which might cause a newline interrupt, that
       might execute any arbitrary opcode, which might flush the buffer.  Send the buffer to the output streams  Reset the buffer  flush_buffer 
 * print_char
 *
 * High level output function.
 *
  Characters 0 and ZC_RETURN are special cases  Flush the buffer before a whitespace or after a hyphen  Set the flag if this is part one of a style or font change  Remember the current character code  Insert the character into the buffer  print_char 
 * new_line
 *
 * High level newline function.
 *
  new_line 
 * init_buffer
 *
 * Initialize buffer variables.
 *
 