**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2014 by Marcin Bukat
                         Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** do not overflow the destination buffer !  reminder  read may overflow the source buffer but
     * it will not overwrite anything
      reset all ep fifos  IN fifos  OUT fifos  soft disconnect  clear all pending interrupts  bit6 - USB wakeup
     * bit4 - connect/disconnect
     *
     * with 0x40 here there is irq storm
      HS, Reset, Setup_data  No OTG interrupts ?  enable interrupts from ep0  unmask UDC interrupt in interrupt controller  soft connect  Set the address (usually it's in a register).
 * There is a problem here: some controller want the address to be set between
 * control out and ack and some want to wait for the end of the transaction.
 * In the first case, you need to write some code special code when getting
 * setup packets and ignore this function (have a look at other drives)
  UDC sets this automaticaly  copy data to UDC buffer  this marks data as ready to send  clear NAK bit to ACK host  Arm receiving buffer by writing
        * any value to OUT0BC. This sets
        * OUT_BUSY bit in EP0CS until the data
        * are correctly received and ACK'd
         clear NAK bit to ACK host  only EP0 in hwstub  get possible sources  HS, Reset, Setup  HS irq  Reset irq  clear all pending EP irqs  Setup data valid  clear irq flags  rearm receive buffer  short packet means end of transfer  ack interrupt  clear NAK bit to ACK hosts ZLP  ack interrupt **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2014 by Marcin Bukat
                         Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** do not overflow the destination buffer !  reminder  read may overflow the source buffer but
     * it will not overwrite anything
      reset all ep fifos  IN fifos  OUT fifos  soft disconnect  clear all pending interrupts  bit6 - USB wakeup
     * bit4 - connect/disconnect
     *
     * with 0x40 here there is irq storm
      HS, Reset, Setup_data  No OTG interrupts ?  enable interrupts from ep0  unmask UDC interrupt in interrupt controller  soft connect  Set the address (usually it's in a register).
 * There is a problem here: some controller want the address to be set between
 * control out and ack and some want to wait for the end of the transaction.
 * In the first case, you need to write some code special code when getting
 * setup packets and ignore this function (have a look at other drives)
  UDC sets this automaticaly  copy data to UDC buffer  this marks data as ready to send  clear NAK bit to ACK host  Arm receiving buffer by writing
        * any value to OUT0BC. This sets
        * OUT_BUSY bit in EP0CS until the data
        * are correctly received and ACK'd
         clear NAK bit to ACK host  only EP0 in hwstub  get possible sources  HS, Reset, Setup  HS irq  Reset irq  clear all pending EP irqs  Setup data valid  clear irq flags  rearm receive buffer  short packet means end of transfer  ack interrupt  clear NAK bit to ACK hosts ZLP  ack interrupt **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2014 by Marcin Bukat
                         Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** do not overflow the destination buffer !  reminder  read may overflow the source buffer but
     * it will not overwrite anything
      reset all ep fifos  IN fifos  OUT fifos  soft disconnect  clear all pending interrupts  bit6 - USB wakeup
     * bit4 - connect/disconnect
     *
     * with 0x40 here there is irq storm
      HS, Reset, Setup_data  No OTG interrupts ?  enable interrupts from ep0  unmask UDC interrupt in interrupt controller  soft connect  Set the address (usually it's in a register).
 * There is a problem here: some controller want the address to be set between
 * control out and ack and some want to wait for the end of the transaction.
 * In the first case, you need to write some code special code when getting
 * setup packets and ignore this function (have a look at other drives)
  UDC sets this automaticaly  copy data to UDC buffer  this marks data as ready to send  clear NAK bit to ACK host  Arm receiving buffer by writing
        * any value to OUT0BC. This sets
        * OUT_BUSY bit in EP0CS until the data
        * are correctly received and ACK'd
         clear NAK bit to ACK host  only EP0 in hwstub  get possible sources  HS, Reset, Setup  HS irq  Reset irq  clear all pending EP irqs  Setup data valid  clear irq flags  rearm receive buffer  short packet means end of transfer  ack interrupt  clear NAK bit to ACK hosts ZLP  ack interrupt 