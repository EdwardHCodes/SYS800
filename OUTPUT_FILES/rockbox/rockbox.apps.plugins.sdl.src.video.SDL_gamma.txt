
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Gamma correction support  Used for calculating gamma ramps  Math routines from uClibc: http://www.uclibc.org #include "e_pow.h"#include "e_log.h"#define pow(x, y)	__ieee754_pow(x, y)#define log(x)		__ieee754_log(x) 0.0 gamma is all black  1.0 gamma is identity  Calculate a real gamma ramp  The following is adapted from a post by Garrett Bass on OpenGL
	   Gamedev list, March 4, 2000.
	  Prefer using SetGammaRamp(), as it's more flexible  Calculating the gamma by integrating the gamma ramps isn't exact,
   so this function isn't officially supported.
 Prefer using GetGammaRamp(), as it's more flexible  Verify the screen parameter  Lazily allocate the gamma tables  Fill the gamma table with the new values  Gamma correction always possible on split palettes  If physical palette has been set independently, use it  Try to set the gamma ramp in the driver  Lazily allocate the gamma table  Get the real hardware gamma  Assume an identity gamma  Just copy from our internal table 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Gamma correction support  Used for calculating gamma ramps  Math routines from uClibc: http://www.uclibc.org #include "e_pow.h"#include "e_log.h"#define pow(x, y)	__ieee754_pow(x, y)#define log(x)		__ieee754_log(x) 0.0 gamma is all black  1.0 gamma is identity  Calculate a real gamma ramp  The following is adapted from a post by Garrett Bass on OpenGL
	   Gamedev list, March 4, 2000.
	  Prefer using SetGammaRamp(), as it's more flexible  Calculating the gamma by integrating the gamma ramps isn't exact,
   so this function isn't officially supported.
 Prefer using GetGammaRamp(), as it's more flexible  Verify the screen parameter  Lazily allocate the gamma tables  Fill the gamma table with the new values  Gamma correction always possible on split palettes  If physical palette has been set independently, use it  Try to set the gamma ramp in the driver  Lazily allocate the gamma table  Get the real hardware gamma  Assume an identity gamma  Just copy from our internal table 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Gamma correction support  Used for calculating gamma ramps  Math routines from uClibc: http://www.uclibc.org #include "e_pow.h"#include "e_log.h"#define pow(x, y)	__ieee754_pow(x, y)#define log(x)		__ieee754_log(x) 0.0 gamma is all black  1.0 gamma is identity  Calculate a real gamma ramp  The following is adapted from a post by Garrett Bass on OpenGL
	   Gamedev list, March 4, 2000.
	  Prefer using SetGammaRamp(), as it's more flexible  Calculating the gamma by integrating the gamma ramps isn't exact,
   so this function isn't officially supported.
 Prefer using GetGammaRamp(), as it's more flexible  Verify the screen parameter  Lazily allocate the gamma tables  Fill the gamma table with the new values  Gamma correction always possible on split palettes  If physical palette has been set independently, use it  Try to set the gamma ramp in the driver  Lazily allocate the gamma table  Get the real hardware gamma  Assume an identity gamma  Just copy from our internal table 