**************************************************************************
 *             __________               __   ___
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2016 Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE device types  icx_keys driver  icx_touch_screen driver  HOLD status  button bitmap  poll() descriptors (up to 2 for now: keys and touchscreen)  DEV_*  structure to track touch state  current position (valid is touch is true)  maximum possible values  current pressure and tool width  maximum possible values  is the user touching the screen?  the hardware supports "flick" gesture  was the action a flick?  if so, this is the flick direction  rockbox state, updated from ts state on SYN event  get touchscreen information and init state  on SYN, we copy the state to the rockbox state  map coordinate to screen  don't trust driver reported ranges  reset flick  HOLD is reported as the first LED  the driver knows the HOLD statu at all times  the driver can be queried for button status but the output is garbage
     * so just assume no keys are pressed  query name  only keep devices we know about  if we found a key driver, we can read the hold status from it (and keep
     * it updated with events)  fill poll descriptor  keycode -> rockbox button mapping  SONY_NWZA860  keycode -> rockbox button mapping  SONY_NWZA860  See headers/nwz_keys.h for explanation of Sony's nonstandard interface  find what input devices are available  skip '.' and '..' entries  create device full path and open it  check if we have at least one device  check if there are any events pending and process them  stop when there are no more events  only read if we won't block  WARNING we must call touchscreen_to_pixels even if there is no touch,
     * otherwsise *data is not filled with the last position and it breaks
     * everything  reinit everything, particularly important for keys and HOLD  close descriptors **************************************************************************
 *             __________               __   ___
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2016 Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE device types  icx_keys driver  icx_touch_screen driver  HOLD status  button bitmap  poll() descriptors (up to 2 for now: keys and touchscreen)  DEV_*  structure to track touch state  current position (valid is touch is true)  maximum possible values  current pressure and tool width  maximum possible values  is the user touching the screen?  the hardware supports "flick" gesture  was the action a flick?  if so, this is the flick direction  rockbox state, updated from ts state on SYN event  get touchscreen information and init state  on SYN, we copy the state to the rockbox state  map coordinate to screen  don't trust driver reported ranges  reset flick  HOLD is reported as the first LED  the driver knows the HOLD statu at all times  the driver can be queried for button status but the output is garbage
     * so just assume no keys are pressed  query name  only keep devices we know about  if we found a key driver, we can read the hold status from it (and keep
     * it updated with events)  fill poll descriptor  keycode -> rockbox button mapping  SONY_NWZA860  keycode -> rockbox button mapping  SONY_NWZA860  See headers/nwz_keys.h for explanation of Sony's nonstandard interface  find what input devices are available  skip '.' and '..' entries  create device full path and open it  check if we have at least one device  check if there are any events pending and process them  stop when there are no more events  only read if we won't block  WARNING we must call touchscreen_to_pixels even if there is no touch,
     * otherwsise *data is not filled with the last position and it breaks
     * everything  reinit everything, particularly important for keys and HOLD  close descriptors **************************************************************************
 *             __________               __   ___
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2016 Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE device types  icx_keys driver  icx_touch_screen driver  HOLD status  button bitmap  poll() descriptors (up to 2 for now: keys and touchscreen)  DEV_*  structure to track touch state  current position (valid is touch is true)  maximum possible values  current pressure and tool width  maximum possible values  is the user touching the screen?  the hardware supports "flick" gesture  was the action a flick?  if so, this is the flick direction  rockbox state, updated from ts state on SYN event  get touchscreen information and init state  on SYN, we copy the state to the rockbox state  map coordinate to screen  don't trust driver reported ranges  reset flick  HOLD is reported as the first LED  the driver knows the HOLD statu at all times  the driver can be queried for button status but the output is garbage
     * so just assume no keys are pressed  query name  only keep devices we know about  if we found a key driver, we can read the hold status from it (and keep
     * it updated with events)  fill poll descriptor  keycode -> rockbox button mapping  SONY_NWZA860  keycode -> rockbox button mapping  SONY_NWZA860  See headers/nwz_keys.h for explanation of Sony's nonstandard interface  find what input devices are available  skip '.' and '..' entries  create device full path and open it  check if we have at least one device  check if there are any events pending and process them  stop when there are no more events  only read if we won't block  WARNING we must call touchscreen_to_pixels even if there is no touch,
     * otherwsise *data is not filled with the last position and it breaks
     * everything  reinit everything, particularly important for keys and HOLD  close descriptors 