 WL_MAIN.C
=============================================================================

                             WOLFENSTEIN 3-D

                        An Id Software production

                             by John Carmack

=============================================================================

=============================================================================

                             LOCAL CONSTANTS

=============================================================================
 in global coordinates globals visable flush to wall size of view window
=============================================================================

                            GLOBAL VARIABLES

=============================================================================
 proejection variables pixels away from centerx a target can be Command line parameter variables default is "normal" default is not to start a level higher samplerates result in "out of memory" higher samplerates result in "out of memory"
=============================================================================

                            LOCAL VARIABLES

=============================================================================

====================
=
= ReadConfig
=
====================
 valid config file hack to always enable sound  make sure values are correct no config file, so select by hardware always -FW19 start with a good size
====================
=
= WriteConfig
=
====================
===========================================================================
=====================
=
= NewGame
=
= Set up new game to start from the beginning
=
=====================
===========================================================================
==================
=
= SaveTheGame
=
==================
    struct diskfree_t dfree;    int32_t avail,size,checksum;    if (_dos_getdiskfree(0,&dfree))
        Quit("Error in _dos_getdiskfree call");

    avail = (int32_t)dfree.avail_clusters *
                  dfree.bytes_per_sector *
                  dfree.sectors_per_cluster;

    size = 0;
    for (ob = player; ob ; ob=ob->next)
        size += sizeof(*ob);
    size += sizeof(nullobj);

    size += sizeof(gamestate) +
            sizeof(LRstruct)*LRpack +
            sizeof(tilemap) +
            sizeof(actorat) +
            sizeof(laststatobj) +
            sizeof(statobjlist) +
            sizeof(doorposition) +
            sizeof(pwallstate) +
            sizeof(pwalltile) +
            sizeof(pwallx) +
            sizeof(pwally) +
            sizeof(pwalldir) +
            sizeof(pwallpos);

    if (avail < size)
    {
        Message(STR_NOSPACE1"\n"STR_NOSPACE2);
        return false;
    } player object needs special treatment as it's in WL_AGENT.CPP and not in WL_ACT2.CPP which could cause problems for the relative addressing end of file marker WRITE OUT CHECKSUM===========================================================================
==================
=
= LoadTheGame
=
==================
 don't copy over the links assign valid floorcodes under moved pushwalls set player->areanumber to the floortile you're standing on===========================================================================
==========================
=
= ShutdownId
=
= Shuts down all ID_?? managers
=
==========================
 This line is completely useless...===========================================================================
==================
=
= BuildTables
=
= Calculates:
=
= scale                 projection constant
= sintable/costable     overlapping fractional tables
=
==================
 calculate fine tangents costable overlays sintable with a quarter phase shift ANGLES is assumed to be divisable by four===========================================================================
====================
=
= CalcProjection
=
= Uses focallength
=
====================
 half view in pixels calculate scale value for vertical height calculations and sprite x calculations divide heightnumerator by a posts distance to get the posts height for the heightbuffer.  The pixel height is height>>2 calculate the angle offset from view angle of each pixel's ray start 1/2 pixel over, so viewangle bisects two middle pixels===========================================================================
===================
=
= SetupWalls
=
= Map tile values to scaled pics
=
===================
===========================================================================
==========================
=
= SignonScreen
=
==========================
 VGA version
==========================
=
= FinishSignon
=
==========================
===========================================================================
=====================
=
= InitDigiMap
=
=====================
 channel mapping:  -1: any non reserved channel   0: player weapons   1: boss weapons These first sounds are in the upload version These are in all other episodes AIIEEE DEE-DEE EPISODE 4 BOSS DIE EPISODE 4 BOSS SIGHTING EPISODE 6 BOSS SIGHTING FART GASP GUH-BOY! AH GEEZ! EPISODE 5 BOSS SIGHTING EPISODE 6 BOSS DIE EPISODE 5 BOSS DIE SPEAR OF DESTINY DIGISOUNDS AIIEEE DOUBLY-MAPPED!!! DEE-DEE FART GASP GUH-BOY! AH GEEZ! Got Gat replacement Trans Sight Trans Death Wilhelm Sight Wilhelm Death Uber Death Death Knight Sight Death Knight Death Angel Sight Angel Death Got Spear replacement 0 2 4 7 17 18 21 22 23
==========================
=
= InitGame
=
= Load a few things right away
=
==========================
 initialize SDL TODO: Will any memory checking be needed someday??        memcpy((byte *)0xb8000,screen+7+7*160,17*160);
        gotoxy (1,23); build some tables HOLDING DOWN 'M' KEY? (Fire for rockbox) allow entering jukebox  draw intro screen stuffTODO: VMU Selection Screen load in and lock down some basic chunks trig tables initialize variables===========================================================================
==========================
=
= SetViewSize
=
==========================
 must be divisable by 16 must be even calculate trace angles and projection constants===========================================================================
==========================
=
= Quit
=
==========================
 don't try to display the red box before it's loaded 24 for SPEAR/UPLOAD compatibility===========================================================================
=====================
=
= DemoLoop
=
=====================
 check for launch from ted main game cycle title page credits page high scores demo=========================================================================== index is checked in InitGame
==========================
=
= main
=
==========================
 WL_MAIN.C
=============================================================================

                             WOLFENSTEIN 3-D

                        An Id Software production

                             by John Carmack

=============================================================================

=============================================================================

                             LOCAL CONSTANTS

=============================================================================
 in global coordinates globals visable flush to wall size of view window
=============================================================================

                            GLOBAL VARIABLES

=============================================================================
 proejection variables pixels away from centerx a target can be Command line parameter variables default is "normal" default is not to start a level higher samplerates result in "out of memory" higher samplerates result in "out of memory"
=============================================================================

                            LOCAL VARIABLES

=============================================================================

====================
=
= ReadConfig
=
====================
 valid config file hack to always enable sound  make sure values are correct no config file, so select by hardware always -FW19 start with a good size
====================
=
= WriteConfig
=
====================
===========================================================================
=====================
=
= NewGame
=
= Set up new game to start from the beginning
=
=====================
===========================================================================
==================
=
= SaveTheGame
=
==================
    struct diskfree_t dfree;    int32_t avail,size,checksum;    if (_dos_getdiskfree(0,&dfree))
        Quit("Error in _dos_getdiskfree call");

    avail = (int32_t)dfree.avail_clusters *
                  dfree.bytes_per_sector *
                  dfree.sectors_per_cluster;

    size = 0;
    for (ob = player; ob ; ob=ob->next)
        size += sizeof(*ob);
    size += sizeof(nullobj);

    size += sizeof(gamestate) +
            sizeof(LRstruct)*LRpack +
            sizeof(tilemap) +
            sizeof(actorat) +
            sizeof(laststatobj) +
            sizeof(statobjlist) +
            sizeof(doorposition) +
            sizeof(pwallstate) +
            sizeof(pwalltile) +
            sizeof(pwallx) +
            sizeof(pwally) +
            sizeof(pwalldir) +
            sizeof(pwallpos);

    if (avail < size)
    {
        Message(STR_NOSPACE1"\n"STR_NOSPACE2);
        return false;
    } player object needs special treatment as it's in WL_AGENT.CPP and not in WL_ACT2.CPP which could cause problems for the relative addressing end of file marker WRITE OUT CHECKSUM===========================================================================
==================
=
= LoadTheGame
=
==================
 don't copy over the links assign valid floorcodes under moved pushwalls set player->areanumber to the floortile you're standing on===========================================================================
==========================
=
= ShutdownId
=
= Shuts down all ID_?? managers
=
==========================
 This line is completely useless...===========================================================================
==================
=
= BuildTables
=
= Calculates:
=
= scale                 projection constant
= sintable/costable     overlapping fractional tables
=
==================
 calculate fine tangents costable overlays sintable with a quarter phase shift ANGLES is assumed to be divisable by four===========================================================================
====================
=
= CalcProjection
=
= Uses focallength
=
====================
 half view in pixels calculate scale value for vertical height calculations and sprite x calculations divide heightnumerator by a posts distance to get the posts height for the heightbuffer.  The pixel height is height>>2 calculate the angle offset from view angle of each pixel's ray start 1/2 pixel over, so viewangle bisects two middle pixels===========================================================================
===================
=
= SetupWalls
=
= Map tile values to scaled pics
=
===================
===========================================================================
==========================
=
= SignonScreen
=
==========================
 VGA version
==========================
=
= FinishSignon
=
==========================
===========================================================================
=====================
=
= InitDigiMap
=
=====================
 channel mapping:  -1: any non reserved channel   0: player weapons   1: boss weapons These first sounds are in the upload version These are in all other episodes AIIEEE DEE-DEE EPISODE 4 BOSS DIE EPISODE 4 BOSS SIGHTING EPISODE 6 BOSS SIGHTING FART GASP GUH-BOY! AH GEEZ! EPISODE 5 BOSS SIGHTING EPISODE 6 BOSS DIE EPISODE 5 BOSS DIE SPEAR OF DESTINY DIGISOUNDS AIIEEE DOUBLY-MAPPED!!! DEE-DEE FART GASP GUH-BOY! AH GEEZ! Got Gat replacement Trans Sight Trans Death Wilhelm Sight Wilhelm Death Uber Death Death Knight Sight Death Knight Death Angel Sight Angel Death Got Spear replacement 0 2 4 7 17 18 21 22 23
==========================
=
= InitGame
=
= Load a few things right away
=
==========================
 initialize SDL TODO: Will any memory checking be needed someday??        memcpy((byte *)0xb8000,screen+7+7*160,17*160);
        gotoxy (1,23); build some tables HOLDING DOWN 'M' KEY? (Fire for rockbox) allow entering jukebox  draw intro screen stuffTODO: VMU Selection Screen load in and lock down some basic chunks trig tables initialize variables===========================================================================
==========================
=
= SetViewSize
=
==========================
 must be divisable by 16 must be even calculate trace angles and projection constants===========================================================================
==========================
=
= Quit
=
==========================
 don't try to display the red box before it's loaded 24 for SPEAR/UPLOAD compatibility===========================================================================
=====================
=
= DemoLoop
=
=====================
 check for launch from ted main game cycle title page credits page high scores demo=========================================================================== index is checked in InitGame
==========================
=
= main
=
==========================
 WL_MAIN.C
=============================================================================

                             WOLFENSTEIN 3-D

                        An Id Software production

                             by John Carmack

=============================================================================

=============================================================================

                             LOCAL CONSTANTS

=============================================================================
 in global coordinates globals visable flush to wall size of view window
=============================================================================

                            GLOBAL VARIABLES

=============================================================================
 proejection variables pixels away from centerx a target can be Command line parameter variables default is "normal" default is not to start a level higher samplerates result in "out of memory" higher samplerates result in "out of memory"
=============================================================================

                            LOCAL VARIABLES

=============================================================================

====================
=
= ReadConfig
=
====================
 valid config file hack to always enable sound  make sure values are correct no config file, so select by hardware always -FW19 start with a good size
====================
=
= WriteConfig
=
====================
===========================================================================
=====================
=
= NewGame
=
= Set up new game to start from the beginning
=
=====================
===========================================================================
==================
=
= SaveTheGame
=
==================
    struct diskfree_t dfree;    int32_t avail,size,checksum;    if (_dos_getdiskfree(0,&dfree))
        Quit("Error in _dos_getdiskfree call");

    avail = (int32_t)dfree.avail_clusters *
                  dfree.bytes_per_sector *
                  dfree.sectors_per_cluster;

    size = 0;
    for (ob = player; ob ; ob=ob->next)
        size += sizeof(*ob);
    size += sizeof(nullobj);

    size += sizeof(gamestate) +
            sizeof(LRstruct)*LRpack +
            sizeof(tilemap) +
            sizeof(actorat) +
            sizeof(laststatobj) +
            sizeof(statobjlist) +
            sizeof(doorposition) +
            sizeof(pwallstate) +
            sizeof(pwalltile) +
            sizeof(pwallx) +
            sizeof(pwally) +
            sizeof(pwalldir) +
            sizeof(pwallpos);

    if (avail < size)
    {
        Message(STR_NOSPACE1"\n"STR_NOSPACE2);
        return false;
    } player object needs special treatment as it's in WL_AGENT.CPP and not in WL_ACT2.CPP which could cause problems for the relative addressing end of file marker WRITE OUT CHECKSUM===========================================================================
==================
=
= LoadTheGame
=
==================
 don't copy over the links assign valid floorcodes under moved pushwalls set player->areanumber to the floortile you're standing on===========================================================================
==========================
=
= ShutdownId
=
= Shuts down all ID_?? managers
=
==========================
 This line is completely useless...===========================================================================
==================
=
= BuildTables
=
= Calculates:
=
= scale                 projection constant
= sintable/costable     overlapping fractional tables
=
==================
 calculate fine tangents costable overlays sintable with a quarter phase shift ANGLES is assumed to be divisable by four===========================================================================
====================
=
= CalcProjection
=
= Uses focallength
=
====================
 half view in pixels calculate scale value for vertical height calculations and sprite x calculations divide heightnumerator by a posts distance to get the posts height for the heightbuffer.  The pixel height is height>>2 calculate the angle offset from view angle of each pixel's ray start 1/2 pixel over, so viewangle bisects two middle pixels===========================================================================
===================
=
= SetupWalls
=
= Map tile values to scaled pics
=
===================
===========================================================================
==========================
=
= SignonScreen
=
==========================
 VGA version
==========================
=
= FinishSignon
=
==========================
===========================================================================
=====================
=
= InitDigiMap
=
=====================
 channel mapping:  -1: any non reserved channel   0: player weapons   1: boss weapons These first sounds are in the upload version These are in all other episodes AIIEEE DEE-DEE EPISODE 4 BOSS DIE EPISODE 4 BOSS SIGHTING EPISODE 6 BOSS SIGHTING FART GASP GUH-BOY! AH GEEZ! EPISODE 5 BOSS SIGHTING EPISODE 6 BOSS DIE EPISODE 5 BOSS DIE SPEAR OF DESTINY DIGISOUNDS AIIEEE DOUBLY-MAPPED!!! DEE-DEE FART GASP GUH-BOY! AH GEEZ! Got Gat replacement Trans Sight Trans Death Wilhelm Sight Wilhelm Death Uber Death Death Knight Sight Death Knight Death Angel Sight Angel Death Got Spear replacement 0 2 4 7 17 18 21 22 23
==========================
=
= InitGame
=
= Load a few things right away
=
==========================
 initialize SDL TODO: Will any memory checking be needed someday??        memcpy((byte *)0xb8000,screen+7+7*160,17*160);
        gotoxy (1,23); build some tables HOLDING DOWN 'M' KEY? (Fire for rockbox) allow entering jukebox  draw intro screen stuffTODO: VMU Selection Screen load in and lock down some basic chunks trig tables initialize variables===========================================================================
==========================
=
= SetViewSize
=
==========================
 must be divisable by 16 must be even calculate trace angles and projection constants===========================================================================
==========================
=
= Quit
=
==========================
 don't try to display the red box before it's loaded 24 for SPEAR/UPLOAD compatibility===========================================================================
=====================
=
= DemoLoop
=
=====================
 check for launch from ted main game cycle title page credits page high scores demo=========================================================================== index is checked in InitGame
==========================
=
= main
=
==========================
