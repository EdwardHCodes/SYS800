	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Generic MOD loader (Protracker, StarTracker, FastTracker, etc)

======================================================================================== Module structure  22 in module, 23 in memory  the songname.. 20 in module, 21 in memory  all sampleinfo  number of patterns used  should be 127  which pattern to play at pos  string "M.K." or "FLT4" or "FLT8" ========== Loader variables ========== Loader code  given the module ID, determine the number of channels and the tracker
   description ; also alters modtype  Protracker and variants  Star Tracker  Oktalyzer (Amiga)  Oktalyser (Atari)  Fasttracker  Fasttracker or Taketracker  this can also be Imago Orpheus 
Old (amiga) noteinfo:

_____byte 1_____   byte2_    _____byte 3_____   byte4_
/                \ /      \  /                \ /      \
0000          0000-00000000  0000          0000-00000000

Upper four    12 bits for    Lower four    Effect command.
bits of sam-  note period.   bits of sam-
ple number.                  ple number.

 extract the various information from the 4 bytes that make up a note  Convert the period to a note number  if instrument does not exist, note cut  Protracker handling  if we had a note, then change instrument...  ...otherwise, only adjust volume...  ...unless an effect was specified, which forces a new
					   note to be played  Fasttracker handling  Convert pattern jump from Dec to Hex  Volume slide, up has priority  Handle ``heavy'' volumes correctly  An isolated 100, 200 or 300 effect should be ignored (no
	   "standalone" porta memory in mod files). However, a sequence such
	   as 1XX, 100, 100, 100 is fine.  non existant effect  Loads all patterns of a modfile and converts them into the 3 byte format.  Allocate temporary buffer for loading and converting the patterns  Startrekker module dual pattern  Generic module pattern  Load the pattern into the temp buffer and convert it  try to read module header  just in case  just in case  this fixes mods which declare more than 128 positions.
	 * eg: beatwave.mod  set module variables  if module pretends to be FLT8, yet the order table
			   contains odd numbers, chances are it's a lying FLT4...  Count the number of patterns  since some old modules embed extra patterns, we have to check the
	   whole list to get the samples' file offsets right - however we can find
	   garbage here, so check carefully  Finally, init the sampleinfo structures   convert the samplename  init the sampleinfo variables and convert the size pointers  Imago Orpheus creates MODs with 16 bit samples, check  just in case ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Generic MOD loader (Protracker, StarTracker, FastTracker, etc)

======================================================================================== Module structure  22 in module, 23 in memory  the songname.. 20 in module, 21 in memory  all sampleinfo  number of patterns used  should be 127  which pattern to play at pos  string "M.K." or "FLT4" or "FLT8" ========== Loader variables ========== Loader code  given the module ID, determine the number of channels and the tracker
   description ; also alters modtype  Protracker and variants  Star Tracker  Oktalyzer (Amiga)  Oktalyser (Atari)  Fasttracker  Fasttracker or Taketracker  this can also be Imago Orpheus 
Old (amiga) noteinfo:

_____byte 1_____   byte2_    _____byte 3_____   byte4_
/                \ /      \  /                \ /      \
0000          0000-00000000  0000          0000-00000000

Upper four    12 bits for    Lower four    Effect command.
bits of sam-  note period.   bits of sam-
ple number.                  ple number.

 extract the various information from the 4 bytes that make up a note  Convert the period to a note number  if instrument does not exist, note cut  Protracker handling  if we had a note, then change instrument...  ...otherwise, only adjust volume...  ...unless an effect was specified, which forces a new
					   note to be played  Fasttracker handling  Convert pattern jump from Dec to Hex  Volume slide, up has priority  Handle ``heavy'' volumes correctly  An isolated 100, 200 or 300 effect should be ignored (no
	   "standalone" porta memory in mod files). However, a sequence such
	   as 1XX, 100, 100, 100 is fine.  non existant effect  Loads all patterns of a modfile and converts them into the 3 byte format.  Allocate temporary buffer for loading and converting the patterns  Startrekker module dual pattern  Generic module pattern  Load the pattern into the temp buffer and convert it  try to read module header  just in case  just in case  this fixes mods which declare more than 128 positions.
	 * eg: beatwave.mod  set module variables  if module pretends to be FLT8, yet the order table
			   contains odd numbers, chances are it's a lying FLT4...  Count the number of patterns  since some old modules embed extra patterns, we have to check the
	   whole list to get the samples' file offsets right - however we can find
	   garbage here, so check carefully  Finally, init the sampleinfo structures   convert the samplename  init the sampleinfo variables and convert the size pointers  Imago Orpheus creates MODs with 16 bit samples, check  just in case ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Generic MOD loader (Protracker, StarTracker, FastTracker, etc)

======================================================================================== Module structure  22 in module, 23 in memory  the songname.. 20 in module, 21 in memory  all sampleinfo  number of patterns used  should be 127  which pattern to play at pos  string "M.K." or "FLT4" or "FLT8" ========== Loader variables ========== Loader code  given the module ID, determine the number of channels and the tracker
   description ; also alters modtype  Protracker and variants  Star Tracker  Oktalyzer (Amiga)  Oktalyser (Atari)  Fasttracker  Fasttracker or Taketracker  this can also be Imago Orpheus 
Old (amiga) noteinfo:

_____byte 1_____   byte2_    _____byte 3_____   byte4_
/                \ /      \  /                \ /      \
0000          0000-00000000  0000          0000-00000000

Upper four    12 bits for    Lower four    Effect command.
bits of sam-  note period.   bits of sam-
ple number.                  ple number.

 extract the various information from the 4 bytes that make up a note  Convert the period to a note number  if instrument does not exist, note cut  Protracker handling  if we had a note, then change instrument...  ...otherwise, only adjust volume...  ...unless an effect was specified, which forces a new
					   note to be played  Fasttracker handling  Convert pattern jump from Dec to Hex  Volume slide, up has priority  Handle ``heavy'' volumes correctly  An isolated 100, 200 or 300 effect should be ignored (no
	   "standalone" porta memory in mod files). However, a sequence such
	   as 1XX, 100, 100, 100 is fine.  non existant effect  Loads all patterns of a modfile and converts them into the 3 byte format.  Allocate temporary buffer for loading and converting the patterns  Startrekker module dual pattern  Generic module pattern  Load the pattern into the temp buffer and convert it  try to read module header  just in case  just in case  this fixes mods which declare more than 128 positions.
	 * eg: beatwave.mod  set module variables  if module pretends to be FLT8, yet the order table
			   contains odd numbers, chances are it's a lying FLT4...  Count the number of patterns  since some old modules embed extra patterns, we have to check the
	   whole list to get the samples' file offsets right - however we can find
	   garbage here, so check carefully  Finally, init the sampleinfo structures   convert the samplename  init the sampleinfo variables and convert the size pointers  Imago Orpheus creates MODs with 16 bit samples, check  just in case ========== Loader information  ex:set ts=4: 