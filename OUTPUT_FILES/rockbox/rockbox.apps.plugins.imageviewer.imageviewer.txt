**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * user intereface of image viewer
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * TODO:
 *   - check magick value in file header to determine image type.
  Headings ****************************** Globals ********************************** Persistent configuration  Slideshow times  needed for value of settings *************** begin Application ******************************************* Globals ************************** Line buffer for scrolling when
                                           DITHER_DIFFUSION is set         buffer to load image decoder  the remaining free part of the buffer for loaded+resized images  downscaling and limits  the current full file name  list of the supported image files ************************ Implementation ************************** Read directory contents for scrolling.  Remove path and leave only the name. Add all files. Non-image files will be filtered out while loading.  Set Selected File.  remove 'erased' file names from list.  switch off overlay, for handling SYS_ events  HAVE_LCD_COLOR  return 1 to quit  change ata spindown time based on slideshow time setting  slideshow times < 10s keep disk spinning  slideshow times > 10s and not playing: ata_off after load try again this file, now using the audio buffer  USE_PLUG_BUF  callback updating a progress meter while image decoding  be nice to the other threads  in slideshow mode, keep gui interference to a minimum  Pan the viewing window right - move image to the left and fill in
   the right-hand side  scroll left  Pan the viewing window left - move image to the right and fill in
   the left-hand side  scroll right  Pan the viewing window up - move image down and fill in
   the top  scroll down  Draw over the band at the top of the last update
               caused by lack of error history on line zero.  Pan the viewing window down - move image up and fill in
   the bottom  scroll up  Save the line that was on the last line of the display
               and draw one extra line above then recover the line with
               image data that had an error history when it was drawn.
              Cover the first row drawn with previous image data.  interactively scroll around the image  animated content and delay between subsequent frames
                 * is shorter then slideshow delay
                  animations  still picture  switch off greyscale overlay  switch on greyscale overlay  switch  while (true) ******************** main function ************************ how far can we zoom in without running out of memory  error, too large, even 1:8 doesn't fit  how far can we zoom out, to fit image into the LCD  set the view to the given center point, limit if necessary  plain center to available width/height  limit against upper image size  limit against negative side  set the values  calculate the view center based on the bitmap position  load, decode, display the image  suppress warning while running slideshow  file isn't supported image file, skip this.  type of image is changed, load decoder.  something is wrong  check display constraint  check memory constraint  Can not resize the image but original one is available, so use it.  initialize setting  center the view  used to loop through subimages in animated gifs  loop the image prepare and decoding when zoomed  decode or fetch from cache  switch on greyscale overlay  drawing is now finished, play around with scrolling
         * until you press OFF or connect USB
          if 1/1 is always available, jump ds from ds_min to 1.  reduce downscaling to zoom in  prepare the position in the new image  if ds is 1 and ds_min is > 1, jump ds to ds_min.  increase downscaling to zoom out  prepare the position in the new image  next frame in animated content  switch off overlay ******************* Plugin entry point ******************** helper  should be ok to just load settings since the plugin itself has
       just been loaded from disk and the drive should be spinning  Turn off backlight timeout  Just in case drive has to spin, keep it from looking locked  set back ata spindown time in case we changed it  Turn on backlight timeout (revert to settings)  deinitialize **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * user intereface of image viewer
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * TODO:
 *   - check magick value in file header to determine image type.
  Headings ****************************** Globals ********************************** Persistent configuration  Slideshow times  needed for value of settings *************** begin Application ******************************************* Globals ************************** Line buffer for scrolling when
                                           DITHER_DIFFUSION is set         buffer to load image decoder  the remaining free part of the buffer for loaded+resized images  downscaling and limits  the current full file name  list of the supported image files ************************ Implementation ************************** Read directory contents for scrolling.  Remove path and leave only the name. Add all files. Non-image files will be filtered out while loading.  Set Selected File.  remove 'erased' file names from list.  switch off overlay, for handling SYS_ events  HAVE_LCD_COLOR  return 1 to quit  change ata spindown time based on slideshow time setting  slideshow times < 10s keep disk spinning  slideshow times > 10s and not playing: ata_off after load try again this file, now using the audio buffer  USE_PLUG_BUF  callback updating a progress meter while image decoding  be nice to the other threads  in slideshow mode, keep gui interference to a minimum  Pan the viewing window right - move image to the left and fill in
   the right-hand side  scroll left  Pan the viewing window left - move image to the right and fill in
   the left-hand side  scroll right  Pan the viewing window up - move image down and fill in
   the top  scroll down  Draw over the band at the top of the last update
               caused by lack of error history on line zero.  Pan the viewing window down - move image up and fill in
   the bottom  scroll up  Save the line that was on the last line of the display
               and draw one extra line above then recover the line with
               image data that had an error history when it was drawn.
              Cover the first row drawn with previous image data.  interactively scroll around the image  animated content and delay between subsequent frames
                 * is shorter then slideshow delay
                  animations  still picture  switch off greyscale overlay  switch on greyscale overlay  switch  while (true) ******************** main function ************************ how far can we zoom in without running out of memory  error, too large, even 1:8 doesn't fit  how far can we zoom out, to fit image into the LCD  set the view to the given center point, limit if necessary  plain center to available width/height  limit against upper image size  limit against negative side  set the values  calculate the view center based on the bitmap position  load, decode, display the image  suppress warning while running slideshow  file isn't supported image file, skip this.  type of image is changed, load decoder.  something is wrong  check display constraint  check memory constraint  Can not resize the image but original one is available, so use it.  initialize setting  center the view  used to loop through subimages in animated gifs  loop the image prepare and decoding when zoomed  decode or fetch from cache  switch on greyscale overlay  drawing is now finished, play around with scrolling
         * until you press OFF or connect USB
          if 1/1 is always available, jump ds from ds_min to 1.  reduce downscaling to zoom in  prepare the position in the new image  if ds is 1 and ds_min is > 1, jump ds to ds_min.  increase downscaling to zoom out  prepare the position in the new image  next frame in animated content  switch off overlay ******************* Plugin entry point ******************** helper  should be ok to just load settings since the plugin itself has
       just been loaded from disk and the drive should be spinning  Turn off backlight timeout  Just in case drive has to spin, keep it from looking locked  set back ata spindown time in case we changed it  Turn on backlight timeout (revert to settings)  deinitialize **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * user intereface of image viewer
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * TODO:
 *   - check magick value in file header to determine image type.
  Headings ****************************** Globals ********************************** Persistent configuration  Slideshow times  needed for value of settings *************** begin Application ******************************************* Globals ************************** Line buffer for scrolling when
                                           DITHER_DIFFUSION is set         buffer to load image decoder  the remaining free part of the buffer for loaded+resized images  downscaling and limits  the current full file name  list of the supported image files ************************ Implementation ************************** Read directory contents for scrolling.  Remove path and leave only the name. Add all files. Non-image files will be filtered out while loading.  Set Selected File.  remove 'erased' file names from list.  switch off overlay, for handling SYS_ events  HAVE_LCD_COLOR  return 1 to quit  change ata spindown time based on slideshow time setting  slideshow times < 10s keep disk spinning  slideshow times > 10s and not playing: ata_off after load try again this file, now using the audio buffer  USE_PLUG_BUF  callback updating a progress meter while image decoding  be nice to the other threads  in slideshow mode, keep gui interference to a minimum  Pan the viewing window right - move image to the left and fill in
   the right-hand side  scroll left  Pan the viewing window left - move image to the right and fill in
   the left-hand side  scroll right  Pan the viewing window up - move image down and fill in
   the top  scroll down  Draw over the band at the top of the last update
               caused by lack of error history on line zero.  Pan the viewing window down - move image up and fill in
   the bottom  scroll up  Save the line that was on the last line of the display
               and draw one extra line above then recover the line with
               image data that had an error history when it was drawn.
              Cover the first row drawn with previous image data.  interactively scroll around the image  animated content and delay between subsequent frames
                 * is shorter then slideshow delay
                  animations  still picture  switch off greyscale overlay  switch on greyscale overlay  switch  while (true) ******************** main function ************************ how far can we zoom in without running out of memory  error, too large, even 1:8 doesn't fit  how far can we zoom out, to fit image into the LCD  set the view to the given center point, limit if necessary  plain center to available width/height  limit against upper image size  limit against negative side  set the values  calculate the view center based on the bitmap position  load, decode, display the image  suppress warning while running slideshow  file isn't supported image file, skip this.  type of image is changed, load decoder.  something is wrong  check display constraint  check memory constraint  Can not resize the image but original one is available, so use it.  initialize setting  center the view  used to loop through subimages in animated gifs  loop the image prepare and decoding when zoomed  decode or fetch from cache  switch on greyscale overlay  drawing is now finished, play around with scrolling
         * until you press OFF or connect USB
          if 1/1 is always available, jump ds from ds_min to 1.  reduce downscaling to zoom in  prepare the position in the new image  if ds is 1 and ds_min is > 1, jump ds to ds_min.  increase downscaling to zoom out  prepare the position in the new image  next frame in animated content  switch off overlay ******************* Plugin entry point ******************** helper  should be ok to just load settings since the plugin itself has
       just been loaded from disk and the drive should be spinning  Turn off backlight timeout  Just in case drive has to spin, keep it from looking locked  set back ata spindown time in case we changed it  Turn on backlight timeout (revert to settings)  deinitialize 