**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Rockbox driver for iPod LCDs
 *
 * Based on code from the ipodlinux project - http://ipodlinux.org/
 * Adapted for Rockbox in November 2005
 *
 * Original file: linux/arch/armnommu/mach-ipod/fb.c
 *
 * Copyright (c) 2003-2005 Bernard Leach (leachbj@bouncycastle.org)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** LCD command codes for HD66789R ** globals ** 0,2 = "old" Color/Photo; 1,3 = similar to HD66789R  16 bit transfers ** hardware configuration ** TODO: Implement lcd_set_contrast()  this has only been tested on the ipod nano  turn the display upside down (call lcd_update() afterwards)  TODO: Implement lcd_set_flip()  LCD init  iPodLinux doesn't appear have any LCD init code for the Nano  Immediately switch off the backlight to avoid flashing.  lcd_type 0 and 2  lcd_type 1  lcd_type 3  Helper function to set up drawing region and start drawing  calculate the drawing region  start horiz  max horiz  start vert  max vert  start vert  end vert  end horiz  start horiz  setup the drawing region  x0 and x1 need to be swapped until 
         * proper direction setup is added  start vert  start horiz  end vert  end horiz  max horiz << 8 | start horiz  max vert << 8 | start vert  start vert = max vert  position cursor (set AD0-AD15)  start vert << 8 | start horiz  start drawing  Line write helper function for lcd_yuv_blit. Writes two lines of yuv420.  Performance function to blit a YUV bitmap directly to the LCD  ensure width is even   ensure height is even  calculate how much we can do in one go  ensure h is even  lcd_write_yuv420_lines writes two lines at once  transfer of pixels_to_write bytes finished  Helper function writes 'count' consecutive pixels from src to LCD IF  FIFO wait  output 2 pixels  Update a fraction of the display.  Ensure both x and width are even to be able to read 32-bit aligned 
     * data from lcd_framebuffer  use the smaller even number  use the bigger even number   calculate how much we can do in one go  ensure h is even  for each row and column in a single call  for each row  transfer of pixels_to_write bytes finished  Update the display.
   This must be called after all other LCD functions that change the display. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Rockbox driver for iPod LCDs
 *
 * Based on code from the ipodlinux project - http://ipodlinux.org/
 * Adapted for Rockbox in November 2005
 *
 * Original file: linux/arch/armnommu/mach-ipod/fb.c
 *
 * Copyright (c) 2003-2005 Bernard Leach (leachbj@bouncycastle.org)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** LCD command codes for HD66789R ** globals ** 0,2 = "old" Color/Photo; 1,3 = similar to HD66789R  16 bit transfers ** hardware configuration ** TODO: Implement lcd_set_contrast()  this has only been tested on the ipod nano  turn the display upside down (call lcd_update() afterwards)  TODO: Implement lcd_set_flip()  LCD init  iPodLinux doesn't appear have any LCD init code for the Nano  Immediately switch off the backlight to avoid flashing.  lcd_type 0 and 2  lcd_type 1  lcd_type 3  Helper function to set up drawing region and start drawing  calculate the drawing region  start horiz  max horiz  start vert  max vert  start vert  end vert  end horiz  start horiz  setup the drawing region  x0 and x1 need to be swapped until 
         * proper direction setup is added  start vert  start horiz  end vert  end horiz  max horiz << 8 | start horiz  max vert << 8 | start vert  start vert = max vert  position cursor (set AD0-AD15)  start vert << 8 | start horiz  start drawing  Line write helper function for lcd_yuv_blit. Writes two lines of yuv420.  Performance function to blit a YUV bitmap directly to the LCD  ensure width is even   ensure height is even  calculate how much we can do in one go  ensure h is even  lcd_write_yuv420_lines writes two lines at once  transfer of pixels_to_write bytes finished  Helper function writes 'count' consecutive pixels from src to LCD IF  FIFO wait  output 2 pixels  Update a fraction of the display.  Ensure both x and width are even to be able to read 32-bit aligned 
     * data from lcd_framebuffer  use the smaller even number  use the bigger even number   calculate how much we can do in one go  ensure h is even  for each row and column in a single call  for each row  transfer of pixels_to_write bytes finished  Update the display.
   This must be called after all other LCD functions that change the display. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Rockbox driver for iPod LCDs
 *
 * Based on code from the ipodlinux project - http://ipodlinux.org/
 * Adapted for Rockbox in November 2005
 *
 * Original file: linux/arch/armnommu/mach-ipod/fb.c
 *
 * Copyright (c) 2003-2005 Bernard Leach (leachbj@bouncycastle.org)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** LCD command codes for HD66789R ** globals ** 0,2 = "old" Color/Photo; 1,3 = similar to HD66789R  16 bit transfers ** hardware configuration ** TODO: Implement lcd_set_contrast()  this has only been tested on the ipod nano  turn the display upside down (call lcd_update() afterwards)  TODO: Implement lcd_set_flip()  LCD init  iPodLinux doesn't appear have any LCD init code for the Nano  Immediately switch off the backlight to avoid flashing.  lcd_type 0 and 2  lcd_type 1  lcd_type 3  Helper function to set up drawing region and start drawing  calculate the drawing region  start horiz  max horiz  start vert  max vert  start vert  end vert  end horiz  start horiz  setup the drawing region  x0 and x1 need to be swapped until 
         * proper direction setup is added  start vert  start horiz  end vert  end horiz  max horiz << 8 | start horiz  max vert << 8 | start vert  start vert = max vert  position cursor (set AD0-AD15)  start vert << 8 | start horiz  start drawing  Line write helper function for lcd_yuv_blit. Writes two lines of yuv420.  Performance function to blit a YUV bitmap directly to the LCD  ensure width is even   ensure height is even  calculate how much we can do in one go  ensure h is even  lcd_write_yuv420_lines writes two lines at once  transfer of pixels_to_write bytes finished  Helper function writes 'count' consecutive pixels from src to LCD IF  FIFO wait  output 2 pixels  Update a fraction of the display.  Ensure both x and width are even to be able to read 32-bit aligned 
     * data from lcd_framebuffer  use the smaller even number  use the bigger even number   calculate how much we can do in one go  ensure h is even  for each row and column in a single call  for each row  transfer of pixels_to_write bytes finished  Update the display.
   This must be called after all other LCD functions that change the display. 