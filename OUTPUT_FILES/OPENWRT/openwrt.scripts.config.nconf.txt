 SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done  SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done  SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done  SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done  SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done  SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done  SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done  SPDX-License-Identifier: GPL-2.0
 * Copyright (C) 2008 Nir Tzachar <nir.tzachar@gmail.com>
 *
 * Derived from menuconfig.
  the window in which all information appears  the largest size of the menu window  the window in which we show option buttons  the currently selected button  help  symbole help  instructions  config  back  save  load  search  exit  return != 0 to indicate the key was handles  return the index of the matched item, or -1 if no such item exists  Make a new item. 
	if (!k_menu_items[items_num].is_visible)
		item_opts_off(curses_menu_items[items_num], O_SELECTABLE);
	 very hackish. adds a string to the last item added  get the tag of the currently selected item  return = 0 means we are successful.
 * -1 means go on doing what you were doing
  if we got here, the user really wants to exit  strip the prefix if necessary  adjust the menu to show this item.
 * prefer not to scroll the menu if possible this function assumes reset_menu has been called before  position the menu at the middle of the screen  must reassert this after changing items, otherwise returns to a
	 * default of 16
	  Post the menu  else, do no change..  Return 0 means I have handled the key. In such a case, ans should hold the
 * item to center, or -1 otherwise.
 * Else return -1 .
  if ESC or left remember location in the menu  ENTER WAS PRESSED  this is mostly duplicated from the conf() function.  if ESC or left  set up the menu and menu window  panels order is from bottom to top  Silence conf_read() until the real callback is set up  Initialize curses  set color theme  set btns menu  check for KEY_FUNC(1)  do the work  ok, we are done 