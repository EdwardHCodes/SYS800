
** $Id: lobject.c,v 2.22.1.1 2007/12/27 13:02:25 roberto Exp $
** Some generic functions over Lua objects
** See Copyright Notice in lua.h

** converts an integer to a "floating point byte", represented as
** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if
** eeeee != 0 and (xxx) otherwise.
 expoent  converts back  boolean true must be 1 !!  conversion failed  maybe an hexadecimal constant?  most common case  invalid trailing characters?  ROCKLUA ADDED -- Retrieves C string from TString  this function handles only `%d', `%c', %f, %p, and `%s' formats  should be enough space for a `%p'  lua 5.2 lobject.c,v 2.58.1.1 2013/04/12 18:48:47 roberto Exp $  number of chars of a literal string without the ending \0  'literal' source  small enough?  truncate it  file name  small enough?  add '...' before rest of name  string; format as [string "source"]  find first new line (if any)  add prefix  save space for prefix+suffix+'\0'  small one-line source?  keep it  stop at first newline 
** $Id: lobject.c,v 2.22.1.1 2007/12/27 13:02:25 roberto Exp $
** Some generic functions over Lua objects
** See Copyright Notice in lua.h

** converts an integer to a "floating point byte", represented as
** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if
** eeeee != 0 and (xxx) otherwise.
 expoent  converts back  boolean true must be 1 !!  conversion failed  maybe an hexadecimal constant?  most common case  invalid trailing characters?  ROCKLUA ADDED -- Retrieves C string from TString  this function handles only `%d', `%c', %f, %p, and `%s' formats  should be enough space for a `%p'  lua 5.2 lobject.c,v 2.58.1.1 2013/04/12 18:48:47 roberto Exp $  number of chars of a literal string without the ending \0  'literal' source  small enough?  truncate it  file name  small enough?  add '...' before rest of name  string; format as [string "source"]  find first new line (if any)  add prefix  save space for prefix+suffix+'\0'  small one-line source?  keep it  stop at first newline 
** $Id: lobject.c,v 2.22.1.1 2007/12/27 13:02:25 roberto Exp $
** Some generic functions over Lua objects
** See Copyright Notice in lua.h

** converts an integer to a "floating point byte", represented as
** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if
** eeeee != 0 and (xxx) otherwise.
 expoent  converts back  boolean true must be 1 !!  conversion failed  maybe an hexadecimal constant?  most common case  invalid trailing characters?  ROCKLUA ADDED -- Retrieves C string from TString  this function handles only `%d', `%c', %f, %p, and `%s' formats  should be enough space for a `%p'  lua 5.2 lobject.c,v 2.58.1.1 2013/04/12 18:48:47 roberto Exp $  number of chars of a literal string without the ending \0  'literal' source  small enough?  truncate it  file name  small enough?  add '...' before rest of name  string; format as [string "source"]  find first new line (if any)  add prefix  save space for prefix+suffix+'\0'  small one-line source?  keep it  stop at first newline 