 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Action routines for lighting thinkers
 *  Spawn sector based lighting effects.
 *  Handle lighting linedef types
 *
 *-----------------------------------------------------------------------------jff 5/18/98//////////////////////////////////////////////////////// Lighting action routines, called once per tick//////////////////////////////////////////////////////// T_FireFlicker() Firelight flicker action routine, called once per tick Passed a fireflicker_t structure containing light levels and timing Returns nothing T_LightFlash() Broken light flashing action routine, called once per tick Passed a lightflash_t structure containing light levels and timing Returns nothing T_StrobeFlash() Strobe light flashing action routine, called once per tick Passed a strobe_t structure containing light levels and timing Returns nothing T_Glow() Glowing light action routine, called once per tick Passed a glow_t structure containing light levels and timing Returns nothing light dims light brightens//////////////////////////////////////////////////////// Sector lighting type spawners After the map has been loaded, each sector is scanned for specials that spawn thinkers//////////////////////////////////////////////////////// P_SpawnFireFlicker() Spawns a fire flicker lighting thinker Passed the sector that spawned the thinker Returns nothing Note that we are resetting sector attributes. Nothing special about it during gameplay.jff 3/14/98 clear non-generalized sector type P_SpawnLightFlash() Spawns a broken light flash lighting thinker Passed the sector that spawned the thinker Returns nothing nothing special about it during gameplayjff 3/14/98 clear non-generalized sector type P_SpawnStrobeFlash Spawns a blinking light thinker Passed the sector that spawned the thinker, speed of blinking and whether blinking is to by syncrhonous with other sectors Returns nothing nothing special about it during gameplayjff 3/14/98 clear non-generalized sector type P_SpawnGlowingLight() Spawns a glowing light (smooth oscillation from min to max) thinker Passed the sector that spawned the thinker Returns nothingjff 3/14/98 clear non-generalized sector type//////////////////////////////////////////////////////// Linedef lighting function handlers//////////////////////////////////////////////////////// EV_StartLightStrobing() Start strobing lights (usually from a trigger) Passed the line that activated the strobing Returns true jff 2/12/98 added int return value, fixed return start lights strobing in all sectors tagged same as line if already doing a lighting function, don't start a secondjff 2/22/98 EV_TurnTagLightsOff() Turn line's tagged sector's lights to min adjacent neighbor level Passed the line that activated the lights being turned off Returns true jff 2/12/98 added int return value, fixed return search sectors for those with same tag as activating line killough 10/98: replaced inefficient search with fast search find min neighbor light level EV_LightTurnOn() Turn sectors tagged to line lights on to specified or max neighbor level Passed the activating line, and a level to set the light to If level passed is 0, the maximum neighbor lighting is used Returns true jff 2/12/98 added int return value, fixed return search all sectors for ones with same tag as activating line killough 10/98: replace inefficient search with fast searchjff 5/17/98 search for maximum PER sector bright = 0 means to search for highest light level surrounding sectorjff 5/17/98 unless compatibility optionedthen maximum near ANY tagged sector killough 10/98:
 *
 * EV_LightTurnOnPartway()
 *
 * Turn sectors tagged to line lights on to specified or max neighbor level
 *
 * Passed the activating line, and a light level fraction between 0 and 1.
 * Sets the light to min on 0, max on 1, and interpolates in-between.
 * Used for doors with gradual lighting effects.
 *
 * Returns true
  clip at extremes search all sectors for ones with same tag as activating line Set level in-between extremes Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Action routines for lighting thinkers
 *  Spawn sector based lighting effects.
 *  Handle lighting linedef types
 *
 *-----------------------------------------------------------------------------jff 5/18/98//////////////////////////////////////////////////////// Lighting action routines, called once per tick//////////////////////////////////////////////////////// T_FireFlicker() Firelight flicker action routine, called once per tick Passed a fireflicker_t structure containing light levels and timing Returns nothing T_LightFlash() Broken light flashing action routine, called once per tick Passed a lightflash_t structure containing light levels and timing Returns nothing T_StrobeFlash() Strobe light flashing action routine, called once per tick Passed a strobe_t structure containing light levels and timing Returns nothing T_Glow() Glowing light action routine, called once per tick Passed a glow_t structure containing light levels and timing Returns nothing light dims light brightens//////////////////////////////////////////////////////// Sector lighting type spawners After the map has been loaded, each sector is scanned for specials that spawn thinkers//////////////////////////////////////////////////////// P_SpawnFireFlicker() Spawns a fire flicker lighting thinker Passed the sector that spawned the thinker Returns nothing Note that we are resetting sector attributes. Nothing special about it during gameplay.jff 3/14/98 clear non-generalized sector type P_SpawnLightFlash() Spawns a broken light flash lighting thinker Passed the sector that spawned the thinker Returns nothing nothing special about it during gameplayjff 3/14/98 clear non-generalized sector type P_SpawnStrobeFlash Spawns a blinking light thinker Passed the sector that spawned the thinker, speed of blinking and whether blinking is to by syncrhonous with other sectors Returns nothing nothing special about it during gameplayjff 3/14/98 clear non-generalized sector type P_SpawnGlowingLight() Spawns a glowing light (smooth oscillation from min to max) thinker Passed the sector that spawned the thinker Returns nothingjff 3/14/98 clear non-generalized sector type//////////////////////////////////////////////////////// Linedef lighting function handlers//////////////////////////////////////////////////////// EV_StartLightStrobing() Start strobing lights (usually from a trigger) Passed the line that activated the strobing Returns true jff 2/12/98 added int return value, fixed return start lights strobing in all sectors tagged same as line if already doing a lighting function, don't start a secondjff 2/22/98 EV_TurnTagLightsOff() Turn line's tagged sector's lights to min adjacent neighbor level Passed the line that activated the lights being turned off Returns true jff 2/12/98 added int return value, fixed return search sectors for those with same tag as activating line killough 10/98: replaced inefficient search with fast search find min neighbor light level EV_LightTurnOn() Turn sectors tagged to line lights on to specified or max neighbor level Passed the activating line, and a level to set the light to If level passed is 0, the maximum neighbor lighting is used Returns true jff 2/12/98 added int return value, fixed return search all sectors for ones with same tag as activating line killough 10/98: replace inefficient search with fast searchjff 5/17/98 search for maximum PER sector bright = 0 means to search for highest light level surrounding sectorjff 5/17/98 unless compatibility optionedthen maximum near ANY tagged sector killough 10/98:
 *
 * EV_LightTurnOnPartway()
 *
 * Turn sectors tagged to line lights on to specified or max neighbor level
 *
 * Passed the activating line, and a light level fraction between 0 and 1.
 * Sets the light to min on 0, max on 1, and interpolates in-between.
 * Used for doors with gradual lighting effects.
 *
 * Returns true
  clip at extremes search all sectors for ones with same tag as activating line Set level in-between extremes Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Action routines for lighting thinkers
 *  Spawn sector based lighting effects.
 *  Handle lighting linedef types
 *
 *-----------------------------------------------------------------------------jff 5/18/98//////////////////////////////////////////////////////// Lighting action routines, called once per tick//////////////////////////////////////////////////////// T_FireFlicker() Firelight flicker action routine, called once per tick Passed a fireflicker_t structure containing light levels and timing Returns nothing T_LightFlash() Broken light flashing action routine, called once per tick Passed a lightflash_t structure containing light levels and timing Returns nothing T_StrobeFlash() Strobe light flashing action routine, called once per tick Passed a strobe_t structure containing light levels and timing Returns nothing T_Glow() Glowing light action routine, called once per tick Passed a glow_t structure containing light levels and timing Returns nothing light dims light brightens//////////////////////////////////////////////////////// Sector lighting type spawners After the map has been loaded, each sector is scanned for specials that spawn thinkers//////////////////////////////////////////////////////// P_SpawnFireFlicker() Spawns a fire flicker lighting thinker Passed the sector that spawned the thinker Returns nothing Note that we are resetting sector attributes. Nothing special about it during gameplay.jff 3/14/98 clear non-generalized sector type P_SpawnLightFlash() Spawns a broken light flash lighting thinker Passed the sector that spawned the thinker Returns nothing nothing special about it during gameplayjff 3/14/98 clear non-generalized sector type P_SpawnStrobeFlash Spawns a blinking light thinker Passed the sector that spawned the thinker, speed of blinking and whether blinking is to by syncrhonous with other sectors Returns nothing nothing special about it during gameplayjff 3/14/98 clear non-generalized sector type P_SpawnGlowingLight() Spawns a glowing light (smooth oscillation from min to max) thinker Passed the sector that spawned the thinker Returns nothingjff 3/14/98 clear non-generalized sector type//////////////////////////////////////////////////////// Linedef lighting function handlers//////////////////////////////////////////////////////// EV_StartLightStrobing() Start strobing lights (usually from a trigger) Passed the line that activated the strobing Returns true jff 2/12/98 added int return value, fixed return start lights strobing in all sectors tagged same as line if already doing a lighting function, don't start a secondjff 2/22/98 EV_TurnTagLightsOff() Turn line's tagged sector's lights to min adjacent neighbor level Passed the line that activated the lights being turned off Returns true jff 2/12/98 added int return value, fixed return search sectors for those with same tag as activating line killough 10/98: replaced inefficient search with fast search find min neighbor light level EV_LightTurnOn() Turn sectors tagged to line lights on to specified or max neighbor level Passed the activating line, and a level to set the light to If level passed is 0, the maximum neighbor lighting is used Returns true jff 2/12/98 added int return value, fixed return search all sectors for ones with same tag as activating line killough 10/98: replace inefficient search with fast searchjff 5/17/98 search for maximum PER sector bright = 0 means to search for highest light level surrounding sectorjff 5/17/98 unless compatibility optionedthen maximum near ANY tagged sector killough 10/98:
 *
 * EV_LightTurnOnPartway()
 *
 * Turn sectors tagged to line lights on to specified or max neighbor level
 *
 * Passed the activating line, and a light level fraction between 0 and 1.
 * Sets the light to min on 0, max on 1, and interpolates in-between.
 * Used for doors with gradual lighting effects.
 *
 * Returns true
  clip at extremes search all sectors for ones with same tag as activating line Set level in-between extremes