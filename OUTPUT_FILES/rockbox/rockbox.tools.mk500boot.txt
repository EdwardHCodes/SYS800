**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 *   Copyright (C) 2009 by Karl Kurbjun  
 *   $Id$
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** This is the patch necessary for the SVG exploit (decrypted)  This is a fake flag that is used to let the tool know what's up  This is a demonstration of the encryption and decryption process.
 *  It patches a FW image to include the SVG exploit.
  Initialize encryption/decryption routine  Read in the header of the encrypted file  Read CRC of encrypted file  Display the header information ********************************************************************
        *  Save a decrypted file
        ********************************************************************* Check to make sure this is a encrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Set a bogus flag to let the tool know that this is a decrypted file Start by writing out the header  Read encrypted data and save decrypted data  Calculate CRC of decrypted data  Double check to make sure that the two CRCs match  Save the calculated CRC to the file *********************************************************************
         *  Patch decryped file with SVG exploit
         ********************************************************************* Read in the header of the encrypted file  Check to make sure this is a decrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Calculate the 'CRC' of the patched file  Store the calculated 'CRC' (not encrypted) *********************************************************************
         *  Save an encrypted file
         ********************************************************************* Read in the header of the encrypted file  Check to make sure this is a decrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Remove the bogus flag  Header is not encrypted, save it  Read CRC of decrypted file  Calculate the 'CRC' of the decrypted data  Write the encrypted data to a file  Store the calculated 'CRC' (not encrypted) **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 *   Copyright (C) 2009 by Karl Kurbjun  
 *   $Id$
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** This is the patch necessary for the SVG exploit (decrypted)  This is a fake flag that is used to let the tool know what's up  This is a demonstration of the encryption and decryption process.
 *  It patches a FW image to include the SVG exploit.
  Initialize encryption/decryption routine  Read in the header of the encrypted file  Read CRC of encrypted file  Display the header information ********************************************************************
        *  Save a decrypted file
        ********************************************************************* Check to make sure this is a encrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Set a bogus flag to let the tool know that this is a decrypted file Start by writing out the header  Read encrypted data and save decrypted data  Calculate CRC of decrypted data  Double check to make sure that the two CRCs match  Save the calculated CRC to the file *********************************************************************
         *  Patch decryped file with SVG exploit
         ********************************************************************* Read in the header of the encrypted file  Check to make sure this is a decrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Calculate the 'CRC' of the patched file  Store the calculated 'CRC' (not encrypted) *********************************************************************
         *  Save an encrypted file
         ********************************************************************* Read in the header of the encrypted file  Check to make sure this is a decrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Remove the bogus flag  Header is not encrypted, save it  Read CRC of decrypted file  Calculate the 'CRC' of the decrypted data  Write the encrypted data to a file  Store the calculated 'CRC' (not encrypted) **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 *   Copyright (C) 2009 by Karl Kurbjun  
 *   $Id$
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** This is the patch necessary for the SVG exploit (decrypted)  This is a fake flag that is used to let the tool know what's up  This is a demonstration of the encryption and decryption process.
 *  It patches a FW image to include the SVG exploit.
  Initialize encryption/decryption routine  Read in the header of the encrypted file  Read CRC of encrypted file  Display the header information ********************************************************************
        *  Save a decrypted file
        ********************************************************************* Check to make sure this is a encrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Set a bogus flag to let the tool know that this is a decrypted file Start by writing out the header  Read encrypted data and save decrypted data  Calculate CRC of decrypted data  Double check to make sure that the two CRCs match  Save the calculated CRC to the file *********************************************************************
         *  Patch decryped file with SVG exploit
         ********************************************************************* Read in the header of the encrypted file  Check to make sure this is a decrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Calculate the 'CRC' of the patched file  Store the calculated 'CRC' (not encrypted) *********************************************************************
         *  Save an encrypted file
         ********************************************************************* Read in the header of the encrypted file  Check to make sure this is a decrypted file (bogus flag not set)  Check to make sure MAGIC string matches expected Remove the bogus flag  Header is not encrypted, save it  Read CRC of decrypted file  Calculate the 'CRC' of the decrypted data  Write the encrypted data to a file  Store the calculated 'CRC' (not encrypted) 