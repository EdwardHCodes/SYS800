 Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   SIMULATOR  ROCKBOX  for read/write to files  ROCKBOX  see also the "plot" object in g_scalar.c which deals with graphing
arrays which are fields in scalars.  Someday we should unify the
two, but how?  aux routine to bash leading '#' to '$' for dialogs in u_main.tk
    which can't send symbols starting with '$' (because the Pd message
    interpreter would change them!)  --------- "pure" arrays with scalars for elements. ---------------  Pure arrays have no a priori graphical capabilities.
They are instantiated by "garrays" below or can be elements of other
scalars (g_scalar.c); their graphical behavior is defined accordingly.  note here we blithely copy a gpointer instead of "setting" a
	new one; this gpointer isn't accounted for and needn't be since
	we'll be deleted before the thing pointed to gets deleted anyway;
	see array_free.  we don't unset our gpointer here since it was never "set."  gpointer_unset(&x->a_gp);  --------------------- graphical arrays (garrays) -------------------  actual array; note only 4 fields used as below  name with "$" expanded  X value of first item  X increment  true if some DSP routine is using this  true if we should save this with parent  macros to get into the "array" structure  we can't have array or list elements yet because what scalar
	    can act as their "parent"???  LATER should check that malloc  LATER make methods to set this...  called from array menu item to create a new one  ROCKBOX  ROCKBOX  called from graph_dialog to set properties  ROCKBOX  create dialog window.  LATER fix this to escape '$'
	properly; right now we just detect a leading '$' and escape
	it.  There should be a systematic way of doing this.  ROCKBOX  this is called back from the dialog window to create a garray. 
    The otherflag requests that we find an existing graph to put it in.  t_garray *a; unused  a =  this is called from the properties dialog window for an existing array  LATER find a way to get #A unbound earlier (at end of load?)  ------------- code used by both array and plot widget functions ----  routine to get screen coordinates of a point in an array  found "w" field which controls linewidth.  LATER protect against the template changing or the scalar disappearing
    probably by attaching a gpointer here ...  it's an x, y plot; can drag many points at once  a y-only plot.  if it has more than 2000 points, just check 300 of them.  add truncation error margin  delete a point  add a point (after the clicked-on one)  -------------------- widget behavior for garray ------------  if it has more than 2000 points, just check 300 of them.  ROCKBOX  ROCKBOX  refuse  ROCKBOX  ROCKBOX  fill in later  nothing to do  TK will complain if there aren't at least 2 points...  SIMULATOR  ROCKBOX  ROCKBOX  ----------------------- public functions --------------------  This functiopn gets the template of an array; if we can't figure
   out what template an array's elements belong to we're in grave trouble
   when it's time to free or resize it.   get the length  get the contents  routine that checks if we're just an array of floats and if
    so returns the goods  get any floating-point field of any element of an array  set the "saveit" flag ------------------- Pd messages ------------------------  sum of Fourier components; called from routines below  dunno what a good default would be...  list -- the first value is an index; subsequent values are put in
    the "y" slot of the array.  This generalizes Max's "table", sort of.  drop negative x values  forward a "bounds" message to the owning graph  same for "xticks", etc  change the name of a garray.  this should be renamed and moved...  ROCKBOX  ROCKBOX  wave format only so far  wave is only little endian  LATER should check t_resizebytes result  if this is the only array in the graph,
    	    reset the graph's coordinates  close any dialogs that might have the wrong info now...  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   SIMULATOR  ROCKBOX  for read/write to files  ROCKBOX  see also the "plot" object in g_scalar.c which deals with graphing
arrays which are fields in scalars.  Someday we should unify the
two, but how?  aux routine to bash leading '#' to '$' for dialogs in u_main.tk
    which can't send symbols starting with '$' (because the Pd message
    interpreter would change them!)  --------- "pure" arrays with scalars for elements. ---------------  Pure arrays have no a priori graphical capabilities.
They are instantiated by "garrays" below or can be elements of other
scalars (g_scalar.c); their graphical behavior is defined accordingly.  note here we blithely copy a gpointer instead of "setting" a
	new one; this gpointer isn't accounted for and needn't be since
	we'll be deleted before the thing pointed to gets deleted anyway;
	see array_free.  we don't unset our gpointer here since it was never "set."  gpointer_unset(&x->a_gp);  --------------------- graphical arrays (garrays) -------------------  actual array; note only 4 fields used as below  name with "$" expanded  X value of first item  X increment  true if some DSP routine is using this  true if we should save this with parent  macros to get into the "array" structure  we can't have array or list elements yet because what scalar
	    can act as their "parent"???  LATER should check that malloc  LATER make methods to set this...  called from array menu item to create a new one  ROCKBOX  ROCKBOX  called from graph_dialog to set properties  ROCKBOX  create dialog window.  LATER fix this to escape '$'
	properly; right now we just detect a leading '$' and escape
	it.  There should be a systematic way of doing this.  ROCKBOX  this is called back from the dialog window to create a garray. 
    The otherflag requests that we find an existing graph to put it in.  t_garray *a; unused  a =  this is called from the properties dialog window for an existing array  LATER find a way to get #A unbound earlier (at end of load?)  ------------- code used by both array and plot widget functions ----  routine to get screen coordinates of a point in an array  found "w" field which controls linewidth.  LATER protect against the template changing or the scalar disappearing
    probably by attaching a gpointer here ...  it's an x, y plot; can drag many points at once  a y-only plot.  if it has more than 2000 points, just check 300 of them.  add truncation error margin  delete a point  add a point (after the clicked-on one)  -------------------- widget behavior for garray ------------  if it has more than 2000 points, just check 300 of them.  ROCKBOX  ROCKBOX  refuse  ROCKBOX  ROCKBOX  fill in later  nothing to do  TK will complain if there aren't at least 2 points...  SIMULATOR  ROCKBOX  ROCKBOX  ----------------------- public functions --------------------  This functiopn gets the template of an array; if we can't figure
   out what template an array's elements belong to we're in grave trouble
   when it's time to free or resize it.   get the length  get the contents  routine that checks if we're just an array of floats and if
    so returns the goods  get any floating-point field of any element of an array  set the "saveit" flag ------------------- Pd messages ------------------------  sum of Fourier components; called from routines below  dunno what a good default would be...  list -- the first value is an index; subsequent values are put in
    the "y" slot of the array.  This generalizes Max's "table", sort of.  drop negative x values  forward a "bounds" message to the owning graph  same for "xticks", etc  change the name of a garray.  this should be renamed and moved...  ROCKBOX  ROCKBOX  wave format only so far  wave is only little endian  LATER should check t_resizebytes result  if this is the only array in the graph,
    	    reset the graph's coordinates  close any dialogs that might have the wrong info now...  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   SIMULATOR  ROCKBOX  for read/write to files  ROCKBOX  see also the "plot" object in g_scalar.c which deals with graphing
arrays which are fields in scalars.  Someday we should unify the
two, but how?  aux routine to bash leading '#' to '$' for dialogs in u_main.tk
    which can't send symbols starting with '$' (because the Pd message
    interpreter would change them!)  --------- "pure" arrays with scalars for elements. ---------------  Pure arrays have no a priori graphical capabilities.
They are instantiated by "garrays" below or can be elements of other
scalars (g_scalar.c); their graphical behavior is defined accordingly.  note here we blithely copy a gpointer instead of "setting" a
	new one; this gpointer isn't accounted for and needn't be since
	we'll be deleted before the thing pointed to gets deleted anyway;
	see array_free.  we don't unset our gpointer here since it was never "set."  gpointer_unset(&x->a_gp);  --------------------- graphical arrays (garrays) -------------------  actual array; note only 4 fields used as below  name with "$" expanded  X value of first item  X increment  true if some DSP routine is using this  true if we should save this with parent  macros to get into the "array" structure  we can't have array or list elements yet because what scalar
	    can act as their "parent"???  LATER should check that malloc  LATER make methods to set this...  called from array menu item to create a new one  ROCKBOX  ROCKBOX  called from graph_dialog to set properties  ROCKBOX  create dialog window.  LATER fix this to escape '$'
	properly; right now we just detect a leading '$' and escape
	it.  There should be a systematic way of doing this.  ROCKBOX  this is called back from the dialog window to create a garray. 
    The otherflag requests that we find an existing graph to put it in.  t_garray *a; unused  a =  this is called from the properties dialog window for an existing array  LATER find a way to get #A unbound earlier (at end of load?)  ------------- code used by both array and plot widget functions ----  routine to get screen coordinates of a point in an array  found "w" field which controls linewidth.  LATER protect against the template changing or the scalar disappearing
    probably by attaching a gpointer here ...  it's an x, y plot; can drag many points at once  a y-only plot.  if it has more than 2000 points, just check 300 of them.  add truncation error margin  delete a point  add a point (after the clicked-on one)  -------------------- widget behavior for garray ------------  if it has more than 2000 points, just check 300 of them.  ROCKBOX  ROCKBOX  refuse  ROCKBOX  ROCKBOX  fill in later  nothing to do  TK will complain if there aren't at least 2 points...  SIMULATOR  ROCKBOX  ROCKBOX  ----------------------- public functions --------------------  This functiopn gets the template of an array; if we can't figure
   out what template an array's elements belong to we're in grave trouble
   when it's time to free or resize it.   get the length  get the contents  routine that checks if we're just an array of floats and if
    so returns the goods  get any floating-point field of any element of an array  set the "saveit" flag ------------------- Pd messages ------------------------  sum of Fourier components; called from routines below  dunno what a good default would be...  list -- the first value is an index; subsequent values are put in
    the "y" slot of the array.  This generalizes Max's "table", sort of.  drop negative x values  forward a "bounds" message to the owning graph  same for "xticks", etc  change the name of a garray.  this should be renamed and moved...  ROCKBOX  ROCKBOX  wave format only so far  wave is only little endian  LATER should check t_resizebytes result  if this is the only array in the graph,
    	    reset the graph's coordinates  close any dialogs that might have the wrong info now... 