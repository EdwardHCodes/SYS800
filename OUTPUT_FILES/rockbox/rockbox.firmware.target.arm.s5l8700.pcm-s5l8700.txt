**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  Driver for the IIS/PCM part of the s5l8700 using DMA

    Notes:
    - pcm_play_dma_pause is untested, not sure if implemented the right way
    - pcm_play_dma_stop is untested, not sure if implemented the right way
    - recording is not implemented
 table of recommended PLL/MCLK dividers for mode 256Fs from the datasheet  disabled because the codec driver does not support it (yet)  Mask the DMA interrupt  Unmask the DMA interrupt if enabled  DMA channel on  IIS Tx clock on  1 = power on  IIS Tx on  1 = transmit mode on  1 = I2S interface enable  1 = DMA request enable  0 = LRCK on  DMA channel off  IIS Tx off  1 = transmit mode on  1 = I2S interface enable  1 = DMA request enable  0 = LRCK on  pause playback by disabling the I2S interface  LRCK off  LRCK on  configure PLL1 and MCLK for the desired sample rate  150 microseconds  enable PLL1 and wait for lock  configure MCLK  MCLK_MASK  MCLK_SEL = PLL1  MCLK_DIV_ON  MCLK_DIV_VAL  configure IIS pins  configure DMA channel  DEVSEL  DIR  SCHCNT  DSIZE  BLEN  RELOAD  HCOMINT  WCOMINT  OFFSET  Enable the DMA IRQ  setup PLL  enable clock to the IIS module  configure IIS core  undocumented  burst length  0 = falling edge  0 = basic I2S format  0 = MSB first  0 = left channel for low polarity  MCLK divider  0 = 16-bit  bit clock per frame  channel index  burst length  0 = falling edge  0 = basic I2S format  0 = MSB first  0 = left channel for low polarity  MCLK divider  0 = 16-bit  bit clock per frame  channel index  set the configured PCM frequency ***************************************************************************
 ** Recording DMA transfer
 * HAVE_RECORDING **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  Driver for the IIS/PCM part of the s5l8700 using DMA

    Notes:
    - pcm_play_dma_pause is untested, not sure if implemented the right way
    - pcm_play_dma_stop is untested, not sure if implemented the right way
    - recording is not implemented
 table of recommended PLL/MCLK dividers for mode 256Fs from the datasheet  disabled because the codec driver does not support it (yet)  Mask the DMA interrupt  Unmask the DMA interrupt if enabled  DMA channel on  IIS Tx clock on  1 = power on  IIS Tx on  1 = transmit mode on  1 = I2S interface enable  1 = DMA request enable  0 = LRCK on  DMA channel off  IIS Tx off  1 = transmit mode on  1 = I2S interface enable  1 = DMA request enable  0 = LRCK on  pause playback by disabling the I2S interface  LRCK off  LRCK on  configure PLL1 and MCLK for the desired sample rate  150 microseconds  enable PLL1 and wait for lock  configure MCLK  MCLK_MASK  MCLK_SEL = PLL1  MCLK_DIV_ON  MCLK_DIV_VAL  configure IIS pins  configure DMA channel  DEVSEL  DIR  SCHCNT  DSIZE  BLEN  RELOAD  HCOMINT  WCOMINT  OFFSET  Enable the DMA IRQ  setup PLL  enable clock to the IIS module  configure IIS core  undocumented  burst length  0 = falling edge  0 = basic I2S format  0 = MSB first  0 = left channel for low polarity  MCLK divider  0 = 16-bit  bit clock per frame  channel index  burst length  0 = falling edge  0 = basic I2S format  0 = MSB first  0 = left channel for low polarity  MCLK divider  0 = 16-bit  bit clock per frame  channel index  set the configured PCM frequency ***************************************************************************
 ** Recording DMA transfer
 * HAVE_RECORDING **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  Driver for the IIS/PCM part of the s5l8700 using DMA

    Notes:
    - pcm_play_dma_pause is untested, not sure if implemented the right way
    - pcm_play_dma_stop is untested, not sure if implemented the right way
    - recording is not implemented
 table of recommended PLL/MCLK dividers for mode 256Fs from the datasheet  disabled because the codec driver does not support it (yet)  Mask the DMA interrupt  Unmask the DMA interrupt if enabled  DMA channel on  IIS Tx clock on  1 = power on  IIS Tx on  1 = transmit mode on  1 = I2S interface enable  1 = DMA request enable  0 = LRCK on  DMA channel off  IIS Tx off  1 = transmit mode on  1 = I2S interface enable  1 = DMA request enable  0 = LRCK on  pause playback by disabling the I2S interface  LRCK off  LRCK on  configure PLL1 and MCLK for the desired sample rate  150 microseconds  enable PLL1 and wait for lock  configure MCLK  MCLK_MASK  MCLK_SEL = PLL1  MCLK_DIV_ON  MCLK_DIV_VAL  configure IIS pins  configure DMA channel  DEVSEL  DIR  SCHCNT  DSIZE  BLEN  RELOAD  HCOMINT  WCOMINT  OFFSET  Enable the DMA IRQ  setup PLL  enable clock to the IIS module  configure IIS core  undocumented  burst length  0 = falling edge  0 = basic I2S format  0 = MSB first  0 = left channel for low polarity  MCLK divider  0 = 16-bit  bit clock per frame  channel index  burst length  0 = falling edge  0 = basic I2S format  0 = MSB first  0 = left channel for low polarity  MCLK divider  0 = 16-bit  bit clock per frame  channel index  set the configured PCM frequency ***************************************************************************
 ** Recording DMA transfer
 * HAVE_RECORDING 