	ID Engine	ID_IN.c - Input Manager	v1.0d1	By Jason Blochowiak	This module handles dealing with the various input devices	Depends on: Memory Mgr (for demo recording), Sound Mgr (for timing stuff),				User Mgr (for command line parms)	Globals:		LastScan - The keyboard scan code of the last key pressed		LastASCII - The ASCII value of the last key pressed	DEBUG - there are more globals
=============================================================================

					GLOBAL VARIABLES

=============================================================================
 configuration variables 	Global variablesKeyboardDef	KbdDefs = {0x1d,0x38,0x47,0x48,0x49,0x4b,0x4d,0x4f,0x50,0x51}; button0 button1 upleft up upright left right downleft down downright
=============================================================================

					LOCAL VARIABLES

=============================================================================
 Unshifted ASCII for scan codes       // TODO: keypad	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 Shifted ASCII for scan codes	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 ASCII for 0xe0 prefixed codes	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 Quick lookup for total direction/////////////////////////////////////////////////////////////////////////	INL_GetMouseButtons() - Gets the status of the mouse buttons from the		mouse driver//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_GetJoyDelta() - Returns the relative movement of the specified		joystick (from +/-127)//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_GetJoyFineDelta() - Returns the relative movement of the specified		joystick without dividing the results by 256 (from +/-127)/////////////////////////////////////////////////////////////////////////
===================
=
= IN_JoyButtons
=
===================
 exit if the window is closed check for keypresses convert to uppercase/////////////////////////////////////////////////////////////////////////	IN_Startup() - Starts up the Input Mgr///////////////////////////////////////////////////////////////////////// only up to 32 buttons are supported I didn't find a way to ask libSDL whether a mouse is present, yet.../////////////////////////////////////////////////////////////////////////	IN_Shutdown() - Shuts down the Input Mgr//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_ClearKeysDown() - Clears the keyboard array//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_ReadControl() - Reads the device associated with the specified		player and fills in the control info struct//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_WaitForKey() - Waits for a scan code, then clears LastScan and		returns the scan code//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_WaitForASCII() - Waits for an ASCII char, then clears LastASCII and		returns the ASCII value//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_Ack() - waits for a button or key press.  If a button is down, upon calling, it must be released for it to be recognized///////////////////////////////////////////////////////////////////////// get initial state of everything see if something has been pressed Wait until button has been released/////////////////////////////////////////////////////////////////////////	IN_UserInput() - Waits for the specified delay time (in ticks) or the		user pressing a key or a mouse button. If the clear flag is set, it		then either clears the key or waits for the user to let the mouse		button up./////////////////////////////////////////////////////////////////////////===========================================================================
===================
=
= IN_MouseButtons
=
===================
	ID Engine	ID_IN.c - Input Manager	v1.0d1	By Jason Blochowiak	This module handles dealing with the various input devices	Depends on: Memory Mgr (for demo recording), Sound Mgr (for timing stuff),				User Mgr (for command line parms)	Globals:		LastScan - The keyboard scan code of the last key pressed		LastASCII - The ASCII value of the last key pressed	DEBUG - there are more globals
=============================================================================

					GLOBAL VARIABLES

=============================================================================
 configuration variables 	Global variablesKeyboardDef	KbdDefs = {0x1d,0x38,0x47,0x48,0x49,0x4b,0x4d,0x4f,0x50,0x51}; button0 button1 upleft up upright left right downleft down downright
=============================================================================

					LOCAL VARIABLES

=============================================================================
 Unshifted ASCII for scan codes       // TODO: keypad	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 Shifted ASCII for scan codes	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 ASCII for 0xe0 prefixed codes	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 Quick lookup for total direction/////////////////////////////////////////////////////////////////////////	INL_GetMouseButtons() - Gets the status of the mouse buttons from the		mouse driver//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_GetJoyDelta() - Returns the relative movement of the specified		joystick (from +/-127)//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_GetJoyFineDelta() - Returns the relative movement of the specified		joystick without dividing the results by 256 (from +/-127)/////////////////////////////////////////////////////////////////////////
===================
=
= IN_JoyButtons
=
===================
 exit if the window is closed check for keypresses convert to uppercase/////////////////////////////////////////////////////////////////////////	IN_Startup() - Starts up the Input Mgr///////////////////////////////////////////////////////////////////////// only up to 32 buttons are supported I didn't find a way to ask libSDL whether a mouse is present, yet.../////////////////////////////////////////////////////////////////////////	IN_Shutdown() - Shuts down the Input Mgr//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_ClearKeysDown() - Clears the keyboard array//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_ReadControl() - Reads the device associated with the specified		player and fills in the control info struct//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_WaitForKey() - Waits for a scan code, then clears LastScan and		returns the scan code//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_WaitForASCII() - Waits for an ASCII char, then clears LastASCII and		returns the ASCII value//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_Ack() - waits for a button or key press.  If a button is down, upon calling, it must be released for it to be recognized///////////////////////////////////////////////////////////////////////// get initial state of everything see if something has been pressed Wait until button has been released/////////////////////////////////////////////////////////////////////////	IN_UserInput() - Waits for the specified delay time (in ticks) or the		user pressing a key or a mouse button. If the clear flag is set, it		then either clears the key or waits for the user to let the mouse		button up./////////////////////////////////////////////////////////////////////////===========================================================================
===================
=
= IN_MouseButtons
=
===================
	ID Engine	ID_IN.c - Input Manager	v1.0d1	By Jason Blochowiak	This module handles dealing with the various input devices	Depends on: Memory Mgr (for demo recording), Sound Mgr (for timing stuff),				User Mgr (for command line parms)	Globals:		LastScan - The keyboard scan code of the last key pressed		LastASCII - The ASCII value of the last key pressed	DEBUG - there are more globals
=============================================================================

					GLOBAL VARIABLES

=============================================================================
 configuration variables 	Global variablesKeyboardDef	KbdDefs = {0x1d,0x38,0x47,0x48,0x49,0x4b,0x4d,0x4f,0x50,0x51}; button0 button1 upleft up upright left right downleft down downright
=============================================================================

					LOCAL VARIABLES

=============================================================================
 Unshifted ASCII for scan codes       // TODO: keypad	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 Shifted ASCII for scan codes	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 ASCII for 0xe0 prefixed codes	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 0 1 2 3 4 5 6 7 Quick lookup for total direction/////////////////////////////////////////////////////////////////////////	INL_GetMouseButtons() - Gets the status of the mouse buttons from the		mouse driver//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_GetJoyDelta() - Returns the relative movement of the specified		joystick (from +/-127)//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_GetJoyFineDelta() - Returns the relative movement of the specified		joystick without dividing the results by 256 (from +/-127)/////////////////////////////////////////////////////////////////////////
===================
=
= IN_JoyButtons
=
===================
 exit if the window is closed check for keypresses convert to uppercase/////////////////////////////////////////////////////////////////////////	IN_Startup() - Starts up the Input Mgr///////////////////////////////////////////////////////////////////////// only up to 32 buttons are supported I didn't find a way to ask libSDL whether a mouse is present, yet.../////////////////////////////////////////////////////////////////////////	IN_Shutdown() - Shuts down the Input Mgr//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_ClearKeysDown() - Clears the keyboard array//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_ReadControl() - Reads the device associated with the specified		player and fills in the control info struct//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_WaitForKey() - Waits for a scan code, then clears LastScan and		returns the scan code//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_WaitForASCII() - Waits for an ASCII char, then clears LastASCII and		returns the ASCII value//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	IN_Ack() - waits for a button or key press.  If a button is down, upon calling, it must be released for it to be recognized///////////////////////////////////////////////////////////////////////// get initial state of everything see if something has been pressed Wait until button has been released/////////////////////////////////////////////////////////////////////////	IN_UserInput() - Waits for the specified delay time (in ticks) or the		user pressing a key or a mouse button. If the clear flag is set, it		then either clears the key or waits for the user to let the mouse		button up./////////////////////////////////////////////////////////////////////////===========================================================================
===================
=
= IN_MouseButtons
=
===================
