 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Plats (i.e. elevator platforms) code, raising/lowering.
 *
 *----------------------------------------------------------------------------- killough 2/14/98: made global again T_PlatRaise() Action routine to move a plat up and down Passed a plat structure containing all pertinent information about the move No return jff 02/08/98 all cases with labels beginning with gen added to support generalized line type behaviors. handle plat moving, up, down, waiting, or in stasis, plat moving up if a pure raise type, make the plat moving sound if encountered an obstacle, and not a crush type, reverse direction else handle reaching end of up stroke end of stroke if not an instant toggle type, wait, make plat stop sound else go into stasis awaiting next toggle activationjff 3/14/98 after action waitfor reactivation of toggle lift types and pure raise types are done at end of up stroke only the perpetual type waits then goes back up killough plat moving down handle reaching end of down stroke if not an instant toggle, start waiting, make plat stop soundjff 3/14/98 toggle up down is silent, instant, no waiting instant toggles go into stasis awaiting next activationjff 3/14/98 after action waitfor reactivation of togglejff 1/26/98 remove the plat if it bounced so it can be tried againonly affects plats that raise and bouncekillough 1/31/98: relax compatibility to demo_compatibility remove the plat if its a pure raise type plat is waiting downcount and check for delay elapsed if at bottom, start up if at top, start down make plat start soundjff 1/27/98 don't pickup code added later to in_stasis do nothing if in stasis EV_DoPlat Handle Plat linedef types Passed the linedef that activated the plat, the type of plat action, and for some plat types, an amount to raise Returns true if a thinker is started, or restarted from stasis Activate all <type> plats that are in_stasis act on all sectors tagged the same as the activating linedef don't start a second floor function if already movingjff 2/23/98 multiple thinkers Create a thinkerjff 2/23/98 multiple thinkersjff 1/26/98 Avoid raise plat bouncing a head off a ceiling and thengoing down forever -- default low to plat height when triggered set up plat according to typejff 3/14/98 clear old field as welljff 3/14/98 add new type to support instant togglenot usednot usedjff 3/14/98 crush anything in the way set up toggling between ceiling, floor inclusive add plat to list of active plats The following were all rewritten by Lee Killough to use the new structure which places no limits on active plats. It also avoids spending as much time searching for active plats. Previously a fixed-size array was used, with NULL indicating empty entries, while now a doubly-linked list is used. P_ActivateInStasis() Activate a plat that has been put in stasis (stopped perpetual floor, instant floor/ceil toggle) Passed the tag of the plat that should be reactivated Returns nothing search the active plats for one in stasis with right tagjff 3/14/98 reactivate toggle type EV_StopPlat() Handler for "stop perpetual floor" linedef type Passed the linedef that stopped the plat Returns true if a plat was put in stasis jff 2/12/98 added int return value, fixed return search the active plats for one with the tag not in stasis put it in stasis P_AddActivePlat() Add a plat to the head of the active plat list Passed a pointer to the plat to add Returns nothing P_RemoveActivePlat() Remove a plat from the active plat list Passed a pointer to the plat to remove Returns nothingjff 2/23/98 multiple thinkers P_RemoveAllActivePlats() Remove all plats from the active plat list Passed nothing, returns nothing Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Plats (i.e. elevator platforms) code, raising/lowering.
 *
 *----------------------------------------------------------------------------- killough 2/14/98: made global again T_PlatRaise() Action routine to move a plat up and down Passed a plat structure containing all pertinent information about the move No return jff 02/08/98 all cases with labels beginning with gen added to support generalized line type behaviors. handle plat moving, up, down, waiting, or in stasis, plat moving up if a pure raise type, make the plat moving sound if encountered an obstacle, and not a crush type, reverse direction else handle reaching end of up stroke end of stroke if not an instant toggle type, wait, make plat stop sound else go into stasis awaiting next toggle activationjff 3/14/98 after action waitfor reactivation of toggle lift types and pure raise types are done at end of up stroke only the perpetual type waits then goes back up killough plat moving down handle reaching end of down stroke if not an instant toggle, start waiting, make plat stop soundjff 3/14/98 toggle up down is silent, instant, no waiting instant toggles go into stasis awaiting next activationjff 3/14/98 after action waitfor reactivation of togglejff 1/26/98 remove the plat if it bounced so it can be tried againonly affects plats that raise and bouncekillough 1/31/98: relax compatibility to demo_compatibility remove the plat if its a pure raise type plat is waiting downcount and check for delay elapsed if at bottom, start up if at top, start down make plat start soundjff 1/27/98 don't pickup code added later to in_stasis do nothing if in stasis EV_DoPlat Handle Plat linedef types Passed the linedef that activated the plat, the type of plat action, and for some plat types, an amount to raise Returns true if a thinker is started, or restarted from stasis Activate all <type> plats that are in_stasis act on all sectors tagged the same as the activating linedef don't start a second floor function if already movingjff 2/23/98 multiple thinkers Create a thinkerjff 2/23/98 multiple thinkersjff 1/26/98 Avoid raise plat bouncing a head off a ceiling and thengoing down forever -- default low to plat height when triggered set up plat according to typejff 3/14/98 clear old field as welljff 3/14/98 add new type to support instant togglenot usednot usedjff 3/14/98 crush anything in the way set up toggling between ceiling, floor inclusive add plat to list of active plats The following were all rewritten by Lee Killough to use the new structure which places no limits on active plats. It also avoids spending as much time searching for active plats. Previously a fixed-size array was used, with NULL indicating empty entries, while now a doubly-linked list is used. P_ActivateInStasis() Activate a plat that has been put in stasis (stopped perpetual floor, instant floor/ceil toggle) Passed the tag of the plat that should be reactivated Returns nothing search the active plats for one in stasis with right tagjff 3/14/98 reactivate toggle type EV_StopPlat() Handler for "stop perpetual floor" linedef type Passed the linedef that stopped the plat Returns true if a plat was put in stasis jff 2/12/98 added int return value, fixed return search the active plats for one with the tag not in stasis put it in stasis P_AddActivePlat() Add a plat to the head of the active plat list Passed a pointer to the plat to add Returns nothing P_RemoveActivePlat() Remove a plat from the active plat list Passed a pointer to the plat to remove Returns nothingjff 2/23/98 multiple thinkers P_RemoveAllActivePlats() Remove all plats from the active plat list Passed nothing, returns nothing Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Plats (i.e. elevator platforms) code, raising/lowering.
 *
 *----------------------------------------------------------------------------- killough 2/14/98: made global again T_PlatRaise() Action routine to move a plat up and down Passed a plat structure containing all pertinent information about the move No return jff 02/08/98 all cases with labels beginning with gen added to support generalized line type behaviors. handle plat moving, up, down, waiting, or in stasis, plat moving up if a pure raise type, make the plat moving sound if encountered an obstacle, and not a crush type, reverse direction else handle reaching end of up stroke end of stroke if not an instant toggle type, wait, make plat stop sound else go into stasis awaiting next toggle activationjff 3/14/98 after action waitfor reactivation of toggle lift types and pure raise types are done at end of up stroke only the perpetual type waits then goes back up killough plat moving down handle reaching end of down stroke if not an instant toggle, start waiting, make plat stop soundjff 3/14/98 toggle up down is silent, instant, no waiting instant toggles go into stasis awaiting next activationjff 3/14/98 after action waitfor reactivation of togglejff 1/26/98 remove the plat if it bounced so it can be tried againonly affects plats that raise and bouncekillough 1/31/98: relax compatibility to demo_compatibility remove the plat if its a pure raise type plat is waiting downcount and check for delay elapsed if at bottom, start up if at top, start down make plat start soundjff 1/27/98 don't pickup code added later to in_stasis do nothing if in stasis EV_DoPlat Handle Plat linedef types Passed the linedef that activated the plat, the type of plat action, and for some plat types, an amount to raise Returns true if a thinker is started, or restarted from stasis Activate all <type> plats that are in_stasis act on all sectors tagged the same as the activating linedef don't start a second floor function if already movingjff 2/23/98 multiple thinkers Create a thinkerjff 2/23/98 multiple thinkersjff 1/26/98 Avoid raise plat bouncing a head off a ceiling and thengoing down forever -- default low to plat height when triggered set up plat according to typejff 3/14/98 clear old field as welljff 3/14/98 add new type to support instant togglenot usednot usedjff 3/14/98 crush anything in the way set up toggling between ceiling, floor inclusive add plat to list of active plats The following were all rewritten by Lee Killough to use the new structure which places no limits on active plats. It also avoids spending as much time searching for active plats. Previously a fixed-size array was used, with NULL indicating empty entries, while now a doubly-linked list is used. P_ActivateInStasis() Activate a plat that has been put in stasis (stopped perpetual floor, instant floor/ceil toggle) Passed the tag of the plat that should be reactivated Returns nothing search the active plats for one in stasis with right tagjff 3/14/98 reactivate toggle type EV_StopPlat() Handler for "stop perpetual floor" linedef type Passed the linedef that stopped the plat Returns true if a plat was put in stasis jff 2/12/98 added int return value, fixed return search the active plats for one with the tag not in stasis put it in stasis P_AddActivePlat() Add a plat to the head of the active plat list Passed a pointer to the plat to add Returns nothing P_RemoveActivePlat() Remove a plat from the active plat list Passed a pointer to the plat to remove Returns nothingjff 2/23/98 multiple thinkers P_RemoveAllActivePlats() Remove all plats from the active plat list Passed nothing, returns nothing