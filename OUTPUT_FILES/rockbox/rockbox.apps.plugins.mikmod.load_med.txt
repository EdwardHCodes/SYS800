	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Amiga MED module loader

======================================================================================== Module information  struct MEDSONG *song;  for the player routine, MMD2 only   "   "   "   "  struct MEDBlock **blockarr;  struct MEDINSTHEADER **smplarr;  struct MEDEXP *expdata;  some data for the player routine  number of songs - 1  offs: 0(s), 2(s)  offs: 4(s)  offs: 5(s)  offs: 6(s)  offs: 7(s)  63 * 8 bytes = 504 bytes  offs: 504  offs: 506  offs: 508  offs: 764  offs: 766  offs: 767  offs: 768  offs: 769  offs: 770  offs: 786  offs: 787  pointer to next module  pointer to MEDINSTEXT array  pointer to annotation text  pointer to MEDINSTINFO array  pointer to songname  Followed by actual data ========== Loader variables ========== Loader code  0x0 0x1 0x2 0x3 0x4 PT effects  PT vibrato with speed/depth nibbles swapped  0x6 0x7 not used  midi hold/decay  0xa 0xb PT effects  same as PT volslide  synth jmp - midi  patternbreak  play note twice  delay note  play note three times  stop playing  note cut  all normal PT effects are handled here  first, scan patterns to see how many channels are used  sanity check  sanity check  docs say 4, 8, 12 or 16  second read: read and convert patterns  first, scan patterns to see how many channels are used  sanity check  per docs  sanity check  docs say 4, 8, 12 or 16  second read: really read and convert patterns  try to read module header  Seek to MEDSONG struct  Load the MED Song Header  load the sample data first  sanity check  sanity check  check for a bad header  load extension structure  sanity check  truncate insane songnamelen (fail instead??)  seek to and read the samplepointer array  alloc and read the blockpointer array  copy song positions  SANITIY CHECK 	fprintf(stderr,"positions[%d]=%d > numpat=%d\n",t,of.positions[t],ms->numblocks); Let's do some math : compute GCD of BPM beat length and speed  will be counted later  don't load sample if length>='MMD0'...
			   such kluges make libmikmod's code unique !!! ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Amiga MED module loader

======================================================================================== Module information  struct MEDSONG *song;  for the player routine, MMD2 only   "   "   "   "  struct MEDBlock **blockarr;  struct MEDINSTHEADER **smplarr;  struct MEDEXP *expdata;  some data for the player routine  number of songs - 1  offs: 0(s), 2(s)  offs: 4(s)  offs: 5(s)  offs: 6(s)  offs: 7(s)  63 * 8 bytes = 504 bytes  offs: 504  offs: 506  offs: 508  offs: 764  offs: 766  offs: 767  offs: 768  offs: 769  offs: 770  offs: 786  offs: 787  pointer to next module  pointer to MEDINSTEXT array  pointer to annotation text  pointer to MEDINSTINFO array  pointer to songname  Followed by actual data ========== Loader variables ========== Loader code  0x0 0x1 0x2 0x3 0x4 PT effects  PT vibrato with speed/depth nibbles swapped  0x6 0x7 not used  midi hold/decay  0xa 0xb PT effects  same as PT volslide  synth jmp - midi  patternbreak  play note twice  delay note  play note three times  stop playing  note cut  all normal PT effects are handled here  first, scan patterns to see how many channels are used  sanity check  sanity check  docs say 4, 8, 12 or 16  second read: read and convert patterns  first, scan patterns to see how many channels are used  sanity check  per docs  sanity check  docs say 4, 8, 12 or 16  second read: really read and convert patterns  try to read module header  Seek to MEDSONG struct  Load the MED Song Header  load the sample data first  sanity check  sanity check  check for a bad header  load extension structure  sanity check  truncate insane songnamelen (fail instead??)  seek to and read the samplepointer array  alloc and read the blockpointer array  copy song positions  SANITIY CHECK 	fprintf(stderr,"positions[%d]=%d > numpat=%d\n",t,of.positions[t],ms->numblocks); Let's do some math : compute GCD of BPM beat length and speed  will be counted later  don't load sample if length>='MMD0'...
			   such kluges make libmikmod's code unique !!! ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Amiga MED module loader

======================================================================================== Module information  struct MEDSONG *song;  for the player routine, MMD2 only   "   "   "   "  struct MEDBlock **blockarr;  struct MEDINSTHEADER **smplarr;  struct MEDEXP *expdata;  some data for the player routine  number of songs - 1  offs: 0(s), 2(s)  offs: 4(s)  offs: 5(s)  offs: 6(s)  offs: 7(s)  63 * 8 bytes = 504 bytes  offs: 504  offs: 506  offs: 508  offs: 764  offs: 766  offs: 767  offs: 768  offs: 769  offs: 770  offs: 786  offs: 787  pointer to next module  pointer to MEDINSTEXT array  pointer to annotation text  pointer to MEDINSTINFO array  pointer to songname  Followed by actual data ========== Loader variables ========== Loader code  0x0 0x1 0x2 0x3 0x4 PT effects  PT vibrato with speed/depth nibbles swapped  0x6 0x7 not used  midi hold/decay  0xa 0xb PT effects  same as PT volslide  synth jmp - midi  patternbreak  play note twice  delay note  play note three times  stop playing  note cut  all normal PT effects are handled here  first, scan patterns to see how many channels are used  sanity check  sanity check  docs say 4, 8, 12 or 16  second read: read and convert patterns  first, scan patterns to see how many channels are used  sanity check  per docs  sanity check  docs say 4, 8, 12 or 16  second read: really read and convert patterns  try to read module header  Seek to MEDSONG struct  Load the MED Song Header  load the sample data first  sanity check  sanity check  check for a bad header  load extension structure  sanity check  truncate insane songnamelen (fail instead??)  seek to and read the samplepointer array  alloc and read the blockpointer array  copy song positions  SANITIY CHECK 	fprintf(stderr,"positions[%d]=%d > numpat=%d\n",t,of.positions[t],ms->numblocks); Let's do some math : compute GCD of BPM beat length and speed  will be counted later  don't load sample if length>='MMD0'...
			   such kluges make libmikmod's code unique !!! ========== Loader information  ex:set ts=4: 