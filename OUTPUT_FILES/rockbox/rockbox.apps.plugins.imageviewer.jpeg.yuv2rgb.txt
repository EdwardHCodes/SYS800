**************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* JPEG image viewer
* (This is a real mess if it has to be coded in one single C file)
*
* File scrolling addition (C) 2005 Alexander Spyridakis
* Copyright (C) 2004 Jörg Hohensohn aka [IDC]Dragon
* Heavily borrowed from the IJG implementation (C) Thomas G. Lane
* Small & fast downscaling IDCT (C) 2002 by Guido Vollbeding  JPEGclub.org
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
***************************************************************************
 * Conversion of full 0-255 range YCrCb to RGB:
 *   |R|   |1.000000 -0.000001  1.402000| |Y'|
 *   |G| = |1.000000 -0.334136 -0.714136| |Pb|
 *   |B|   |1.000000  1.772000  0.000000| |Pr|
 * Scaled (yields s15-bit output):
 *   |R|   |128    0  179| |Y       |
 *   |G| = |128  -43  -91| |Cb - 128|
 *   |B|   |128  227    0| |Cr - 128|
  Formula used in core bitmap loader.  Reasonable, approximate reversal to get a full range back from the
       quantized value.  Error record for line below             Current pixel components in s16.0       Current line increment (-1 or 1)        Current row in source image             Current column in source image          Errors to apply to current pixel        RED, GRN, BLU                           Current position in error record       * round and truncate to lcd depth ** write a monochrome pixel to the colour LCD **
 * Bayer ordered dithering - swiped from the core bitmap loader.
  canonical ordered dither matrix *
 * Floyd/Steinberg dither to lcd depth.
 *
 * Apply filter to each component in serpentine pattern. Kernel shown for
 * L->R scan. Kernel is reversed for R->L.
 *        *   7
 *    3   5   1     (1/16)
  Full components with error terms  Get pixel errors  Spead error to surrounding pixels.  Pack and return pixel  Functions for each output mode, colour then grayscale.  These defines are used fornormal horizontal strides and vertical strides. *
 * Draw a partial YUV colour bitmap
 *
 * Runs serpentine pattern when dithering is DITHER_DIFFUSION, else scan is
 * always L->R.
  Clip right  Clip left  nothing left to do  Clip bottom  Clip top  nothing left to do  Ignore Cb, Cr  Reset error terms.  Use R->L scan on odd lines  Scan is L->R  Scan is R->L  Do one row of pixels  colour  upsampling, YUV->RGB conversion and reduction to RGB565 in one go  fetch new chromas  monochrome  Set all components the same for dithering purposes **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* JPEG image viewer
* (This is a real mess if it has to be coded in one single C file)
*
* File scrolling addition (C) 2005 Alexander Spyridakis
* Copyright (C) 2004 Jörg Hohensohn aka [IDC]Dragon
* Heavily borrowed from the IJG implementation (C) Thomas G. Lane
* Small & fast downscaling IDCT (C) 2002 by Guido Vollbeding  JPEGclub.org
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
***************************************************************************
 * Conversion of full 0-255 range YCrCb to RGB:
 *   |R|   |1.000000 -0.000001  1.402000| |Y'|
 *   |G| = |1.000000 -0.334136 -0.714136| |Pb|
 *   |B|   |1.000000  1.772000  0.000000| |Pr|
 * Scaled (yields s15-bit output):
 *   |R|   |128    0  179| |Y       |
 *   |G| = |128  -43  -91| |Cb - 128|
 *   |B|   |128  227    0| |Cr - 128|
  Formula used in core bitmap loader.  Reasonable, approximate reversal to get a full range back from the
       quantized value.  Error record for line below             Current pixel components in s16.0       Current line increment (-1 or 1)        Current row in source image             Current column in source image          Errors to apply to current pixel        RED, GRN, BLU                           Current position in error record       * round and truncate to lcd depth ** write a monochrome pixel to the colour LCD **
 * Bayer ordered dithering - swiped from the core bitmap loader.
  canonical ordered dither matrix *
 * Floyd/Steinberg dither to lcd depth.
 *
 * Apply filter to each component in serpentine pattern. Kernel shown for
 * L->R scan. Kernel is reversed for R->L.
 *        *   7
 *    3   5   1     (1/16)
  Full components with error terms  Get pixel errors  Spead error to surrounding pixels.  Pack and return pixel  Functions for each output mode, colour then grayscale.  These defines are used fornormal horizontal strides and vertical strides. *
 * Draw a partial YUV colour bitmap
 *
 * Runs serpentine pattern when dithering is DITHER_DIFFUSION, else scan is
 * always L->R.
  Clip right  Clip left  nothing left to do  Clip bottom  Clip top  nothing left to do  Ignore Cb, Cr  Reset error terms.  Use R->L scan on odd lines  Scan is L->R  Scan is R->L  Do one row of pixels  colour  upsampling, YUV->RGB conversion and reduction to RGB565 in one go  fetch new chromas  monochrome  Set all components the same for dithering purposes **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* JPEG image viewer
* (This is a real mess if it has to be coded in one single C file)
*
* File scrolling addition (C) 2005 Alexander Spyridakis
* Copyright (C) 2004 Jörg Hohensohn aka [IDC]Dragon
* Heavily borrowed from the IJG implementation (C) Thomas G. Lane
* Small & fast downscaling IDCT (C) 2002 by Guido Vollbeding  JPEGclub.org
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
***************************************************************************
 * Conversion of full 0-255 range YCrCb to RGB:
 *   |R|   |1.000000 -0.000001  1.402000| |Y'|
 *   |G| = |1.000000 -0.334136 -0.714136| |Pb|
 *   |B|   |1.000000  1.772000  0.000000| |Pr|
 * Scaled (yields s15-bit output):
 *   |R|   |128    0  179| |Y       |
 *   |G| = |128  -43  -91| |Cb - 128|
 *   |B|   |128  227    0| |Cr - 128|
  Formula used in core bitmap loader.  Reasonable, approximate reversal to get a full range back from the
       quantized value.  Error record for line below             Current pixel components in s16.0       Current line increment (-1 or 1)        Current row in source image             Current column in source image          Errors to apply to current pixel        RED, GRN, BLU                           Current position in error record       * round and truncate to lcd depth ** write a monochrome pixel to the colour LCD **
 * Bayer ordered dithering - swiped from the core bitmap loader.
  canonical ordered dither matrix *
 * Floyd/Steinberg dither to lcd depth.
 *
 * Apply filter to each component in serpentine pattern. Kernel shown for
 * L->R scan. Kernel is reversed for R->L.
 *        *   7
 *    3   5   1     (1/16)
  Full components with error terms  Get pixel errors  Spead error to surrounding pixels.  Pack and return pixel  Functions for each output mode, colour then grayscale.  These defines are used fornormal horizontal strides and vertical strides. *
 * Draw a partial YUV colour bitmap
 *
 * Runs serpentine pattern when dithering is DITHER_DIFFUSION, else scan is
 * always L->R.
  Clip right  Clip left  nothing left to do  Clip bottom  Clip top  nothing left to do  Ignore Cb, Cr  Reset error terms.  Use R->L scan on odd lines  Scan is L->R  Scan is R->L  Do one row of pixels  colour  upsampling, YUV->RGB conversion and reduction to RGB565 in one go  fetch new chromas  monochrome  Set all components the same for dithering purposes 