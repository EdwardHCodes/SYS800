
 *  MTD splitter for MikroTik NOR devices
 *
 *  Copyright (C) 2017 Thibaut VARENE <varenet@parisc-linux.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 *
 *  The rootfs is expected at erase-block boundary due to the use of
 *  mtd_find_rootfs_from(). We use a trimmed down version of the yaffs header
 *  for two main reasons:
 *  - the original header uses weakly defined types (int, enum...) which can
 *    vary in length depending on build host (and the struct is not packed),
 *    and the name field can have a different total length depending on
 *    whether or not the yaffs code was _built_ with unicode support.
 *  - the only field that could be of real use here (file_size_low) contains
 *    invalid data in the header generated by kernel2minor, so we cannot use
 *    it to infer the exact position of the rootfs and do away with
 *    mtd_find_rootfs_from() (and thus have non-EB-aligned rootfs).
 
 * This structure is based on yaffs_obj_hdr from yaffs_guts.h
 * The weak types match upstream. The fields have cpu-endianness
  match header 
 *  MTD splitter for MikroTik NOR devices
 *
 *  Copyright (C) 2017 Thibaut VARENE <varenet@parisc-linux.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 *
 *  The rootfs is expected at erase-block boundary due to the use of
 *  mtd_find_rootfs_from(). We use a trimmed down version of the yaffs header
 *  for two main reasons:
 *  - the original header uses weakly defined types (int, enum...) which can
 *    vary in length depending on build host (and the struct is not packed),
 *    and the name field can have a different total length depending on
 *    whether or not the yaffs code was _built_ with unicode support.
 *  - the only field that could be of real use here (file_size_low) contains
 *    invalid data in the header generated by kernel2minor, so we cannot use
 *    it to infer the exact position of the rootfs and do away with
 *    mtd_find_rootfs_from() (and thus have non-EB-aligned rootfs).
 
 * This structure is based on yaffs_obj_hdr from yaffs_guts.h
 * The weak types match upstream. The fields have cpu-endianness
  match header 