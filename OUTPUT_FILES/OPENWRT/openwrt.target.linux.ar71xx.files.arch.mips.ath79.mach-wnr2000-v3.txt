
 *  NETGEAR WNR2000v3/WNR612v2/WNR1000v2/WPN824N board support
 *
 *  Copyright (C) 2015 Hartmut Knaack <knaack.h@gmx.de>
 *  Copyright (C) 2013 Mathieu Olivari <mathieu.olivari@gmail.com>
 *  Copyright (C) 2008-2009 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *  Copyright (C) 2008-2009 Andy Boyett <agb@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  PLATFORM_DEVID_AUTO is defined here  needed to disable switch LEDs  needed to disable switch LEDs  WNR2000v3 - connected through AR7241  WNR2000v3 - connected through AR9287  WNR612v2 - connected through AR7241  WNR612v2 - connected through AR9285  WNR1000v2 - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR1000v2 - connected through AR9285  WPN824N - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_CLK_OBS3_EN  WPN824N - connected through AR9285  msecs  ART offsets for: WNR2000v3, WNR612v2, WNR1000v2  wireless MAC is inside ART 
 * For WNR2000v3 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * To fix that, assign permanent WLAN MAC equal to ethN's MAC plus 1,
 * so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs.
	 * Also disable CLKs and bit 20 as u-boot does.
	 * Finally, allow OS to control all link LEDs.
	  Do not use id=-1, we can have more GPIO key-polled devices 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR612v2 sets undocumented bit 15 but
	 * we leave it for now.
	 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR1000v2 sets undocumented bit 15 but
	 * we leave it for now.
	  All 3 buttons are connected to wireless chip 
 *  NETGEAR WNR2000v3/WNR612v2/WNR1000v2/WPN824N board support
 *
 *  Copyright (C) 2015 Hartmut Knaack <knaack.h@gmx.de>
 *  Copyright (C) 2013 Mathieu Olivari <mathieu.olivari@gmail.com>
 *  Copyright (C) 2008-2009 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *  Copyright (C) 2008-2009 Andy Boyett <agb@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  PLATFORM_DEVID_AUTO is defined here  needed to disable switch LEDs  needed to disable switch LEDs  WNR2000v3 - connected through AR7241  WNR2000v3 - connected through AR9287  WNR612v2 - connected through AR7241  WNR612v2 - connected through AR9285  WNR1000v2 - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR1000v2 - connected through AR9285  WPN824N - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_CLK_OBS3_EN  WPN824N - connected through AR9285  msecs  ART offsets for: WNR2000v3, WNR612v2, WNR1000v2  wireless MAC is inside ART 
 * For WNR2000v3 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * To fix that, assign permanent WLAN MAC equal to ethN's MAC plus 1,
 * so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs.
	 * Also disable CLKs and bit 20 as u-boot does.
	 * Finally, allow OS to control all link LEDs.
	  Do not use id=-1, we can have more GPIO key-polled devices 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR612v2 sets undocumented bit 15 but
	 * we leave it for now.
	 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR1000v2 sets undocumented bit 15 but
	 * we leave it for now.
	  All 3 buttons are connected to wireless chip 
 *  NETGEAR WNR2000v3/WNR612v2/WNR1000v2/WPN824N board support
 *
 *  Copyright (C) 2015 Hartmut Knaack <knaack.h@gmx.de>
 *  Copyright (C) 2013 Mathieu Olivari <mathieu.olivari@gmail.com>
 *  Copyright (C) 2008-2009 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *  Copyright (C) 2008-2009 Andy Boyett <agb@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  PLATFORM_DEVID_AUTO is defined here  needed to disable switch LEDs  needed to disable switch LEDs  WNR2000v3 - connected through AR7241  WNR2000v3 - connected through AR9287  WNR612v2 - connected through AR7241  WNR612v2 - connected through AR9285  WNR1000v2 - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR1000v2 - connected through AR9285  WPN824N - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_CLK_OBS3_EN  WPN824N - connected through AR9285  msecs  ART offsets for: WNR2000v3, WNR612v2, WNR1000v2  wireless MAC is inside ART 
 * For WNR2000v3 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * To fix that, assign permanent WLAN MAC equal to ethN's MAC plus 1,
 * so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs.
	 * Also disable CLKs and bit 20 as u-boot does.
	 * Finally, allow OS to control all link LEDs.
	  Do not use id=-1, we can have more GPIO key-polled devices 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR612v2 sets undocumented bit 15 but
	 * we leave it for now.
	 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR1000v2 sets undocumented bit 15 but
	 * we leave it for now.
	  All 3 buttons are connected to wireless chip 
 *  NETGEAR WNR2000v3/WNR612v2/WNR1000v2/WPN824N board support
 *
 *  Copyright (C) 2015 Hartmut Knaack <knaack.h@gmx.de>
 *  Copyright (C) 2013 Mathieu Olivari <mathieu.olivari@gmail.com>
 *  Copyright (C) 2008-2009 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *  Copyright (C) 2008-2009 Andy Boyett <agb@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  PLATFORM_DEVID_AUTO is defined here  needed to disable switch LEDs  needed to disable switch LEDs  WNR2000v3 - connected through AR7241  WNR2000v3 - connected through AR9287  WNR612v2 - connected through AR7241  WNR612v2 - connected through AR9285  WNR1000v2 - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR1000v2 - connected through AR9285  WPN824N - connected through AR7240  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_CLK_OBS3_EN  WPN824N - connected through AR9285  msecs  ART offsets for: WNR2000v3, WNR612v2, WNR1000v2  wireless MAC is inside ART 
 * For WNR2000v3 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * To fix that, assign permanent WLAN MAC equal to ethN's MAC plus 1,
 * so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs.
	 * Also disable CLKs and bit 20 as u-boot does.
	 * Finally, allow OS to control all link LEDs.
	  Do not use id=-1, we can have more GPIO key-polled devices 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR612v2 sets undocumented bit 15 but
	 * we leave it for now.
	 
	 * Disable JTAG and CLKs. Allow OS to control all link LEDs.
	 * Note: U-Boot for WNR1000v2 sets undocumented bit 15 but
	 * we leave it for now.
	  All 3 buttons are connected to wireless chip 