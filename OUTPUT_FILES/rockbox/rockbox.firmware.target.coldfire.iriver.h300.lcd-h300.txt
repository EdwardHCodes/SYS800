**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2004 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Is the display turned on?  Needed for flip  The update functions use DMA and yield  register defines  called very frequently - inline!  called very frequently - inline! ** hardware configuration ** 224 lines, GS=SS=1  16 lines offset  4..223  224 lines, GS=SS=0  0..219  turn the display upside down (call lcd_update() afterwards) * Sequence according to datasheet, p. 132 * Start Oscilation  zero everything STB = 0, SLP = 0  GON = 0, DTE = 0, D1-0 = 00b  PON = 0  VCOMG = 0  initialise power supply  DC12-10 = 000b: Step-up1 = clock/8,
     * DC02-00 = 000b: Step-up2 = clock/16,
     * VC2-0   = 010b: VciOUT = 0.87 * VciLVL  VRH3-0 = 1000b: Vreg1OUT = REGP * 1.90  VDV4-0 = 00110b: VcomA = Vreg1OUT * 0.76,
     * VCM4-0 = 10000b: VcomH = Vreg1OUT * 0.70 AP2-0 = 100b, DK = 1  PON = 1  Step-up circuit stabilising time  start power supply  BT2-0 = 101b, DK = 0  VCOMG = 1  other settings  B/C = 1: n-line inversion form
     * EOR = 1: polarity inversion occurs by applying an EOR to odd/even
     *          frame select signal and an n-line inversion signal.
     * FLD = 01b: 1 field interlaced scan, external display iface  Address counter updated in vertical direction; left to right;
     * vertical increment horizontal increment.
     * data format for 8bit transfer or spi = 65k (5,6,5)
     * Reverse order of RGB to BGR for 18bit data written to GRAM
     * Replace data on writing to GRAM  19 clocks,no equalization  Transfer mode for RGB interface disabled
     * internal clock operation;
     * System interface/VSYNC interface  Front porch lines: 8; Back porch lines: 8;  Scan mode by the gate driver in the non-display area: disabled;
     * Cycle of scan by the gate driver - set to 31frames(518ms), 
     * disabled by above setting  must be done before calling lcd_update()  op-amp stabilising time * Sequence according to datasheet, p. 130 * SAP2-0=100, BT2-0=101, AP2-0=100  GON=0, DTE=0, REV=1, D1-0=01  GON=1, DTE=0, REV=1, D1-0=01  GON=1, DTE=0, REV=1, D1-0=11  GON=1, DTE=1, REV=1, D1-0=11  LCD init  GPO46 is LCD RESET  Reset LCD  Configure DMA channel 3  DMA3 is mapped into vector 57 in system.c  Enable DMA3 interrupt at level 6, priority 0 * Off sequence according to datasheet, p. 130 * EQ=0, 18 clks/line  GON=1, DTE=1, REV=1, D1-0=10  GON=1, DTE=0, REV=1, D1-0=10  GON=0, DTE=0, D1-0=00  SAP2-0=000, AP2-0=000  PON=0  VCOMG=0  datasheet p. 131  STB=1: standby mode ** update functions ** Line write helper function for lcd_yuv_blit. Write two lines of yuv420.
 * y should have two lines of Y back to back, 2nd line first.
 * c should contain the Cb and Cr data for the two lines of Y back to back.
 * Needs EMAC set to saturated, signed integer mode.
  Performance function to blit a YUV bitmap directly to the LCD
 * src_x, src_y, width and height should be even
 * x, y, width and height have to be within LCD bounds
  IRAM Y, Cb and Cb buffers.  stay on the safe side  Set start position and window  LCD DMA ISR  Update the display.
   This must be called after all other LCD functions that change the display.  set start position window  Update a fraction of the display.  nothing to do  set update window **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2004 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Is the display turned on?  Needed for flip  The update functions use DMA and yield  register defines  called very frequently - inline!  called very frequently - inline! ** hardware configuration ** 224 lines, GS=SS=1  16 lines offset  4..223  224 lines, GS=SS=0  0..219  turn the display upside down (call lcd_update() afterwards) * Sequence according to datasheet, p. 132 * Start Oscilation  zero everything STB = 0, SLP = 0  GON = 0, DTE = 0, D1-0 = 00b  PON = 0  VCOMG = 0  initialise power supply  DC12-10 = 000b: Step-up1 = clock/8,
     * DC02-00 = 000b: Step-up2 = clock/16,
     * VC2-0   = 010b: VciOUT = 0.87 * VciLVL  VRH3-0 = 1000b: Vreg1OUT = REGP * 1.90  VDV4-0 = 00110b: VcomA = Vreg1OUT * 0.76,
     * VCM4-0 = 10000b: VcomH = Vreg1OUT * 0.70 AP2-0 = 100b, DK = 1  PON = 1  Step-up circuit stabilising time  start power supply  BT2-0 = 101b, DK = 0  VCOMG = 1  other settings  B/C = 1: n-line inversion form
     * EOR = 1: polarity inversion occurs by applying an EOR to odd/even
     *          frame select signal and an n-line inversion signal.
     * FLD = 01b: 1 field interlaced scan, external display iface  Address counter updated in vertical direction; left to right;
     * vertical increment horizontal increment.
     * data format for 8bit transfer or spi = 65k (5,6,5)
     * Reverse order of RGB to BGR for 18bit data written to GRAM
     * Replace data on writing to GRAM  19 clocks,no equalization  Transfer mode for RGB interface disabled
     * internal clock operation;
     * System interface/VSYNC interface  Front porch lines: 8; Back porch lines: 8;  Scan mode by the gate driver in the non-display area: disabled;
     * Cycle of scan by the gate driver - set to 31frames(518ms), 
     * disabled by above setting  must be done before calling lcd_update()  op-amp stabilising time * Sequence according to datasheet, p. 130 * SAP2-0=100, BT2-0=101, AP2-0=100  GON=0, DTE=0, REV=1, D1-0=01  GON=1, DTE=0, REV=1, D1-0=01  GON=1, DTE=0, REV=1, D1-0=11  GON=1, DTE=1, REV=1, D1-0=11  LCD init  GPO46 is LCD RESET  Reset LCD  Configure DMA channel 3  DMA3 is mapped into vector 57 in system.c  Enable DMA3 interrupt at level 6, priority 0 * Off sequence according to datasheet, p. 130 * EQ=0, 18 clks/line  GON=1, DTE=1, REV=1, D1-0=10  GON=1, DTE=0, REV=1, D1-0=10  GON=0, DTE=0, D1-0=00  SAP2-0=000, AP2-0=000  PON=0  VCOMG=0  datasheet p. 131  STB=1: standby mode ** update functions ** Line write helper function for lcd_yuv_blit. Write two lines of yuv420.
 * y should have two lines of Y back to back, 2nd line first.
 * c should contain the Cb and Cr data for the two lines of Y back to back.
 * Needs EMAC set to saturated, signed integer mode.
  Performance function to blit a YUV bitmap directly to the LCD
 * src_x, src_y, width and height should be even
 * x, y, width and height have to be within LCD bounds
  IRAM Y, Cb and Cb buffers.  stay on the safe side  Set start position and window  LCD DMA ISR  Update the display.
   This must be called after all other LCD functions that change the display.  set start position window  Update a fraction of the display.  nothing to do  set update window **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2004 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Is the display turned on?  Needed for flip  The update functions use DMA and yield  register defines  called very frequently - inline!  called very frequently - inline! ** hardware configuration ** 224 lines, GS=SS=1  16 lines offset  4..223  224 lines, GS=SS=0  0..219  turn the display upside down (call lcd_update() afterwards) * Sequence according to datasheet, p. 132 * Start Oscilation  zero everything STB = 0, SLP = 0  GON = 0, DTE = 0, D1-0 = 00b  PON = 0  VCOMG = 0  initialise power supply  DC12-10 = 000b: Step-up1 = clock/8,
     * DC02-00 = 000b: Step-up2 = clock/16,
     * VC2-0   = 010b: VciOUT = 0.87 * VciLVL  VRH3-0 = 1000b: Vreg1OUT = REGP * 1.90  VDV4-0 = 00110b: VcomA = Vreg1OUT * 0.76,
     * VCM4-0 = 10000b: VcomH = Vreg1OUT * 0.70 AP2-0 = 100b, DK = 1  PON = 1  Step-up circuit stabilising time  start power supply  BT2-0 = 101b, DK = 0  VCOMG = 1  other settings  B/C = 1: n-line inversion form
     * EOR = 1: polarity inversion occurs by applying an EOR to odd/even
     *          frame select signal and an n-line inversion signal.
     * FLD = 01b: 1 field interlaced scan, external display iface  Address counter updated in vertical direction; left to right;
     * vertical increment horizontal increment.
     * data format for 8bit transfer or spi = 65k (5,6,5)
     * Reverse order of RGB to BGR for 18bit data written to GRAM
     * Replace data on writing to GRAM  19 clocks,no equalization  Transfer mode for RGB interface disabled
     * internal clock operation;
     * System interface/VSYNC interface  Front porch lines: 8; Back porch lines: 8;  Scan mode by the gate driver in the non-display area: disabled;
     * Cycle of scan by the gate driver - set to 31frames(518ms), 
     * disabled by above setting  must be done before calling lcd_update()  op-amp stabilising time * Sequence according to datasheet, p. 130 * SAP2-0=100, BT2-0=101, AP2-0=100  GON=0, DTE=0, REV=1, D1-0=01  GON=1, DTE=0, REV=1, D1-0=01  GON=1, DTE=0, REV=1, D1-0=11  GON=1, DTE=1, REV=1, D1-0=11  LCD init  GPO46 is LCD RESET  Reset LCD  Configure DMA channel 3  DMA3 is mapped into vector 57 in system.c  Enable DMA3 interrupt at level 6, priority 0 * Off sequence according to datasheet, p. 130 * EQ=0, 18 clks/line  GON=1, DTE=1, REV=1, D1-0=10  GON=1, DTE=0, REV=1, D1-0=10  GON=0, DTE=0, D1-0=00  SAP2-0=000, AP2-0=000  PON=0  VCOMG=0  datasheet p. 131  STB=1: standby mode ** update functions ** Line write helper function for lcd_yuv_blit. Write two lines of yuv420.
 * y should have two lines of Y back to back, 2nd line first.
 * c should contain the Cb and Cr data for the two lines of Y back to back.
 * Needs EMAC set to saturated, signed integer mode.
  Performance function to blit a YUV bitmap directly to the LCD
 * src_x, src_y, width and height should be even
 * x, y, width and height have to be within LCD bounds
  IRAM Y, Cb and Cb buffers.  stay on the safe side  Set start position and window  LCD DMA ISR  Update the display.
   This must be called after all other LCD functions that change the display.  set start position window  Update a fraction of the display.  nothing to do  set update window 