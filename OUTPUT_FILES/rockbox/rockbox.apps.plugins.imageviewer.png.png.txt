**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$id $
 *
 * Copyright (C) 2009 by Christophe Gouiran <bechris13250 -at- gmail -dot- com>
 *
 * Based on lodepng, a lightweight png decoder/encoder
 * (c) 2005-2008 Lode Vandevenne
 *
 * Copyright (c) 2010 Marcin Bukat
 *  - pixel format conversion & transparency handling
 *  - adaptation of tinf (tiny inflate library)
 *  - code refactoring & cleanups
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** decoder context struct  use a common snprintf() buffer  decompressed image in the possible sizes (1,2,4,8), wasting the other  hack: fix error "undefined reference to `_grey_info'".  USEGSLIB  measured ticks  used to center output  cleanup  align buffer  load file to the end of the buffer  running slideshow and time is long enough: power down disk  Initialize decoder context struct, set buffer decoder is free
         * to use.
         * Decoder assumes that raw image file is loaded at the very
         * end of the allocated buffer
          read file header; file is loaded at the end
         * of the allocated buffer
          the actual decoding HAVE_ADJUSTABLE_CPU_FREQ centered in progress bar  short cut  we still have it  assign image buffer  have to discard the current  invalidate all bitmaps  start again from the beginning of the buffer HAVE_ADJUSTABLE_CPU_FREQ**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$id $
 *
 * Copyright (C) 2009 by Christophe Gouiran <bechris13250 -at- gmail -dot- com>
 *
 * Based on lodepng, a lightweight png decoder/encoder
 * (c) 2005-2008 Lode Vandevenne
 *
 * Copyright (c) 2010 Marcin Bukat
 *  - pixel format conversion & transparency handling
 *  - adaptation of tinf (tiny inflate library)
 *  - code refactoring & cleanups
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** decoder context struct  use a common snprintf() buffer  decompressed image in the possible sizes (1,2,4,8), wasting the other  hack: fix error "undefined reference to `_grey_info'".  USEGSLIB  measured ticks  used to center output  cleanup  align buffer  load file to the end of the buffer  running slideshow and time is long enough: power down disk  Initialize decoder context struct, set buffer decoder is free
         * to use.
         * Decoder assumes that raw image file is loaded at the very
         * end of the allocated buffer
          read file header; file is loaded at the end
         * of the allocated buffer
          the actual decoding HAVE_ADJUSTABLE_CPU_FREQ centered in progress bar  short cut  we still have it  assign image buffer  have to discard the current  invalidate all bitmaps  start again from the beginning of the buffer HAVE_ADJUSTABLE_CPU_FREQ**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$id $
 *
 * Copyright (C) 2009 by Christophe Gouiran <bechris13250 -at- gmail -dot- com>
 *
 * Based on lodepng, a lightweight png decoder/encoder
 * (c) 2005-2008 Lode Vandevenne
 *
 * Copyright (c) 2010 Marcin Bukat
 *  - pixel format conversion & transparency handling
 *  - adaptation of tinf (tiny inflate library)
 *  - code refactoring & cleanups
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** decoder context struct  use a common snprintf() buffer  decompressed image in the possible sizes (1,2,4,8), wasting the other  hack: fix error "undefined reference to `_grey_info'".  USEGSLIB  measured ticks  used to center output  cleanup  align buffer  load file to the end of the buffer  running slideshow and time is long enough: power down disk  Initialize decoder context struct, set buffer decoder is free
         * to use.
         * Decoder assumes that raw image file is loaded at the very
         * end of the allocated buffer
          read file header; file is loaded at the end
         * of the allocated buffer
          the actual decoding HAVE_ADJUSTABLE_CPU_FREQ centered in progress bar  short cut  we still have it  assign image buffer  have to discard the current  invalidate all bitmaps  start again from the beginning of the buffer HAVE_ADJUSTABLE_CPU_FREQ