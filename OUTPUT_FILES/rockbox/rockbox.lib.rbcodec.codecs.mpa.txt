**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************thread should die TODO: what latency does layer 1 have?  We do this so libmad doesn't try to call codec_calloc(). This needs to
     * be called before mad_stream_init(), mad_frame_inti() and 
     * mad_synth_init().  Call mad initialization. Those will zero the arrays frame.overlap,
     * frame.sbsample and frame.sbsample_prev. Therefore there is no need to 
     * zero them here.  Convert newtime and id3->length to seconds to
         * avoid overflow  Use the TOC to find the new position  Use the remainder to get a more accurate position  No TOC exists, estimate the new position  Don't seek right to the end of the file so that we can
       transition properly to the next song  id3->filesize excludes id3->first_frame_offset, so add it now  calculate elapsed time using TOC  find wich percent we're at  set time for this percent (divide before multiply to prevent
               overflow on long files. loss of precision is negligible on
               short files)  calculate remainder time  no TOC exists. set a rough estimate using average bitrate  constant bitrate, use exact calculation 
 * Run the synthesis filter on the COProcessor 
  wait for the synth thread to go idle which indicates a PCM frame has been
 * synthesized  increment the done semaphore - used after a wait for idle to preserve the
 * semaphore count  after synth thread has gone idle - switch decoded frames and commence
 * synthesis on it circular buffer that holds 2 frames' samples mop up COP thread  MPA_SYNTH_ON_COP  this is the codec entry point  Create a decoder instance  does nothing on 1 processor systems except return true  mop up COP thread - MT only  this is called for each file to process  samples to skip in total for this file (at start)  to help mad decode the last frame  Reinitializing seems to be necessary to avoid playback quircks when seeking.  Have elapsed time but not offset  We want to skip this amount anyway  Libmad will not decode the last frame without 8 bytes of extra padding
       in the buffer. So, we can trick libmad into not decoding the last frame
       if we are to skip it entirely and then cut the appropriate samples from
       final frame that we did decode. Note, if all tags (ID3, APE) are not
       properly stripped from the end of the file, this trick will not work.  Don't skip any samples unless we start at the beginning.  This is the decoding loop. make sure the synth thread is idle before seeking - MT only Lock buffers  This makes the codec support partially corrupted files  Fill the buffer  Must get new inputbuffer next time  Probably syncing after a seek  Some other unrecoverable error  Do the pcmbuf insert here. Note, this is the PREVIOUS frame's pcm
           data (not the one just decoded above). When we exit the decoding
           loop we will need to process the final frame that was decoded.  In case of a mono file, the second array will be ignored.  Only skip samples for the first frame added.  Initiate PCM synthesis on the COP (MT) or perform it here (ST)  Check if sample rate and stereo settings changed in this frame.  Must get new inputbuffer next time  wait for synth idle - MT only Finish the remaining decoded frame.
       Cut the required samples from the end. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************thread should die TODO: what latency does layer 1 have?  We do this so libmad doesn't try to call codec_calloc(). This needs to
     * be called before mad_stream_init(), mad_frame_inti() and 
     * mad_synth_init().  Call mad initialization. Those will zero the arrays frame.overlap,
     * frame.sbsample and frame.sbsample_prev. Therefore there is no need to 
     * zero them here.  Convert newtime and id3->length to seconds to
         * avoid overflow  Use the TOC to find the new position  Use the remainder to get a more accurate position  No TOC exists, estimate the new position  Don't seek right to the end of the file so that we can
       transition properly to the next song  id3->filesize excludes id3->first_frame_offset, so add it now  calculate elapsed time using TOC  find wich percent we're at  set time for this percent (divide before multiply to prevent
               overflow on long files. loss of precision is negligible on
               short files)  calculate remainder time  no TOC exists. set a rough estimate using average bitrate  constant bitrate, use exact calculation 
 * Run the synthesis filter on the COProcessor 
  wait for the synth thread to go idle which indicates a PCM frame has been
 * synthesized  increment the done semaphore - used after a wait for idle to preserve the
 * semaphore count  after synth thread has gone idle - switch decoded frames and commence
 * synthesis on it circular buffer that holds 2 frames' samples mop up COP thread  MPA_SYNTH_ON_COP  this is the codec entry point  Create a decoder instance  does nothing on 1 processor systems except return true  mop up COP thread - MT only  this is called for each file to process  samples to skip in total for this file (at start)  to help mad decode the last frame  Reinitializing seems to be necessary to avoid playback quircks when seeking.  Have elapsed time but not offset  We want to skip this amount anyway  Libmad will not decode the last frame without 8 bytes of extra padding
       in the buffer. So, we can trick libmad into not decoding the last frame
       if we are to skip it entirely and then cut the appropriate samples from
       final frame that we did decode. Note, if all tags (ID3, APE) are not
       properly stripped from the end of the file, this trick will not work.  Don't skip any samples unless we start at the beginning.  This is the decoding loop. make sure the synth thread is idle before seeking - MT only Lock buffers  This makes the codec support partially corrupted files  Fill the buffer  Must get new inputbuffer next time  Probably syncing after a seek  Some other unrecoverable error  Do the pcmbuf insert here. Note, this is the PREVIOUS frame's pcm
           data (not the one just decoded above). When we exit the decoding
           loop we will need to process the final frame that was decoded.  In case of a mono file, the second array will be ignored.  Only skip samples for the first frame added.  Initiate PCM synthesis on the COP (MT) or perform it here (ST)  Check if sample rate and stereo settings changed in this frame.  Must get new inputbuffer next time  wait for synth idle - MT only Finish the remaining decoded frame.
       Cut the required samples from the end. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************thread should die TODO: what latency does layer 1 have?  We do this so libmad doesn't try to call codec_calloc(). This needs to
     * be called before mad_stream_init(), mad_frame_inti() and 
     * mad_synth_init().  Call mad initialization. Those will zero the arrays frame.overlap,
     * frame.sbsample and frame.sbsample_prev. Therefore there is no need to 
     * zero them here.  Convert newtime and id3->length to seconds to
         * avoid overflow  Use the TOC to find the new position  Use the remainder to get a more accurate position  No TOC exists, estimate the new position  Don't seek right to the end of the file so that we can
       transition properly to the next song  id3->filesize excludes id3->first_frame_offset, so add it now  calculate elapsed time using TOC  find wich percent we're at  set time for this percent (divide before multiply to prevent
               overflow on long files. loss of precision is negligible on
               short files)  calculate remainder time  no TOC exists. set a rough estimate using average bitrate  constant bitrate, use exact calculation 
 * Run the synthesis filter on the COProcessor 
  wait for the synth thread to go idle which indicates a PCM frame has been
 * synthesized  increment the done semaphore - used after a wait for idle to preserve the
 * semaphore count  after synth thread has gone idle - switch decoded frames and commence
 * synthesis on it circular buffer that holds 2 frames' samples mop up COP thread  MPA_SYNTH_ON_COP  this is the codec entry point  Create a decoder instance  does nothing on 1 processor systems except return true  mop up COP thread - MT only  this is called for each file to process  samples to skip in total for this file (at start)  to help mad decode the last frame  Reinitializing seems to be necessary to avoid playback quircks when seeking.  Have elapsed time but not offset  We want to skip this amount anyway  Libmad will not decode the last frame without 8 bytes of extra padding
       in the buffer. So, we can trick libmad into not decoding the last frame
       if we are to skip it entirely and then cut the appropriate samples from
       final frame that we did decode. Note, if all tags (ID3, APE) are not
       properly stripped from the end of the file, this trick will not work.  Don't skip any samples unless we start at the beginning.  This is the decoding loop. make sure the synth thread is idle before seeking - MT only Lock buffers  This makes the codec support partially corrupted files  Fill the buffer  Must get new inputbuffer next time  Probably syncing after a seek  Some other unrecoverable error  Do the pcmbuf insert here. Note, this is the PREVIOUS frame's pcm
           data (not the one just decoded above). When we exit the decoding
           loop we will need to process the final frame that was decoded.  In case of a mono file, the second array will be ignored.  Only skip samples for the first frame added.  Initiate PCM synthesis on the COP (MT) or perform it here (ST)  Check if sample rate and stereo settings changed in this frame.  Must get new inputbuffer next time  wait for synth idle - MT only Finish the remaining decoded frame.
       Cut the required samples from the end. 