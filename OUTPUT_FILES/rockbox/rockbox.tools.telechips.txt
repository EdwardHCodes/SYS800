**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Telechips firmware checksum support for scramble
 *
 * Copyright (C) 2007 Dave Chapman
 *
 * Thanks to Hein-Pieter van Braam for his work in identifying the
 * CRC algorithm used.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Simple implementation of a function to reverse the bottom n bits in x  Generate a lookup table for a reverse CRC32  Perform a reverse CRC32  Endian-safe functions to read/write a 32-bit little-endian integer  A simple checksum - seems to be used by the TCC76x firmwares  Set checksum field to 0  Perform a simple sum, treating the file as a series of 32-bit
       little-endian integers  Negate the sum - this means that the sum of the whole file
       (including this value) will be equal to zero  Set the checksum field  Two reverse CRC32 checksums - seems to be used by the TCC77x firmwares  Generate the CRC table  Clear the existing CRC values  Write the length  Calculate the first CRC - over the entire file  What happens next depends on the filesize **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Telechips firmware checksum support for scramble
 *
 * Copyright (C) 2007 Dave Chapman
 *
 * Thanks to Hein-Pieter van Braam for his work in identifying the
 * CRC algorithm used.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Simple implementation of a function to reverse the bottom n bits in x  Generate a lookup table for a reverse CRC32  Perform a reverse CRC32  Endian-safe functions to read/write a 32-bit little-endian integer  A simple checksum - seems to be used by the TCC76x firmwares  Set checksum field to 0  Perform a simple sum, treating the file as a series of 32-bit
       little-endian integers  Negate the sum - this means that the sum of the whole file
       (including this value) will be equal to zero  Set the checksum field  Two reverse CRC32 checksums - seems to be used by the TCC77x firmwares  Generate the CRC table  Clear the existing CRC values  Write the length  Calculate the first CRC - over the entire file  What happens next depends on the filesize **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Telechips firmware checksum support for scramble
 *
 * Copyright (C) 2007 Dave Chapman
 *
 * Thanks to Hein-Pieter van Braam for his work in identifying the
 * CRC algorithm used.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Simple implementation of a function to reverse the bottom n bits in x  Generate a lookup table for a reverse CRC32  Perform a reverse CRC32  Endian-safe functions to read/write a 32-bit little-endian integer  A simple checksum - seems to be used by the TCC76x firmwares  Set checksum field to 0  Perform a simple sum, treating the file as a series of 32-bit
       little-endian integers  Negate the sum - this means that the sum of the whole file
       (including this value) will be equal to zero  Set the checksum field  Two reverse CRC32 checksums - seems to be used by the TCC77x firmwares  Generate the CRC table  Clear the existing CRC values  Write the length  Calculate the first CRC - over the entire file  What happens next depends on the filesize 