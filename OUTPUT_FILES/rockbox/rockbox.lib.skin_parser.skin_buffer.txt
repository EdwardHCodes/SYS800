**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id: skin_buffer.c 25962 2010-05-12 09:31:40Z jdgordon $
 *
 * Copyright (C) 2002 by Linus Nielsen Feltzing
 * Copyright (C) 2010 Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ******************************************************************************************************************************************************
 * 
 *  This code handles buffer allocation for the entire skin system.
 *  This needs to work in 3 different situations:
 *    1) as a stand alone library. ROCKBOX isnt defined, alloc using malloc()
 *       and free the skin elements only (no callbacks doing more allocation)
 *    2) ROCKBOX builds for normal targets, alloc from a single big buffer
 *       which origionally came from the audio buffer, likely to run out of
 *       room with large themes. No need to free anything, just restore to
 *       the start of our buffer
 *    3) ROCKBOX "application/hosted" builds, alloc using the hosts malloc().
 *       We need to keep track of all allocations so they can be free()'d easily
 * 
 * 
 *************************************************************************** Allocate size bytes from the buffer  32-bit aligned  get the number of bytes currently being used **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id: skin_buffer.c 25962 2010-05-12 09:31:40Z jdgordon $
 *
 * Copyright (C) 2002 by Linus Nielsen Feltzing
 * Copyright (C) 2010 Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ******************************************************************************************************************************************************
 * 
 *  This code handles buffer allocation for the entire skin system.
 *  This needs to work in 3 different situations:
 *    1) as a stand alone library. ROCKBOX isnt defined, alloc using malloc()
 *       and free the skin elements only (no callbacks doing more allocation)
 *    2) ROCKBOX builds for normal targets, alloc from a single big buffer
 *       which origionally came from the audio buffer, likely to run out of
 *       room with large themes. No need to free anything, just restore to
 *       the start of our buffer
 *    3) ROCKBOX "application/hosted" builds, alloc using the hosts malloc().
 *       We need to keep track of all allocations so they can be free()'d easily
 * 
 * 
 *************************************************************************** Allocate size bytes from the buffer  32-bit aligned  get the number of bytes currently being used **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id: skin_buffer.c 25962 2010-05-12 09:31:40Z jdgordon $
 *
 * Copyright (C) 2002 by Linus Nielsen Feltzing
 * Copyright (C) 2010 Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ******************************************************************************************************************************************************
 * 
 *  This code handles buffer allocation for the entire skin system.
 *  This needs to work in 3 different situations:
 *    1) as a stand alone library. ROCKBOX isnt defined, alloc using malloc()
 *       and free the skin elements only (no callbacks doing more allocation)
 *    2) ROCKBOX builds for normal targets, alloc from a single big buffer
 *       which origionally came from the audio buffer, likely to run out of
 *       room with large themes. No need to free anything, just restore to
 *       the start of our buffer
 *    3) ROCKBOX "application/hosted" builds, alloc using the hosts malloc().
 *       We need to keep track of all allocations so they can be free()'d easily
 * 
 * 
 *************************************************************************** Allocate size bytes from the buffer  32-bit aligned  get the number of bytes currently being used 