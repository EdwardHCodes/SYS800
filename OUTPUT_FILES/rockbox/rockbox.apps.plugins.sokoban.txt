**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Eric Linenberg
 * February 2003: Robert Hak performs a cleanup/rewrite/feature addition.
 *                Eric smiles.  Bjorn cries.  Linus say 'huh?'.
 * March 2007: Sean Morrisey performs a major rewrite/feature addition.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** If tilesize is 0 (which it is during dependency generation) gcc will abort
   (div by 0) and this plugin won't get any dependencies
 SOKOBAN_TILESIZE is the number of pixels for each block.
 * Set dynamically so all targets can support levels
 * that fill their entire screen, less the stat box.
 * 16 rows & 20 cols minimum  horizontal layout wide or narrow stats box  vertical layout size of code+bss  20k  + 4k  Use either all but code & undo of the plugin buffer for level data
 * or 128k, which ever is less  Number of levels for which to allocate buffer indexes  Use remaining plugin buffer (- code prog) for undo, up to 64k  Move/push definitions for undo  variable button definitions  FIXME: if/when simultaneous button presses work for X5/M5,
 * add level up/down #define SOKOBAN_LEVEL_DOWN (BUTTON_POWER|BUTTON_REL)#define SOKOBAN_LEVEL_REPEAT (BUTTON_CENTER|BUTTON_REPEAT)#define SOKOBAN_LEVEL_UP (BUTTON_MENU|BUTTON_REPEAT) The Location, Undo and LevelInfo structs are OO-flavored.
 * (oooh!-flavored as Schnueff puts it.)  It makes more you have to know,
 * but the overall data layout becomes more manageable.  Level data & stats  Level index (level number - 1)  Moves & pushes for the stats  Number of unplaced boxes remaining in level  Height & width for centering level display  Our full undo history  How many undos have been done  Which history is the current undo  Which history is the max redoable  Our playing board  The current board data  Level data & stats  Where the player is  The number of levels we have  Filename of the levelset we're using  Buffered level data  Where each buffered board begins & ends  Index of first buffered board  Index of last buffered board  Number of boards before current to store  Enough for a whole board or a filename  delta row & delta col  If no more undos or we've wrapped all the way around, quit  Move to previous undo in the list  Give the 3 spaces we're going to use better names  Update board info  Moving box from goal to floor  Moving box from floor to goal  Move box off of next space...  ...and on to current space  Just move player off of current space  Move player back to previous space  Update position  Wrap around if MAX_UNDOS exceeded  delta row & delta col  Check for out-of-bounds  Give the 3 spaces we're going to use better names  Change direction from move to push for undo  Change back to move if redo/solution playback push is invalid  Update board info  Moving box from goal to floor  Moving box from floor to goal  Check for invalid move  Move player onto next space  Move box onto space beyond next  Check for invalid move  Move player onto next space  Move player off of current space  Update position  Update undo_info.max to current on every normal move,
     * except if it's the same as a redo.  normal move and either  moves have been undone...  ...and the current move is NOT the same as the one in history  or moves have not been undone  redo move or move was same as redo  add_undo to update current  If no moves have been undone, quit  Get the index of the first level to buffer  Correct len when trailing \r's or \n's are counted  Skip short lines & lines with non-level data  Set the index of this level  Copy buffer to board data  If newline & level is tall enough or is RLE  Set the index of the end of the last level  Get the buffered board index of the current level  Reset level info  Clear board  Update max width of level & go to next row  Read RLE character's length into n  Cleanup & replace  Put RLE character n times  Fill in blank space outside level on color targets  load the board to the screen  blank space outside of level  floor  wall  box  box on goal  goal  player  player on goal  print out the screen  Create dir if it doesn't exist  Sokoban: S/P for solution/progress : level number : current undo  Filename of levelset  Full undo history  Read header, level number, & current undo  If we're opening a level file, not a solution/progress file  If there aren't any boxes to go or the player position wasn't set,
         * the file probably wasn't a Sokoban level file  Read filename of levelset  Read full undo history  Correct len when trailing \r's or \n's are counted  Check to see if we're going to play a solution or resume progress  Get level number  Get undo index  Replay solution until menu button is pressed  Pretend the level is complete so we'll quit  Toggle pause state  Go back one move  Go forward one move  Speed up  Slow down  If level is complete, wait for keypress before quitting  Advance to current undo  Resume  Select level  Audio playback control  Keys  Display until keypress  Load default levelset  Quit  Quit  Save & quit  Restore font  fallthrough  Quit  Save & quit  repeat can't work here for Ondio, iPod, et al  next level  previous level  same level  We have completed this level  Show level complete message & stats  Display for 4 seconds or until new keypress  Set filename to current levelset plus level number
                         * and .sok extension. Use SAVE_FOLDER if using the
                         * default levelset, since it's in a hidden folder.  Restore font  clear undo stats  Show levelset complete message  Display for 4 seconds or until keypress  Reset to first level & show quit menu  Quit  Save & quit  end while  Show title for 1 second  Attempt to resume saved progress, otherwise start at beginning  The plugin is being used to open a file  If we loaded & played a solution, quit **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Eric Linenberg
 * February 2003: Robert Hak performs a cleanup/rewrite/feature addition.
 *                Eric smiles.  Bjorn cries.  Linus say 'huh?'.
 * March 2007: Sean Morrisey performs a major rewrite/feature addition.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** If tilesize is 0 (which it is during dependency generation) gcc will abort
   (div by 0) and this plugin won't get any dependencies
 SOKOBAN_TILESIZE is the number of pixels for each block.
 * Set dynamically so all targets can support levels
 * that fill their entire screen, less the stat box.
 * 16 rows & 20 cols minimum  horizontal layout wide or narrow stats box  vertical layout size of code+bss  20k  + 4k  Use either all but code & undo of the plugin buffer for level data
 * or 128k, which ever is less  Number of levels for which to allocate buffer indexes  Use remaining plugin buffer (- code prog) for undo, up to 64k  Move/push definitions for undo  variable button definitions  FIXME: if/when simultaneous button presses work for X5/M5,
 * add level up/down #define SOKOBAN_LEVEL_DOWN (BUTTON_POWER|BUTTON_REL)#define SOKOBAN_LEVEL_REPEAT (BUTTON_CENTER|BUTTON_REPEAT)#define SOKOBAN_LEVEL_UP (BUTTON_MENU|BUTTON_REPEAT) The Location, Undo and LevelInfo structs are OO-flavored.
 * (oooh!-flavored as Schnueff puts it.)  It makes more you have to know,
 * but the overall data layout becomes more manageable.  Level data & stats  Level index (level number - 1)  Moves & pushes for the stats  Number of unplaced boxes remaining in level  Height & width for centering level display  Our full undo history  How many undos have been done  Which history is the current undo  Which history is the max redoable  Our playing board  The current board data  Level data & stats  Where the player is  The number of levels we have  Filename of the levelset we're using  Buffered level data  Where each buffered board begins & ends  Index of first buffered board  Index of last buffered board  Number of boards before current to store  Enough for a whole board or a filename  delta row & delta col  If no more undos or we've wrapped all the way around, quit  Move to previous undo in the list  Give the 3 spaces we're going to use better names  Update board info  Moving box from goal to floor  Moving box from floor to goal  Move box off of next space...  ...and on to current space  Just move player off of current space  Move player back to previous space  Update position  Wrap around if MAX_UNDOS exceeded  delta row & delta col  Check for out-of-bounds  Give the 3 spaces we're going to use better names  Change direction from move to push for undo  Change back to move if redo/solution playback push is invalid  Update board info  Moving box from goal to floor  Moving box from floor to goal  Check for invalid move  Move player onto next space  Move box onto space beyond next  Check for invalid move  Move player onto next space  Move player off of current space  Update position  Update undo_info.max to current on every normal move,
     * except if it's the same as a redo.  normal move and either  moves have been undone...  ...and the current move is NOT the same as the one in history  or moves have not been undone  redo move or move was same as redo  add_undo to update current  If no moves have been undone, quit  Get the index of the first level to buffer  Correct len when trailing \r's or \n's are counted  Skip short lines & lines with non-level data  Set the index of this level  Copy buffer to board data  If newline & level is tall enough or is RLE  Set the index of the end of the last level  Get the buffered board index of the current level  Reset level info  Clear board  Update max width of level & go to next row  Read RLE character's length into n  Cleanup & replace  Put RLE character n times  Fill in blank space outside level on color targets  load the board to the screen  blank space outside of level  floor  wall  box  box on goal  goal  player  player on goal  print out the screen  Create dir if it doesn't exist  Sokoban: S/P for solution/progress : level number : current undo  Filename of levelset  Full undo history  Read header, level number, & current undo  If we're opening a level file, not a solution/progress file  If there aren't any boxes to go or the player position wasn't set,
         * the file probably wasn't a Sokoban level file  Read filename of levelset  Read full undo history  Correct len when trailing \r's or \n's are counted  Check to see if we're going to play a solution or resume progress  Get level number  Get undo index  Replay solution until menu button is pressed  Pretend the level is complete so we'll quit  Toggle pause state  Go back one move  Go forward one move  Speed up  Slow down  If level is complete, wait for keypress before quitting  Advance to current undo  Resume  Select level  Audio playback control  Keys  Display until keypress  Load default levelset  Quit  Quit  Save & quit  Restore font  fallthrough  Quit  Save & quit  repeat can't work here for Ondio, iPod, et al  next level  previous level  same level  We have completed this level  Show level complete message & stats  Display for 4 seconds or until new keypress  Set filename to current levelset plus level number
                         * and .sok extension. Use SAVE_FOLDER if using the
                         * default levelset, since it's in a hidden folder.  Restore font  clear undo stats  Show levelset complete message  Display for 4 seconds or until keypress  Reset to first level & show quit menu  Quit  Save & quit  end while  Show title for 1 second  Attempt to resume saved progress, otherwise start at beginning  The plugin is being used to open a file  If we loaded & played a solution, quit **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Eric Linenberg
 * February 2003: Robert Hak performs a cleanup/rewrite/feature addition.
 *                Eric smiles.  Bjorn cries.  Linus say 'huh?'.
 * March 2007: Sean Morrisey performs a major rewrite/feature addition.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** If tilesize is 0 (which it is during dependency generation) gcc will abort
   (div by 0) and this plugin won't get any dependencies
 SOKOBAN_TILESIZE is the number of pixels for each block.
 * Set dynamically so all targets can support levels
 * that fill their entire screen, less the stat box.
 * 16 rows & 20 cols minimum  horizontal layout wide or narrow stats box  vertical layout size of code+bss  20k  + 4k  Use either all but code & undo of the plugin buffer for level data
 * or 128k, which ever is less  Number of levels for which to allocate buffer indexes  Use remaining plugin buffer (- code prog) for undo, up to 64k  Move/push definitions for undo  variable button definitions  FIXME: if/when simultaneous button presses work for X5/M5,
 * add level up/down #define SOKOBAN_LEVEL_DOWN (BUTTON_POWER|BUTTON_REL)#define SOKOBAN_LEVEL_REPEAT (BUTTON_CENTER|BUTTON_REPEAT)#define SOKOBAN_LEVEL_UP (BUTTON_MENU|BUTTON_REPEAT) The Location, Undo and LevelInfo structs are OO-flavored.
 * (oooh!-flavored as Schnueff puts it.)  It makes more you have to know,
 * but the overall data layout becomes more manageable.  Level data & stats  Level index (level number - 1)  Moves & pushes for the stats  Number of unplaced boxes remaining in level  Height & width for centering level display  Our full undo history  How many undos have been done  Which history is the current undo  Which history is the max redoable  Our playing board  The current board data  Level data & stats  Where the player is  The number of levels we have  Filename of the levelset we're using  Buffered level data  Where each buffered board begins & ends  Index of first buffered board  Index of last buffered board  Number of boards before current to store  Enough for a whole board or a filename  delta row & delta col  If no more undos or we've wrapped all the way around, quit  Move to previous undo in the list  Give the 3 spaces we're going to use better names  Update board info  Moving box from goal to floor  Moving box from floor to goal  Move box off of next space...  ...and on to current space  Just move player off of current space  Move player back to previous space  Update position  Wrap around if MAX_UNDOS exceeded  delta row & delta col  Check for out-of-bounds  Give the 3 spaces we're going to use better names  Change direction from move to push for undo  Change back to move if redo/solution playback push is invalid  Update board info  Moving box from goal to floor  Moving box from floor to goal  Check for invalid move  Move player onto next space  Move box onto space beyond next  Check for invalid move  Move player onto next space  Move player off of current space  Update position  Update undo_info.max to current on every normal move,
     * except if it's the same as a redo.  normal move and either  moves have been undone...  ...and the current move is NOT the same as the one in history  or moves have not been undone  redo move or move was same as redo  add_undo to update current  If no moves have been undone, quit  Get the index of the first level to buffer  Correct len when trailing \r's or \n's are counted  Skip short lines & lines with non-level data  Set the index of this level  Copy buffer to board data  If newline & level is tall enough or is RLE  Set the index of the end of the last level  Get the buffered board index of the current level  Reset level info  Clear board  Update max width of level & go to next row  Read RLE character's length into n  Cleanup & replace  Put RLE character n times  Fill in blank space outside level on color targets  load the board to the screen  blank space outside of level  floor  wall  box  box on goal  goal  player  player on goal  print out the screen  Create dir if it doesn't exist  Sokoban: S/P for solution/progress : level number : current undo  Filename of levelset  Full undo history  Read header, level number, & current undo  If we're opening a level file, not a solution/progress file  If there aren't any boxes to go or the player position wasn't set,
         * the file probably wasn't a Sokoban level file  Read filename of levelset  Read full undo history  Correct len when trailing \r's or \n's are counted  Check to see if we're going to play a solution or resume progress  Get level number  Get undo index  Replay solution until menu button is pressed  Pretend the level is complete so we'll quit  Toggle pause state  Go back one move  Go forward one move  Speed up  Slow down  If level is complete, wait for keypress before quitting  Advance to current undo  Resume  Select level  Audio playback control  Keys  Display until keypress  Load default levelset  Quit  Quit  Save & quit  Restore font  fallthrough  Quit  Save & quit  repeat can't work here for Ondio, iPod, et al  next level  previous level  same level  We have completed this level  Show level complete message & stats  Display for 4 seconds or until new keypress  Set filename to current levelset plus level number
                         * and .sok extension. Use SAVE_FOLDER if using the
                         * default levelset, since it's in a hidden folder.  Restore font  clear undo stats  Show levelset complete message  Display for 4 seconds or until keypress  Reset to first level & show quit menu  Quit  Save & quit  end while  Show title for 1 second  Attempt to resume saved progress, otherwise start at beginning  The plugin is being used to open a file  If we loaded & played a solution, quit 