
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Microsoft WAVE file loading routines  * *  Set the rogue pointer to the MS_ADPCM specific data  Allocate the proper sized output buffer  Get ready... Go!  Grab the initial information for this block  Store the two initial samples we start with  Decode and store the other samples in this block  * *  Set the rogue pointer to the IMA_ADPCM specific data  Compute difference and new sample value  Update index value  Clamp output sample  Fill the decode buffer with a channel block of data (8 samples)  Check to make sure we have enough variables in the state array  Allocate the proper sized output buffer  Get ready... Go!  Grab the initial information for this block  Fill the state information for this block  Reserved byte in buffer header, should be 0  Uh oh, corrupt data?  Buggy code?  Store the initial sample we start with  Decode and store the other samples in this block  WAV magic header  FMT chunk  Make sure we are passed a valid data source  Check the magic header  The RIFFchunk has already been read  for WAVE  Read the audio data format chunk  2 Uint32's for chunk header+len, plus the lenread  Decode the audio data format  We can understand this  Try to understand this  Try to understand this  Good default buffer size  Read the audio data chunk  for the data chunk and len  Don't return a buffer that isn't a multiple of samplesize  seek to the end of the file (given by the RIFF chunk)  Since the WAV memory is allocated in the shared library, it must also
   be freed here.  (Necessary under Win32, VC++)
 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Microsoft WAVE file loading routines  * *  Set the rogue pointer to the MS_ADPCM specific data  Allocate the proper sized output buffer  Get ready... Go!  Grab the initial information for this block  Store the two initial samples we start with  Decode and store the other samples in this block  * *  Set the rogue pointer to the IMA_ADPCM specific data  Compute difference and new sample value  Update index value  Clamp output sample  Fill the decode buffer with a channel block of data (8 samples)  Check to make sure we have enough variables in the state array  Allocate the proper sized output buffer  Get ready... Go!  Grab the initial information for this block  Fill the state information for this block  Reserved byte in buffer header, should be 0  Uh oh, corrupt data?  Buggy code?  Store the initial sample we start with  Decode and store the other samples in this block  WAV magic header  FMT chunk  Make sure we are passed a valid data source  Check the magic header  The RIFFchunk has already been read  for WAVE  Read the audio data format chunk  2 Uint32's for chunk header+len, plus the lenread  Decode the audio data format  We can understand this  Try to understand this  Try to understand this  Good default buffer size  Read the audio data chunk  for the data chunk and len  Don't return a buffer that isn't a multiple of samplesize  seek to the end of the file (given by the RIFF chunk)  Since the WAV memory is allocated in the shared library, it must also
   be freed here.  (Necessary under Win32, VC++)
 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Microsoft WAVE file loading routines  * *  Set the rogue pointer to the MS_ADPCM specific data  Allocate the proper sized output buffer  Get ready... Go!  Grab the initial information for this block  Store the two initial samples we start with  Decode and store the other samples in this block  * *  Set the rogue pointer to the IMA_ADPCM specific data  Compute difference and new sample value  Update index value  Clamp output sample  Fill the decode buffer with a channel block of data (8 samples)  Check to make sure we have enough variables in the state array  Allocate the proper sized output buffer  Get ready... Go!  Grab the initial information for this block  Fill the state information for this block  Reserved byte in buffer header, should be 0  Uh oh, corrupt data?  Buggy code?  Store the initial sample we start with  Decode and store the other samples in this block  WAV magic header  FMT chunk  Make sure we are passed a valid data source  Check the magic header  The RIFFchunk has already been read  for WAVE  Read the audio data format chunk  2 Uint32's for chunk header+len, plus the lenread  Decode the audio data format  We can understand this  Try to understand this  Try to understand this  Good default buffer size  Read the audio data chunk  for the data chunk and len  Don't return a buffer that isn't a multiple of samplesize  seek to the end of the file (given by the RIFF chunk)  Since the WAV memory is allocated in the shared library, it must also
   be freed here.  (Necessary under Win32, VC++)
 