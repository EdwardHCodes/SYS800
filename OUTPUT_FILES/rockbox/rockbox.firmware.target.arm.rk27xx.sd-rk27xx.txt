**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Daniel Ankers
 * Copyright © 2008-2009 Rafaël Carré
 * Copyright (C) 2011 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** for HAVE_MULTIVOLUME  debug stuff  for compatibility  enable or disable clock signal for SD module  interrupt handler for SD  disable sd interrupts, clear pending interrupts  cmd and response status pending  get the status  data transfer status pending  Exchange buffers - the one where SD module puts into/reads from
 * data and the one controlled by MCU. This allows some overlap
 * in transfer operations and should increase throuput.
  Reset internal pointers of the MMU submodule  PC7, active low  PF2, active low  PC7, active high  TODO: find out pin  Send command to the SD card. Command finish is signaled in ISR   Handle command responses & errors  for some misterious reason the card does not report itself as being in TRAN
 * but transfers are successful. Rockchip OF does not check the card state
 * after SELECT. I checked two different cards.
   assume 50 MHz APB freq / 125 = 400 kHz   100 - 400kHz clock required for Identification Mode    Start of Card Identification Mode *********************************** CMD0 Go Idle   CMD8 Check for v2 sd card.  Must be sent before using ACMD41
      Non v2 cards will not respond to this command Timeout for inintialization is 2 sec.
       According to SD Specification 2.00 it should be >= 1,
       but it's not enough in some rare cases.  this timeout is the only valid error for this loop bus conflict otherwise  ACMD41 For v2 cards set HCS bit[30] & send host voltage range to all  CMD2 send CID  CMD3 send RCA   End of Card Identification Mode   *********************************** CMD9 send CSD  CMD6   Card back to full speed  25MHz reset SD module  set pins functions as SD signals  enable and unmask SD interrupts in interrupt controller  setup mmu buffers  setup A2A DMA CH0 for SD reads  setup A2A DMA CH1 for SD writes  src and dst for CH0 and CH1 is AHB0  setup Timer1 for profiling purposes  burst 16  fixed src  DMA start  word transfer size  software mode  wait for DMA engine to finish transfer  burst 16  fixed dst  DMA start  word transfer size  software mode  wait for DMA engine to finish transfer  not SDHC  reset retry flag  last block to transfer  more than one block to transfer  issue read command to the card  debug stuff  wait for transfer completion  debug stuff  data transfer error  exchange buffers  last block to transfer  more than one block to transfer  while (cnt > 0)  transfer successfull - leave retry loop  while (retry_cnt++ < 20)  Not tested  we don't need write support in bootloader  debug stuff  bool card_selected = false;  not SDHC  reset retry flag  reset recive buff state  put data into transfer buffer  exchange buffers  last block to transfer  more than one block to transfer  put more data  wait for transfer completion  data transfer error  while (cnt > 0)  transfer successfull - leave retry loop  debug stuff  defined(BOOTLOADER)  BOOTLOADER  Not complete and disabled in config  This is called only if the state was stable for 300ms - check state
     * and post appropriate event.  interrupt handler for SD detect  HAVE_HOTSWAP  we have only one SD drive  CONFIG_STORAGE_MULTI  lock-out card activity  Force card init for new card, re-init for re-inserted one or
         * clear if the last attempt to init failed with an error.  HAVE_HOTSWAP **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Daniel Ankers
 * Copyright © 2008-2009 Rafaël Carré
 * Copyright (C) 2011 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** for HAVE_MULTIVOLUME  debug stuff  for compatibility  enable or disable clock signal for SD module  interrupt handler for SD  disable sd interrupts, clear pending interrupts  cmd and response status pending  get the status  data transfer status pending  Exchange buffers - the one where SD module puts into/reads from
 * data and the one controlled by MCU. This allows some overlap
 * in transfer operations and should increase throuput.
  Reset internal pointers of the MMU submodule  PC7, active low  PF2, active low  PC7, active high  TODO: find out pin  Send command to the SD card. Command finish is signaled in ISR   Handle command responses & errors  for some misterious reason the card does not report itself as being in TRAN
 * but transfers are successful. Rockchip OF does not check the card state
 * after SELECT. I checked two different cards.
   assume 50 MHz APB freq / 125 = 400 kHz   100 - 400kHz clock required for Identification Mode    Start of Card Identification Mode *********************************** CMD0 Go Idle   CMD8 Check for v2 sd card.  Must be sent before using ACMD41
      Non v2 cards will not respond to this command Timeout for inintialization is 2 sec.
       According to SD Specification 2.00 it should be >= 1,
       but it's not enough in some rare cases.  this timeout is the only valid error for this loop bus conflict otherwise  ACMD41 For v2 cards set HCS bit[30] & send host voltage range to all  CMD2 send CID  CMD3 send RCA   End of Card Identification Mode   *********************************** CMD9 send CSD  CMD6   Card back to full speed  25MHz reset SD module  set pins functions as SD signals  enable and unmask SD interrupts in interrupt controller  setup mmu buffers  setup A2A DMA CH0 for SD reads  setup A2A DMA CH1 for SD writes  src and dst for CH0 and CH1 is AHB0  setup Timer1 for profiling purposes  burst 16  fixed src  DMA start  word transfer size  software mode  wait for DMA engine to finish transfer  burst 16  fixed dst  DMA start  word transfer size  software mode  wait for DMA engine to finish transfer  not SDHC  reset retry flag  last block to transfer  more than one block to transfer  issue read command to the card  debug stuff  wait for transfer completion  debug stuff  data transfer error  exchange buffers  last block to transfer  more than one block to transfer  while (cnt > 0)  transfer successfull - leave retry loop  while (retry_cnt++ < 20)  Not tested  we don't need write support in bootloader  debug stuff  bool card_selected = false;  not SDHC  reset retry flag  reset recive buff state  put data into transfer buffer  exchange buffers  last block to transfer  more than one block to transfer  put more data  wait for transfer completion  data transfer error  while (cnt > 0)  transfer successfull - leave retry loop  debug stuff  defined(BOOTLOADER)  BOOTLOADER  Not complete and disabled in config  This is called only if the state was stable for 300ms - check state
     * and post appropriate event.  interrupt handler for SD detect  HAVE_HOTSWAP  we have only one SD drive  CONFIG_STORAGE_MULTI  lock-out card activity  Force card init for new card, re-init for re-inserted one or
         * clear if the last attempt to init failed with an error.  HAVE_HOTSWAP **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Daniel Ankers
 * Copyright © 2008-2009 Rafaël Carré
 * Copyright (C) 2011 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** for HAVE_MULTIVOLUME  debug stuff  for compatibility  enable or disable clock signal for SD module  interrupt handler for SD  disable sd interrupts, clear pending interrupts  cmd and response status pending  get the status  data transfer status pending  Exchange buffers - the one where SD module puts into/reads from
 * data and the one controlled by MCU. This allows some overlap
 * in transfer operations and should increase throuput.
  Reset internal pointers of the MMU submodule  PC7, active low  PF2, active low  PC7, active high  TODO: find out pin  Send command to the SD card. Command finish is signaled in ISR   Handle command responses & errors  for some misterious reason the card does not report itself as being in TRAN
 * but transfers are successful. Rockchip OF does not check the card state
 * after SELECT. I checked two different cards.
   assume 50 MHz APB freq / 125 = 400 kHz   100 - 400kHz clock required for Identification Mode    Start of Card Identification Mode *********************************** CMD0 Go Idle   CMD8 Check for v2 sd card.  Must be sent before using ACMD41
      Non v2 cards will not respond to this command Timeout for inintialization is 2 sec.
       According to SD Specification 2.00 it should be >= 1,
       but it's not enough in some rare cases.  this timeout is the only valid error for this loop bus conflict otherwise  ACMD41 For v2 cards set HCS bit[30] & send host voltage range to all  CMD2 send CID  CMD3 send RCA   End of Card Identification Mode   *********************************** CMD9 send CSD  CMD6   Card back to full speed  25MHz reset SD module  set pins functions as SD signals  enable and unmask SD interrupts in interrupt controller  setup mmu buffers  setup A2A DMA CH0 for SD reads  setup A2A DMA CH1 for SD writes  src and dst for CH0 and CH1 is AHB0  setup Timer1 for profiling purposes  burst 16  fixed src  DMA start  word transfer size  software mode  wait for DMA engine to finish transfer  burst 16  fixed dst  DMA start  word transfer size  software mode  wait for DMA engine to finish transfer  not SDHC  reset retry flag  last block to transfer  more than one block to transfer  issue read command to the card  debug stuff  wait for transfer completion  debug stuff  data transfer error  exchange buffers  last block to transfer  more than one block to transfer  while (cnt > 0)  transfer successfull - leave retry loop  while (retry_cnt++ < 20)  Not tested  we don't need write support in bootloader  debug stuff  bool card_selected = false;  not SDHC  reset retry flag  reset recive buff state  put data into transfer buffer  exchange buffers  last block to transfer  more than one block to transfer  put more data  wait for transfer completion  data transfer error  while (cnt > 0)  transfer successfull - leave retry loop  debug stuff  defined(BOOTLOADER)  BOOTLOADER  Not complete and disabled in config  This is called only if the state was stable for 300ms - check state
     * and post appropriate event.  interrupt handler for SD detect  HAVE_HOTSWAP  we have only one SD drive  CONFIG_STORAGE_MULTI  lock-out card activity  Force card init for new card, re-init for re-inserted one or
         * clear if the last attempt to init failed with an error.  HAVE_HOTSWAP 