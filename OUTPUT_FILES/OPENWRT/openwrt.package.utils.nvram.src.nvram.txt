
 * NVRAM variable manipulation (common)
 *
 * Copyright 2004, Broadcom Corporation
 * Copyright 2009-2010, OpenWrt.org
 * All Rights Reserved.
 *
 * THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES OF ANY
 * KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE. BROADCOM
 * SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
 *
  Size of "nvram" MTD partition 
 * -- Helper functions --
  String hash  Free all tuples.  Free hash table  Free dead table  (Re)allocate NVRAM tuples.  Copy name  Copy value  (Re)initialize the hash table.  (Re)initialize hash table  Parse and set "name=value\0 ... \0\0"  Set special SDRAM parameters 
 * -- Public functions --
  Get nvram header.  Get the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  Set the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  (Re)allocate tuple  -ENOMEM  Value reallocated  Move old tuple to the dead table  Add new tuple to the hash table  Unset the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  Move it to the dead table  Get all NVRAM variables.  Regenerate NVRAM.  Regenerate header  Clear data area  Leave space for a double NUL at the end  Write out all tuples  End with a double NULL and pad to 4 bytes  Set new length  Little-endian CRC8 over the last 11 bytes of the header  Continue CRC8 over data bytes  Set new CRC8  Write out  Reinitialize hash table  Open NVRAM and obtain a handle.  If erase size or file are undefined then try to define them  Finding the mtd will set the appropriate erase size 
			 * Start looking for NVRAM_MAGIC at beginning of MTD
			 * partition. Stop if there is less than NVRAM_MIN_SPACE
			 * to check, that was the lowest used size.
			  Close NVRAM and free memory.  Determine NVRAM device node.  Check NVRAM staging file.  Copy NVRAM contents to staging file.  Copy staging file to NVRAM device. 
 * NVRAM variable manipulation (common)
 *
 * Copyright 2004, Broadcom Corporation
 * Copyright 2009-2010, OpenWrt.org
 * All Rights Reserved.
 *
 * THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES OF ANY
 * KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE. BROADCOM
 * SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
 *
  Size of "nvram" MTD partition 
 * -- Helper functions --
  String hash  Free all tuples.  Free hash table  Free dead table  (Re)allocate NVRAM tuples.  Copy name  Copy value  (Re)initialize the hash table.  (Re)initialize hash table  Parse and set "name=value\0 ... \0\0"  Set special SDRAM parameters 
 * -- Public functions --
  Get nvram header.  Get the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  Set the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  (Re)allocate tuple  -ENOMEM  Value reallocated  Move old tuple to the dead table  Add new tuple to the hash table  Unset the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  Move it to the dead table  Get all NVRAM variables.  Regenerate NVRAM.  Regenerate header  Clear data area  Leave space for a double NUL at the end  Write out all tuples  End with a double NULL and pad to 4 bytes  Set new length  Little-endian CRC8 over the last 11 bytes of the header  Continue CRC8 over data bytes  Set new CRC8  Write out  Reinitialize hash table  Open NVRAM and obtain a handle.  If erase size or file are undefined then try to define them  Finding the mtd will set the appropriate erase size 
			 * Start looking for NVRAM_MAGIC at beginning of MTD
			 * partition. Stop if there is less than NVRAM_MIN_SPACE
			 * to check, that was the lowest used size.
			  Close NVRAM and free memory.  Determine NVRAM device node.  Check NVRAM staging file.  Copy NVRAM contents to staging file.  Copy staging file to NVRAM device. 
 * NVRAM variable manipulation (common)
 *
 * Copyright 2004, Broadcom Corporation
 * Copyright 2009-2010, OpenWrt.org
 * All Rights Reserved.
 *
 * THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES OF ANY
 * KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE. BROADCOM
 * SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
 *
  Size of "nvram" MTD partition 
 * -- Helper functions --
  String hash  Free all tuples.  Free hash table  Free dead table  (Re)allocate NVRAM tuples.  Copy name  Copy value  (Re)initialize the hash table.  (Re)initialize hash table  Parse and set "name=value\0 ... \0\0"  Set special SDRAM parameters 
 * -- Public functions --
  Get nvram header.  Get the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  Set the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  (Re)allocate tuple  -ENOMEM  Value reallocated  Move old tuple to the dead table  Add new tuple to the hash table  Unset the value of an NVRAM variable.  Hash the name  Find the associated tuple in the hash table  Move it to the dead table  Get all NVRAM variables.  Regenerate NVRAM.  Regenerate header  Clear data area  Leave space for a double NUL at the end  Write out all tuples  End with a double NULL and pad to 4 bytes  Set new length  Little-endian CRC8 over the last 11 bytes of the header  Continue CRC8 over data bytes  Set new CRC8  Write out  Reinitialize hash table  Open NVRAM and obtain a handle.  If erase size or file are undefined then try to define them  Finding the mtd will set the appropriate erase size 
			 * Start looking for NVRAM_MAGIC at beginning of MTD
			 * partition. Stop if there is less than NVRAM_MIN_SPACE
			 * to check, that was the lowest used size.
			  Close NVRAM and free memory.  Determine NVRAM device node.  Check NVRAM staging file.  Copy NVRAM contents to staging file.  Copy staging file to NVRAM device. 