 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Moving object handling. Spawn functions.
 *
 *----------------------------------------------------------------------------- P_SetMobjState Returns true if the mobj is still present. initial state fast transition table killough 4/9/98: remember states seen, to detect cycles: pointer to table detects recursion return value if recursion detected, clear state table killough 4/9/98 Modified handling. Call action functions when the state is set killough 4/9/98 killough 4/9/98 killough 4/9/98: detect state cycles killough 4/9/98: erase memory of states P_ExplodeMissile P_XYMovement Attempts to move something if it has momentum. phares 9/10/98: reducing bobbing/momentum on ice when up against walls Any momentum? the skull slammed into something phares 9/10/98: new code to reduce bobbing/momentum when on ice & up against wall. These will be compared to your x,y values later to see if you were able to move killough 8/9/98: fix bug in original Doom source: Large negative displacements were never considered. This explains the tendency for Mancubus fireballs to pass through walls. CPhipps - compatibility optioned killough 3/15/98: Allow objects to drop off blocked move killough 8/11/98: bouncing off walls killough 10/98: Add ability for objects other than players to bounce on ice reflect momentum away from wall if under gravity, slow down in direction perpendicular to wall. try to slide along it explode a missile killough Hack to prevent missiles exploding against the sky. Does not handle sky floors. whatever else it is, it is now standing still in (x,y) slow down killough 10/98: this is unused code (except maybe in .deh files?)  debug option for no sliding at all killough 10/98  no friction for missiles or skulls ever, no friction when airborne  killough 8/11/98: add bouncers
    * killough 9/15/98: add objects falling off ledges
    * killough 11/98: only include bouncers hanging off ledges
     do not stop sliding if halfway off a step with some momentum killough 11/98: Stop voodoo dolls that have come to rest, despite any moving corresponding player, except in old demos: if in a walking frame, stop moving killough 10/98: Don't affect main player when voodoo dolls stop, except in old demos: killough 10/98: kill any bobbing momentum too (except in voodoo dolls)
       * cph - DEMOSYNC - needs compatibility check?
        phares 3/17/98
       *
       * Friction will have been adjusted by friction thinkers for
       * icy or muddy floors. Otherwise it was never touched and
       * remained set at ORIG_FRICTION
       *
       * killough 8/28/98: removed inefficient thinker algorithm,
       * instead using touching_sectorlist in P_GetFriction() to
       * determine friction (and thus only when it is needed).
       *
       * killough 10/98: changed to work with new bobbing method.
       * Reducing player momentum is no longer needed to reduce
       * bobbing, so ice works much better now.
       *
       * cph - DEMOSYNC - need old code for Boom demos?
        killough 10/98: Always decrease player bobbing by ORIG_FRICTION.
       * This prevents problems with bobbing on ice, where it was not being
       * reduced fast enough, leading to all sorts of kludges being developed.
        Not voodoo dolls  P_ZMovement Attempt vertical movement. killough 7/11/98:
    * BFG fireballs bounced on floors and ceilings in Pre-Beta Doom
    * killough 8/9/98: added support for non-missile objects bouncing
    * (e.g. grenade, mine, pipebomb)
     bounce off floors  bounce back with decay  floaters fall slowly DROPOFF indicates rate Bring it to rest below a certain speed  killough 11/98: touchy objects explode on impact  bounce off ceilings  always bounce off non-sky ceiling  missiles don't bounce off skies  bounce unless under gravity free-fall under gravity  came to a stop  don't explode on skies  killough 8/9/98: end bouncing object code  check for smooth step up killough 5/12/98: exclude voodoo dolls adjust altitude float down towards target if too close killough 11/98: simplify  clip movement hit the floor Note (id):
       *  somebody left this after the setting momz to 0,
       *  kinda useless there.
       * cph - This was the a bug in the linuxdoom-1.10 source which
       *  caused it not to sync Doom 2 v1.9 demos. Someone
       *  added the above comment and moved up the following code. So
       *  demos would desync in close lost soul fights.
       * Note that this only applies to original Doom 1 or Doom2 demos -
       *  Final Doom and Ultimate Doom.  So we test demo_compatibility *and*
       *  gamemission. (Note we assume that Doom1 is always Ult Doom, which
       *  seems to hold for most published demos.)
        the skull slammed into something killough 11/98: touchy objects explode on impact  killough 5/12/98: exclude voodoo dolls  Squat down. Decrease viewheight for a moment after hitting the ground (hard), and utter appropriate sound. cph - prevent "oof" when dead  cph 2001/05/26 -
       * See lost soul bouncing comment above. We need this here for bug
       * compatibility with original Doom2 v1.9 - if a soul is charging and
       * hit by a raising floor this incorrectly reverses its Y momentum.
        the skull slammed into something still above the floor                                     // phares hit the ceiling the skull slammed into something P_NightmareRespawn haleyjd: stupid nightmare respawning bug fix
    *
    * 08/09/00: compatibility added, time to ramble :)
    * This fixes the notorious nightmare respawning bug that causes monsters
    * that didn't spawn at level startup to respawn at the point (0,0)
    * regardless of that point's nature. SMMU and Eternity need this for
    * script-spawned things like Halif Swordsmythe, as well.
    *
    * cph - copied from eternity, except comp_respawnfix becomes comp_respawn
    *   and the logic is reversed (i.e. like the rest of comp_ it *disables*
    *   the fix)
     spawnpoint was zeroed out, so use point of death instead something is occupying its position? no respwan spawn a teleport fog at old spot because of removal of the body? initiate teleport sound spawn a teleport fog at the new spot spawn the new monster inherit attributes from deceased one killough 11/98: transfer friendliness from deceased  remove the old monster, P_MobjThinker killough 11/98: removed old code which looked at target references (we use pointer reference counting now) momentum movement cph - Must've been removed killough - mobj was removed cph - Must've been removed killough - mobj was removed non-sentient objects at rest arm a mine which has come to rest killough 9/12/98: objects fall off ledges if they are hanging off slightly push off of ledge if hanging more than halfway off Only objects contacting dropoff Only objects which fall Not in old demos Apply torque Reset torque cycle through states, calling action functions at transitions you can cycle through multiple states in a tic freed itself check for nightmare respawn P_SpawnMobj phares killough 8/23/98: no friends, bouncers, or touchy things in old demos  Except in old demos, players are always friends. do not set the state with P_SetMobjState, because action routines can not be called yet NULL head of sector list // phares 3/13/98 set subsector and/or block links killough 11/98: for tracking dropoffs  phares phares P_RemoveMobj lose one off the end? unlink from sector and block lists Delete all nodes on the current sector_list               phares 3/16/98 stop any playing sound killough 11/98: Remove any references to other mobjs. Older demos might depend on the fields being left alone, however, if multiple thinkers reference each other indirectly before the end of the current tic. CPhipps - only leave dead references in old demos; I hope lxdoom_1 level demos are rare and don't rely on this. I hope. free block  P_RemoveThinker ((thinker_t*)mobj);
 * P_FindDoomedNum
 *
 * Finds a mobj type with a matching doomednum
 *
 * killough 8/24/98: rewrote to use hashing
  P_RespawnSpecials only respawn items in deathmatch nothing left to respawn? wait at least 30 seconds spawn a teleport fog at the new spot find which type to spawn killough 8/23/98: use table for faster lookup  spawn it pull it from the queue P_SpawnPlayer Called when a player is spawned on the level. Most of the player structure stays unchanged  between levels. not playing? set color translations for player sprites killough 10/98: initialize bobbing to 0. setup gun psprite give all cards in death match mode wake up the status bar wake up the heads up text P_SpawnMapThing The fields of the mapthing should already be in host byte order.int     bit; killough 2/26/98: Ignore type-0 things as NOPs phares 5/14/98: Ignore Player 5-8 starts (for now) killough 11/98: clear flags unused by Doom We clear the flags unused in Doom if we see flag mask 256 set, since it is reserved to be 0 under the new scheme. A 1 in this reserved bit indicates it's a Doom wad made by a Doom editor which puts 1's in bits that weren't used in Doom (such as HellMaker wads). So we should then simply ignore all upper bits. cph - Add warning about bad thing flags count deathmatch start positions doom2.exe has at most 10 deathmatch starts 1/11/98 killough -- new code removes limit on deathmatch starts: check for players specially killough 2/26/98 -- fix crashes killough 7/19/98: Marine's best friend :) use secretcount to avoid multiple dogs in case of multiple starts killough 10/98: force it to be a friend save spots for respawning in network games check for apropriate skill level jff "not single" thing flag jff 3/30/98 implement "not deathmatch" thing flagjff 3/30/98 implement "not cooperative" thing flag killough 11/98: simplify find which type to spawn killough 8/23/98: use table for faster lookup phares 5/16/98: Do not abort because of an unknown thing. Ignore it, but post a warning message for the player. don't spawn keycards and players in deathmatch don't spawn any monsters if -nomonsters spawn it killough 10/98: transfer friendliness flag killough 7/20/98: exclude friends  GAME SPAWN FUNCTIONS P_SpawnPuff killough 5/5/98: remove dependence on order of evaluation: don't make punches spark on the wall P_SpawnBlood killough 5/5/98: remove dependence on order of evaluation: P_CheckMissileSpawn Moves the missile forward a bit  and possibly explodes it right there. move a little forward so an angle can be computed if it immediately explodes killough 8/12/98: for non-missile objects (e.g. grenades) killough 3/15/98: no dropoff (really = don't care for missiles) P_SpawnMissile where it came from fuzzy player killough 5/5/98: remove dependence on order of evaluation: P_SpawnPlayerMissile Tries to aim at a nearby monster see which target is to be aimed at killough 7/19/98: autoaiming was not in original beta killough 8/2/98: prefer autoaiming at enemies killough 8/2/98 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Moving object handling. Spawn functions.
 *
 *----------------------------------------------------------------------------- P_SetMobjState Returns true if the mobj is still present. initial state fast transition table killough 4/9/98: remember states seen, to detect cycles: pointer to table detects recursion return value if recursion detected, clear state table killough 4/9/98 Modified handling. Call action functions when the state is set killough 4/9/98 killough 4/9/98 killough 4/9/98: detect state cycles killough 4/9/98: erase memory of states P_ExplodeMissile P_XYMovement Attempts to move something if it has momentum. phares 9/10/98: reducing bobbing/momentum on ice when up against walls Any momentum? the skull slammed into something phares 9/10/98: new code to reduce bobbing/momentum when on ice & up against wall. These will be compared to your x,y values later to see if you were able to move killough 8/9/98: fix bug in original Doom source: Large negative displacements were never considered. This explains the tendency for Mancubus fireballs to pass through walls. CPhipps - compatibility optioned killough 3/15/98: Allow objects to drop off blocked move killough 8/11/98: bouncing off walls killough 10/98: Add ability for objects other than players to bounce on ice reflect momentum away from wall if under gravity, slow down in direction perpendicular to wall. try to slide along it explode a missile killough Hack to prevent missiles exploding against the sky. Does not handle sky floors. whatever else it is, it is now standing still in (x,y) slow down killough 10/98: this is unused code (except maybe in .deh files?)  debug option for no sliding at all killough 10/98  no friction for missiles or skulls ever, no friction when airborne  killough 8/11/98: add bouncers
    * killough 9/15/98: add objects falling off ledges
    * killough 11/98: only include bouncers hanging off ledges
     do not stop sliding if halfway off a step with some momentum killough 11/98: Stop voodoo dolls that have come to rest, despite any moving corresponding player, except in old demos: if in a walking frame, stop moving killough 10/98: Don't affect main player when voodoo dolls stop, except in old demos: killough 10/98: kill any bobbing momentum too (except in voodoo dolls)
       * cph - DEMOSYNC - needs compatibility check?
        phares 3/17/98
       *
       * Friction will have been adjusted by friction thinkers for
       * icy or muddy floors. Otherwise it was never touched and
       * remained set at ORIG_FRICTION
       *
       * killough 8/28/98: removed inefficient thinker algorithm,
       * instead using touching_sectorlist in P_GetFriction() to
       * determine friction (and thus only when it is needed).
       *
       * killough 10/98: changed to work with new bobbing method.
       * Reducing player momentum is no longer needed to reduce
       * bobbing, so ice works much better now.
       *
       * cph - DEMOSYNC - need old code for Boom demos?
        killough 10/98: Always decrease player bobbing by ORIG_FRICTION.
       * This prevents problems with bobbing on ice, where it was not being
       * reduced fast enough, leading to all sorts of kludges being developed.
        Not voodoo dolls  P_ZMovement Attempt vertical movement. killough 7/11/98:
    * BFG fireballs bounced on floors and ceilings in Pre-Beta Doom
    * killough 8/9/98: added support for non-missile objects bouncing
    * (e.g. grenade, mine, pipebomb)
     bounce off floors  bounce back with decay  floaters fall slowly DROPOFF indicates rate Bring it to rest below a certain speed  killough 11/98: touchy objects explode on impact  bounce off ceilings  always bounce off non-sky ceiling  missiles don't bounce off skies  bounce unless under gravity free-fall under gravity  came to a stop  don't explode on skies  killough 8/9/98: end bouncing object code  check for smooth step up killough 5/12/98: exclude voodoo dolls adjust altitude float down towards target if too close killough 11/98: simplify  clip movement hit the floor Note (id):
       *  somebody left this after the setting momz to 0,
       *  kinda useless there.
       * cph - This was the a bug in the linuxdoom-1.10 source which
       *  caused it not to sync Doom 2 v1.9 demos. Someone
       *  added the above comment and moved up the following code. So
       *  demos would desync in close lost soul fights.
       * Note that this only applies to original Doom 1 or Doom2 demos -
       *  Final Doom and Ultimate Doom.  So we test demo_compatibility *and*
       *  gamemission. (Note we assume that Doom1 is always Ult Doom, which
       *  seems to hold for most published demos.)
        the skull slammed into something killough 11/98: touchy objects explode on impact  killough 5/12/98: exclude voodoo dolls  Squat down. Decrease viewheight for a moment after hitting the ground (hard), and utter appropriate sound. cph - prevent "oof" when dead  cph 2001/05/26 -
       * See lost soul bouncing comment above. We need this here for bug
       * compatibility with original Doom2 v1.9 - if a soul is charging and
       * hit by a raising floor this incorrectly reverses its Y momentum.
        the skull slammed into something still above the floor                                     // phares hit the ceiling the skull slammed into something P_NightmareRespawn haleyjd: stupid nightmare respawning bug fix
    *
    * 08/09/00: compatibility added, time to ramble :)
    * This fixes the notorious nightmare respawning bug that causes monsters
    * that didn't spawn at level startup to respawn at the point (0,0)
    * regardless of that point's nature. SMMU and Eternity need this for
    * script-spawned things like Halif Swordsmythe, as well.
    *
    * cph - copied from eternity, except comp_respawnfix becomes comp_respawn
    *   and the logic is reversed (i.e. like the rest of comp_ it *disables*
    *   the fix)
     spawnpoint was zeroed out, so use point of death instead something is occupying its position? no respwan spawn a teleport fog at old spot because of removal of the body? initiate teleport sound spawn a teleport fog at the new spot spawn the new monster inherit attributes from deceased one killough 11/98: transfer friendliness from deceased  remove the old monster, P_MobjThinker killough 11/98: removed old code which looked at target references (we use pointer reference counting now) momentum movement cph - Must've been removed killough - mobj was removed cph - Must've been removed killough - mobj was removed non-sentient objects at rest arm a mine which has come to rest killough 9/12/98: objects fall off ledges if they are hanging off slightly push off of ledge if hanging more than halfway off Only objects contacting dropoff Only objects which fall Not in old demos Apply torque Reset torque cycle through states, calling action functions at transitions you can cycle through multiple states in a tic freed itself check for nightmare respawn P_SpawnMobj phares killough 8/23/98: no friends, bouncers, or touchy things in old demos  Except in old demos, players are always friends. do not set the state with P_SetMobjState, because action routines can not be called yet NULL head of sector list // phares 3/13/98 set subsector and/or block links killough 11/98: for tracking dropoffs  phares phares P_RemoveMobj lose one off the end? unlink from sector and block lists Delete all nodes on the current sector_list               phares 3/16/98 stop any playing sound killough 11/98: Remove any references to other mobjs. Older demos might depend on the fields being left alone, however, if multiple thinkers reference each other indirectly before the end of the current tic. CPhipps - only leave dead references in old demos; I hope lxdoom_1 level demos are rare and don't rely on this. I hope. free block  P_RemoveThinker ((thinker_t*)mobj);
 * P_FindDoomedNum
 *
 * Finds a mobj type with a matching doomednum
 *
 * killough 8/24/98: rewrote to use hashing
  P_RespawnSpecials only respawn items in deathmatch nothing left to respawn? wait at least 30 seconds spawn a teleport fog at the new spot find which type to spawn killough 8/23/98: use table for faster lookup  spawn it pull it from the queue P_SpawnPlayer Called when a player is spawned on the level. Most of the player structure stays unchanged  between levels. not playing? set color translations for player sprites killough 10/98: initialize bobbing to 0. setup gun psprite give all cards in death match mode wake up the status bar wake up the heads up text P_SpawnMapThing The fields of the mapthing should already be in host byte order.int     bit; killough 2/26/98: Ignore type-0 things as NOPs phares 5/14/98: Ignore Player 5-8 starts (for now) killough 11/98: clear flags unused by Doom We clear the flags unused in Doom if we see flag mask 256 set, since it is reserved to be 0 under the new scheme. A 1 in this reserved bit indicates it's a Doom wad made by a Doom editor which puts 1's in bits that weren't used in Doom (such as HellMaker wads). So we should then simply ignore all upper bits. cph - Add warning about bad thing flags count deathmatch start positions doom2.exe has at most 10 deathmatch starts 1/11/98 killough -- new code removes limit on deathmatch starts: check for players specially killough 2/26/98 -- fix crashes killough 7/19/98: Marine's best friend :) use secretcount to avoid multiple dogs in case of multiple starts killough 10/98: force it to be a friend save spots for respawning in network games check for apropriate skill level jff "not single" thing flag jff 3/30/98 implement "not deathmatch" thing flagjff 3/30/98 implement "not cooperative" thing flag killough 11/98: simplify find which type to spawn killough 8/23/98: use table for faster lookup phares 5/16/98: Do not abort because of an unknown thing. Ignore it, but post a warning message for the player. don't spawn keycards and players in deathmatch don't spawn any monsters if -nomonsters spawn it killough 10/98: transfer friendliness flag killough 7/20/98: exclude friends  GAME SPAWN FUNCTIONS P_SpawnPuff killough 5/5/98: remove dependence on order of evaluation: don't make punches spark on the wall P_SpawnBlood killough 5/5/98: remove dependence on order of evaluation: P_CheckMissileSpawn Moves the missile forward a bit  and possibly explodes it right there. move a little forward so an angle can be computed if it immediately explodes killough 8/12/98: for non-missile objects (e.g. grenades) killough 3/15/98: no dropoff (really = don't care for missiles) P_SpawnMissile where it came from fuzzy player killough 5/5/98: remove dependence on order of evaluation: P_SpawnPlayerMissile Tries to aim at a nearby monster see which target is to be aimed at killough 7/19/98: autoaiming was not in original beta killough 8/2/98: prefer autoaiming at enemies killough 8/2/98 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Moving object handling. Spawn functions.
 *
 *----------------------------------------------------------------------------- P_SetMobjState Returns true if the mobj is still present. initial state fast transition table killough 4/9/98: remember states seen, to detect cycles: pointer to table detects recursion return value if recursion detected, clear state table killough 4/9/98 Modified handling. Call action functions when the state is set killough 4/9/98 killough 4/9/98 killough 4/9/98: detect state cycles killough 4/9/98: erase memory of states P_ExplodeMissile P_XYMovement Attempts to move something if it has momentum. phares 9/10/98: reducing bobbing/momentum on ice when up against walls Any momentum? the skull slammed into something phares 9/10/98: new code to reduce bobbing/momentum when on ice & up against wall. These will be compared to your x,y values later to see if you were able to move killough 8/9/98: fix bug in original Doom source: Large negative displacements were never considered. This explains the tendency for Mancubus fireballs to pass through walls. CPhipps - compatibility optioned killough 3/15/98: Allow objects to drop off blocked move killough 8/11/98: bouncing off walls killough 10/98: Add ability for objects other than players to bounce on ice reflect momentum away from wall if under gravity, slow down in direction perpendicular to wall. try to slide along it explode a missile killough Hack to prevent missiles exploding against the sky. Does not handle sky floors. whatever else it is, it is now standing still in (x,y) slow down killough 10/98: this is unused code (except maybe in .deh files?)  debug option for no sliding at all killough 10/98  no friction for missiles or skulls ever, no friction when airborne  killough 8/11/98: add bouncers
    * killough 9/15/98: add objects falling off ledges
    * killough 11/98: only include bouncers hanging off ledges
     do not stop sliding if halfway off a step with some momentum killough 11/98: Stop voodoo dolls that have come to rest, despite any moving corresponding player, except in old demos: if in a walking frame, stop moving killough 10/98: Don't affect main player when voodoo dolls stop, except in old demos: killough 10/98: kill any bobbing momentum too (except in voodoo dolls)
       * cph - DEMOSYNC - needs compatibility check?
        phares 3/17/98
       *
       * Friction will have been adjusted by friction thinkers for
       * icy or muddy floors. Otherwise it was never touched and
       * remained set at ORIG_FRICTION
       *
       * killough 8/28/98: removed inefficient thinker algorithm,
       * instead using touching_sectorlist in P_GetFriction() to
       * determine friction (and thus only when it is needed).
       *
       * killough 10/98: changed to work with new bobbing method.
       * Reducing player momentum is no longer needed to reduce
       * bobbing, so ice works much better now.
       *
       * cph - DEMOSYNC - need old code for Boom demos?
        killough 10/98: Always decrease player bobbing by ORIG_FRICTION.
       * This prevents problems with bobbing on ice, where it was not being
       * reduced fast enough, leading to all sorts of kludges being developed.
        Not voodoo dolls  P_ZMovement Attempt vertical movement. killough 7/11/98:
    * BFG fireballs bounced on floors and ceilings in Pre-Beta Doom
    * killough 8/9/98: added support for non-missile objects bouncing
    * (e.g. grenade, mine, pipebomb)
     bounce off floors  bounce back with decay  floaters fall slowly DROPOFF indicates rate Bring it to rest below a certain speed  killough 11/98: touchy objects explode on impact  bounce off ceilings  always bounce off non-sky ceiling  missiles don't bounce off skies  bounce unless under gravity free-fall under gravity  came to a stop  don't explode on skies  killough 8/9/98: end bouncing object code  check for smooth step up killough 5/12/98: exclude voodoo dolls adjust altitude float down towards target if too close killough 11/98: simplify  clip movement hit the floor Note (id):
       *  somebody left this after the setting momz to 0,
       *  kinda useless there.
       * cph - This was the a bug in the linuxdoom-1.10 source which
       *  caused it not to sync Doom 2 v1.9 demos. Someone
       *  added the above comment and moved up the following code. So
       *  demos would desync in close lost soul fights.
       * Note that this only applies to original Doom 1 or Doom2 demos -
       *  Final Doom and Ultimate Doom.  So we test demo_compatibility *and*
       *  gamemission. (Note we assume that Doom1 is always Ult Doom, which
       *  seems to hold for most published demos.)
        the skull slammed into something killough 11/98: touchy objects explode on impact  killough 5/12/98: exclude voodoo dolls  Squat down. Decrease viewheight for a moment after hitting the ground (hard), and utter appropriate sound. cph - prevent "oof" when dead  cph 2001/05/26 -
       * See lost soul bouncing comment above. We need this here for bug
       * compatibility with original Doom2 v1.9 - if a soul is charging and
       * hit by a raising floor this incorrectly reverses its Y momentum.
        the skull slammed into something still above the floor                                     // phares hit the ceiling the skull slammed into something P_NightmareRespawn haleyjd: stupid nightmare respawning bug fix
    *
    * 08/09/00: compatibility added, time to ramble :)
    * This fixes the notorious nightmare respawning bug that causes monsters
    * that didn't spawn at level startup to respawn at the point (0,0)
    * regardless of that point's nature. SMMU and Eternity need this for
    * script-spawned things like Halif Swordsmythe, as well.
    *
    * cph - copied from eternity, except comp_respawnfix becomes comp_respawn
    *   and the logic is reversed (i.e. like the rest of comp_ it *disables*
    *   the fix)
     spawnpoint was zeroed out, so use point of death instead something is occupying its position? no respwan spawn a teleport fog at old spot because of removal of the body? initiate teleport sound spawn a teleport fog at the new spot spawn the new monster inherit attributes from deceased one killough 11/98: transfer friendliness from deceased  remove the old monster, P_MobjThinker killough 11/98: removed old code which looked at target references (we use pointer reference counting now) momentum movement cph - Must've been removed killough - mobj was removed cph - Must've been removed killough - mobj was removed non-sentient objects at rest arm a mine which has come to rest killough 9/12/98: objects fall off ledges if they are hanging off slightly push off of ledge if hanging more than halfway off Only objects contacting dropoff Only objects which fall Not in old demos Apply torque Reset torque cycle through states, calling action functions at transitions you can cycle through multiple states in a tic freed itself check for nightmare respawn P_SpawnMobj phares killough 8/23/98: no friends, bouncers, or touchy things in old demos  Except in old demos, players are always friends. do not set the state with P_SetMobjState, because action routines can not be called yet NULL head of sector list // phares 3/13/98 set subsector and/or block links killough 11/98: for tracking dropoffs  phares phares P_RemoveMobj lose one off the end? unlink from sector and block lists Delete all nodes on the current sector_list               phares 3/16/98 stop any playing sound killough 11/98: Remove any references to other mobjs. Older demos might depend on the fields being left alone, however, if multiple thinkers reference each other indirectly before the end of the current tic. CPhipps - only leave dead references in old demos; I hope lxdoom_1 level demos are rare and don't rely on this. I hope. free block  P_RemoveThinker ((thinker_t*)mobj);
 * P_FindDoomedNum
 *
 * Finds a mobj type with a matching doomednum
 *
 * killough 8/24/98: rewrote to use hashing
  P_RespawnSpecials only respawn items in deathmatch nothing left to respawn? wait at least 30 seconds spawn a teleport fog at the new spot find which type to spawn killough 8/23/98: use table for faster lookup  spawn it pull it from the queue P_SpawnPlayer Called when a player is spawned on the level. Most of the player structure stays unchanged  between levels. not playing? set color translations for player sprites killough 10/98: initialize bobbing to 0. setup gun psprite give all cards in death match mode wake up the status bar wake up the heads up text P_SpawnMapThing The fields of the mapthing should already be in host byte order.int     bit; killough 2/26/98: Ignore type-0 things as NOPs phares 5/14/98: Ignore Player 5-8 starts (for now) killough 11/98: clear flags unused by Doom We clear the flags unused in Doom if we see flag mask 256 set, since it is reserved to be 0 under the new scheme. A 1 in this reserved bit indicates it's a Doom wad made by a Doom editor which puts 1's in bits that weren't used in Doom (such as HellMaker wads). So we should then simply ignore all upper bits. cph - Add warning about bad thing flags count deathmatch start positions doom2.exe has at most 10 deathmatch starts 1/11/98 killough -- new code removes limit on deathmatch starts: check for players specially killough 2/26/98 -- fix crashes killough 7/19/98: Marine's best friend :) use secretcount to avoid multiple dogs in case of multiple starts killough 10/98: force it to be a friend save spots for respawning in network games check for apropriate skill level jff "not single" thing flag jff 3/30/98 implement "not deathmatch" thing flagjff 3/30/98 implement "not cooperative" thing flag killough 11/98: simplify find which type to spawn killough 8/23/98: use table for faster lookup phares 5/16/98: Do not abort because of an unknown thing. Ignore it, but post a warning message for the player. don't spawn keycards and players in deathmatch don't spawn any monsters if -nomonsters spawn it killough 10/98: transfer friendliness flag killough 7/20/98: exclude friends  GAME SPAWN FUNCTIONS P_SpawnPuff killough 5/5/98: remove dependence on order of evaluation: don't make punches spark on the wall P_SpawnBlood killough 5/5/98: remove dependence on order of evaluation: P_CheckMissileSpawn Moves the missile forward a bit  and possibly explodes it right there. move a little forward so an angle can be computed if it immediately explodes killough 8/12/98: for non-missile objects (e.g. grenades) killough 3/15/98: no dropoff (really = don't care for missiles) P_SpawnMissile where it came from fuzzy player killough 5/5/98: remove dependence on order of evaluation: P_SpawnPlayerMissile Tries to aim at a nearby monster see which target is to be aimed at killough 7/19/98: autoaiming was not in original beta killough 8/2/98: prefer autoaiming at enemies killough 8/2/98