**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007-2008 Michael Sevakis (jhMikeS)
 * Copyright (C) 2006-2007 Adam Gashlin (hcs)
 * Copyright (C) 2004-2007 Shay Green (blargg)
 * Copyright (C) 2002 Brad Martin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** lovingly ripped off from Game_Music_Emu 0.5.2. http://www.slack.net/~ant/  DSP Based on Brad Martin's OpenSPC DSP emulator  tag reading from sexyspc by John Brawn (John_Brawn@yahoo.com) and others *************** ID666 parsing *************** Ok, now comes the fun part.  Date check  Reserved bytes check  is length & fade only digits? I have no idea if this is right or not.*************** Codec **************** Implementations for pipelined dual-core operation * sample queue  Grab an audio output buffer  Place a message in it instead of audio  Release it to the emu thread  Wait for a response  thread function  Reset chunk type to audio  Empty the audio queue  get a buffer for output  This chunk doesn't contain audio but a command  Have to re-get this pointer to keep semaphore counts correct  fill samples buffer  done so release it to output  Initialize audio queue as full to prevent emu thread from trying to run the
       emulator before loading something  Start it running  load a new program on the emu thread  Wait for emu thread to be killed  obtain filled samples buffer  done with chunk so release it to emu thread  !SPC_DUAL_CORE * Implementations for single-core operation * load a new program into emu  signed integer mode with saturation  fill samples buffer  SPC_DUAL_CORE  The main decoder loop  is track timed?  fade?  Have to switch modes to do this  end?  this is the codec entry point  this is called for each file to process  Read the entire file  3 minutes  5 seconds **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007-2008 Michael Sevakis (jhMikeS)
 * Copyright (C) 2006-2007 Adam Gashlin (hcs)
 * Copyright (C) 2004-2007 Shay Green (blargg)
 * Copyright (C) 2002 Brad Martin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** lovingly ripped off from Game_Music_Emu 0.5.2. http://www.slack.net/~ant/  DSP Based on Brad Martin's OpenSPC DSP emulator  tag reading from sexyspc by John Brawn (John_Brawn@yahoo.com) and others *************** ID666 parsing *************** Ok, now comes the fun part.  Date check  Reserved bytes check  is length & fade only digits? I have no idea if this is right or not.*************** Codec **************** Implementations for pipelined dual-core operation * sample queue  Grab an audio output buffer  Place a message in it instead of audio  Release it to the emu thread  Wait for a response  thread function  Reset chunk type to audio  Empty the audio queue  get a buffer for output  This chunk doesn't contain audio but a command  Have to re-get this pointer to keep semaphore counts correct  fill samples buffer  done so release it to output  Initialize audio queue as full to prevent emu thread from trying to run the
       emulator before loading something  Start it running  load a new program on the emu thread  Wait for emu thread to be killed  obtain filled samples buffer  done with chunk so release it to emu thread  !SPC_DUAL_CORE * Implementations for single-core operation * load a new program into emu  signed integer mode with saturation  fill samples buffer  SPC_DUAL_CORE  The main decoder loop  is track timed?  fade?  Have to switch modes to do this  end?  this is the codec entry point  this is called for each file to process  Read the entire file  3 minutes  5 seconds **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007-2008 Michael Sevakis (jhMikeS)
 * Copyright (C) 2006-2007 Adam Gashlin (hcs)
 * Copyright (C) 2004-2007 Shay Green (blargg)
 * Copyright (C) 2002 Brad Martin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** lovingly ripped off from Game_Music_Emu 0.5.2. http://www.slack.net/~ant/  DSP Based on Brad Martin's OpenSPC DSP emulator  tag reading from sexyspc by John Brawn (John_Brawn@yahoo.com) and others *************** ID666 parsing *************** Ok, now comes the fun part.  Date check  Reserved bytes check  is length & fade only digits? I have no idea if this is right or not.*************** Codec **************** Implementations for pipelined dual-core operation * sample queue  Grab an audio output buffer  Place a message in it instead of audio  Release it to the emu thread  Wait for a response  thread function  Reset chunk type to audio  Empty the audio queue  get a buffer for output  This chunk doesn't contain audio but a command  Have to re-get this pointer to keep semaphore counts correct  fill samples buffer  done so release it to output  Initialize audio queue as full to prevent emu thread from trying to run the
       emulator before loading something  Start it running  load a new program on the emu thread  Wait for emu thread to be killed  obtain filled samples buffer  done with chunk so release it to emu thread  !SPC_DUAL_CORE * Implementations for single-core operation * load a new program into emu  signed integer mode with saturation  fill samples buffer  SPC_DUAL_CORE  The main decoder loop  is track timed?  fade?  Have to switch modes to do this  end?  this is the codec entry point  this is called for each file to process  Read the entire file  3 minutes  5 seconds 