    protected LineChart<String, Number> lineChart;    @FXML StackPane stackPane;    public LineChart<String, Number> getLineChart() {        return lineChart;    }            CategoryAxis xAxis = new CategoryAxis();            NumberAxis yAxis = new NumberAxis();            lineChart = new LineChart<>(xAxis, new NumberAxis());            barChart = new StackedBarChart<>(xAxis, yAxis);            this.vitalValidator = new VitalValidator(maxDataPoints, maxSigma, v, barChart.getData(), lineChart.getData(), validationOracle);            validator.setData(barChart.getData());            barChart.getData().add(validator.getSeries());            configureOverlayChart(lineChart);            lineChart.setMinHeight(250.0);            lineChart.setVerticalGridLinesVisible(false);            lineChart.setAnimated(false);            lineChart.setCreateSymbols(false);            lineChart.setLegendVisible(true);            stackPane.getChildren().add(0, lineChart);            stackPane.getChildren().add(0, barChart);            main.setCenter(barChart);            BorderPane.setAlignment(barChart, Pos.CENTER);    private void configureOverlayChart(final XYChart<String, Number> chart) {        chart.setAlternativeRowFillVisible(false);        chart.setAlternativeColumnFillVisible(false);        chart.setHorizontalGridLinesVisible(false);        chart.setVerticalGridLinesVisible(false);        chart.getXAxis().setVisible(false);        chart.getYAxis().setVisible(false);                chart.getStylesheets().addAll(getClass().getResource("overlay-chart.css").toExternalForm());    }    protected LineChart<String, Number> lineChart;    @FXML StackPane stackPane;    public LineChart<String, Number> getLineChart() {        return lineChart;    }            CategoryAxis xAxis = new CategoryAxis();            NumberAxis yAxis = new NumberAxis();            lineChart = new LineChart<>(xAxis, new NumberAxis());            barChart = new StackedBarChart<>(xAxis, yAxis);            this.vitalValidator = new VitalValidator(maxDataPoints, maxSigma, v, barChart.getData(), lineChart.getData(), validationOracle);            validator.setData(barChart.getData());            barChart.getData().add(validator.getSeries());            configureOverlayChart(lineChart);            lineChart.setMinHeight(250.0);            lineChart.setVerticalGridLinesVisible(false);            lineChart.setAnimated(false);            lineChart.setCreateSymbols(false);            lineChart.setLegendVisible(true);            stackPane.getChildren().add(0, lineChart);            stackPane.getChildren().add(0, barChart);            main.setCenter(barChart);            BorderPane.setAlignment(barChart, Pos.CENTER);    private void configureOverlayChart(final XYChart<String, Number> chart) {        chart.setAlternativeRowFillVisible(false);        chart.setAlternativeColumnFillVisible(false);        chart.setHorizontalGridLinesVisible(false);        chart.setVerticalGridLinesVisible(false);        chart.getXAxis().setVisible(false);        chart.getYAxis().setVisible(false);                chart.getStylesheets().addAll(getClass().getResource("overlay-chart.css").toExternalForm());    }    protected LineChart<String, Number> lineChart;    @FXML StackPane stackPane;    public LineChart<String, Number> getLineChart() {        return lineChart;    }            CategoryAxis xAxis = new CategoryAxis();            NumberAxis yAxis = new NumberAxis();            lineChart = new LineChart<>(xAxis, new NumberAxis());            barChart = new StackedBarChart<>(xAxis, yAxis);            this.vitalValidator = new VitalValidator(maxDataPoints, maxSigma, v, barChart.getData(), lineChart.getData(), validationOracle);            validator.setData(barChart.getData());            barChart.getData().add(validator.getSeries());            configureOverlayChart(lineChart);            lineChart.setMinHeight(250.0);            lineChart.setVerticalGridLinesVisible(false);            lineChart.setAnimated(false);            lineChart.setCreateSymbols(false);            lineChart.setLegendVisible(true);            stackPane.getChildren().add(0, lineChart);            stackPane.getChildren().add(0, barChart);            main.setCenter(barChart);            BorderPane.setAlignment(barChart, Pos.CENTER);    private void configureOverlayChart(final XYChart<String, Number> chart) {        chart.setAlternativeRowFillVisible(false);        chart.setAlternativeColumnFillVisible(false);        chart.setHorizontalGridLinesVisible(false);        chart.setVerticalGridLinesVisible(false);        chart.getXAxis().setVisible(false);        chart.getYAxis().setVisible(false);                chart.getStylesheets().addAll(getClass().getResource("overlay-chart.css").toExternalForm());    }    protected LineChart<String, Number> lineChart;    @FXML StackPane stackPane;    public LineChart<String, Number> getLineChart() {        return lineChart;    }            CategoryAxis xAxis = new CategoryAxis();            NumberAxis yAxis = new NumberAxis();            lineChart = new LineChart<>(xAxis, new NumberAxis());            barChart = new StackedBarChart<>(xAxis, yAxis);            this.vitalValidator = new VitalValidator(maxDataPoints, maxSigma, v, barChart.getData(), lineChart.getData(), validationOracle);            validator.setData(barChart.getData());            barChart.getData().add(validator.getSeries());            configureOverlayChart(lineChart);            lineChart.setMinHeight(250.0);            lineChart.setVerticalGridLinesVisible(false);            lineChart.setAnimated(false);            lineChart.setCreateSymbols(false);            lineChart.setLegendVisible(true);            stackPane.getChildren().add(0, lineChart);            stackPane.getChildren().add(0, barChart);            main.setCenter(barChart);            BorderPane.setAlignment(barChart, Pos.CENTER);    private void configureOverlayChart(final XYChart<String, Number> chart) {        chart.setAlternativeRowFillVisible(false);        chart.setAlternativeColumnFillVisible(false);        chart.setHorizontalGridLinesVisible(false);        chart.setVerticalGridLinesVisible(false);        chart.getXAxis().setVisible(false);        chart.getYAxis().setVisible(false);                chart.getStylesheets().addAll(getClass().getResource("overlay-chart.css").toExternalForm());    }    protected LineChart<String, Number> lineChart;    @FXML StackPane stackPane;    public LineChart<String, Number> getLineChart() {        return lineChart;    }            CategoryAxis xAxis = new CategoryAxis();            NumberAxis yAxis = new NumberAxis();            lineChart = new LineChart<>(xAxis, new NumberAxis());            barChart = new StackedBarChart<>(xAxis, yAxis);            this.vitalValidator = new VitalValidator(maxDataPoints, maxSigma, v, barChart.getData(), lineChart.getData(), validationOracle);            validator.setData(barChart.getData());            barChart.getData().add(validator.getSeries());            configureOverlayChart(lineChart);            lineChart.setMinHeight(250.0);            lineChart.setVerticalGridLinesVisible(false);            lineChart.setAnimated(false);            lineChart.setCreateSymbols(false);            lineChart.setLegendVisible(true);            stackPane.getChildren().add(0, lineChart);            stackPane.getChildren().add(0, barChart);            main.setCenter(barChart);            BorderPane.setAlignment(barChart, Pos.CENTER);    private void configureOverlayChart(final XYChart<String, Number> chart) {        chart.setAlternativeRowFillVisible(false);        chart.setAlternativeColumnFillVisible(false);        chart.setHorizontalGridLinesVisible(false);        chart.setVerticalGridLinesVisible(false);        chart.getXAxis().setVisible(false);        chart.getYAxis().setVisible(false);                chart.getStylesheets().addAll(getClass().getResource("overlay-chart.css").toExternalForm());    }    protected LineChart<String, Number> lineChart;    @FXML StackPane stackPane;    public LineChart<String, Number> getLineChart() {        return lineChart;    }            CategoryAxis xAxis = new CategoryAxis();            NumberAxis yAxis = new NumberAxis();            lineChart = new LineChart<>(xAxis, new NumberAxis());            barChart = new StackedBarChart<>(xAxis, yAxis);            this.vitalValidator = new VitalValidator(maxDataPoints, maxSigma, v, barChart.getData(), lineChart.getData(), validationOracle);            validator.setData(barChart.getData());            barChart.getData().add(validator.getSeries());            configureOverlayChart(lineChart);            lineChart.setMinHeight(250.0);            lineChart.setVerticalGridLinesVisible(false);            lineChart.setAnimated(false);            lineChart.setCreateSymbols(false);            lineChart.setLegendVisible(true);            stackPane.getChildren().add(0, lineChart);            stackPane.getChildren().add(0, barChart);            main.setCenter(barChart);            BorderPane.setAlignment(barChart, Pos.CENTER);    private void configureOverlayChart(final XYChart<String, Number> chart) {        chart.setAlternativeRowFillVisible(false);        chart.setAlternativeColumnFillVisible(false);        chart.setHorizontalGridLinesVisible(false);        chart.setVerticalGridLinesVisible(false);        chart.getXAxis().setVisible(false);        chart.getYAxis().setVisible(false);                chart.getStylesheets().addAll(getClass().getResource("overlay-chart.css").toExternalForm());    }    protected LineChart<String, Number> lineChart;    @FXML StackPane stackPane;    public LineChart<String, Number> getLineChart() {        return lineChart;    }            CategoryAxis xAxis = new CategoryAxis();            NumberAxis yAxis = new NumberAxis();            lineChart = new LineChart<>(xAxis, new NumberAxis());            barChart = new StackedBarChart<>(xAxis, yAxis);            this.vitalValidator = new VitalValidator(maxDataPoints, maxSigma, v, barChart.getData(), lineChart.getData(), validationOracle);            validator.setData(barChart.getData());            barChart.getData().add(validator.getSeries());            configureOverlayChart(lineChart);            lineChart.setMinHeight(250.0);            lineChart.setVerticalGridLinesVisible(false);            lineChart.setAnimated(false);            lineChart.setCreateSymbols(false);            lineChart.setLegendVisible(true);            stackPane.getChildren().add(0, lineChart);            stackPane.getChildren().add(0, barChart);            main.setCenter(barChart);            BorderPane.setAlignment(barChart, Pos.CENTER);    private void configureOverlayChart(final XYChart<String, Number> chart) {        chart.setAlternativeRowFillVisible(false);        chart.setAlternativeColumnFillVisible(false);        chart.setHorizontalGridLinesVisible(false);        chart.setVerticalGridLinesVisible(false);        chart.getXAxis().setVisible(false);        chart.getYAxis().setVisible(false);                chart.getStylesheets().addAll(getClass().getResource("overlay-chart.css").toExternalForm());    }