**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Björn Stenberg
 * Copyright (C) 2014 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** structure used for open directory streams  basic stream info (first!)  directory scan cursor  current parsed entry information  counter for root volume entries  check and return a struct dirstr_desc* from a DIR*  release the lock on the dirstr_desc*  find a free dir stream descriptor  Volumes (secondary file systems) get inserted into the system root
     * directory. If the path specified volume 0, enumeration will not
     * include other volumes, but just its own files and directories.
     *
     * Fake special directories, which don't really exist, that will get
     * redirected upon opendir()
      on the system root  do normal directory entry fetching  HAVE_MULTIVOLUME  fetch virtual volume entries?  HAVE_MULTIVOLUME  do normal directory entry fetching * POSIX interface * open a directory  volume counter is relevant only to the system root  HAVE_MULTIVOLUME  close a directory stream  needs to work even if marked "nonexistant"  read a directory  not included now but probably should be  read a directory (reentrant)  reset the position of a directory stream to the beginning of a directory  HAVE_MULTIVOLUME  0  make a directory  remove a directory  path may not end with "." * Extended interface * return if two directory streams refer to the same directory  test directory existence (returns 'false' if a file)  get the portable info from the native entry **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Björn Stenberg
 * Copyright (C) 2014 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** structure used for open directory streams  basic stream info (first!)  directory scan cursor  current parsed entry information  counter for root volume entries  check and return a struct dirstr_desc* from a DIR*  release the lock on the dirstr_desc*  find a free dir stream descriptor  Volumes (secondary file systems) get inserted into the system root
     * directory. If the path specified volume 0, enumeration will not
     * include other volumes, but just its own files and directories.
     *
     * Fake special directories, which don't really exist, that will get
     * redirected upon opendir()
      on the system root  do normal directory entry fetching  HAVE_MULTIVOLUME  fetch virtual volume entries?  HAVE_MULTIVOLUME  do normal directory entry fetching * POSIX interface * open a directory  volume counter is relevant only to the system root  HAVE_MULTIVOLUME  close a directory stream  needs to work even if marked "nonexistant"  read a directory  not included now but probably should be  read a directory (reentrant)  reset the position of a directory stream to the beginning of a directory  HAVE_MULTIVOLUME  0  make a directory  remove a directory  path may not end with "." * Extended interface * return if two directory streams refer to the same directory  test directory existence (returns 'false' if a file)  get the portable info from the native entry **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Björn Stenberg
 * Copyright (C) 2014 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** structure used for open directory streams  basic stream info (first!)  directory scan cursor  current parsed entry information  counter for root volume entries  check and return a struct dirstr_desc* from a DIR*  release the lock on the dirstr_desc*  find a free dir stream descriptor  Volumes (secondary file systems) get inserted into the system root
     * directory. If the path specified volume 0, enumeration will not
     * include other volumes, but just its own files and directories.
     *
     * Fake special directories, which don't really exist, that will get
     * redirected upon opendir()
      on the system root  do normal directory entry fetching  HAVE_MULTIVOLUME  fetch virtual volume entries?  HAVE_MULTIVOLUME  do normal directory entry fetching * POSIX interface * open a directory  volume counter is relevant only to the system root  HAVE_MULTIVOLUME  close a directory stream  needs to work even if marked "nonexistant"  read a directory  not included now but probably should be  read a directory (reentrant)  reset the position of a directory stream to the beginning of a directory  HAVE_MULTIVOLUME  0  make a directory  remove a directory  path may not end with "." * Extended interface * return if two directory streams refer to the same directory  test directory existence (returns 'false' if a file)  get the portable info from the native entry 