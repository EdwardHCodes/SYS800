	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  These routines are used to access the available module loaders

============================================================================== compute size of buffer  list all registered module loders  if we try to register an invalid loader, or an already registered loader,
	   ignore this attempt  translate IT linefeeds  just in case  Adapted from the OpenMPT project, C'ified.  fix weird chars  Allocate track sequencing array  Init note / sample lookup table  center  Creates a CSTR out of a character buffer of 'len' bytes, but strips any
   terminating non-printing characters like 0, spaces etc.  Scan for last printing char in buffer [includes high ascii up to 254]  Scan forward for possible NULL character  When the buffer wasn't completely empty, allocate a cstring and copy the
	   buffer into that string, except for any control-chars  moved samplename freeing to our caller ML_FreeEx(),
 * because we are called conditionally.  Try to find a loader that recognizes the module  Loads a module given an reader  Try to find a loader that recognizes the module  init unitrk routines  init the module structure with vanilla settings  init module loader and load the header / patterns  propagate inflags=flags for in-module samples  free loader and unitrk allocations  If the module doesn't have any specific panning, create a
	   MOD-like panning, with the channels half-separated.  Copy the static MODULE contents into the dynamic MODULE struct.  Loads a module given a file pointer.
   File is loaded from the current file seek position.  Open a module via its filename.  The loader will initialize the specified
   song-player 'player'.  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  These routines are used to access the available module loaders

============================================================================== compute size of buffer  list all registered module loders  if we try to register an invalid loader, or an already registered loader,
	   ignore this attempt  translate IT linefeeds  just in case  Adapted from the OpenMPT project, C'ified.  fix weird chars  Allocate track sequencing array  Init note / sample lookup table  center  Creates a CSTR out of a character buffer of 'len' bytes, but strips any
   terminating non-printing characters like 0, spaces etc.  Scan for last printing char in buffer [includes high ascii up to 254]  Scan forward for possible NULL character  When the buffer wasn't completely empty, allocate a cstring and copy the
	   buffer into that string, except for any control-chars  moved samplename freeing to our caller ML_FreeEx(),
 * because we are called conditionally.  Try to find a loader that recognizes the module  Loads a module given an reader  Try to find a loader that recognizes the module  init unitrk routines  init the module structure with vanilla settings  init module loader and load the header / patterns  propagate inflags=flags for in-module samples  free loader and unitrk allocations  If the module doesn't have any specific panning, create a
	   MOD-like panning, with the channels half-separated.  Copy the static MODULE contents into the dynamic MODULE struct.  Loads a module given a file pointer.
   File is loaded from the current file seek position.  Open a module via its filename.  The loader will initialize the specified
   song-player 'player'.  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  These routines are used to access the available module loaders

============================================================================== compute size of buffer  list all registered module loders  if we try to register an invalid loader, or an already registered loader,
	   ignore this attempt  translate IT linefeeds  just in case  Adapted from the OpenMPT project, C'ified.  fix weird chars  Allocate track sequencing array  Init note / sample lookup table  center  Creates a CSTR out of a character buffer of 'len' bytes, but strips any
   terminating non-printing characters like 0, spaces etc.  Scan for last printing char in buffer [includes high ascii up to 254]  Scan forward for possible NULL character  When the buffer wasn't completely empty, allocate a cstring and copy the
	   buffer into that string, except for any control-chars  moved samplename freeing to our caller ML_FreeEx(),
 * because we are called conditionally.  Try to find a loader that recognizes the module  Loads a module given an reader  Try to find a loader that recognizes the module  init unitrk routines  init the module structure with vanilla settings  init module loader and load the header / patterns  propagate inflags=flags for in-module samples  free loader and unitrk allocations  If the module doesn't have any specific panning, create a
	   MOD-like panning, with the channels half-separated.  Copy the static MODULE contents into the dynamic MODULE struct.  Loads a module given a file pointer.
   File is loaded from the current file seek position.  Open a module via its filename.  The loader will initialize the specified
   song-player 'player'.  ex:set ts=4: 