*
 * @file    MindrayA5Reader.java
 *
 * @brief   Interfaces with a Mindray A5 Series Anesthesia System. The
 * Mindray connects to the host computer via Ethernet cable. The host
 * computer, executing this program, listens on a port for HL7 messages.
 * The program uses an open source HL7 application programming interface (HAPI)
 * to receive and parse HL7 messages from the Mindray. The Mindray uses a
 * communications protocol called Minimal Lower Layer Protocol (MLLP).
 *
 * @author  M Szwaja
 =============================================================================*
 * Class contains main method which starts the application. The application
 * interfaces with a Mindray A5 Series Anesthesia System.
 *
   * Parse command line parameters and save configuration settings for
   * the application.
   * @param args
   * @return Returns zero for success
   *
   * Parses command line options and creates one server to interface with the
   * Mindray. The server listens for incoming messages.
   * @param args
   * @throws HL7Exception
   * @throws EncodingNotSupportedException
   * @throws IOException
   * @throws LLPException
    Program executes until operator presses Escape key. Requires the operator to press the Enter key. Blocks for enter key Shutdown the server and DDS Complete finalization up to this point Run garbage collector TODO Why does it take so long (30 secs to 1 min) to return from main? Debugging proved that the culprit is the SimpleServer start() method Tried just about everything to stop SimpleServer. Unfortunately there is no Thread.interrupt() inside any of the SimpleServer stop() methods.System.exit(0); // ????