**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (c) 2010 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * SMAF (Synthetic music Mobile Application Format)
 *
 * References
 * [1] YAMAHA Corporation, Synthetic music Mobile Application Format Ver.3.05, 2002
  PCM Audio Track  Score Track  SMAF supported codec formats  unsupported format  2's complement PCM  Offset Binary PCM  YAMAHA ADPCM  search PCM Audio Track Chunk 
     * get format
     *  buf
     *    +0: Format Type
     *    +1: Sequence Type
     *    +2: bit 7 0:mono/1:stereo, bit 4-6 format, bit 0-3: frequency
     *    +3: bit 4-7: base bit
     *    +4: TimeBase_D
     *    +5: TimeBase_G
     *
     * Note: If PCM Audio Track does not include Sequence Data Chunk,
     *       tmp+6 is the start position of Wave Data Chunk.
      search Wave Data Chunk  parse Optional Data Chunk  Optional Data Chunk size  search Score Track Chunk 
     * search next chunk
     * usually, next chunk ('M***') found within 40 bytes.
      search Score Track Stream PCM Data Chunk 
     * parse Score Track Stream Wave Data Chunk
     *  buf
     *    +4-7: chunk size (WaveType(3bytes) + wave data count)
     *    +8:   bit 7 0:mono/1:stereo, bit 4-6 format, bit 0-3: base bit
     *    +9:   frequency (MSB)
     *    +10:  frequency (LSB)
      check File Chunk and Contents Info Chunk  data signess (default signed)  data is always big endian  this is the codec entry point  Generic codec initialisation  this is called for each file to process  position of the first block in file  Need to save resume for later use (cleared indirectly by advance_buffer)  check chunksize  make sure we're at the correct offset  Round down to previous block  already where we need to be  The main decoder loop  End of stream **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (c) 2010 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * SMAF (Synthetic music Mobile Application Format)
 *
 * References
 * [1] YAMAHA Corporation, Synthetic music Mobile Application Format Ver.3.05, 2002
  PCM Audio Track  Score Track  SMAF supported codec formats  unsupported format  2's complement PCM  Offset Binary PCM  YAMAHA ADPCM  search PCM Audio Track Chunk 
     * get format
     *  buf
     *    +0: Format Type
     *    +1: Sequence Type
     *    +2: bit 7 0:mono/1:stereo, bit 4-6 format, bit 0-3: frequency
     *    +3: bit 4-7: base bit
     *    +4: TimeBase_D
     *    +5: TimeBase_G
     *
     * Note: If PCM Audio Track does not include Sequence Data Chunk,
     *       tmp+6 is the start position of Wave Data Chunk.
      search Wave Data Chunk  parse Optional Data Chunk  Optional Data Chunk size  search Score Track Chunk 
     * search next chunk
     * usually, next chunk ('M***') found within 40 bytes.
      search Score Track Stream PCM Data Chunk 
     * parse Score Track Stream Wave Data Chunk
     *  buf
     *    +4-7: chunk size (WaveType(3bytes) + wave data count)
     *    +8:   bit 7 0:mono/1:stereo, bit 4-6 format, bit 0-3: base bit
     *    +9:   frequency (MSB)
     *    +10:  frequency (LSB)
      check File Chunk and Contents Info Chunk  data signess (default signed)  data is always big endian  this is the codec entry point  Generic codec initialisation  this is called for each file to process  position of the first block in file  Need to save resume for later use (cleared indirectly by advance_buffer)  check chunksize  make sure we're at the correct offset  Round down to previous block  already where we need to be  The main decoder loop  End of stream **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (c) 2010 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * SMAF (Synthetic music Mobile Application Format)
 *
 * References
 * [1] YAMAHA Corporation, Synthetic music Mobile Application Format Ver.3.05, 2002
  PCM Audio Track  Score Track  SMAF supported codec formats  unsupported format  2's complement PCM  Offset Binary PCM  YAMAHA ADPCM  search PCM Audio Track Chunk 
     * get format
     *  buf
     *    +0: Format Type
     *    +1: Sequence Type
     *    +2: bit 7 0:mono/1:stereo, bit 4-6 format, bit 0-3: frequency
     *    +3: bit 4-7: base bit
     *    +4: TimeBase_D
     *    +5: TimeBase_G
     *
     * Note: If PCM Audio Track does not include Sequence Data Chunk,
     *       tmp+6 is the start position of Wave Data Chunk.
      search Wave Data Chunk  parse Optional Data Chunk  Optional Data Chunk size  search Score Track Chunk 
     * search next chunk
     * usually, next chunk ('M***') found within 40 bytes.
      search Score Track Stream PCM Data Chunk 
     * parse Score Track Stream Wave Data Chunk
     *  buf
     *    +4-7: chunk size (WaveType(3bytes) + wave data count)
     *    +8:   bit 7 0:mono/1:stereo, bit 4-6 format, bit 0-3: base bit
     *    +9:   frequency (MSB)
     *    +10:  frequency (LSB)
      check File Chunk and Contents Info Chunk  data signess (default signed)  data is always big endian  this is the codec entry point  Generic codec initialisation  this is called for each file to process  position of the first block in file  Need to save resume for later use (cleared indirectly by advance_buffer)  check chunksize  make sure we're at the correct offset  Round down to previous block  already where we need to be  The main decoder loop  End of stream 