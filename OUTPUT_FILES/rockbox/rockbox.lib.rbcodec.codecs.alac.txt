**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** The maximum buffer size handled. This amount of bytes is buffered for each 
 * frame.  this is the codec entry point  Generic codec initialisation  this is called for each file to process  Clean and initialize decoder structures  Read resume info before calling qtmovie_read.  if qtmovie_read returns successfully, the stream is up to
     * the movie data, which can be used directly by the decoder  initialise the sound converter  Set i for first frame, seek to desired sample position for resuming.  The main decoding loop  Deal with any pending seek requests  Request the required number of bytes from the input buffer  Decode one block - returned samples will be host-endian  Advance codec buffer by amount of consumed bytes  Output the audio  Update the elapsed-time indicator **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** The maximum buffer size handled. This amount of bytes is buffered for each 
 * frame.  this is the codec entry point  Generic codec initialisation  this is called for each file to process  Clean and initialize decoder structures  Read resume info before calling qtmovie_read.  if qtmovie_read returns successfully, the stream is up to
     * the movie data, which can be used directly by the decoder  initialise the sound converter  Set i for first frame, seek to desired sample position for resuming.  The main decoding loop  Deal with any pending seek requests  Request the required number of bytes from the input buffer  Decode one block - returned samples will be host-endian  Advance codec buffer by amount of consumed bytes  Output the audio  Update the elapsed-time indicator **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** The maximum buffer size handled. This amount of bytes is buffered for each 
 * frame.  this is the codec entry point  Generic codec initialisation  this is called for each file to process  Clean and initialize decoder structures  Read resume info before calling qtmovie_read.  if qtmovie_read returns successfully, the stream is up to
     * the movie data, which can be used directly by the decoder  initialise the sound converter  Set i for first frame, seek to desired sample position for resuming.  The main decoding loop  Deal with any pending seek requests  Request the required number of bytes from the input buffer  Decode one block - returned samples will be host-endian  Advance codec buffer by amount of consumed bytes  Output the audio  Update the elapsed-time indicator 