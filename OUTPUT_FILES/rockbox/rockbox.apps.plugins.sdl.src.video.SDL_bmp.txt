
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 
   Code to load and save surfaces in Windows BMP format.

   Why support BMP format?  Well, it's a native format for Windows, and
   most image processing programs can read and write it.  It would be nice
   to be able to have at least one image format that we can natively load
   and save, and since PNG is so complex that it would bloat the library,
   BMP is a good alternative. 

   This code currently supports Win32 DIBs in uncompressed 8 and 24 bpp.
 Compression encodings for BMP files  The Win32 BMP file header (14 bytes)  The Win32 BITMAPINFOHEADER struct (40 bytes)  Make sure we are passed a valid data source  Read in the BMP file header  Read the Win32 BITMAPINFOHEADER  stop some compiler warnings.  Check for read error  Expand 1 and 4 bit bitmaps to 8 bits per pixel  We don't support any BMP compression right now  If there are no masks, use the defaults  Default values for the BMP format  Fall through -- read the RGB masks  Create a compatible surface, note that the colors are RGB ordered  Load the palette, if any  Read the surface pixels.  Note that the bmp image is upside down  Byte-swap the pixels if needed. Note that the 24bpp
			   case has already been taken care of above.  Skip padding bytes, ugh  The Win32 BMP file header (14 bytes)  The Win32 BITMAPINFOHEADER struct (40 bytes)  Make sure we have somewhere to save  Convert to 24 bits per pixel  Set the BMP file header values  We'll write this when we're done  We'll write this when we're done  Write the BMP file header values  Set the BMP info values  Write the BMP info values  Write the palette (in BGR color order)  Write the bitmap offset  Write the bitmap image upside down  Write the BMP file size  Close it up.. 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 
   Code to load and save surfaces in Windows BMP format.

   Why support BMP format?  Well, it's a native format for Windows, and
   most image processing programs can read and write it.  It would be nice
   to be able to have at least one image format that we can natively load
   and save, and since PNG is so complex that it would bloat the library,
   BMP is a good alternative. 

   This code currently supports Win32 DIBs in uncompressed 8 and 24 bpp.
 Compression encodings for BMP files  The Win32 BMP file header (14 bytes)  The Win32 BITMAPINFOHEADER struct (40 bytes)  Make sure we are passed a valid data source  Read in the BMP file header  Read the Win32 BITMAPINFOHEADER  stop some compiler warnings.  Check for read error  Expand 1 and 4 bit bitmaps to 8 bits per pixel  We don't support any BMP compression right now  If there are no masks, use the defaults  Default values for the BMP format  Fall through -- read the RGB masks  Create a compatible surface, note that the colors are RGB ordered  Load the palette, if any  Read the surface pixels.  Note that the bmp image is upside down  Byte-swap the pixels if needed. Note that the 24bpp
			   case has already been taken care of above.  Skip padding bytes, ugh  The Win32 BMP file header (14 bytes)  The Win32 BITMAPINFOHEADER struct (40 bytes)  Make sure we have somewhere to save  Convert to 24 bits per pixel  Set the BMP file header values  We'll write this when we're done  We'll write this when we're done  Write the BMP file header values  Set the BMP info values  Write the BMP info values  Write the palette (in BGR color order)  Write the bitmap offset  Write the bitmap image upside down  Write the BMP file size  Close it up.. 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 
   Code to load and save surfaces in Windows BMP format.

   Why support BMP format?  Well, it's a native format for Windows, and
   most image processing programs can read and write it.  It would be nice
   to be able to have at least one image format that we can natively load
   and save, and since PNG is so complex that it would bloat the library,
   BMP is a good alternative. 

   This code currently supports Win32 DIBs in uncompressed 8 and 24 bpp.
 Compression encodings for BMP files  The Win32 BMP file header (14 bytes)  The Win32 BITMAPINFOHEADER struct (40 bytes)  Make sure we are passed a valid data source  Read in the BMP file header  Read the Win32 BITMAPINFOHEADER  stop some compiler warnings.  Check for read error  Expand 1 and 4 bit bitmaps to 8 bits per pixel  We don't support any BMP compression right now  If there are no masks, use the defaults  Default values for the BMP format  Fall through -- read the RGB masks  Create a compatible surface, note that the colors are RGB ordered  Load the palette, if any  Read the surface pixels.  Note that the bmp image is upside down  Byte-swap the pixels if needed. Note that the 24bpp
			   case has already been taken care of above.  Skip padding bytes, ugh  The Win32 BMP file header (14 bytes)  The Win32 BITMAPINFOHEADER struct (40 bytes)  Make sure we have somewhere to save  Convert to 24 bits per pixel  Set the BMP file header values  We'll write this when we're done  We'll write this when we're done  Write the BMP file header values  Set the BMP info values  Write the BMP info values  Write the palette (in BGR color order)  Write the bitmap offset  Write the bitmap image upside down  Write the BMP file size  Close it up.. 