**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Jerome Kuptz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** cap ff/rewind step size at max % of file  3% of 30min file == 54s step size  initial setup of wps_data   Do audio first, then update, unless skin were to use its local
       status in which case, reverse it  Do audio first, then update, unless skin were to use its local
       status in which case, reverse it  HAVE_TOUCHSCREEN  current ff/rewind step  maximum ff/rewind step  current ff/rewind count (in ticks)  forward=1 or backward=-1  fast forwarding, calc max step relative to end  rewinding, calc max step relative to start  smooth seeking by multiplying step by: 1 + (2 ^ -accel)  set the wps state ff_rewind_count so the progess info
                   displays corectly  turn on backlight n seconds before track ends, and turn it off n
               seconds into the new track. n == backlight_timeout, or 5s  use 5s if backlight is always on or off  turn on remote backlight n seconds before track ends, and turn it
               off n seconds into the new track. n == remote_backlight_timeout,
               or 5s  use 5s if backlight is always on or off  prevent the next dir to immediatly start being ffw'd  take care of if we're playing a cuesheet  if the result was false, then we really want
               to skip to the next track  if cuesheet is active, then we want the current tracks end instead of
     * the total end  Do normal track skipping 
 * If the user is unable to see the wps, because the display is deactivated,
 * we suppress updates until the wps is activated again (the lcd driver will
 * call this hook to issue an instant update)
 *  force timeout in wps main loop, so that the update is instantly  Play safe and unregister the hook  unhandle statusbar update delay 
 * display the wps on entering or restoring  Update the values in the first (default) viewport - in case the user
           has modified the statusbar or colour settings  make the backdrop actually take effect  force statusbar/skin update since we just cleared the whole screen  make sure resume info is saved  The WPS can be left in two ways:
 *      a)  call a function, which draws over the wps. In this case, the wps
 *          will be still active (i.e. the below function didn't return)
 *      b)  return with a value evaluated by root_menu.c, in this case the wps
 *          is really left, and root_menu will handle the next screen
 *
 * In either way, call gwps_leave_wps(), in order to restore the correct
 * "main screen" backdrops and statusbars
  timer to delay screen redraw temporarily  did someone else (i.e power thread) change audio pause mode?  if another thread paused audio, we are probably in car mode,
               about to shut down. lets save the settings.  Exit if audio has stopped playing. This happens e.g. at end of
           playlist or if using the sleep timer.  The iPods/X5/M5 use a single button for the A-B mode markers,
   defined as ACTION_WPSAB_SINGLE in their config files.  set the A spot  set the B spot  fall through  if music is stopped in the context menu we want to exit the wps  play/pause  fast forward
                OR next dir if this is straight after ACTION_WPS_SKIPNEXT  fast rewind
                OR prev dir if this is straight after ACTION_WPS_SKIPPREV, prev / restart  if we're in A/B repeat mode and the current position
                   is past the A marker, jump back to the A marker...  ...otherwise, do it normally  next
                   OR if skip length set, hop by predetermined amount.  if we're in A/B repeat mode and the current position is
                   before the A marker, jump to the A marker...  ...otherwise, do it normally  next / prev directories  and set A-B markers if in a-b mode  menu key functions  HAVE_QUICKSCREEN  screen settings  BUTTON_F3  pitch screen  HAVE_PITCHCONTROL  reset A&B markers  AB_REPEAT_ENABLE  stop and exit wps  this case is used by the softlock feature
              * it requests a full update here  Timeout, do a partial update  hopefully fix the ffw/rwd bug  music has been stopped by the default handler  we remove the update delay since it's not very usable in the wps,
         * e.g. during volume changing or ffwd/rewind  currently, all remotes are readable without backlight
                 * so still update those  unreachable - just to reduce compiler warnings  this is called from the playback thread so NO DRAWING!  We'll be updating due to restore initialized with true  add the WPS track event callbacks  Use the same callback as ..._TRACK_CHANGE for when remaining handles have
       finished **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Jerome Kuptz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** cap ff/rewind step size at max % of file  3% of 30min file == 54s step size  initial setup of wps_data   Do audio first, then update, unless skin were to use its local
       status in which case, reverse it  Do audio first, then update, unless skin were to use its local
       status in which case, reverse it  HAVE_TOUCHSCREEN  current ff/rewind step  maximum ff/rewind step  current ff/rewind count (in ticks)  forward=1 or backward=-1  fast forwarding, calc max step relative to end  rewinding, calc max step relative to start  smooth seeking by multiplying step by: 1 + (2 ^ -accel)  set the wps state ff_rewind_count so the progess info
                   displays corectly  turn on backlight n seconds before track ends, and turn it off n
               seconds into the new track. n == backlight_timeout, or 5s  use 5s if backlight is always on or off  turn on remote backlight n seconds before track ends, and turn it
               off n seconds into the new track. n == remote_backlight_timeout,
               or 5s  use 5s if backlight is always on or off  prevent the next dir to immediatly start being ffw'd  take care of if we're playing a cuesheet  if the result was false, then we really want
               to skip to the next track  if cuesheet is active, then we want the current tracks end instead of
     * the total end  Do normal track skipping 
 * If the user is unable to see the wps, because the display is deactivated,
 * we suppress updates until the wps is activated again (the lcd driver will
 * call this hook to issue an instant update)
 *  force timeout in wps main loop, so that the update is instantly  Play safe and unregister the hook  unhandle statusbar update delay 
 * display the wps on entering or restoring  Update the values in the first (default) viewport - in case the user
           has modified the statusbar or colour settings  make the backdrop actually take effect  force statusbar/skin update since we just cleared the whole screen  make sure resume info is saved  The WPS can be left in two ways:
 *      a)  call a function, which draws over the wps. In this case, the wps
 *          will be still active (i.e. the below function didn't return)
 *      b)  return with a value evaluated by root_menu.c, in this case the wps
 *          is really left, and root_menu will handle the next screen
 *
 * In either way, call gwps_leave_wps(), in order to restore the correct
 * "main screen" backdrops and statusbars
  timer to delay screen redraw temporarily  did someone else (i.e power thread) change audio pause mode?  if another thread paused audio, we are probably in car mode,
               about to shut down. lets save the settings.  Exit if audio has stopped playing. This happens e.g. at end of
           playlist or if using the sleep timer.  The iPods/X5/M5 use a single button for the A-B mode markers,
   defined as ACTION_WPSAB_SINGLE in their config files.  set the A spot  set the B spot  fall through  if music is stopped in the context menu we want to exit the wps  play/pause  fast forward
                OR next dir if this is straight after ACTION_WPS_SKIPNEXT  fast rewind
                OR prev dir if this is straight after ACTION_WPS_SKIPPREV, prev / restart  if we're in A/B repeat mode and the current position
                   is past the A marker, jump back to the A marker...  ...otherwise, do it normally  next
                   OR if skip length set, hop by predetermined amount.  if we're in A/B repeat mode and the current position is
                   before the A marker, jump to the A marker...  ...otherwise, do it normally  next / prev directories  and set A-B markers if in a-b mode  menu key functions  HAVE_QUICKSCREEN  screen settings  BUTTON_F3  pitch screen  HAVE_PITCHCONTROL  reset A&B markers  AB_REPEAT_ENABLE  stop and exit wps  this case is used by the softlock feature
              * it requests a full update here  Timeout, do a partial update  hopefully fix the ffw/rwd bug  music has been stopped by the default handler  we remove the update delay since it's not very usable in the wps,
         * e.g. during volume changing or ffwd/rewind  currently, all remotes are readable without backlight
                 * so still update those  unreachable - just to reduce compiler warnings  this is called from the playback thread so NO DRAWING!  We'll be updating due to restore initialized with true  add the WPS track event callbacks  Use the same callback as ..._TRACK_CHANGE for when remaining handles have
       finished **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Jerome Kuptz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** cap ff/rewind step size at max % of file  3% of 30min file == 54s step size  initial setup of wps_data   Do audio first, then update, unless skin were to use its local
       status in which case, reverse it  Do audio first, then update, unless skin were to use its local
       status in which case, reverse it  HAVE_TOUCHSCREEN  current ff/rewind step  maximum ff/rewind step  current ff/rewind count (in ticks)  forward=1 or backward=-1  fast forwarding, calc max step relative to end  rewinding, calc max step relative to start  smooth seeking by multiplying step by: 1 + (2 ^ -accel)  set the wps state ff_rewind_count so the progess info
                   displays corectly  turn on backlight n seconds before track ends, and turn it off n
               seconds into the new track. n == backlight_timeout, or 5s  use 5s if backlight is always on or off  turn on remote backlight n seconds before track ends, and turn it
               off n seconds into the new track. n == remote_backlight_timeout,
               or 5s  use 5s if backlight is always on or off  prevent the next dir to immediatly start being ffw'd  take care of if we're playing a cuesheet  if the result was false, then we really want
               to skip to the next track  if cuesheet is active, then we want the current tracks end instead of
     * the total end  Do normal track skipping 
 * If the user is unable to see the wps, because the display is deactivated,
 * we suppress updates until the wps is activated again (the lcd driver will
 * call this hook to issue an instant update)
 *  force timeout in wps main loop, so that the update is instantly  Play safe and unregister the hook  unhandle statusbar update delay 
 * display the wps on entering or restoring  Update the values in the first (default) viewport - in case the user
           has modified the statusbar or colour settings  make the backdrop actually take effect  force statusbar/skin update since we just cleared the whole screen  make sure resume info is saved  The WPS can be left in two ways:
 *      a)  call a function, which draws over the wps. In this case, the wps
 *          will be still active (i.e. the below function didn't return)
 *      b)  return with a value evaluated by root_menu.c, in this case the wps
 *          is really left, and root_menu will handle the next screen
 *
 * In either way, call gwps_leave_wps(), in order to restore the correct
 * "main screen" backdrops and statusbars
  timer to delay screen redraw temporarily  did someone else (i.e power thread) change audio pause mode?  if another thread paused audio, we are probably in car mode,
               about to shut down. lets save the settings.  Exit if audio has stopped playing. This happens e.g. at end of
           playlist or if using the sleep timer.  The iPods/X5/M5 use a single button for the A-B mode markers,
   defined as ACTION_WPSAB_SINGLE in their config files.  set the A spot  set the B spot  fall through  if music is stopped in the context menu we want to exit the wps  play/pause  fast forward
                OR next dir if this is straight after ACTION_WPS_SKIPNEXT  fast rewind
                OR prev dir if this is straight after ACTION_WPS_SKIPPREV, prev / restart  if we're in A/B repeat mode and the current position
                   is past the A marker, jump back to the A marker...  ...otherwise, do it normally  next
                   OR if skip length set, hop by predetermined amount.  if we're in A/B repeat mode and the current position is
                   before the A marker, jump to the A marker...  ...otherwise, do it normally  next / prev directories  and set A-B markers if in a-b mode  menu key functions  HAVE_QUICKSCREEN  screen settings  BUTTON_F3  pitch screen  HAVE_PITCHCONTROL  reset A&B markers  AB_REPEAT_ENABLE  stop and exit wps  this case is used by the softlock feature
              * it requests a full update here  Timeout, do a partial update  hopefully fix the ffw/rwd bug  music has been stopped by the default handler  we remove the update delay since it's not very usable in the wps,
         * e.g. during volume changing or ffwd/rewind  currently, all remotes are readable without backlight
                 * so still update those  unreachable - just to reduce compiler warnings  this is called from the playback thread so NO DRAWING!  We'll be updating due to restore initialized with true  add the WPS track event callbacks  Use the same callback as ..._TRACK_CHANGE for when remaining handles have
       finished 