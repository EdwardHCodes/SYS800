**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Table that uses combinations of current level and pwm fraction to get
 * as many uniquely-visible brightness levels as possible. The lowest current
 * level for any average current is used even though many combinations give
 * duplicate values. Current (I) values are in mA.  I-level PWM(x/15) I-Avg     0        0      0.0      3        1      0.2      3        2      0.4      3        3      0.6      3        4      0.8      3        5      1.0      3        6      1.2      3        7      1.4      3        8      1.6      3        9      1.8      3       10      2.0      3       11      2.2      3       12      2.4   default     3       13      2.6      3       14      2.8      3       15      3.0      6        9      3.6      6       10      4.0      6       11      4.4      6       12      4.8      6       13      5.2      6       14      5.6      6       15      6.0      9       11      6.6      9       12      7.2   Anything higher is just too much    HAVE_BACKLIGHT_BRIGHTNESS  Bits always combined with ramping bits  Is on or off?  Final PWM setting for fade-in  Backlight ramping settings  Set default LED register value  Our PWM and I-Level is different than retailos (but same apparent
     * brightness), so init to our default.  Use default PWM  Set/clear LEDRAMPUP bit, clear LEDRAMPDOWN bit,
     * Ensure LED supply is on.  Specify final PWM setting  Write regs within 30us of each other (requires single xfer)  Set/clear LEDRAMPDOWN bit, clear LEDRAMPUP bit  Wait 100us - 500ms  Write final PWM setting  Assumes that the backlight has been initialized - parameter should
 * already be range-checked in public interface.  HAVE_BACKLIGHT_BRIGHTNESS  Turn off LED supply **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Table that uses combinations of current level and pwm fraction to get
 * as many uniquely-visible brightness levels as possible. The lowest current
 * level for any average current is used even though many combinations give
 * duplicate values. Current (I) values are in mA.  I-level PWM(x/15) I-Avg     0        0      0.0      3        1      0.2      3        2      0.4      3        3      0.6      3        4      0.8      3        5      1.0      3        6      1.2      3        7      1.4      3        8      1.6      3        9      1.8      3       10      2.0      3       11      2.2      3       12      2.4   default     3       13      2.6      3       14      2.8      3       15      3.0      6        9      3.6      6       10      4.0      6       11      4.4      6       12      4.8      6       13      5.2      6       14      5.6      6       15      6.0      9       11      6.6      9       12      7.2   Anything higher is just too much    HAVE_BACKLIGHT_BRIGHTNESS  Bits always combined with ramping bits  Is on or off?  Final PWM setting for fade-in  Backlight ramping settings  Set default LED register value  Our PWM and I-Level is different than retailos (but same apparent
     * brightness), so init to our default.  Use default PWM  Set/clear LEDRAMPUP bit, clear LEDRAMPDOWN bit,
     * Ensure LED supply is on.  Specify final PWM setting  Write regs within 30us of each other (requires single xfer)  Set/clear LEDRAMPDOWN bit, clear LEDRAMPUP bit  Wait 100us - 500ms  Write final PWM setting  Assumes that the backlight has been initialized - parameter should
 * already be range-checked in public interface.  HAVE_BACKLIGHT_BRIGHTNESS  Turn off LED supply **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Table that uses combinations of current level and pwm fraction to get
 * as many uniquely-visible brightness levels as possible. The lowest current
 * level for any average current is used even though many combinations give
 * duplicate values. Current (I) values are in mA.  I-level PWM(x/15) I-Avg     0        0      0.0      3        1      0.2      3        2      0.4      3        3      0.6      3        4      0.8      3        5      1.0      3        6      1.2      3        7      1.4      3        8      1.6      3        9      1.8      3       10      2.0      3       11      2.2      3       12      2.4   default     3       13      2.6      3       14      2.8      3       15      3.0      6        9      3.6      6       10      4.0      6       11      4.4      6       12      4.8      6       13      5.2      6       14      5.6      6       15      6.0      9       11      6.6      9       12      7.2   Anything higher is just too much    HAVE_BACKLIGHT_BRIGHTNESS  Bits always combined with ramping bits  Is on or off?  Final PWM setting for fade-in  Backlight ramping settings  Set default LED register value  Our PWM and I-Level is different than retailos (but same apparent
     * brightness), so init to our default.  Use default PWM  Set/clear LEDRAMPUP bit, clear LEDRAMPDOWN bit,
     * Ensure LED supply is on.  Specify final PWM setting  Write regs within 30us of each other (requires single xfer)  Set/clear LEDRAMPDOWN bit, clear LEDRAMPUP bit  Wait 100us - 500ms  Write final PWM setting  Assumes that the backlight has been initialized - parameter should
 * already be range-checked in public interface.  HAVE_BACKLIGHT_BRIGHTNESS  Turn off LED supply 