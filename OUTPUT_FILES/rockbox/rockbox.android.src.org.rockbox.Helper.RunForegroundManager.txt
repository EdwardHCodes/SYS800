 all below is heavily based on the examples found on
     * http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)
      create Intent for clicking on the expanded notifcation area  retrieve height of launcher icon. Used to scale down album art.  Throwable includes Exception and the expected
             * NoClassDefFoundError for Android 1.x  
         * Send the notification.
         * We use a layout id because it is a unique number.  
         * We use it later to cancel.
         
         * this call makes the service run as foreground, which
         * provides enough cpu time to do music decoding in the 
         * background
          Note to cancel BEFORE changing the
         * foreground state, since we could be killed at that point.
          do this on the main thread for 2 reasons
         * 1) Don't delay track switching with possibly costly albumart
         *  loading (i.e. off-load from the Rockbox thread)
         * 2) Work around a bug in Android where decodeFile() fails outside
         *  of the main thread (http://stackoverflow.com/q/7228633)
          The notification area doesn't have permissions to access the SD card.
                     * Push the data as Bitmap instead of Uri. Scale down to size of
                     * launcher icon -- broadcasting the unscaled image may yield in
                     * too much data, causing UI hangs of Rockbox.  scale width to keep aspect ratio -- height is the constraint  notify in this runnable to make sure the notification
                 * has the correct albumart  
         * Get the new API through reflection because it's unavailable 
         * in honeycomb
          all below is heavily based on the examples found on
     * http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)
      create Intent for clicking on the expanded notifcation area  retrieve height of launcher icon. Used to scale down album art.  Throwable includes Exception and the expected
             * NoClassDefFoundError for Android 1.x  
         * Send the notification.
         * We use a layout id because it is a unique number.  
         * We use it later to cancel.
         
         * this call makes the service run as foreground, which
         * provides enough cpu time to do music decoding in the 
         * background
          Note to cancel BEFORE changing the
         * foreground state, since we could be killed at that point.
          do this on the main thread for 2 reasons
         * 1) Don't delay track switching with possibly costly albumart
         *  loading (i.e. off-load from the Rockbox thread)
         * 2) Work around a bug in Android where decodeFile() fails outside
         *  of the main thread (http://stackoverflow.com/q/7228633)
          The notification area doesn't have permissions to access the SD card.
                     * Push the data as Bitmap instead of Uri. Scale down to size of
                     * launcher icon -- broadcasting the unscaled image may yield in
                     * too much data, causing UI hangs of Rockbox.  scale width to keep aspect ratio -- height is the constraint  notify in this runnable to make sure the notification
                 * has the correct albumart  
         * Get the new API through reflection because it's unavailable 
         * in honeycomb
          all below is heavily based on the examples found on
     * http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)
      create Intent for clicking on the expanded notifcation area  retrieve height of launcher icon. Used to scale down album art.  Throwable includes Exception and the expected
             * NoClassDefFoundError for Android 1.x  
         * Send the notification.
         * We use a layout id because it is a unique number.  
         * We use it later to cancel.
         
         * this call makes the service run as foreground, which
         * provides enough cpu time to do music decoding in the 
         * background
          Note to cancel BEFORE changing the
         * foreground state, since we could be killed at that point.
          do this on the main thread for 2 reasons
         * 1) Don't delay track switching with possibly costly albumart
         *  loading (i.e. off-load from the Rockbox thread)
         * 2) Work around a bug in Android where decodeFile() fails outside
         *  of the main thread (http://stackoverflow.com/q/7228633)
          The notification area doesn't have permissions to access the SD card.
                     * Push the data as Bitmap instead of Uri. Scale down to size of
                     * launcher icon -- broadcasting the unscaled image may yield in
                     * too much data, causing UI hangs of Rockbox.  scale width to keep aspect ratio -- height is the constraint  notify in this runnable to make sure the notification
                 * has the correct albumart  
         * Get the new API through reflection because it's unavailable 
         * in honeycomb
         