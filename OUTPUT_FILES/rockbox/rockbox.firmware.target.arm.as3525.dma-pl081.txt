**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © 2008 Rafaël Carré
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 2 channels  disable synchronisation logic  Disable the channel - clears the FIFO after sending last word  Wait for it to go inactive  Resume - must reinit to where it left off (so the docs say)  empty  Clear any pending interrupts leftover from previous operation  When LLI is 0 channel is disabled upon transfer completion   Channel Control Register  LLI triggers terminal count interrupt  | (1<<30)  cacheable  = 1,  non = 0  | (1<<29)  bufferable = 1,  non = 0  | (1<<28)  privileged = 1, user = 0  specify address increment  specify address increment  [25:24]  undefined   dst width = word, 32bit  src width = word, 32bit  OF uses transfers of 4 * 32 bits words on memory, i2sin, i2sout  OF uses transfers of 8 * 32 bits words on SD  dst size   src size   transfer size   Channel Config Register   [31:19]  Read undefined. Write as zero   (0<<18)  Halt Bit     (0<<17)  Active Bit   (0<<16)  Lock Bit     terminal count interrupt mask  interrupt error mask  flow controller is peripheral or SDMAC  we set the same peripheral as source and destination because we
        * always use memory-to-peripheral or peripheral-to-memory transfers  dst peripheral  src peripheral  enable channel  isr  Lowest channel index is serviced first  clear terminal count interrupt **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © 2008 Rafaël Carré
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 2 channels  disable synchronisation logic  Disable the channel - clears the FIFO after sending last word  Wait for it to go inactive  Resume - must reinit to where it left off (so the docs say)  empty  Clear any pending interrupts leftover from previous operation  When LLI is 0 channel is disabled upon transfer completion   Channel Control Register  LLI triggers terminal count interrupt  | (1<<30)  cacheable  = 1,  non = 0  | (1<<29)  bufferable = 1,  non = 0  | (1<<28)  privileged = 1, user = 0  specify address increment  specify address increment  [25:24]  undefined   dst width = word, 32bit  src width = word, 32bit  OF uses transfers of 4 * 32 bits words on memory, i2sin, i2sout  OF uses transfers of 8 * 32 bits words on SD  dst size   src size   transfer size   Channel Config Register   [31:19]  Read undefined. Write as zero   (0<<18)  Halt Bit     (0<<17)  Active Bit   (0<<16)  Lock Bit     terminal count interrupt mask  interrupt error mask  flow controller is peripheral or SDMAC  we set the same peripheral as source and destination because we
        * always use memory-to-peripheral or peripheral-to-memory transfers  dst peripheral  src peripheral  enable channel  isr  Lowest channel index is serviced first  clear terminal count interrupt **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © 2008 Rafaël Carré
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 2 channels  disable synchronisation logic  Disable the channel - clears the FIFO after sending last word  Wait for it to go inactive  Resume - must reinit to where it left off (so the docs say)  empty  Clear any pending interrupts leftover from previous operation  When LLI is 0 channel is disabled upon transfer completion   Channel Control Register  LLI triggers terminal count interrupt  | (1<<30)  cacheable  = 1,  non = 0  | (1<<29)  bufferable = 1,  non = 0  | (1<<28)  privileged = 1, user = 0  specify address increment  specify address increment  [25:24]  undefined   dst width = word, 32bit  src width = word, 32bit  OF uses transfers of 4 * 32 bits words on memory, i2sin, i2sout  OF uses transfers of 8 * 32 bits words on SD  dst size   src size   transfer size   Channel Config Register   [31:19]  Read undefined. Write as zero   (0<<18)  Halt Bit     (0<<17)  Active Bit   (0<<16)  Lock Bit     terminal count interrupt mask  interrupt error mask  flow controller is peripheral or SDMAC  we set the same peripheral as source and destination because we
        * always use memory-to-peripheral or peripheral-to-memory transfers  dst peripheral  src peripheral  enable channel  isr  Lowest channel index is serviced first  clear terminal count interrupt 