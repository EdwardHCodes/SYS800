**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2013 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** continue boot  switch to new section *result_id * additional defines  we include the dualboot rtc code directly  target specific boot context normal boot  USB plugged boot  RTC wake up boot  target specific boot decision power down  boot to Rockbox  boot to OF *
 * Helper functions
  only works for channels <=7, always divide by 2, never accumulates  B0P09: this pin seems to be important to shutdown the hardware properly  power down *
 * Boot decision functions
  if volume down is hold, boot to OF  on normal boot, make sure power button is hold long enough  monitor PSWITCH We are lacking buttons on the Zen X-Fi2 because on USB, the select button
     * enters recovery mode ! So we can only use power but power is used to power up
     * on normal boots and then select is free ! Thus use a non-uniform scheme:
     * - normal boot/RTC:
     *   - no key: Rockbox
     *   - select: OF
     * - USB boot:
     *   - no key: Rockbox
     *   - power: OF
      if volume down is hold, boot to OF  read keys and pswitch  if hold is on, power off
     * if back is pressed, boot to OF
     * if play is pressed, boot RB
     * otherwise power off  setup LRADC channel 0 to read keys enable pullup on hold key (B0P09) make a decision  in USB or alarm context, stick to it  never power down so replace power off decision by rockbox  otherwise start a 1 second timeout. Any decision change
     * will result in power down  setup LRADC channel 2 to read keys make a decision  boot to OF if left is hold
     * NOTE: VDDIO is set to 3.1V initially and the resistor ladder is wired to
     * VDDIO so these values are not the same as in the main binary which is
     * calibrated for VDDIO=3.3V *
 * Context functions
  On the imx233 it's easy because we know the power up source  On the other targets, we need to poke a few more registers *
 * Charging function
  Wait for interrupt  Datasheet unclear: "The lr sent to handler points here after RTI" The OF will continue to updater if we clear 18 of PERSISTENT1.
     * See dualboot-imx233.c in firmware/ for more explanation  tell rockbox that we can handle boot mode  if we were asked to boot in a special mode, do so  clear boot mode to avoid any loop  fallthrough  continue booting  normal boot **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2013 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** continue boot  switch to new section *result_id * additional defines  we include the dualboot rtc code directly  target specific boot context normal boot  USB plugged boot  RTC wake up boot  target specific boot decision power down  boot to Rockbox  boot to OF *
 * Helper functions
  only works for channels <=7, always divide by 2, never accumulates  B0P09: this pin seems to be important to shutdown the hardware properly  power down *
 * Boot decision functions
  if volume down is hold, boot to OF  on normal boot, make sure power button is hold long enough  monitor PSWITCH We are lacking buttons on the Zen X-Fi2 because on USB, the select button
     * enters recovery mode ! So we can only use power but power is used to power up
     * on normal boots and then select is free ! Thus use a non-uniform scheme:
     * - normal boot/RTC:
     *   - no key: Rockbox
     *   - select: OF
     * - USB boot:
     *   - no key: Rockbox
     *   - power: OF
      if volume down is hold, boot to OF  read keys and pswitch  if hold is on, power off
     * if back is pressed, boot to OF
     * if play is pressed, boot RB
     * otherwise power off  setup LRADC channel 0 to read keys enable pullup on hold key (B0P09) make a decision  in USB or alarm context, stick to it  never power down so replace power off decision by rockbox  otherwise start a 1 second timeout. Any decision change
     * will result in power down  setup LRADC channel 2 to read keys make a decision  boot to OF if left is hold
     * NOTE: VDDIO is set to 3.1V initially and the resistor ladder is wired to
     * VDDIO so these values are not the same as in the main binary which is
     * calibrated for VDDIO=3.3V *
 * Context functions
  On the imx233 it's easy because we know the power up source  On the other targets, we need to poke a few more registers *
 * Charging function
  Wait for interrupt  Datasheet unclear: "The lr sent to handler points here after RTI" The OF will continue to updater if we clear 18 of PERSISTENT1.
     * See dualboot-imx233.c in firmware/ for more explanation  tell rockbox that we can handle boot mode  if we were asked to boot in a special mode, do so  clear boot mode to avoid any loop  fallthrough  continue booting  normal boot **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2013 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** continue boot  switch to new section *result_id * additional defines  we include the dualboot rtc code directly  target specific boot context normal boot  USB plugged boot  RTC wake up boot  target specific boot decision power down  boot to Rockbox  boot to OF *
 * Helper functions
  only works for channels <=7, always divide by 2, never accumulates  B0P09: this pin seems to be important to shutdown the hardware properly  power down *
 * Boot decision functions
  if volume down is hold, boot to OF  on normal boot, make sure power button is hold long enough  monitor PSWITCH We are lacking buttons on the Zen X-Fi2 because on USB, the select button
     * enters recovery mode ! So we can only use power but power is used to power up
     * on normal boots and then select is free ! Thus use a non-uniform scheme:
     * - normal boot/RTC:
     *   - no key: Rockbox
     *   - select: OF
     * - USB boot:
     *   - no key: Rockbox
     *   - power: OF
      if volume down is hold, boot to OF  read keys and pswitch  if hold is on, power off
     * if back is pressed, boot to OF
     * if play is pressed, boot RB
     * otherwise power off  setup LRADC channel 0 to read keys enable pullup on hold key (B0P09) make a decision  in USB or alarm context, stick to it  never power down so replace power off decision by rockbox  otherwise start a 1 second timeout. Any decision change
     * will result in power down  setup LRADC channel 2 to read keys make a decision  boot to OF if left is hold
     * NOTE: VDDIO is set to 3.1V initially and the resistor ladder is wired to
     * VDDIO so these values are not the same as in the main binary which is
     * calibrated for VDDIO=3.3V *
 * Context functions
  On the imx233 it's easy because we know the power up source  On the other targets, we need to poke a few more registers *
 * Charging function
  Wait for interrupt  Datasheet unclear: "The lr sent to handler points here after RTI" The OF will continue to updater if we clear 18 of PERSISTENT1.
     * See dualboot-imx233.c in firmware/ for more explanation  tell rockbox that we can handle boot mode  if we were asked to boot in a special mode, do so  clear boot mode to avoid any loop  fallthrough  continue booting  normal boot 