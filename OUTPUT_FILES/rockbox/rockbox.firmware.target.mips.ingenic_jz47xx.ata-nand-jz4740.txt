**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2008 by Maurus Cuelenaere
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE#define USE_DMA#define USE_ECC
 * Standard NAND flash commands
  Extended commands for large page devices  Status bits 
 * NAND parameter struct
  data bus width: 8-bit/16-bit  row address cycles: 2/3  page size in bytes: 512/2048/4096  oob size in bytes: 16/64/128  pages per block: 32/64/128 
 * jz4740_nand.c
 *
 * NAND read routine for JZ4740
 *
 * Copyright (c) 2005-2008 Ingenic Semiconductor Inc.
 *
 -------------------------------------------------------------- Max page size  Enable DMA channel  Enable DMA interrupt  Disable DMA channel  Enable DMA channel  Enable DMA interrupt REG_DMAC_DCCSR(DMA_NAND_CHANNEL) &= ~DMAC_DCCSR_EN; /* Disable DMA channel */ USE_DMA 
 * Correct 1~9-bit errors in 512-bytes data
 
 * Read oob
  Send READ0 command  Send READOOB command  Send column address  Send page address  Send READSTART command for 2048 ps NAND  Wait for device ready  Read oob data 
 * nand_read_page()
 *
 * Input:
 *
 *    block - block number: 0, 1, 2, ...
 *    page - page number within a block: 0, 1, 2, ...
 *    dst - pointer to target buffer
 
     * Read oob data
     
     * Read page data
      Send READ0 command  Send column address  Send page address  Send READSTART command for 2048 ps NAND  Wait for device ready  Read page data  Enable RS decoding  Read data  Set PAR values  Set PRDY  Wait for completion  Disable decoding  Check result of decoding  Error occurred  Uncorrectable error occurred 
 * Disable NAND controller
 
 * Enable NAND controller
  OF RE  __gpio_as_func0() start __gpio_as_func0() end __gpio_as_func0() start __gpio_as_func0() end __gpio_port_as_input() start __gpio_port_as_input() end __gpio_disable_pull() __gpio_as_func0() start __gpio_as_func0() end panicf() doesn't return though  TODO  null  null  null  null - flash controller is enabled/disabled as needed.  TODO  firmware version  blocks count  We don't care which logical drive number(s) we have been assigned **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2008 by Maurus Cuelenaere
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE#define USE_DMA#define USE_ECC
 * Standard NAND flash commands
  Extended commands for large page devices  Status bits 
 * NAND parameter struct
  data bus width: 8-bit/16-bit  row address cycles: 2/3  page size in bytes: 512/2048/4096  oob size in bytes: 16/64/128  pages per block: 32/64/128 
 * jz4740_nand.c
 *
 * NAND read routine for JZ4740
 *
 * Copyright (c) 2005-2008 Ingenic Semiconductor Inc.
 *
 -------------------------------------------------------------- Max page size  Enable DMA channel  Enable DMA interrupt  Disable DMA channel  Enable DMA channel  Enable DMA interrupt REG_DMAC_DCCSR(DMA_NAND_CHANNEL) &= ~DMAC_DCCSR_EN; /* Disable DMA channel */ USE_DMA 
 * Correct 1~9-bit errors in 512-bytes data
 
 * Read oob
  Send READ0 command  Send READOOB command  Send column address  Send page address  Send READSTART command for 2048 ps NAND  Wait for device ready  Read oob data 
 * nand_read_page()
 *
 * Input:
 *
 *    block - block number: 0, 1, 2, ...
 *    page - page number within a block: 0, 1, 2, ...
 *    dst - pointer to target buffer
 
     * Read oob data
     
     * Read page data
      Send READ0 command  Send column address  Send page address  Send READSTART command for 2048 ps NAND  Wait for device ready  Read page data  Enable RS decoding  Read data  Set PAR values  Set PRDY  Wait for completion  Disable decoding  Check result of decoding  Error occurred  Uncorrectable error occurred 
 * Disable NAND controller
 
 * Enable NAND controller
  OF RE  __gpio_as_func0() start __gpio_as_func0() end __gpio_as_func0() start __gpio_as_func0() end __gpio_port_as_input() start __gpio_port_as_input() end __gpio_disable_pull() __gpio_as_func0() start __gpio_as_func0() end panicf() doesn't return though  TODO  null  null  null  null - flash controller is enabled/disabled as needed.  TODO  firmware version  blocks count  We don't care which logical drive number(s) we have been assigned **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2008 by Maurus Cuelenaere
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE#define USE_DMA#define USE_ECC
 * Standard NAND flash commands
  Extended commands for large page devices  Status bits 
 * NAND parameter struct
  data bus width: 8-bit/16-bit  row address cycles: 2/3  page size in bytes: 512/2048/4096  oob size in bytes: 16/64/128  pages per block: 32/64/128 
 * jz4740_nand.c
 *
 * NAND read routine for JZ4740
 *
 * Copyright (c) 2005-2008 Ingenic Semiconductor Inc.
 *
 -------------------------------------------------------------- Max page size  Enable DMA channel  Enable DMA interrupt  Disable DMA channel  Enable DMA channel  Enable DMA interrupt REG_DMAC_DCCSR(DMA_NAND_CHANNEL) &= ~DMAC_DCCSR_EN; /* Disable DMA channel */ USE_DMA 
 * Correct 1~9-bit errors in 512-bytes data
 
 * Read oob
  Send READ0 command  Send READOOB command  Send column address  Send page address  Send READSTART command for 2048 ps NAND  Wait for device ready  Read oob data 
 * nand_read_page()
 *
 * Input:
 *
 *    block - block number: 0, 1, 2, ...
 *    page - page number within a block: 0, 1, 2, ...
 *    dst - pointer to target buffer
 
     * Read oob data
     
     * Read page data
      Send READ0 command  Send column address  Send page address  Send READSTART command for 2048 ps NAND  Wait for device ready  Read page data  Enable RS decoding  Read data  Set PAR values  Set PRDY  Wait for completion  Disable decoding  Check result of decoding  Error occurred  Uncorrectable error occurred 
 * Disable NAND controller
 
 * Enable NAND controller
  OF RE  __gpio_as_func0() start __gpio_as_func0() end __gpio_as_func0() start __gpio_as_func0() end __gpio_port_as_input() start __gpio_port_as_input() end __gpio_disable_pull() __gpio_as_func0() start __gpio_as_func0() end panicf() doesn't return though  TODO  null  null  null  null - flash controller is enabled/disabled as needed.  TODO  firmware version  blocks count  We don't care which logical drive number(s) we have been assigned 