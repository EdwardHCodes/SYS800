 set for entity display ======================================================================= General routines =======================================================================
void Sys_Printf (char *fmt, ...)
{
	va_list		argptr;
	char		text[1024];
	
	va_start (argptr,fmt);
	vsprintf (text,fmt,argptr);
	va_end (argptr);
	fprintf(stderr, "%s", text);
	
	Con_Print (text);
}

void Sys_Printf (char *fmt, ...)
{

    va_list     argptr;
    char        text[1024], *t_p;
    int         l, r;

	if (nostdout)
		return;

    va_start (argptr,fmt);
    vsprintf (text,fmt,argptr);
    va_end (argptr);

    l = strlen(text);
    t_p = text;

// make sure everything goes through, even though we are non-blocking
    while (l)
    {
        r = write (1, text, l);
        if (r != l)
            sleep (0);
        if (r > 0)
        {
            t_p += r;
            l -= r;
        }
    }

}
 change stdin to non blocking
============
Sys_FileTime

returns -1 if not present
============
    fd = open(file, O_WRONLY | O_BINARY | O_CREAT | O_APPEND, 0666); ======================================================================= Sleeps for microseconds =======================================================================	Sys_Warn("floating point exception\n"); stdin rip off the /n and terminate	static char cwd[1024];	signal(SIGFPE, floating_point_exception_handler); caching is disabled by default, use -cachedir to enable	parms.cachedir = cachedir; find time spent rendering last frame play vcrfiles at max speed not time to run a server only tic yet graphic debugging aids
================
Sys_MakeCodeWriteable
================
	fprintf(stderr, "writable code %lx(%lx)-%lx, length=%lx\n", startaddr,			addr, startaddr+length, length); set for entity display ======================================================================= General routines =======================================================================
void Sys_Printf (char *fmt, ...)
{
	va_list		argptr;
	char		text[1024];
	
	va_start (argptr,fmt);
	vsprintf (text,fmt,argptr);
	va_end (argptr);
	fprintf(stderr, "%s", text);
	
	Con_Print (text);
}

void Sys_Printf (char *fmt, ...)
{

    va_list     argptr;
    char        text[1024], *t_p;
    int         l, r;

	if (nostdout)
		return;

    va_start (argptr,fmt);
    vsprintf (text,fmt,argptr);
    va_end (argptr);

    l = strlen(text);
    t_p = text;

// make sure everything goes through, even though we are non-blocking
    while (l)
    {
        r = write (1, text, l);
        if (r != l)
            sleep (0);
        if (r > 0)
        {
            t_p += r;
            l -= r;
        }
    }

}
 change stdin to non blocking
============
Sys_FileTime

returns -1 if not present
============
    fd = open(file, O_WRONLY | O_BINARY | O_CREAT | O_APPEND, 0666); ======================================================================= Sleeps for microseconds =======================================================================	Sys_Warn("floating point exception\n"); stdin rip off the /n and terminate	static char cwd[1024];	signal(SIGFPE, floating_point_exception_handler); caching is disabled by default, use -cachedir to enable	parms.cachedir = cachedir; find time spent rendering last frame play vcrfiles at max speed not time to run a server only tic yet graphic debugging aids
================
Sys_MakeCodeWriteable
================
	fprintf(stderr, "writable code %lx(%lx)-%lx, length=%lx\n", startaddr,			addr, startaddr+length, length); set for entity display ======================================================================= General routines =======================================================================
void Sys_Printf (char *fmt, ...)
{
	va_list		argptr;
	char		text[1024];
	
	va_start (argptr,fmt);
	vsprintf (text,fmt,argptr);
	va_end (argptr);
	fprintf(stderr, "%s", text);
	
	Con_Print (text);
}

void Sys_Printf (char *fmt, ...)
{

    va_list     argptr;
    char        text[1024], *t_p;
    int         l, r;

	if (nostdout)
		return;

    va_start (argptr,fmt);
    vsprintf (text,fmt,argptr);
    va_end (argptr);

    l = strlen(text);
    t_p = text;

// make sure everything goes through, even though we are non-blocking
    while (l)
    {
        r = write (1, text, l);
        if (r != l)
            sleep (0);
        if (r > 0)
        {
            t_p += r;
            l -= r;
        }
    }

}
 change stdin to non blocking
============
Sys_FileTime

returns -1 if not present
============
    fd = open(file, O_WRONLY | O_BINARY | O_CREAT | O_APPEND, 0666); ======================================================================= Sleeps for microseconds =======================================================================	Sys_Warn("floating point exception\n"); stdin rip off the /n and terminate	static char cwd[1024];	signal(SIGFPE, floating_point_exception_handler); caching is disabled by default, use -cachedir to enable	parms.cachedir = cachedir; find time spent rendering last frame play vcrfiles at max speed not time to run a server only tic yet graphic debugging aids
================
Sys_MakeCodeWriteable
================
	fprintf(stderr, "writable code %lx(%lx)-%lx, length=%lx\n", startaddr,			addr, startaddr+length, length);