 example.c -- usage example of the zlib compression library
 * Copyright (C) 1995-2004 Jean-loup Gailly.
 * For conditions of distribution and use, see copyright notice in zlib.h
  @(#) $Id$  "hello world" would be more standard, but the repeated "hello"
 * stresses the compression code better, sorry...
  Adler32 value of the dictionary  ===========================================================================
 * Test compress() and uncompress()
  ===========================================================================
 * Test read/write of .gz files
  compressed file name  add one zero byte  " hello!"  ===========================================================================
 * Test deflate() with small buffers
  compression stream  force small buffers  Finish the stream, still forcing small buffers:  ===========================================================================
 * Test inflate() with small buffers
  decompression stream  force small buffers  ===========================================================================
 * Test deflate() with large buffers and dynamic change of compression level
  compression stream  At this point, uncompr is still mostly zeroes, so it should compress
     * very well:
      Feed in already compressed data and switch to no compression:  Switch back to compressing mode:  ===========================================================================
 * Test inflate() with large buffers
  decompression stream  discard the output  ===========================================================================
 * Test deflate() with full flush
  compression stream  force an error in first compressed block  ===========================================================================
 * Test inflateSync()
  decompression stream  just read the zlib header  read all compressed data  but skip the damaged part  Because of incorrect adler32  ===========================================================================
 * Test deflate() with preset dictionary
  compression stream  ===========================================================================
 * Test inflate() with a preset dictionary
  decompression stream  ===========================================================================
 * Usage:  example [output.gz  [input.gz]]
  don't overflow on MSDOS  compr and uncompr are cleared to avoid reading uninitialized
     * data and to ensure that uncompr compresses well.
      example.c -- usage example of the zlib compression library
 * Copyright (C) 1995-2004 Jean-loup Gailly.
 * For conditions of distribution and use, see copyright notice in zlib.h
  @(#) $Id$  "hello world" would be more standard, but the repeated "hello"
 * stresses the compression code better, sorry...
  Adler32 value of the dictionary  ===========================================================================
 * Test compress() and uncompress()
  ===========================================================================
 * Test read/write of .gz files
  compressed file name  add one zero byte  " hello!"  ===========================================================================
 * Test deflate() with small buffers
  compression stream  force small buffers  Finish the stream, still forcing small buffers:  ===========================================================================
 * Test inflate() with small buffers
  decompression stream  force small buffers  ===========================================================================
 * Test deflate() with large buffers and dynamic change of compression level
  compression stream  At this point, uncompr is still mostly zeroes, so it should compress
     * very well:
      Feed in already compressed data and switch to no compression:  Switch back to compressing mode:  ===========================================================================
 * Test inflate() with large buffers
  decompression stream  discard the output  ===========================================================================
 * Test deflate() with full flush
  compression stream  force an error in first compressed block  ===========================================================================
 * Test inflateSync()
  decompression stream  just read the zlib header  read all compressed data  but skip the damaged part  Because of incorrect adler32  ===========================================================================
 * Test deflate() with preset dictionary
  compression stream  ===========================================================================
 * Test inflate() with a preset dictionary
  decompression stream  ===========================================================================
 * Usage:  example [output.gz  [input.gz]]
  don't overflow on MSDOS  compr and uncompr are cleared to avoid reading uninitialized
     * data and to ensure that uncompr compresses well.
      example.c -- usage example of the zlib compression library
 * Copyright (C) 1995-2004 Jean-loup Gailly.
 * For conditions of distribution and use, see copyright notice in zlib.h
  @(#) $Id$  "hello world" would be more standard, but the repeated "hello"
 * stresses the compression code better, sorry...
  Adler32 value of the dictionary  ===========================================================================
 * Test compress() and uncompress()
  ===========================================================================
 * Test read/write of .gz files
  compressed file name  add one zero byte  " hello!"  ===========================================================================
 * Test deflate() with small buffers
  compression stream  force small buffers  Finish the stream, still forcing small buffers:  ===========================================================================
 * Test inflate() with small buffers
  decompression stream  force small buffers  ===========================================================================
 * Test deflate() with large buffers and dynamic change of compression level
  compression stream  At this point, uncompr is still mostly zeroes, so it should compress
     * very well:
      Feed in already compressed data and switch to no compression:  Switch back to compressing mode:  ===========================================================================
 * Test inflate() with large buffers
  decompression stream  discard the output  ===========================================================================
 * Test deflate() with full flush
  compression stream  force an error in first compressed block  ===========================================================================
 * Test inflateSync()
  decompression stream  just read the zlib header  read all compressed data  but skip the damaged part  Because of incorrect adler32  ===========================================================================
 * Test deflate() with preset dictionary
  compression stream  ===========================================================================
 * Test inflate() with a preset dictionary
  decompression stream  ===========================================================================
 * Usage:  example [output.gz  [input.gz]]
  don't overflow on MSDOS  compr and uncompr are cleared to avoid reading uninitialized
     * data and to ensure that uncompr compresses well.
     