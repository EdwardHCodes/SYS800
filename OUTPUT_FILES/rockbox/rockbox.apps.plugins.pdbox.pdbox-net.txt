**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Wincent Balin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Datagram pool will contains 16 datagrams.  Datagram pool.  UDP message queues.  Initialize net infrastructure.  Initialize message pool.  Initialize and register message queues.  Send datagram.  If datagram too long, abort.  Find free datagram buffer.  If no free buffer found, abort.  Copy datagram to the buffer.  Mark datagram buffer as used.  Send event via route.  Everything went ok.  Receive datagram.  If route queue empty, abort.  Receive event.  If wrong port, abort.
       NOTE: Event is removed from the queue in any case!  Copy datagram.  Clear datagram event.  Free datagram event.  Everything went ok.  Destroy net infrastructure.  Remove message queues. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Wincent Balin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Datagram pool will contains 16 datagrams.  Datagram pool.  UDP message queues.  Initialize net infrastructure.  Initialize message pool.  Initialize and register message queues.  Send datagram.  If datagram too long, abort.  Find free datagram buffer.  If no free buffer found, abort.  Copy datagram to the buffer.  Mark datagram buffer as used.  Send event via route.  Everything went ok.  Receive datagram.  If route queue empty, abort.  Receive event.  If wrong port, abort.
       NOTE: Event is removed from the queue in any case!  Copy datagram.  Clear datagram event.  Free datagram event.  Everything went ok.  Destroy net infrastructure.  Remove message queues. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Wincent Balin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Datagram pool will contains 16 datagrams.  Datagram pool.  UDP message queues.  Initialize net infrastructure.  Initialize message pool.  Initialize and register message queues.  Send datagram.  If datagram too long, abort.  Find free datagram buffer.  If no free buffer found, abort.  Copy datagram to the buffer.  Mark datagram buffer as used.  Send event via route.  Everything went ok.  Receive datagram.  If route queue empty, abort.  Receive event.  If wrong port, abort.
       NOTE: Event is removed from the queue in any case!  Copy datagram.  Clear datagram event.  Free datagram event.  Everything went ok.  Destroy net infrastructure.  Remove message queues. 