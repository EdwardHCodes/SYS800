******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * Translates between serial frames and UDP datagrams
 * 
 * A DatagramChannel is registered on the NetworkLoop which monitors UDP
 * datagrams. When datagrams are received they are placed into writeToSerial.
 * When the channel is available for writing the contents of writeToChannel are
 * written.
 * 
 * A separate thread monitors the inbound side of the serial connection. As
 * frames are read they are deposited into writeToChannel.
 * 
 * A separate thread handles the outbound side of the serial connection. Every
 * 256ms it writes up to four frames with contents from writeToSerial. The
 * Philips monitor seems to prefer this to sparse commands and this technique
 * ensures we do not send too many frames (the spec allows up to 4 frames in a
 * 128ms period so we stay far under the limit)
 * 
 * @author Jeff Plourde
 * 
  Unknown byte FCS is calculated without escape sequences This is closed elsewhere CRC******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * Translates between serial frames and UDP datagrams
 * 
 * A DatagramChannel is registered on the NetworkLoop which monitors UDP
 * datagrams. When datagrams are received they are placed into writeToSerial.
 * When the channel is available for writing the contents of writeToChannel are
 * written.
 * 
 * A separate thread monitors the inbound side of the serial connection. As
 * frames are read they are deposited into writeToChannel.
 * 
 * A separate thread handles the outbound side of the serial connection. Every
 * 256ms it writes up to four frames with contents from writeToSerial. The
 * Philips monitor seems to prefer this to sparse commands and this technique
 * ensures we do not send too many frames (the spec allows up to 4 frames in a
 * 128ms period so we stay far under the limit)
 * 
 * @author Jeff Plourde
 * 
  Unknown byte FCS is calculated without escape sequences This is closed elsewhere CRC******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * Translates between serial frames and UDP datagrams
 * 
 * A DatagramChannel is registered on the NetworkLoop which monitors UDP
 * datagrams. When datagrams are received they are placed into writeToSerial.
 * When the channel is available for writing the contents of writeToChannel are
 * written.
 * 
 * A separate thread monitors the inbound side of the serial connection. As
 * frames are read they are deposited into writeToChannel.
 * 
 * A separate thread handles the outbound side of the serial connection. Every
 * 256ms it writes up to four frames with contents from writeToSerial. The
 * Philips monitor seems to prefer this to sparse commands and this technique
 * ensures we do not send too many frames (the spec allows up to 4 frames in a
 * 128ms period so we stay far under the limit)
 * 
 * @author Jeff Plourde
 * 
  Unknown byte FCS is calculated without escape sequences This is closed elsewhere CRC******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * Translates between serial frames and UDP datagrams
 * 
 * A DatagramChannel is registered on the NetworkLoop which monitors UDP
 * datagrams. When datagrams are received they are placed into writeToSerial.
 * When the channel is available for writing the contents of writeToChannel are
 * written.
 * 
 * A separate thread monitors the inbound side of the serial connection. As
 * frames are read they are deposited into writeToChannel.
 * 
 * A separate thread handles the outbound side of the serial connection. Every
 * 256ms it writes up to four frames with contents from writeToSerial. The
 * Philips monitor seems to prefer this to sparse commands and this technique
 * ensures we do not send too many frames (the spec allows up to 4 frames in a
 * 128ms period so we stay far under the limit)
 * 
 * @author Jeff Plourde
 * 
  Unknown byte FCS is calculated without escape sequences This is closed elsewhere CRC******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * Translates between serial frames and UDP datagrams
 * 
 * A DatagramChannel is registered on the NetworkLoop which monitors UDP
 * datagrams. When datagrams are received they are placed into writeToSerial.
 * When the channel is available for writing the contents of writeToChannel are
 * written.
 * 
 * A separate thread monitors the inbound side of the serial connection. As
 * frames are read they are deposited into writeToChannel.
 * 
 * A separate thread handles the outbound side of the serial connection. Every
 * 256ms it writes up to four frames with contents from writeToSerial. The
 * Philips monitor seems to prefer this to sparse commands and this technique
 * ensures we do not send too many frames (the spec allows up to 4 frames in a
 * 128ms period so we stay far under the limit)
 * 
 * @author Jeff Plourde
 * 
  Unknown byte FCS is calculated without escape sequences This is closed elsewhere CRC******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * Translates between serial frames and UDP datagrams
 * 
 * A DatagramChannel is registered on the NetworkLoop which monitors UDP
 * datagrams. When datagrams are received they are placed into writeToSerial.
 * When the channel is available for writing the contents of writeToChannel are
 * written.
 * 
 * A separate thread monitors the inbound side of the serial connection. As
 * frames are read they are deposited into writeToChannel.
 * 
 * A separate thread handles the outbound side of the serial connection. Every
 * 256ms it writes up to four frames with contents from writeToSerial. The
 * Philips monitor seems to prefer this to sparse commands and this technique
 * ensures we do not send too many frames (the spec allows up to 4 frames in a
 * 128ms period so we stay far under the limit)
 * 
 * @author Jeff Plourde
 * 
  Unknown byte FCS is calculated without escape sequences This is closed elsewhere CRC******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * Translates between serial frames and UDP datagrams
 * 
 * A DatagramChannel is registered on the NetworkLoop which monitors UDP
 * datagrams. When datagrams are received they are placed into writeToSerial.
 * When the channel is available for writing the contents of writeToChannel are
 * written.
 * 
 * A separate thread monitors the inbound side of the serial connection. As
 * frames are read they are deposited into writeToChannel.
 * 
 * A separate thread handles the outbound side of the serial connection. Every
 * 256ms it writes up to four frames with contents from writeToSerial. The
 * Philips monitor seems to prefer this to sparse commands and this technique
 * ensures we do not send too many frames (the spec allows up to 4 frames in a
 * 128ms period so we stay far under the limit)
 * 
 * @author Jeff Plourde
 * 
  Unknown byte FCS is calculated without escape sequences This is closed elsewhere CRC