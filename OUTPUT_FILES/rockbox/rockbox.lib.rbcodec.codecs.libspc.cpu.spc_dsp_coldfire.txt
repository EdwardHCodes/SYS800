**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Michael Sevakis (jhMikeS)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
     * output = y0 + f*y1 - f*y0
      separate frac and whole  y0=upper, y1=lower   %acc0 = f*y1  %acc0 -= f*y0  separate out y0 and sign extend  fetch, scale down, add y0  output = y0 + (result >> 12)  SPC_NOINTERP  Echo filter history  Initialize mask register with the buffer address mask  Keep last 8 samples  echo volume  scale echo voices; saturate if overflow  add scaled output from FIR filter  swap and fetch feedback results  save final feedback into echo buffer  global volume  fetch mixed output  scale by global_muting shift  scaled echo is stored in %acc2 and %acc3  !SPC_NOECHO **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Michael Sevakis (jhMikeS)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
     * output = y0 + f*y1 - f*y0
      separate frac and whole  y0=upper, y1=lower   %acc0 = f*y1  %acc0 -= f*y0  separate out y0 and sign extend  fetch, scale down, add y0  output = y0 + (result >> 12)  SPC_NOINTERP  Echo filter history  Initialize mask register with the buffer address mask  Keep last 8 samples  echo volume  scale echo voices; saturate if overflow  add scaled output from FIR filter  swap and fetch feedback results  save final feedback into echo buffer  global volume  fetch mixed output  scale by global_muting shift  scaled echo is stored in %acc2 and %acc3  !SPC_NOECHO **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Michael Sevakis (jhMikeS)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
     * output = y0 + f*y1 - f*y0
      separate frac and whole  y0=upper, y1=lower   %acc0 = f*y1  %acc0 -= f*y0  separate out y0 and sign extend  fetch, scale down, add y0  output = y0 + (result >> 12)  SPC_NOINTERP  Echo filter history  Initialize mask register with the buffer address mask  Keep last 8 samples  echo volume  scale echo voices; saturate if overflow  add scaled output from FIR filter  swap and fetch feedback results  save final feedback into echo buffer  global volume  fetch mixed output  scale by global_muting shift  scaled echo is stored in %acc2 and %acc3  !SPC_NOECHO 