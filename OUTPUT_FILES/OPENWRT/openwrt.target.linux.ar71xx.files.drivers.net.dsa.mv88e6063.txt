
 * net/dsa/mv88e6063.c - Driver for Marvell 88e6063 switch chips
 * Copyright (c) 2009 Gabor Juhos <juhosg@openwrt.org>
 *
 * This driver was base on: net/dsa/mv88e6060.c
 *   net/dsa/mv88e6063.c - Driver for Marvell 88e6060 switch chips
 *   Copyright (c) 2008-2009 Marvell Semiconductor
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 
	 * Set all ports to the disabled state.
	 
	 * Wait for transmit queues to drain.
	 
	 * Reset the switch.
	 
	 * Wait up to one second for reset to complete.
	 
	 * Disable discarding of frames with excessive collisions,
	 * set the maximum frame size to 1536 bytes, and mask all
	 * interrupt sources.
	 
	 * Enable automatic address learning, set the address
	 * database size to 1024 entries, and set the default aging
	 * time to 5 minutes.
	 
	 * Do not force flow control, disable Ingress and Egress
	 * Header tagging, disable VLAN tunneling, and set the port
	 * state to Forwarding.  Additionally, if this is the CPU
	 * port, enable Ingress and Egress Trailer tagging mode.
	 
	 * Port based VLAN map: give each port its own address
	 * database, allow the CPU port to talk to each of the 'real'
	 * ports, and allow each of the 'real' ports to only talk to
	 * the CPU port.
	 
	 * Port Association Vector: when learning source addresses
	 * of packets, add the address to the address database using
	 * a port bitmap that has only the bit for this port set and
	 * the other bits clear.
	  @@@ initialise atu 
 * net/dsa/mv88e6063.c - Driver for Marvell 88e6063 switch chips
 * Copyright (c) 2009 Gabor Juhos <juhosg@openwrt.org>
 *
 * This driver was base on: net/dsa/mv88e6060.c
 *   net/dsa/mv88e6063.c - Driver for Marvell 88e6060 switch chips
 *   Copyright (c) 2008-2009 Marvell Semiconductor
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 
	 * Set all ports to the disabled state.
	 
	 * Wait for transmit queues to drain.
	 
	 * Reset the switch.
	 
	 * Wait up to one second for reset to complete.
	 
	 * Disable discarding of frames with excessive collisions,
	 * set the maximum frame size to 1536 bytes, and mask all
	 * interrupt sources.
	 
	 * Enable automatic address learning, set the address
	 * database size to 1024 entries, and set the default aging
	 * time to 5 minutes.
	 
	 * Do not force flow control, disable Ingress and Egress
	 * Header tagging, disable VLAN tunneling, and set the port
	 * state to Forwarding.  Additionally, if this is the CPU
	 * port, enable Ingress and Egress Trailer tagging mode.
	 
	 * Port based VLAN map: give each port its own address
	 * database, allow the CPU port to talk to each of the 'real'
	 * ports, and allow each of the 'real' ports to only talk to
	 * the CPU port.
	 
	 * Port Association Vector: when learning source addresses
	 * of packets, add the address to the address database using
	 * a port bitmap that has only the bit for this port set and
	 * the other bits clear.
	  @@@ initialise atu 
 * net/dsa/mv88e6063.c - Driver for Marvell 88e6063 switch chips
 * Copyright (c) 2009 Gabor Juhos <juhosg@openwrt.org>
 *
 * This driver was base on: net/dsa/mv88e6060.c
 *   net/dsa/mv88e6063.c - Driver for Marvell 88e6060 switch chips
 *   Copyright (c) 2008-2009 Marvell Semiconductor
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 
	 * Set all ports to the disabled state.
	 
	 * Wait for transmit queues to drain.
	 
	 * Reset the switch.
	 
	 * Wait up to one second for reset to complete.
	 
	 * Disable discarding of frames with excessive collisions,
	 * set the maximum frame size to 1536 bytes, and mask all
	 * interrupt sources.
	 
	 * Enable automatic address learning, set the address
	 * database size to 1024 entries, and set the default aging
	 * time to 5 minutes.
	 
	 * Do not force flow control, disable Ingress and Egress
	 * Header tagging, disable VLAN tunneling, and set the port
	 * state to Forwarding.  Additionally, if this is the CPU
	 * port, enable Ingress and Egress Trailer tagging mode.
	 
	 * Port based VLAN map: give each port its own address
	 * database, allow the CPU port to talk to each of the 'real'
	 * ports, and allow each of the 'real' ports to only talk to
	 * the CPU port.
	 
	 * Port Association Vector: when learning source addresses
	 * of packets, add the address to the address database using
	 * a port bitmap that has only the bit for this port set and
	 * the other bits clear.
	  @@@ initialise atu 
 * net/dsa/mv88e6063.c - Driver for Marvell 88e6063 switch chips
 * Copyright (c) 2009 Gabor Juhos <juhosg@openwrt.org>
 *
 * This driver was base on: net/dsa/mv88e6060.c
 *   net/dsa/mv88e6063.c - Driver for Marvell 88e6060 switch chips
 *   Copyright (c) 2008-2009 Marvell Semiconductor
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 
	 * Set all ports to the disabled state.
	 
	 * Wait for transmit queues to drain.
	 
	 * Reset the switch.
	 
	 * Wait up to one second for reset to complete.
	 
	 * Disable discarding of frames with excessive collisions,
	 * set the maximum frame size to 1536 bytes, and mask all
	 * interrupt sources.
	 
	 * Enable automatic address learning, set the address
	 * database size to 1024 entries, and set the default aging
	 * time to 5 minutes.
	 
	 * Do not force flow control, disable Ingress and Egress
	 * Header tagging, disable VLAN tunneling, and set the port
	 * state to Forwarding.  Additionally, if this is the CPU
	 * port, enable Ingress and Egress Trailer tagging mode.
	 
	 * Port based VLAN map: give each port its own address
	 * database, allow the CPU port to talk to each of the 'real'
	 * ports, and allow each of the 'real' ports to only talk to
	 * the CPU port.
	 
	 * Port Association Vector: when learning source addresses
	 * of packets, add the address to the address database using
	 * a port bitmap that has only the bit for this port set and
	 * the other bits clear.
	  @@@ initialise atu 