 ID_CA.C this has been customized for WOLF
=============================================================================

Id Software Caching Manager
---------------------------

Must be started BEFORE the memory manager, because it needs to get the headers
loaded into the data segment

=============================================================================

=============================================================================

                             LOCAL CONSTANTS

=============================================================================
 0-255 is a character, > is a pointer to a node
=============================================================================

                             GLOBAL VARIABLES

=============================================================================

=============================================================================

                             LOCAL VARIABLES

=============================================================================
 Need a string, not constant to change cache files array of offsets in audio / audiot handle to EGAGRAPH handle to MAPTEMP / GAMEMAPS handle to AUDIOT / AUDIO
=============================================================================

                            LOW LEVEL ROUTINES

=============================================================================

============================
=
= CAL_GetGrChunkLength
=
= Gets the length of an explicit length chunk (not tiles)
= The file pointer is positioned so the compressed data can be read in next.
=
============================

==========================
=
= CA_WriteFile
=
= Writes a file from a memory buffer
=
==========================

==========================
=
= CA_LoadFile
=
= Allocate space for and load a file
=
==========================

============================================================================

                COMPRESSION routines, see JHUFF.C for more

============================================================================
 head node is always node 254
======================
=
= CAL_CarmackExpand
=
= Length is the length of the EXPANDED data
=
======================
 have to insert a word containing the tag byte have to insert a word containing the tag byte
======================
=
= CA_RLEWcompress
=
======================
 compress it send a tag / count / value string send word without compressing
======================
=
= CA_RLEWexpand
= length is EXPANDED length
=
======================
 expand it uncompressed compressed string
=============================================================================

                                         CACHE MANAGER ROUTINES

=============================================================================

======================
=
= CAL_SetupGrFile
=
======================
 load ???dict.ext (huffman dictionary for graphics files) load the data offsets from ???head.ext Open the graphics file, leaving it open until the game is finished load the pic and sprite headers into the arrays in the data segment position file pointer==========================================================================
======================
=
= CAL_SetupMapFile
=
======================
 load maphead.ext (offsets and tileinfo for map file) used to be "filelength(handle);" open the data file load all map header $FFFFFFFF start is a sparse map allocate space for 3 64*64 planes==========================================================================
======================
=
= CAL_SetupAudioFile
=
======================
 load audiohed.ext (offsets for audio file) open the data file==========================================================================
======================
=
= CA_Startup
=
= Open all files and load in headers
=
======================
==========================================================================
======================
=
= CA_Shutdown
=
= Closes all files
=
======================
===========================================================================
======================
=
= CA_CacheAudioChunk
=
======================
 already in memory already in memory without data[1] + 1 because of byte data[1]===========================================================================
======================
=
= CA_LoadAllSounds
=
= Purges all sounds, then loads all new ones (mode switch)
=
======================
 needed for priorities...===========================================================================
======================
=
= CAL_ExpandGrChunk
=
= Does whatever is needed with a pointer to a compressed chunk
=
======================
 expanded sizes of tile8/16/32 are implicit tile 8s are all in one chunk! all other tiles are one/chunk everything else has an explicit size longword allocate final space, decompress it, and free bigbuffer Sprites need to have shifts made and various other junk
======================
=
= CA_CacheGrChunk
=
= Makes sure a given chunk is in memory, loadiing it if needed
=
======================
 already in memory load the chunk into a buffer, either the miscbuffer if it fits, or allocate a larger buffer $FFFFFFFF start is a sparse tile skip past any sparse tiles==========================================================================
======================
=
= CA_CacheScreen
=
= Decompresses a chunk from disk straight onto the screen
=
======================
 load the chunk into a buffer skip past any sparse tiles allocate final space, decompress it, and free bigbuffer Sprites need to have shifts made and various other junk==========================================================================
======================
=
= CA_CacheMap
=
= WOLF: This is specialized for a 64*64 map size
=
======================
 load the planes into the allready allocated buffers unhuffman, then unRLEW The huffman'd chunk has a two byte expanded length first The resulting RLEW chunk also does, even though it's not really needed unRLEW, skipping expanded length=========================================================================== ID_CA.C this has been customized for WOLF
=============================================================================

Id Software Caching Manager
---------------------------

Must be started BEFORE the memory manager, because it needs to get the headers
loaded into the data segment

=============================================================================

=============================================================================

                             LOCAL CONSTANTS

=============================================================================
 0-255 is a character, > is a pointer to a node
=============================================================================

                             GLOBAL VARIABLES

=============================================================================

=============================================================================

                             LOCAL VARIABLES

=============================================================================
 Need a string, not constant to change cache files array of offsets in audio / audiot handle to EGAGRAPH handle to MAPTEMP / GAMEMAPS handle to AUDIOT / AUDIO
=============================================================================

                            LOW LEVEL ROUTINES

=============================================================================

============================
=
= CAL_GetGrChunkLength
=
= Gets the length of an explicit length chunk (not tiles)
= The file pointer is positioned so the compressed data can be read in next.
=
============================

==========================
=
= CA_WriteFile
=
= Writes a file from a memory buffer
=
==========================

==========================
=
= CA_LoadFile
=
= Allocate space for and load a file
=
==========================

============================================================================

                COMPRESSION routines, see JHUFF.C for more

============================================================================
 head node is always node 254
======================
=
= CAL_CarmackExpand
=
= Length is the length of the EXPANDED data
=
======================
 have to insert a word containing the tag byte have to insert a word containing the tag byte
======================
=
= CA_RLEWcompress
=
======================
 compress it send a tag / count / value string send word without compressing
======================
=
= CA_RLEWexpand
= length is EXPANDED length
=
======================
 expand it uncompressed compressed string
=============================================================================

                                         CACHE MANAGER ROUTINES

=============================================================================

======================
=
= CAL_SetupGrFile
=
======================
 load ???dict.ext (huffman dictionary for graphics files) load the data offsets from ???head.ext Open the graphics file, leaving it open until the game is finished load the pic and sprite headers into the arrays in the data segment position file pointer==========================================================================
======================
=
= CAL_SetupMapFile
=
======================
 load maphead.ext (offsets and tileinfo for map file) used to be "filelength(handle);" open the data file load all map header $FFFFFFFF start is a sparse map allocate space for 3 64*64 planes==========================================================================
======================
=
= CAL_SetupAudioFile
=
======================
 load audiohed.ext (offsets for audio file) open the data file==========================================================================
======================
=
= CA_Startup
=
= Open all files and load in headers
=
======================
==========================================================================
======================
=
= CA_Shutdown
=
= Closes all files
=
======================
===========================================================================
======================
=
= CA_CacheAudioChunk
=
======================
 already in memory already in memory without data[1] + 1 because of byte data[1]===========================================================================
======================
=
= CA_LoadAllSounds
=
= Purges all sounds, then loads all new ones (mode switch)
=
======================
 needed for priorities...===========================================================================
======================
=
= CAL_ExpandGrChunk
=
= Does whatever is needed with a pointer to a compressed chunk
=
======================
 expanded sizes of tile8/16/32 are implicit tile 8s are all in one chunk! all other tiles are one/chunk everything else has an explicit size longword allocate final space, decompress it, and free bigbuffer Sprites need to have shifts made and various other junk
======================
=
= CA_CacheGrChunk
=
= Makes sure a given chunk is in memory, loadiing it if needed
=
======================
 already in memory load the chunk into a buffer, either the miscbuffer if it fits, or allocate a larger buffer $FFFFFFFF start is a sparse tile skip past any sparse tiles==========================================================================
======================
=
= CA_CacheScreen
=
= Decompresses a chunk from disk straight onto the screen
=
======================
 load the chunk into a buffer skip past any sparse tiles allocate final space, decompress it, and free bigbuffer Sprites need to have shifts made and various other junk==========================================================================
======================
=
= CA_CacheMap
=
= WOLF: This is specialized for a 64*64 map size
=
======================
 load the planes into the allready allocated buffers unhuffman, then unRLEW The huffman'd chunk has a two byte expanded length first The resulting RLEW chunk also does, even though it's not really needed unRLEW, skipping expanded length=========================================================================== ID_CA.C this has been customized for WOLF
=============================================================================

Id Software Caching Manager
---------------------------

Must be started BEFORE the memory manager, because it needs to get the headers
loaded into the data segment

=============================================================================

=============================================================================

                             LOCAL CONSTANTS

=============================================================================
 0-255 is a character, > is a pointer to a node
=============================================================================

                             GLOBAL VARIABLES

=============================================================================

=============================================================================

                             LOCAL VARIABLES

=============================================================================
 Need a string, not constant to change cache files array of offsets in audio / audiot handle to EGAGRAPH handle to MAPTEMP / GAMEMAPS handle to AUDIOT / AUDIO
=============================================================================

                            LOW LEVEL ROUTINES

=============================================================================

============================
=
= CAL_GetGrChunkLength
=
= Gets the length of an explicit length chunk (not tiles)
= The file pointer is positioned so the compressed data can be read in next.
=
============================

==========================
=
= CA_WriteFile
=
= Writes a file from a memory buffer
=
==========================

==========================
=
= CA_LoadFile
=
= Allocate space for and load a file
=
==========================

============================================================================

                COMPRESSION routines, see JHUFF.C for more

============================================================================
 head node is always node 254
======================
=
= CAL_CarmackExpand
=
= Length is the length of the EXPANDED data
=
======================
 have to insert a word containing the tag byte have to insert a word containing the tag byte
======================
=
= CA_RLEWcompress
=
======================
 compress it send a tag / count / value string send word without compressing
======================
=
= CA_RLEWexpand
= length is EXPANDED length
=
======================
 expand it uncompressed compressed string
=============================================================================

                                         CACHE MANAGER ROUTINES

=============================================================================

======================
=
= CAL_SetupGrFile
=
======================
 load ???dict.ext (huffman dictionary for graphics files) load the data offsets from ???head.ext Open the graphics file, leaving it open until the game is finished load the pic and sprite headers into the arrays in the data segment position file pointer==========================================================================
======================
=
= CAL_SetupMapFile
=
======================
 load maphead.ext (offsets and tileinfo for map file) used to be "filelength(handle);" open the data file load all map header $FFFFFFFF start is a sparse map allocate space for 3 64*64 planes==========================================================================
======================
=
= CAL_SetupAudioFile
=
======================
 load audiohed.ext (offsets for audio file) open the data file==========================================================================
======================
=
= CA_Startup
=
= Open all files and load in headers
=
======================
==========================================================================
======================
=
= CA_Shutdown
=
= Closes all files
=
======================
===========================================================================
======================
=
= CA_CacheAudioChunk
=
======================
 already in memory already in memory without data[1] + 1 because of byte data[1]===========================================================================
======================
=
= CA_LoadAllSounds
=
= Purges all sounds, then loads all new ones (mode switch)
=
======================
 needed for priorities...===========================================================================
======================
=
= CAL_ExpandGrChunk
=
= Does whatever is needed with a pointer to a compressed chunk
=
======================
 expanded sizes of tile8/16/32 are implicit tile 8s are all in one chunk! all other tiles are one/chunk everything else has an explicit size longword allocate final space, decompress it, and free bigbuffer Sprites need to have shifts made and various other junk
======================
=
= CA_CacheGrChunk
=
= Makes sure a given chunk is in memory, loadiing it if needed
=
======================
 already in memory load the chunk into a buffer, either the miscbuffer if it fits, or allocate a larger buffer $FFFFFFFF start is a sparse tile skip past any sparse tiles==========================================================================
======================
=
= CA_CacheScreen
=
= Decompresses a chunk from disk straight onto the screen
=
======================
 load the chunk into a buffer skip past any sparse tiles allocate final space, decompress it, and free bigbuffer Sprites need to have shifts made and various other junk==========================================================================
======================
=
= CA_CacheMap
=
= WOLF: This is specialized for a 64*64 map size
=
======================
 load the planes into the allready allocated buffers unhuffman, then unRLEW The huffman'd chunk has a two byte expanded length first The resulting RLEW chunk also does, even though it's not really needed unRLEW, skipping expanded length===========================================================================