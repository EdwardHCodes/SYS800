**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  Button driver for the touch keys on the Samsung YP-S3

    The exact controller is not known, but it is likely from Melfas.
    
    The protocol is as follows:
    * the communication is done using three signals: DRDY, DCLK and DOUT
    * in the idle state these signals are all high.
    * when a key is touched or released, the key controller pulls down DRDY
      and outputs the first bit of a 20-bit word on its DOUT signal.
    * the CPU stores the bit, then acknowledges it by toggling the DCLK signal.
    * the key controller prepares the next bit, then toggles its DRDY output,
      unless all 20 bits have been transferred (in that case it stays high).
    * the 20-bit word contains separate bits for each button, some fixed bits
      and a bit indicating the number of keys pressed (modulo 2).
  P0.5/P1.0 power switch input  P1.3 headphones detect input  P1.5 DATA, P1.6 DRDY inputs (touch key controller)  P3.4 DCLK output (touch key controller)  P4.3 hold switch input  returns the raw 20-bit word from the touch key controller  check activity  get key bits  sample bit from falling edge of DRDY  acknowledge on DCLK  sample bit from rising edge of DRDY  acknowledge on DCLK  hold switch  power button  touch keys **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  Button driver for the touch keys on the Samsung YP-S3

    The exact controller is not known, but it is likely from Melfas.
    
    The protocol is as follows:
    * the communication is done using three signals: DRDY, DCLK and DOUT
    * in the idle state these signals are all high.
    * when a key is touched or released, the key controller pulls down DRDY
      and outputs the first bit of a 20-bit word on its DOUT signal.
    * the CPU stores the bit, then acknowledges it by toggling the DCLK signal.
    * the key controller prepares the next bit, then toggles its DRDY output,
      unless all 20 bits have been transferred (in that case it stays high).
    * the 20-bit word contains separate bits for each button, some fixed bits
      and a bit indicating the number of keys pressed (modulo 2).
  P0.5/P1.0 power switch input  P1.3 headphones detect input  P1.5 DATA, P1.6 DRDY inputs (touch key controller)  P3.4 DCLK output (touch key controller)  P4.3 hold switch input  returns the raw 20-bit word from the touch key controller  check activity  get key bits  sample bit from falling edge of DRDY  acknowledge on DCLK  sample bit from rising edge of DRDY  acknowledge on DCLK  hold switch  power button  touch keys **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  Button driver for the touch keys on the Samsung YP-S3

    The exact controller is not known, but it is likely from Melfas.
    
    The protocol is as follows:
    * the communication is done using three signals: DRDY, DCLK and DOUT
    * in the idle state these signals are all high.
    * when a key is touched or released, the key controller pulls down DRDY
      and outputs the first bit of a 20-bit word on its DOUT signal.
    * the CPU stores the bit, then acknowledges it by toggling the DCLK signal.
    * the key controller prepares the next bit, then toggles its DRDY output,
      unless all 20 bits have been transferred (in that case it stays high).
    * the 20-bit word contains separate bits for each button, some fixed bits
      and a bit indicating the number of keys pressed (modulo 2).
  P0.5/P1.0 power switch input  P1.3 headphones detect input  P1.5 DATA, P1.6 DRDY inputs (touch key controller)  P3.4 DCLK output (touch key controller)  P4.3 hold switch input  returns the raw 20-bit word from the touch key controller  check activity  get key bits  sample bit from falling edge of DRDY  acknowledge on DCLK  sample bit from rising edge of DRDY  acknowledge on DCLK  hold switch  power button  touch keys 