**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Alan Korr & Nick Robinson
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Lingo 0x01: Microphone Lingo
 
 * This macro is meant to be used inside an IAP mode message handler.
 * It is passed the expected minimum length of the message buffer.
 * If the buffer does not have the required lenght an ACK
 * packet with a Bad Parameter error is generated.
  Check for authenticated state, and return an ACK Not
 * Authenticated on failure.
  returns record status  iPodModeChange  Lingo 0x04 commands are at least 4 bytes in length  Lingo 0x01 must have been negotiated  Authentication required for all commands  BeginRecord (0x00) Deprecated
         *
         * Sent from the iPod to the device
          EndRecord (0x01) Deprecated
         *
         * Sent from the iPod to the device
          BeginPlayback (0x02) Deprecated
         *
         * Sent from the iPod to the device
          EndPlayback (0x03) Deprecated
         *
         * Sent from the iPod to the device
          ACK (0x04)
         *
         * The device sends an ACK response when a command
         * that does not return any data has completed.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x04
         * 0x02: The command result status
         * 0x03: The ID of the command for which the
         *       response is being sent
         *
         * Returns: (none)
          GetDevAck (0x05)
         *
         * Sent from the iPod to the device
          iPodModeChange (0x06)
         *
         * Sent from the iPod to the device
          GetDevCaps (0x07)
         *
         * Sent from the iPod to the device
          RetDevCaps (0x08)
         *
         * The microphone device returns the payload
         * indicating which capabilities it supports.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x08
         * 0x02: Device capabilities (bits 31:24)
         * 0x03: Device capabilities (bits 23:16)
         * 0x04: Device capabilities (bits 15:8)
         * 0x05: Device capabilities (bits 7:0)
         *
         * Returns:
         * SetDevCtrl, sets stereo line input when supported
          SetDevCtrl, set stereo line-in  TODO?: configure recording level/limiter controls
               when supported by the device  GetDevCtrl (0x09)
         *
         * Sent from the iPod to the device
          RetDevCaps (0x0A)
         *
         * The device returns the current control state
         * for the specified control type.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x0A
         * 0x02: The control type
         * 0x03: The control data
          stereo/mono line-in control  recording level control  recording level limiter control  SetDevCtrl (0x0B)
         *
         * Sent from the iPod to the device
          The default response is IAP_ACK_BAD_PARAM **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Alan Korr & Nick Robinson
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Lingo 0x01: Microphone Lingo
 
 * This macro is meant to be used inside an IAP mode message handler.
 * It is passed the expected minimum length of the message buffer.
 * If the buffer does not have the required lenght an ACK
 * packet with a Bad Parameter error is generated.
  Check for authenticated state, and return an ACK Not
 * Authenticated on failure.
  returns record status  iPodModeChange  Lingo 0x04 commands are at least 4 bytes in length  Lingo 0x01 must have been negotiated  Authentication required for all commands  BeginRecord (0x00) Deprecated
         *
         * Sent from the iPod to the device
          EndRecord (0x01) Deprecated
         *
         * Sent from the iPod to the device
          BeginPlayback (0x02) Deprecated
         *
         * Sent from the iPod to the device
          EndPlayback (0x03) Deprecated
         *
         * Sent from the iPod to the device
          ACK (0x04)
         *
         * The device sends an ACK response when a command
         * that does not return any data has completed.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x04
         * 0x02: The command result status
         * 0x03: The ID of the command for which the
         *       response is being sent
         *
         * Returns: (none)
          GetDevAck (0x05)
         *
         * Sent from the iPod to the device
          iPodModeChange (0x06)
         *
         * Sent from the iPod to the device
          GetDevCaps (0x07)
         *
         * Sent from the iPod to the device
          RetDevCaps (0x08)
         *
         * The microphone device returns the payload
         * indicating which capabilities it supports.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x08
         * 0x02: Device capabilities (bits 31:24)
         * 0x03: Device capabilities (bits 23:16)
         * 0x04: Device capabilities (bits 15:8)
         * 0x05: Device capabilities (bits 7:0)
         *
         * Returns:
         * SetDevCtrl, sets stereo line input when supported
          SetDevCtrl, set stereo line-in  TODO?: configure recording level/limiter controls
               when supported by the device  GetDevCtrl (0x09)
         *
         * Sent from the iPod to the device
          RetDevCaps (0x0A)
         *
         * The device returns the current control state
         * for the specified control type.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x0A
         * 0x02: The control type
         * 0x03: The control data
          stereo/mono line-in control  recording level control  recording level limiter control  SetDevCtrl (0x0B)
         *
         * Sent from the iPod to the device
          The default response is IAP_ACK_BAD_PARAM **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Alan Korr & Nick Robinson
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Lingo 0x01: Microphone Lingo
 
 * This macro is meant to be used inside an IAP mode message handler.
 * It is passed the expected minimum length of the message buffer.
 * If the buffer does not have the required lenght an ACK
 * packet with a Bad Parameter error is generated.
  Check for authenticated state, and return an ACK Not
 * Authenticated on failure.
  returns record status  iPodModeChange  Lingo 0x04 commands are at least 4 bytes in length  Lingo 0x01 must have been negotiated  Authentication required for all commands  BeginRecord (0x00) Deprecated
         *
         * Sent from the iPod to the device
          EndRecord (0x01) Deprecated
         *
         * Sent from the iPod to the device
          BeginPlayback (0x02) Deprecated
         *
         * Sent from the iPod to the device
          EndPlayback (0x03) Deprecated
         *
         * Sent from the iPod to the device
          ACK (0x04)
         *
         * The device sends an ACK response when a command
         * that does not return any data has completed.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x04
         * 0x02: The command result status
         * 0x03: The ID of the command for which the
         *       response is being sent
         *
         * Returns: (none)
          GetDevAck (0x05)
         *
         * Sent from the iPod to the device
          iPodModeChange (0x06)
         *
         * Sent from the iPod to the device
          GetDevCaps (0x07)
         *
         * Sent from the iPod to the device
          RetDevCaps (0x08)
         *
         * The microphone device returns the payload
         * indicating which capabilities it supports.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x08
         * 0x02: Device capabilities (bits 31:24)
         * 0x03: Device capabilities (bits 23:16)
         * 0x04: Device capabilities (bits 15:8)
         * 0x05: Device capabilities (bits 7:0)
         *
         * Returns:
         * SetDevCtrl, sets stereo line input when supported
          SetDevCtrl, set stereo line-in  TODO?: configure recording level/limiter controls
               when supported by the device  GetDevCtrl (0x09)
         *
         * Sent from the iPod to the device
          RetDevCaps (0x0A)
         *
         * The device returns the current control state
         * for the specified control type.
         *
         * Packet format (offset in buf[]: Description)
         * 0x00: Lingo ID: Microphone Lingo, always 0x01
         * 0x01: Command, always 0x0A
         * 0x02: The control type
         * 0x03: The control data
          stereo/mono line-in control  recording level control  recording level limiter control  SetDevCtrl (0x0B)
         *
         * Sent from the iPod to the device
          The default response is IAP_ACK_BAD_PARAM 