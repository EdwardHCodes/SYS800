 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Switches, buttons. Two-state animation. Exits.
 *
 *----------------------------------------------------------------------------- killough 2/8/98: Remove switch limit killough killough killough P_InitSwitchList() Only called at game initialization in order to list the set of switches and buttons known to the engine. This enables their texture to change when activated, and in the case of buttons, change back after a timeout. This routine modified to read its data from a predefined lump or PWAD lump called SWITCHES rather than a static table in this module to allow wad designers to insert or modify switches. Lump format is an array of byte packed switchlist_t structures, terminated by a structure with episode == -0. The lump can be generated from a text source file using SWANTBLS.EXE, distributed with the BOOM utils. The standard list of switches and animations is contained in the example source text file DEFSWANI.DAT also in the BOOM util distribution. Rewritten by Lee Killough to remove limit 2/8/98jff 3/23/98 pointer to switch table cph - new wad lump handlingjff 3/23/98 read the switch table from a predefined lumpjff 5/11/98 endianess P_StartButton() Start a button (retriggerable switch) counting down till it turns off. Passed the linedef the button is on, which texture on the sidedef contains the button, the texture number of the button, and the time the button is to remain active in gametics. No return. See if button is already pressed use first unused element of list P_ChangeSwitchTexture() Function that changes switch wall texture on activation. Passed the line which the switch is on, and whether its retriggerable. If not retriggerable, this function clears the line special to insure that No return EXIT SWITCH? if an upper texture switch activation soundchg texturestart timer if a normal texture switch activation soundchg texturestart timer if a lower texture switch activation soundchg texturestart timer P_UseSpecialLine Called when a thing uses (pushes) a special line. Only the front sides of lines are usable. Dispatches to the appropriate linedef function handler. Passed the thing using the line, the line being used, and the side used Returns true if a thinker was createdjff 6/1/98 fix inadvertent deletion of side testjff 02/04/98 add check here for generalized floor/ceil mover pointer to line function is NULL by default, set non-null if line special is push or switch generalized linedef type check each range of generalized linedefs Out of range for GenFloors FloorModel is "Allow Monsters" if FloorChange is 0jff 2/27/98 all non-manual generalized types require tag CeilingModel is "Allow Monsters" if CeilingChange is 0jff 2/27/98 all non-manual generalized types require tag monsters disallowed from this door they can't open secret doors eitherjff 3/2/98 all non-manual generalized types require tag monsters disallowed from unlocking doorsjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag if not a switch/push type, do nothing here Switches that other things can activate. never open secret doors MANUAL DOOR RAISE MANUAL BLUE MANUAL RED MANUAL YELLOWjff 3/5/98 add ability to use teleporters for monsters switch teleporters silent switch teleportersjff 2/27/98 disallow zero tag on some types Dispatch to handler according to linedef type Manual doors, push type with no tag Vertical Door Blue Door/Locked Yellow Door /Locked Red Door /Locked Manual door open Blue locked door open Red locked door open Yellow locked door open Blazing door raise Blazing door open Switches (non-retriggerable) Build Stairs Change Donut Exit level
       * killough 10/98: prevent zombies from exiting levels
        Raise Floor 32 and change texture Raise Floor 24 and change texture Raise Floor to next highest floor Raise Plat next highest floor and change texture PlatDownWaitUpStay Lower Floor to Lowest Raise Door Lower Ceiling to Floor Turbo Lower Floor Ceiling Crush And Raise Close Door Secret EXIT
       * killough 10/98: prevent zombies from exiting levels
        Raise Floor Crush Raise Floor Lower Floor to Surrounding floor height Open Door Blazing Door Raise (faster than TURBO!) Blazing Door Open (faster than TURBO!) Blazing Door Close (faster than TURBO!) Blazing PlatDownWaitUpStay Build Stairs Turbo 16 Raise Floor Turbo BlzOpenDoor BLUE BlzOpenDoor RED BlzOpenDoor YELLOW Raise Floor 512 killough 1/31/98: factored out compatibility check; added inner switch, relaxed check to demo_compatibilityjff 1/29/98 added linedef types to fill all functions out so that all possess SR, S1, WR, W1 types Raise Floor to shortest lower texture 158 S1  EV_DoFloor(raiseToTexture), CSW(0) Raise Floor to shortest lower texture 159 S1  EV_DoFloor(lowerAndChange) Raise Floor 24 and change 160 S1  EV_DoFloor(raiseFloor24AndChange) Raise Floor 24 161 S1  EV_DoFloor(raiseFloor24) Moving floor min n to max n 162 S1  EV_DoPlat(perpetualRaise,0) Stop Moving floor 163 S1  EV_DoPlat(perpetualRaise,0) Start fast crusher 164 S1  EV_DoCeiling(fastCrushAndRaise) Start slow silent crusher 165 S1  EV_DoCeiling(silentCrushAndRaise) Raise ceiling, Lower floor 166 S1 EV_DoCeiling(raiseToHighest), EV_DoFloor(lowerFloortoLowest) Lower floor and Crush 167 S1 EV_DoCeiling(lowerAndCrush) Stop crusher 168 S1 EV_CeilingCrushStop() Lights to brightest neighbor sector 169 S1  EV_LightTurnOn(0) Lights to near dark 170 S1  EV_LightTurnOn(35) Lights on full 171 S1  EV_LightTurnOn(255) Start Lights Strobing 172 S1  EV_StartLightStrobing() Lights to Dimmest Near 173 S1  EV_TurnTagLightsOff() Teleport 174 S1  EV_Teleport(side,thing) Close Door, Open in 30 secs 175 S1  EV_DoDoor(close30ThenOpen)jff 3/15/98 create texture change no motion type Texture Change Only (Trigger) 189 S1 Change Texture/Type Only Lower ceiling to lowest surrounding ceiling 203 S1 EV_DoCeiling(lowerToLowest) Lower ceiling to highest surrounding floor 204 S1 EV_DoCeiling(lowerToMaxFloor) killough 1/31/98: silent teleporterjff 209 S1 SilentTeleportjff 3/15/98 create texture change no motion type Texture Change Only (Numeric) 241 S1 Change Texture/Type Only Lower floor to next lowest floor 221 S1 Lower Floor To Nearest Floor Raise elevator next floor 229 S1 Raise Elevator next floor Lower elevator next floor 233 S1 Lower Elevator next floor Elevator to current floor 237 S1 Elevator to current floor jff 1/29/98 end of added S1 linedef typesjff 1/29/98 added linedef types to fill all functions out so that all possess SR, S1, WR, W1 typesjff 3/15/98 create texture change no motion type Texture Change Only (Numeric) 78 SR Change Texture/Type Only Raise Floor to shortest lower texture 176 SR  EV_DoFloor(raiseToTexture), CSW(1) Raise Floor to shortest lower texture 177 SR  EV_DoFloor(lowerAndChange) Raise Floor 512 178 SR  EV_DoFloor(raiseFloor512) Raise Floor 24 and change 179 SR  EV_DoFloor(raiseFloor24AndChange) Raise Floor 24 180 SR  EV_DoFloor(raiseFloor24) Moving floor min n to max n 181 SR  EV_DoPlat(perpetualRaise,0) Stop Moving floor 182 SR  EV_DoPlat(perpetualRaise,0) Start fast crusher 183 SR  EV_DoCeiling(fastCrushAndRaise) Start slow crusher 184 SR  EV_DoCeiling(crushAndRaise) Start slow silent crusher 185 SR  EV_DoCeiling(silentCrushAndRaise) Raise ceiling, Lower floor 186 SR EV_DoCeiling(raiseToHighest), EV_DoFloor(lowerFloortoLowest) Lower floor and Crush 187 SR EV_DoCeiling(lowerAndCrush) Stop crusher 188 SR EV_CeilingCrushStop()jff 3/15/98 create texture change no motion type Texture Change Only (Trigger) 190 SR Change Texture/Type Only Lower Pillar, Raise Donut 191 SR  EV_DoDonut() Lights to brightest neighbor sector 192 SR  EV_LightTurnOn(0) Start Lights Strobing 193 SR  EV_StartLightStrobing() Lights to Dimmest Near 194 SR  EV_TurnTagLightsOff() Teleport 195 SR  EV_Teleport(side,thing) Close Door, Open in 30 secs 196 SR  EV_DoDoor(close30ThenOpen) Lower ceiling to lowest surrounding ceiling 205 SR EV_DoCeiling(lowerToLowest) Lower ceiling to highest surrounding floor 206 SR EV_DoCeiling(lowerToMaxFloor) killough 1/31/98: silent teleporterjff 210 SR SilentTeleportjff 3/14/98 create instant toggle floor type Toggle Floor Between C and F Instantly 211 SR Toggle Floor Instant Lower floor to next lowest floor 222 SR Lower Floor To Nearest Floor Raise elevator next floor 230 SR Raise Elevator next floor Lower elevator next floor 234 SR Lower Elevator next floor Elevator to current floor 238 SR Elevator to current floor Build stairs, step 8 258 SR EV_BuildStairs(build8) Build stairs, step 16 259 SR EV_BuildStairs(turbo16) 1/29/98 jff end of added SR linedef types Buttons (retriggerable switches) Close Door Lower Ceiling to Floor Lower Floor to Surrounding floor height Lower Floor to Lowest Open Door PlatDownWaitUpStay Raise Door Raise Floor to ceiling Raise Floor 24 and change texture Raise Floor 32 and change texture Raise Floor Crush Raise Plat to next highest floor and change texture Raise Floor to next highest floor Turbo Lower Floor Blazing Door Raise (faster than TURBO!) Blazing Door Open (faster than TURBO!) Blazing Door Close (faster than TURBO!) Blazing PlatDownWaitUpStay Raise Floor Turbo BlzOpenDoor BLUE BlzOpenDoor RED BlzOpenDoor YELLOW Light Turn On Light Turn Off Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Switches, buttons. Two-state animation. Exits.
 *
 *----------------------------------------------------------------------------- killough 2/8/98: Remove switch limit killough killough killough P_InitSwitchList() Only called at game initialization in order to list the set of switches and buttons known to the engine. This enables their texture to change when activated, and in the case of buttons, change back after a timeout. This routine modified to read its data from a predefined lump or PWAD lump called SWITCHES rather than a static table in this module to allow wad designers to insert or modify switches. Lump format is an array of byte packed switchlist_t structures, terminated by a structure with episode == -0. The lump can be generated from a text source file using SWANTBLS.EXE, distributed with the BOOM utils. The standard list of switches and animations is contained in the example source text file DEFSWANI.DAT also in the BOOM util distribution. Rewritten by Lee Killough to remove limit 2/8/98jff 3/23/98 pointer to switch table cph - new wad lump handlingjff 3/23/98 read the switch table from a predefined lumpjff 5/11/98 endianess P_StartButton() Start a button (retriggerable switch) counting down till it turns off. Passed the linedef the button is on, which texture on the sidedef contains the button, the texture number of the button, and the time the button is to remain active in gametics. No return. See if button is already pressed use first unused element of list P_ChangeSwitchTexture() Function that changes switch wall texture on activation. Passed the line which the switch is on, and whether its retriggerable. If not retriggerable, this function clears the line special to insure that No return EXIT SWITCH? if an upper texture switch activation soundchg texturestart timer if a normal texture switch activation soundchg texturestart timer if a lower texture switch activation soundchg texturestart timer P_UseSpecialLine Called when a thing uses (pushes) a special line. Only the front sides of lines are usable. Dispatches to the appropriate linedef function handler. Passed the thing using the line, the line being used, and the side used Returns true if a thinker was createdjff 6/1/98 fix inadvertent deletion of side testjff 02/04/98 add check here for generalized floor/ceil mover pointer to line function is NULL by default, set non-null if line special is push or switch generalized linedef type check each range of generalized linedefs Out of range for GenFloors FloorModel is "Allow Monsters" if FloorChange is 0jff 2/27/98 all non-manual generalized types require tag CeilingModel is "Allow Monsters" if CeilingChange is 0jff 2/27/98 all non-manual generalized types require tag monsters disallowed from this door they can't open secret doors eitherjff 3/2/98 all non-manual generalized types require tag monsters disallowed from unlocking doorsjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag if not a switch/push type, do nothing here Switches that other things can activate. never open secret doors MANUAL DOOR RAISE MANUAL BLUE MANUAL RED MANUAL YELLOWjff 3/5/98 add ability to use teleporters for monsters switch teleporters silent switch teleportersjff 2/27/98 disallow zero tag on some types Dispatch to handler according to linedef type Manual doors, push type with no tag Vertical Door Blue Door/Locked Yellow Door /Locked Red Door /Locked Manual door open Blue locked door open Red locked door open Yellow locked door open Blazing door raise Blazing door open Switches (non-retriggerable) Build Stairs Change Donut Exit level
       * killough 10/98: prevent zombies from exiting levels
        Raise Floor 32 and change texture Raise Floor 24 and change texture Raise Floor to next highest floor Raise Plat next highest floor and change texture PlatDownWaitUpStay Lower Floor to Lowest Raise Door Lower Ceiling to Floor Turbo Lower Floor Ceiling Crush And Raise Close Door Secret EXIT
       * killough 10/98: prevent zombies from exiting levels
        Raise Floor Crush Raise Floor Lower Floor to Surrounding floor height Open Door Blazing Door Raise (faster than TURBO!) Blazing Door Open (faster than TURBO!) Blazing Door Close (faster than TURBO!) Blazing PlatDownWaitUpStay Build Stairs Turbo 16 Raise Floor Turbo BlzOpenDoor BLUE BlzOpenDoor RED BlzOpenDoor YELLOW Raise Floor 512 killough 1/31/98: factored out compatibility check; added inner switch, relaxed check to demo_compatibilityjff 1/29/98 added linedef types to fill all functions out so that all possess SR, S1, WR, W1 types Raise Floor to shortest lower texture 158 S1  EV_DoFloor(raiseToTexture), CSW(0) Raise Floor to shortest lower texture 159 S1  EV_DoFloor(lowerAndChange) Raise Floor 24 and change 160 S1  EV_DoFloor(raiseFloor24AndChange) Raise Floor 24 161 S1  EV_DoFloor(raiseFloor24) Moving floor min n to max n 162 S1  EV_DoPlat(perpetualRaise,0) Stop Moving floor 163 S1  EV_DoPlat(perpetualRaise,0) Start fast crusher 164 S1  EV_DoCeiling(fastCrushAndRaise) Start slow silent crusher 165 S1  EV_DoCeiling(silentCrushAndRaise) Raise ceiling, Lower floor 166 S1 EV_DoCeiling(raiseToHighest), EV_DoFloor(lowerFloortoLowest) Lower floor and Crush 167 S1 EV_DoCeiling(lowerAndCrush) Stop crusher 168 S1 EV_CeilingCrushStop() Lights to brightest neighbor sector 169 S1  EV_LightTurnOn(0) Lights to near dark 170 S1  EV_LightTurnOn(35) Lights on full 171 S1  EV_LightTurnOn(255) Start Lights Strobing 172 S1  EV_StartLightStrobing() Lights to Dimmest Near 173 S1  EV_TurnTagLightsOff() Teleport 174 S1  EV_Teleport(side,thing) Close Door, Open in 30 secs 175 S1  EV_DoDoor(close30ThenOpen)jff 3/15/98 create texture change no motion type Texture Change Only (Trigger) 189 S1 Change Texture/Type Only Lower ceiling to lowest surrounding ceiling 203 S1 EV_DoCeiling(lowerToLowest) Lower ceiling to highest surrounding floor 204 S1 EV_DoCeiling(lowerToMaxFloor) killough 1/31/98: silent teleporterjff 209 S1 SilentTeleportjff 3/15/98 create texture change no motion type Texture Change Only (Numeric) 241 S1 Change Texture/Type Only Lower floor to next lowest floor 221 S1 Lower Floor To Nearest Floor Raise elevator next floor 229 S1 Raise Elevator next floor Lower elevator next floor 233 S1 Lower Elevator next floor Elevator to current floor 237 S1 Elevator to current floor jff 1/29/98 end of added S1 linedef typesjff 1/29/98 added linedef types to fill all functions out so that all possess SR, S1, WR, W1 typesjff 3/15/98 create texture change no motion type Texture Change Only (Numeric) 78 SR Change Texture/Type Only Raise Floor to shortest lower texture 176 SR  EV_DoFloor(raiseToTexture), CSW(1) Raise Floor to shortest lower texture 177 SR  EV_DoFloor(lowerAndChange) Raise Floor 512 178 SR  EV_DoFloor(raiseFloor512) Raise Floor 24 and change 179 SR  EV_DoFloor(raiseFloor24AndChange) Raise Floor 24 180 SR  EV_DoFloor(raiseFloor24) Moving floor min n to max n 181 SR  EV_DoPlat(perpetualRaise,0) Stop Moving floor 182 SR  EV_DoPlat(perpetualRaise,0) Start fast crusher 183 SR  EV_DoCeiling(fastCrushAndRaise) Start slow crusher 184 SR  EV_DoCeiling(crushAndRaise) Start slow silent crusher 185 SR  EV_DoCeiling(silentCrushAndRaise) Raise ceiling, Lower floor 186 SR EV_DoCeiling(raiseToHighest), EV_DoFloor(lowerFloortoLowest) Lower floor and Crush 187 SR EV_DoCeiling(lowerAndCrush) Stop crusher 188 SR EV_CeilingCrushStop()jff 3/15/98 create texture change no motion type Texture Change Only (Trigger) 190 SR Change Texture/Type Only Lower Pillar, Raise Donut 191 SR  EV_DoDonut() Lights to brightest neighbor sector 192 SR  EV_LightTurnOn(0) Start Lights Strobing 193 SR  EV_StartLightStrobing() Lights to Dimmest Near 194 SR  EV_TurnTagLightsOff() Teleport 195 SR  EV_Teleport(side,thing) Close Door, Open in 30 secs 196 SR  EV_DoDoor(close30ThenOpen) Lower ceiling to lowest surrounding ceiling 205 SR EV_DoCeiling(lowerToLowest) Lower ceiling to highest surrounding floor 206 SR EV_DoCeiling(lowerToMaxFloor) killough 1/31/98: silent teleporterjff 210 SR SilentTeleportjff 3/14/98 create instant toggle floor type Toggle Floor Between C and F Instantly 211 SR Toggle Floor Instant Lower floor to next lowest floor 222 SR Lower Floor To Nearest Floor Raise elevator next floor 230 SR Raise Elevator next floor Lower elevator next floor 234 SR Lower Elevator next floor Elevator to current floor 238 SR Elevator to current floor Build stairs, step 8 258 SR EV_BuildStairs(build8) Build stairs, step 16 259 SR EV_BuildStairs(turbo16) 1/29/98 jff end of added SR linedef types Buttons (retriggerable switches) Close Door Lower Ceiling to Floor Lower Floor to Surrounding floor height Lower Floor to Lowest Open Door PlatDownWaitUpStay Raise Door Raise Floor to ceiling Raise Floor 24 and change texture Raise Floor 32 and change texture Raise Floor Crush Raise Plat to next highest floor and change texture Raise Floor to next highest floor Turbo Lower Floor Blazing Door Raise (faster than TURBO!) Blazing Door Open (faster than TURBO!) Blazing Door Close (faster than TURBO!) Blazing PlatDownWaitUpStay Raise Floor Turbo BlzOpenDoor BLUE BlzOpenDoor RED BlzOpenDoor YELLOW Light Turn On Light Turn Off Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Switches, buttons. Two-state animation. Exits.
 *
 *----------------------------------------------------------------------------- killough 2/8/98: Remove switch limit killough killough killough P_InitSwitchList() Only called at game initialization in order to list the set of switches and buttons known to the engine. This enables their texture to change when activated, and in the case of buttons, change back after a timeout. This routine modified to read its data from a predefined lump or PWAD lump called SWITCHES rather than a static table in this module to allow wad designers to insert or modify switches. Lump format is an array of byte packed switchlist_t structures, terminated by a structure with episode == -0. The lump can be generated from a text source file using SWANTBLS.EXE, distributed with the BOOM utils. The standard list of switches and animations is contained in the example source text file DEFSWANI.DAT also in the BOOM util distribution. Rewritten by Lee Killough to remove limit 2/8/98jff 3/23/98 pointer to switch table cph - new wad lump handlingjff 3/23/98 read the switch table from a predefined lumpjff 5/11/98 endianess P_StartButton() Start a button (retriggerable switch) counting down till it turns off. Passed the linedef the button is on, which texture on the sidedef contains the button, the texture number of the button, and the time the button is to remain active in gametics. No return. See if button is already pressed use first unused element of list P_ChangeSwitchTexture() Function that changes switch wall texture on activation. Passed the line which the switch is on, and whether its retriggerable. If not retriggerable, this function clears the line special to insure that No return EXIT SWITCH? if an upper texture switch activation soundchg texturestart timer if a normal texture switch activation soundchg texturestart timer if a lower texture switch activation soundchg texturestart timer P_UseSpecialLine Called when a thing uses (pushes) a special line. Only the front sides of lines are usable. Dispatches to the appropriate linedef function handler. Passed the thing using the line, the line being used, and the side used Returns true if a thinker was createdjff 6/1/98 fix inadvertent deletion of side testjff 02/04/98 add check here for generalized floor/ceil mover pointer to line function is NULL by default, set non-null if line special is push or switch generalized linedef type check each range of generalized linedefs Out of range for GenFloors FloorModel is "Allow Monsters" if FloorChange is 0jff 2/27/98 all non-manual generalized types require tag CeilingModel is "Allow Monsters" if CeilingChange is 0jff 2/27/98 all non-manual generalized types require tag monsters disallowed from this door they can't open secret doors eitherjff 3/2/98 all non-manual generalized types require tag monsters disallowed from unlocking doorsjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag monsters disallowedjff 2/27/98 all non-manual generalized types require tag if not a switch/push type, do nothing here Switches that other things can activate. never open secret doors MANUAL DOOR RAISE MANUAL BLUE MANUAL RED MANUAL YELLOWjff 3/5/98 add ability to use teleporters for monsters switch teleporters silent switch teleportersjff 2/27/98 disallow zero tag on some types Dispatch to handler according to linedef type Manual doors, push type with no tag Vertical Door Blue Door/Locked Yellow Door /Locked Red Door /Locked Manual door open Blue locked door open Red locked door open Yellow locked door open Blazing door raise Blazing door open Switches (non-retriggerable) Build Stairs Change Donut Exit level
       * killough 10/98: prevent zombies from exiting levels
        Raise Floor 32 and change texture Raise Floor 24 and change texture Raise Floor to next highest floor Raise Plat next highest floor and change texture PlatDownWaitUpStay Lower Floor to Lowest Raise Door Lower Ceiling to Floor Turbo Lower Floor Ceiling Crush And Raise Close Door Secret EXIT
       * killough 10/98: prevent zombies from exiting levels
        Raise Floor Crush Raise Floor Lower Floor to Surrounding floor height Open Door Blazing Door Raise (faster than TURBO!) Blazing Door Open (faster than TURBO!) Blazing Door Close (faster than TURBO!) Blazing PlatDownWaitUpStay Build Stairs Turbo 16 Raise Floor Turbo BlzOpenDoor BLUE BlzOpenDoor RED BlzOpenDoor YELLOW Raise Floor 512 killough 1/31/98: factored out compatibility check; added inner switch, relaxed check to demo_compatibilityjff 1/29/98 added linedef types to fill all functions out so that all possess SR, S1, WR, W1 types Raise Floor to shortest lower texture 158 S1  EV_DoFloor(raiseToTexture), CSW(0) Raise Floor to shortest lower texture 159 S1  EV_DoFloor(lowerAndChange) Raise Floor 24 and change 160 S1  EV_DoFloor(raiseFloor24AndChange) Raise Floor 24 161 S1  EV_DoFloor(raiseFloor24) Moving floor min n to max n 162 S1  EV_DoPlat(perpetualRaise,0) Stop Moving floor 163 S1  EV_DoPlat(perpetualRaise,0) Start fast crusher 164 S1  EV_DoCeiling(fastCrushAndRaise) Start slow silent crusher 165 S1  EV_DoCeiling(silentCrushAndRaise) Raise ceiling, Lower floor 166 S1 EV_DoCeiling(raiseToHighest), EV_DoFloor(lowerFloortoLowest) Lower floor and Crush 167 S1 EV_DoCeiling(lowerAndCrush) Stop crusher 168 S1 EV_CeilingCrushStop() Lights to brightest neighbor sector 169 S1  EV_LightTurnOn(0) Lights to near dark 170 S1  EV_LightTurnOn(35) Lights on full 171 S1  EV_LightTurnOn(255) Start Lights Strobing 172 S1  EV_StartLightStrobing() Lights to Dimmest Near 173 S1  EV_TurnTagLightsOff() Teleport 174 S1  EV_Teleport(side,thing) Close Door, Open in 30 secs 175 S1  EV_DoDoor(close30ThenOpen)jff 3/15/98 create texture change no motion type Texture Change Only (Trigger) 189 S1 Change Texture/Type Only Lower ceiling to lowest surrounding ceiling 203 S1 EV_DoCeiling(lowerToLowest) Lower ceiling to highest surrounding floor 204 S1 EV_DoCeiling(lowerToMaxFloor) killough 1/31/98: silent teleporterjff 209 S1 SilentTeleportjff 3/15/98 create texture change no motion type Texture Change Only (Numeric) 241 S1 Change Texture/Type Only Lower floor to next lowest floor 221 S1 Lower Floor To Nearest Floor Raise elevator next floor 229 S1 Raise Elevator next floor Lower elevator next floor 233 S1 Lower Elevator next floor Elevator to current floor 237 S1 Elevator to current floor jff 1/29/98 end of added S1 linedef typesjff 1/29/98 added linedef types to fill all functions out so that all possess SR, S1, WR, W1 typesjff 3/15/98 create texture change no motion type Texture Change Only (Numeric) 78 SR Change Texture/Type Only Raise Floor to shortest lower texture 176 SR  EV_DoFloor(raiseToTexture), CSW(1) Raise Floor to shortest lower texture 177 SR  EV_DoFloor(lowerAndChange) Raise Floor 512 178 SR  EV_DoFloor(raiseFloor512) Raise Floor 24 and change 179 SR  EV_DoFloor(raiseFloor24AndChange) Raise Floor 24 180 SR  EV_DoFloor(raiseFloor24) Moving floor min n to max n 181 SR  EV_DoPlat(perpetualRaise,0) Stop Moving floor 182 SR  EV_DoPlat(perpetualRaise,0) Start fast crusher 183 SR  EV_DoCeiling(fastCrushAndRaise) Start slow crusher 184 SR  EV_DoCeiling(crushAndRaise) Start slow silent crusher 185 SR  EV_DoCeiling(silentCrushAndRaise) Raise ceiling, Lower floor 186 SR EV_DoCeiling(raiseToHighest), EV_DoFloor(lowerFloortoLowest) Lower floor and Crush 187 SR EV_DoCeiling(lowerAndCrush) Stop crusher 188 SR EV_CeilingCrushStop()jff 3/15/98 create texture change no motion type Texture Change Only (Trigger) 190 SR Change Texture/Type Only Lower Pillar, Raise Donut 191 SR  EV_DoDonut() Lights to brightest neighbor sector 192 SR  EV_LightTurnOn(0) Start Lights Strobing 193 SR  EV_StartLightStrobing() Lights to Dimmest Near 194 SR  EV_TurnTagLightsOff() Teleport 195 SR  EV_Teleport(side,thing) Close Door, Open in 30 secs 196 SR  EV_DoDoor(close30ThenOpen) Lower ceiling to lowest surrounding ceiling 205 SR EV_DoCeiling(lowerToLowest) Lower ceiling to highest surrounding floor 206 SR EV_DoCeiling(lowerToMaxFloor) killough 1/31/98: silent teleporterjff 210 SR SilentTeleportjff 3/14/98 create instant toggle floor type Toggle Floor Between C and F Instantly 211 SR Toggle Floor Instant Lower floor to next lowest floor 222 SR Lower Floor To Nearest Floor Raise elevator next floor 230 SR Raise Elevator next floor Lower elevator next floor 234 SR Lower Elevator next floor Elevator to current floor 238 SR Elevator to current floor Build stairs, step 8 258 SR EV_BuildStairs(build8) Build stairs, step 16 259 SR EV_BuildStairs(turbo16) 1/29/98 jff end of added SR linedef types Buttons (retriggerable switches) Close Door Lower Ceiling to Floor Lower Floor to Surrounding floor height Lower Floor to Lowest Open Door PlatDownWaitUpStay Raise Door Raise Floor to ceiling Raise Floor 24 and change texture Raise Floor 32 and change texture Raise Floor Crush Raise Plat to next highest floor and change texture Raise Floor to next highest floor Turbo Lower Floor Blazing Door Raise (faster than TURBO!) Blazing Door Open (faster than TURBO!) Blazing Door Close (faster than TURBO!) Blazing PlatDownWaitUpStay Raise Floor Turbo BlzOpenDoor BLUE BlzOpenDoor RED BlzOpenDoor YELLOW Light Turn On Light Turn Off