	ID Engine	ID_US_1.c - User Manager - General routines	v1.1d1	By Jason Blochowiak	Hacked up for Catacomb 3D	This module handles dealing with user input & feedback	Depends on: Input Mgr, View Mgr, some variables from the Sound, Caching,		and Refresh Mgrs, Memory Mgr for background save/restore	Globals:		ingame - Flag set by game indicating if a game is in progress		loadedgame - Flag set if a game was loaded		PrintX, PrintY - Where the User Mgr will print (global coords)		WindowX,WindowY,WindowW,WindowH - The dimensions of the current			window Visual C++ 6	Global variables	Internal variables	Internal routines	Public routines/////////////////////////////////////////////////////////////////////////	US_Startup() - Starts the User Mgr///////////////////////////////////////////////////////////////////////// Initialize the random number generator/////////////////////////////////////////////////////////////////////////	US_Shutdown() - Shuts down the User Mgr/////////////////////////////////////////////////////////////////////////	Window/Printing routines/////////////////////////////////////////////////////////////////////////	US_SetPrintRoutines() - Sets the routines used to measure and print		from within the User Mgr. Primarily provided to allow switching		between masked and non-masked fonts//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_Print() - Prints a string in the current window. Newlines are		supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintUnsigned() - Prints an unsigned long//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintSigned() - Prints a signed long//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	USL_PrintInCenter() - Prints a string in the center of the given rect//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintCentered() - Prints a string centered in the current window.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_CPrintLine() - Prints a string centered on the current line and		advances to the next line. Newlines are not supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_CPrint() - Prints a string centered in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_Printf() - Prints a formatted string in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_CPrintf() - Prints a formatted string centered in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_ClearWindow() - Clears the current window to white and homes the		cursor//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_DrawWindow() - Draws a frame and sets the current window parms//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_CenterWindow() - Generates a window of a given width & height in the		middle of the screen//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_SaveWindow() - Saves the current window parms into a record for		later restoration//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_RestoreWindow() - Sets the current window parms to those held in the		record/////////////////////////////////////////////////////////////////////////	Input routines/////////////////////////////////////////////////////////////////////////	USL_XORICursor() - XORs the I-bar text cursor. Used by US_LineInput()///////////////////////////////////////////////////////////////////////// VGA doesn't XOR.../////////////////////////////////////////////////////////////////////////	US_LineInput() - Gets a line of user input at (x,y), the string defaults		to whatever is pointed at by def. Input is restricted to maxchars		chars or maxwidth pixels wide. If the user hits escape (and escok is		true), nothing is copied into buf, and false is returned. If the		user hits return, the current string is copied into buf, and true is		returned///////////////////////////////////////////////////////////////////////// 250 ms => first button press accepted after 500 ms After each direction change accept the next change after 250 ms and then everz 125 ms Remove trailing whitespace if cursor is at end of string 250 ms acts as return acts as escape acts as backspace0x4c:	// Keypad 5 // TODO: hmmm... 500 ms///////////////////////////////////////////////////////////////////////// US_InitRndT - Initializes the pseudo random number generator.      If randomize is true, the seed will be initialized depending on the      current time////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// US_RndT - Returns the next 8-bit pseudo random number/////////////////////////////////////////////////////////////////////////	ID Engine	ID_US_1.c - User Manager - General routines	v1.1d1	By Jason Blochowiak	Hacked up for Catacomb 3D	This module handles dealing with user input & feedback	Depends on: Input Mgr, View Mgr, some variables from the Sound, Caching,		and Refresh Mgrs, Memory Mgr for background save/restore	Globals:		ingame - Flag set by game indicating if a game is in progress		loadedgame - Flag set if a game was loaded		PrintX, PrintY - Where the User Mgr will print (global coords)		WindowX,WindowY,WindowW,WindowH - The dimensions of the current			window Visual C++ 6	Global variables	Internal variables	Internal routines	Public routines/////////////////////////////////////////////////////////////////////////	US_Startup() - Starts the User Mgr///////////////////////////////////////////////////////////////////////// Initialize the random number generator/////////////////////////////////////////////////////////////////////////	US_Shutdown() - Shuts down the User Mgr/////////////////////////////////////////////////////////////////////////	Window/Printing routines/////////////////////////////////////////////////////////////////////////	US_SetPrintRoutines() - Sets the routines used to measure and print		from within the User Mgr. Primarily provided to allow switching		between masked and non-masked fonts//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_Print() - Prints a string in the current window. Newlines are		supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintUnsigned() - Prints an unsigned long//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintSigned() - Prints a signed long//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	USL_PrintInCenter() - Prints a string in the center of the given rect//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintCentered() - Prints a string centered in the current window.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_CPrintLine() - Prints a string centered on the current line and		advances to the next line. Newlines are not supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_CPrint() - Prints a string centered in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_Printf() - Prints a formatted string in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_CPrintf() - Prints a formatted string centered in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_ClearWindow() - Clears the current window to white and homes the		cursor//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_DrawWindow() - Draws a frame and sets the current window parms//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_CenterWindow() - Generates a window of a given width & height in the		middle of the screen//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_SaveWindow() - Saves the current window parms into a record for		later restoration//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_RestoreWindow() - Sets the current window parms to those held in the		record/////////////////////////////////////////////////////////////////////////	Input routines/////////////////////////////////////////////////////////////////////////	USL_XORICursor() - XORs the I-bar text cursor. Used by US_LineInput()///////////////////////////////////////////////////////////////////////// VGA doesn't XOR.../////////////////////////////////////////////////////////////////////////	US_LineInput() - Gets a line of user input at (x,y), the string defaults		to whatever is pointed at by def. Input is restricted to maxchars		chars or maxwidth pixels wide. If the user hits escape (and escok is		true), nothing is copied into buf, and false is returned. If the		user hits return, the current string is copied into buf, and true is		returned///////////////////////////////////////////////////////////////////////// 250 ms => first button press accepted after 500 ms After each direction change accept the next change after 250 ms and then everz 125 ms Remove trailing whitespace if cursor is at end of string 250 ms acts as return acts as escape acts as backspace0x4c:	// Keypad 5 // TODO: hmmm... 500 ms///////////////////////////////////////////////////////////////////////// US_InitRndT - Initializes the pseudo random number generator.      If randomize is true, the seed will be initialized depending on the      current time////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// US_RndT - Returns the next 8-bit pseudo random number/////////////////////////////////////////////////////////////////////////	ID Engine	ID_US_1.c - User Manager - General routines	v1.1d1	By Jason Blochowiak	Hacked up for Catacomb 3D	This module handles dealing with user input & feedback	Depends on: Input Mgr, View Mgr, some variables from the Sound, Caching,		and Refresh Mgrs, Memory Mgr for background save/restore	Globals:		ingame - Flag set by game indicating if a game is in progress		loadedgame - Flag set if a game was loaded		PrintX, PrintY - Where the User Mgr will print (global coords)		WindowX,WindowY,WindowW,WindowH - The dimensions of the current			window Visual C++ 6	Global variables	Internal variables	Internal routines	Public routines/////////////////////////////////////////////////////////////////////////	US_Startup() - Starts the User Mgr///////////////////////////////////////////////////////////////////////// Initialize the random number generator/////////////////////////////////////////////////////////////////////////	US_Shutdown() - Shuts down the User Mgr/////////////////////////////////////////////////////////////////////////	Window/Printing routines/////////////////////////////////////////////////////////////////////////	US_SetPrintRoutines() - Sets the routines used to measure and print		from within the User Mgr. Primarily provided to allow switching		between masked and non-masked fonts//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_Print() - Prints a string in the current window. Newlines are		supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintUnsigned() - Prints an unsigned long//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintSigned() - Prints a signed long//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	USL_PrintInCenter() - Prints a string in the center of the given rect//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_PrintCentered() - Prints a string centered in the current window.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_CPrintLine() - Prints a string centered on the current line and		advances to the next line. Newlines are not supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_CPrint() - Prints a string centered in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_Printf() - Prints a formatted string in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  US_CPrintf() - Prints a formatted string centered in the current window.      Newlines are supported.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_ClearWindow() - Clears the current window to white and homes the		cursor//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_DrawWindow() - Draws a frame and sets the current window parms//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_CenterWindow() - Generates a window of a given width & height in the		middle of the screen//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_SaveWindow() - Saves the current window parms into a record for		later restoration//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	US_RestoreWindow() - Sets the current window parms to those held in the		record/////////////////////////////////////////////////////////////////////////	Input routines/////////////////////////////////////////////////////////////////////////	USL_XORICursor() - XORs the I-bar text cursor. Used by US_LineInput()///////////////////////////////////////////////////////////////////////// VGA doesn't XOR.../////////////////////////////////////////////////////////////////////////	US_LineInput() - Gets a line of user input at (x,y), the string defaults		to whatever is pointed at by def. Input is restricted to maxchars		chars or maxwidth pixels wide. If the user hits escape (and escok is		true), nothing is copied into buf, and false is returned. If the		user hits return, the current string is copied into buf, and true is		returned///////////////////////////////////////////////////////////////////////// 250 ms => first button press accepted after 500 ms After each direction change accept the next change after 250 ms and then everz 125 ms Remove trailing whitespace if cursor is at end of string 250 ms acts as return acts as escape acts as backspace0x4c:	// Keypad 5 // TODO: hmmm... 500 ms///////////////////////////////////////////////////////////////////////// US_InitRndT - Initializes the pseudo random number generator.      If randomize is true, the seed will be initialized depending on the      current time////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// US_RndT - Returns the next 8-bit pseudo random number/////////////////////////////////////////////////////////////////////////