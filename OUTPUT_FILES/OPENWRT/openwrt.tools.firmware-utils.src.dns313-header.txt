
 * dns313-header.c
 *
 * Program to add the modified U-Boot header to a binary used with
 * the D-Link DNS-313 boot loader when booting directly from an
 * EXT2 formatted hard drive.
 *
 * The DNS313 use the same header on zImage, ramdisk, rootfs.
 *
 * Written by Linus Walleij <linus.walleij@linaro.org>
 * License terms: GPLv2
 
 * This is the U-Boot magic number, so the U-Boot header was used
 * (obviously) as a template for this custom header.
  File + extended header size  Read file to buffer  PREP HEADER AND FOOTER  FIXME: use actual time  Load address & entry point  Linux  ARM  OS kernel image  gzip  The vendor firmware just hardcodes this  Just some MAC address from the example  Checksum payload  Checksum header, then write that into the header checksum 
 * dns313-header.c
 *
 * Program to add the modified U-Boot header to a binary used with
 * the D-Link DNS-313 boot loader when booting directly from an
 * EXT2 formatted hard drive.
 *
 * The DNS313 use the same header on zImage, ramdisk, rootfs.
 *
 * Written by Linus Walleij <linus.walleij@linaro.org>
 * License terms: GPLv2
 
 * This is the U-Boot magic number, so the U-Boot header was used
 * (obviously) as a template for this custom header.
  File + extended header size  Read file to buffer  PREP HEADER AND FOOTER  FIXME: use actual time  Load address & entry point  Linux  ARM  OS kernel image  gzip  The vendor firmware just hardcodes this  Just some MAC address from the example  Checksum payload  Checksum header, then write that into the header checksum 
 * dns313-header.c
 *
 * Program to add the modified U-Boot header to a binary used with
 * the D-Link DNS-313 boot loader when booting directly from an
 * EXT2 formatted hard drive.
 *
 * The DNS313 use the same header on zImage, ramdisk, rootfs.
 *
 * Written by Linus Walleij <linus.walleij@linaro.org>
 * License terms: GPLv2
 
 * This is the U-Boot magic number, so the U-Boot header was used
 * (obviously) as a template for this custom header.
  File + extended header size  Read file to buffer  PREP HEADER AND FOOTER  FIXME: use actual time  Load address & entry point  Linux  ARM  OS kernel image  gzip  The vendor firmware just hardcodes this  Just some MAC address from the example  Checksum payload  Checksum header, then write that into the header checksum 