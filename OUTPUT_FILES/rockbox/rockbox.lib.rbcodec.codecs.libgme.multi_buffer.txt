 Multi_Buffer 0.4.1. http://www.slack.net/~ant/ Copyright (C) 2003-2006 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Tracked_Blip_Buffer TODO: explain why this value Stereo_Mixer mixers use a single index value to improve performance on register-challenged processors offset goes from negative to zero do left + center and right + center separately to reduce register load loop runs twice before write since out is decremented to slightly before end only end center once TODO: if caller never marks buffers as modified, uses mono except that buffer isn't cleared, so caller can encounter subtle problems and not realize the cause. Multi_Buffer must read an even number of samples TODO: might miss non-silence settling since it checks END of last read Multi_Buffer 0.4.1. http://www.slack.net/~ant/ Copyright (C) 2003-2006 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Tracked_Blip_Buffer TODO: explain why this value Stereo_Mixer mixers use a single index value to improve performance on register-challenged processors offset goes from negative to zero do left + center and right + center separately to reduce register load loop runs twice before write since out is decremented to slightly before end only end center once TODO: if caller never marks buffers as modified, uses mono except that buffer isn't cleared, so caller can encounter subtle problems and not realize the cause. Multi_Buffer must read an even number of samples TODO: might miss non-silence settling since it checks END of last read Multi_Buffer 0.4.1. http://www.slack.net/~ant/ Copyright (C) 2003-2006 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Tracked_Blip_Buffer TODO: explain why this value Stereo_Mixer mixers use a single index value to improve performance on register-challenged processors offset goes from negative to zero do left + center and right + center separately to reduce register load loop runs twice before write since out is decremented to slightly before end only end center once TODO: if caller never marks buffers as modified, uses mono except that buffer isn't cleared, so caller can encounter subtle problems and not realize the cause. Multi_Buffer must read an even number of samples TODO: might miss non-silence settling since it checks END of last read