
  SDL_mixer:  An audio mixer library based on the SDL library
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  This is the source needed to decode an AIFF file into a waveform.
  It's pretty straightforward once you get going. The only
  externally-callable function is Mix_LoadAIFF_RW(), which is meant to
  act as identically to SDL_LoadWAV_RW() as possible.

  This file by Torbjörn Andersson (torbjorn.andersson@eurotime.se)
  8SVX file support added by Marc Le Douarain (mavati@club-internet.fr)
  in december 2002.
 $Id$ ******************************************* Define values for AIFF (IFF audio) format ******************************************* "FORM"  "AIFF"  "SSND"  "COMM"  "8SVX"  "VHDR"  "BODY"  This function was taken from libsndfile. I don't pretend to fully
 * understand it.
  Is the frequency outside of what we can represent with Uint32?  This function is based on SDL_LoadWAV_RW().  AIFF magic header  SSND chunk  COMM format chunk  Make sure we are passed a valid data source  The FORMchunk has already been read  TODO: Better santity-checking.  Paranoia to avoid infinite loops  a 0 pad byte can be stored for any odd-length chunk  Decode the audio data format  Good default buffer size  Don't return a buffer that isn't a multiple of samplesize 
  SDL_mixer:  An audio mixer library based on the SDL library
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  This is the source needed to decode an AIFF file into a waveform.
  It's pretty straightforward once you get going. The only
  externally-callable function is Mix_LoadAIFF_RW(), which is meant to
  act as identically to SDL_LoadWAV_RW() as possible.

  This file by Torbjörn Andersson (torbjorn.andersson@eurotime.se)
  8SVX file support added by Marc Le Douarain (mavati@club-internet.fr)
  in december 2002.
 $Id$ ******************************************* Define values for AIFF (IFF audio) format ******************************************* "FORM"  "AIFF"  "SSND"  "COMM"  "8SVX"  "VHDR"  "BODY"  This function was taken from libsndfile. I don't pretend to fully
 * understand it.
  Is the frequency outside of what we can represent with Uint32?  This function is based on SDL_LoadWAV_RW().  AIFF magic header  SSND chunk  COMM format chunk  Make sure we are passed a valid data source  The FORMchunk has already been read  TODO: Better santity-checking.  Paranoia to avoid infinite loops  a 0 pad byte can be stored for any odd-length chunk  Decode the audio data format  Good default buffer size  Don't return a buffer that isn't a multiple of samplesize 
  SDL_mixer:  An audio mixer library based on the SDL library
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  This is the source needed to decode an AIFF file into a waveform.
  It's pretty straightforward once you get going. The only
  externally-callable function is Mix_LoadAIFF_RW(), which is meant to
  act as identically to SDL_LoadWAV_RW() as possible.

  This file by Torbjörn Andersson (torbjorn.andersson@eurotime.se)
  8SVX file support added by Marc Le Douarain (mavati@club-internet.fr)
  in december 2002.
 $Id$ ******************************************* Define values for AIFF (IFF audio) format ******************************************* "FORM"  "AIFF"  "SSND"  "COMM"  "8SVX"  "VHDR"  "BODY"  This function was taken from libsndfile. I don't pretend to fully
 * understand it.
  Is the frequency outside of what we can represent with Uint32?  This function is based on SDL_LoadWAV_RW().  AIFF magic header  SSND chunk  COMM format chunk  Make sure we are passed a valid data source  The FORMchunk has already been read  TODO: Better santity-checking.  Paranoia to avoid infinite loops  a 0 pad byte can be stored for any odd-length chunk  Decode the audio data format  Good default buffer size  Don't return a buffer that isn't a multiple of samplesize 