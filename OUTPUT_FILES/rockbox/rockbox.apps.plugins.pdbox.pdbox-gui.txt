**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Wincent Balin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Button colors.  Variables in the main code.  Screen multiplier.  Back- and foreground colors.  Displacement of the slanted corner in the contour of the number widget.  Button flags.  Pause flag.  Draw circle using midpoint circle algorithm.
   Adapted from http://en.wikipedia.org/wiki/Midpoint_circle_algorithm.  Draw outer points.  Calculate coordinates of points in one octant.  ddfx == 2 * xp + 1;
           ddfy == -2 * yp;
           f == xp*xp + yp*yp - r*r + 2*xp - yp + 1;  Draw pixels in all octants.  Fill circle.  Draw outer points.  Calculate coordinates of points in one octant.  ddfx == 2 * xp + 1;
           ddfy == -2 * yp;
           f == xp*xp + yp*yp - r*r + 2*xp - yp + 1;  Fill circle with horizontal lines.  Draw last horizontal line (central one).  Initialize GUI.  Reset button flags.  Unpause Pure Data.  Calculate dimension factors.  Get back- and foreground colors.  Clear background.  Draw background of appropriate color.  Update display.  Load PD patch.  Open PD patch.  Check for I/O error.  Show error message and make plug-in quit.  Read lines from PD file.  Check whether we got too many widgets.  Search for key strings in the line.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  Clear timeout flag.  We got one more widget.  Cut off unneeded characters (';' and '\n').  Cut off '\n'.  Cut the last semi-colon, if there is one.  We got one more widget.  Close PD patch.  Return amount of loaded widgets.  Draw standard user interface.  Draw main circle.  Draw center circle.  Draw pressed buttons.  Restore foreground color.  Draw custom user interface.  Clear area to (re-)draw.  Draw border (rectangle).  Draw button (circle), being filled depending on value.  Button not pressed.  Button pressed.  Clear area to (re-)draw.  Draw border.  Draw slider.  Clear area to (re-)draw.  Draw border.  Draw slider.  Clear area to (re-)draw.  Draw border.  If marked, draw button.  Clear area to (re-)draw.  Draw border.  If marked, draw button.  Draw the GUI.  Draw GUI.  Update display.  Parse buttons, if needed, send messages to the Pure Data code.  Extract differences between current and previous button values.  If no difference since the last button value, return here.  Query whether we have to quit.  No need to send the quitting message to Pure Data core,
           as setting the quit flag ends threads and jumps
           to the cleanup code.  Check the action (shift, mode) button.  Check play button.  Action + play = pause.  Switch paused state.  Check rewind (previous) button.  Check forward (next) button.  Check menu (select) button.  Check scroll right (or up) button.  Check scroll left (or down) button.  Backup button value.  GUI has to be updated.  Emulate timer for widgets which use time-out.  Decrement timeout value.  If zero reached, clear value.  Parse and apply message from the Pure Data core.  If object not a number, set boundaries.  Set value. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Wincent Balin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Button colors.  Variables in the main code.  Screen multiplier.  Back- and foreground colors.  Displacement of the slanted corner in the contour of the number widget.  Button flags.  Pause flag.  Draw circle using midpoint circle algorithm.
   Adapted from http://en.wikipedia.org/wiki/Midpoint_circle_algorithm.  Draw outer points.  Calculate coordinates of points in one octant.  ddfx == 2 * xp + 1;
           ddfy == -2 * yp;
           f == xp*xp + yp*yp - r*r + 2*xp - yp + 1;  Draw pixels in all octants.  Fill circle.  Draw outer points.  Calculate coordinates of points in one octant.  ddfx == 2 * xp + 1;
           ddfy == -2 * yp;
           f == xp*xp + yp*yp - r*r + 2*xp - yp + 1;  Fill circle with horizontal lines.  Draw last horizontal line (central one).  Initialize GUI.  Reset button flags.  Unpause Pure Data.  Calculate dimension factors.  Get back- and foreground colors.  Clear background.  Draw background of appropriate color.  Update display.  Load PD patch.  Open PD patch.  Check for I/O error.  Show error message and make plug-in quit.  Read lines from PD file.  Check whether we got too many widgets.  Search for key strings in the line.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  Clear timeout flag.  We got one more widget.  Cut off unneeded characters (';' and '\n').  Cut off '\n'.  Cut the last semi-colon, if there is one.  We got one more widget.  Close PD patch.  Return amount of loaded widgets.  Draw standard user interface.  Draw main circle.  Draw center circle.  Draw pressed buttons.  Restore foreground color.  Draw custom user interface.  Clear area to (re-)draw.  Draw border (rectangle).  Draw button (circle), being filled depending on value.  Button not pressed.  Button pressed.  Clear area to (re-)draw.  Draw border.  Draw slider.  Clear area to (re-)draw.  Draw border.  Draw slider.  Clear area to (re-)draw.  Draw border.  If marked, draw button.  Clear area to (re-)draw.  Draw border.  If marked, draw button.  Draw the GUI.  Draw GUI.  Update display.  Parse buttons, if needed, send messages to the Pure Data code.  Extract differences between current and previous button values.  If no difference since the last button value, return here.  Query whether we have to quit.  No need to send the quitting message to Pure Data core,
           as setting the quit flag ends threads and jumps
           to the cleanup code.  Check the action (shift, mode) button.  Check play button.  Action + play = pause.  Switch paused state.  Check rewind (previous) button.  Check forward (next) button.  Check menu (select) button.  Check scroll right (or up) button.  Check scroll left (or down) button.  Backup button value.  GUI has to be updated.  Emulate timer for widgets which use time-out.  Decrement timeout value.  If zero reached, clear value.  Parse and apply message from the Pure Data core.  If object not a number, set boundaries.  Set value. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Wincent Balin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Button colors.  Variables in the main code.  Screen multiplier.  Back- and foreground colors.  Displacement of the slanted corner in the contour of the number widget.  Button flags.  Pause flag.  Draw circle using midpoint circle algorithm.
   Adapted from http://en.wikipedia.org/wiki/Midpoint_circle_algorithm.  Draw outer points.  Calculate coordinates of points in one octant.  ddfx == 2 * xp + 1;
           ddfy == -2 * yp;
           f == xp*xp + yp*yp - r*r + 2*xp - yp + 1;  Draw pixels in all octants.  Fill circle.  Draw outer points.  Calculate coordinates of points in one octant.  ddfx == 2 * xp + 1;
           ddfy == -2 * yp;
           f == xp*xp + yp*yp - r*r + 2*xp - yp + 1;  Fill circle with horizontal lines.  Draw last horizontal line (central one).  Initialize GUI.  Reset button flags.  Unpause Pure Data.  Calculate dimension factors.  Get back- and foreground colors.  Clear background.  Draw background of appropriate color.  Update display.  Load PD patch.  Open PD patch.  Check for I/O error.  Show error message and make plug-in quit.  Read lines from PD file.  Check whether we got too many widgets.  Search for key strings in the line.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  We got one more widget.  Reset value.  Clear timeout flag.  We got one more widget.  Cut off unneeded characters (';' and '\n').  Cut off '\n'.  Cut the last semi-colon, if there is one.  We got one more widget.  Close PD patch.  Return amount of loaded widgets.  Draw standard user interface.  Draw main circle.  Draw center circle.  Draw pressed buttons.  Restore foreground color.  Draw custom user interface.  Clear area to (re-)draw.  Draw border (rectangle).  Draw button (circle), being filled depending on value.  Button not pressed.  Button pressed.  Clear area to (re-)draw.  Draw border.  Draw slider.  Clear area to (re-)draw.  Draw border.  Draw slider.  Clear area to (re-)draw.  Draw border.  If marked, draw button.  Clear area to (re-)draw.  Draw border.  If marked, draw button.  Draw the GUI.  Draw GUI.  Update display.  Parse buttons, if needed, send messages to the Pure Data code.  Extract differences between current and previous button values.  If no difference since the last button value, return here.  Query whether we have to quit.  No need to send the quitting message to Pure Data core,
           as setting the quit flag ends threads and jumps
           to the cleanup code.  Check the action (shift, mode) button.  Check play button.  Action + play = pause.  Switch paused state.  Check rewind (previous) button.  Check forward (next) button.  Check menu (select) button.  Check scroll right (or up) button.  Check scroll left (or down) button.  Backup button value.  GUI has to be updated.  Emulate timer for widgets which use time-out.  Decrement timeout value.  If zero reached, clear value.  Parse and apply message from the Pure Data core.  If object not a number, set boundaries.  Set value. 