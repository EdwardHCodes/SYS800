**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Nicolas Pennequin, Dan Everton, Matthias Mohr
 *               2010 Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************WPSEDITOR__PCTOOL__ which screen are we parsing for?  the current viewport  add a skin_token_list item to the list chain. ALWAYS appended because some of the
 * chains require the order to be kept.
  create and init a new wpsll item.
 * passing NULL to token will alloc a new one.
 * You should only pass NULL for the token when the token type (table above)
 * is WPS_NO_TOKEN which means it is not stored automatically in the skins token array
  This parser requires viewports which will use the settings font to
         * have font == 1, but the above viewport_set() calls set font to
         * the current real font id. So force 1 here it will be set correctly
         * at the end
          backwards compatability. Allow %xd(Aa) to still work  sanity check  specify a number. 1 being the first subimage (i.e top) NOT 0  format: %x(n,filename.bmp[,x,y])
       or %xl(n,filename.bmp[,x,y])
       or %xl(n,filename.bmp[,x,y,num_subimages])
     x,y,num_subimages handling:
     * If all 3 are left out use sane defaults.
     * If there are 2 params it must be x,y
     * if there is only 1 param it must be the num_subimages
      check the image number and load state  Invalid image ID  save a pointer to the filename  save current viewport  the id from font_load  filename without path and extension  how many glyphs to reserve room for  make sure the filename contains .fnt,
     * we dont actually use it, but require it anyway  only start and end are required  atoi() instead of using a number in the parser is because [si]
              * will select the number for something which looks like a colour
              * making the "colour" case (above) harder to parse  kill warning  format: %X(filename.bmp) or %X(d)  NOTE: both the string validations that happen in here will
     * automatically PASS on checkwps because its too hard to get
     * settings_list.c and english.lang built for it.
     * If that ever changes remove the #ifndef __PCTOOL__'s here
      Store the setting number  nothing to do  Will be computed during the rendering  (x, y, width, height, ...)  computed at rendering  include y in check only if it was non-default  calculate at display time  optional params, first is the image filename if it isnt recognised as a keyword  option needs the next param  option needs the next param  option needs the next param  noborder is incompatible together with image. There is no border
         * anyway.  load later  save a pointer to the filename  try to add some extra space on either end to make pressing the
         * full bar easier. ~5% on either side
          silence warning  reset albumart info in wps  default  default  if we got here, we parsed everything ok .. !  HAVE_ALBUMART  HAVE_SKIN_VARIABLES  generic actions, convert to screen actions on use  list/tree actions  returns to previous music, WPS/FM  not really WPS specific, but no equivilant ACTION_STD_*  generic settings changers  WPS specific actions  FM screen actions  Also allow browse, play, stop from WPS codes  __PCTOOL__  format: %T([label,], x,y,width,height,action[, ...])
     * if action starts with & the area must be held to happen
      should probably do some bounds checking here with the viewport... but later xywidthheight figure out the action  try to match with one of our touchregion screens  HAVE_RDS_CAP  CONFIG_TUNER  not a tag we care about, just don't skip  This is used to free any buflib allocations before the rest of
 * wps_data is reset.
 * The call to this in settings_apply_skins() is the last chance to do
 * any core_free()'s before wps_data is trashed and those handles lost
 
 * initial setup of wps_data; does reset everything
 * except fields which need to survive, i.e.
 * Also called if the load fails
 * Any active skins may be scrolling - which means using viewports which
     * will be moved after this callback returns. This is a hammer to make that
     * safe. TODO: use a screwdriver instead.
      only needed for remote targets  load the image  do this to force a crash later if the
                            caller doesnt call core_get_data()  free unused alpha channel, if any  Abort if we can't load an image  !__PCTOOL__  return false if a single image failed to load  regular images  has backdrop support  don't spit out after the first failue to aid debugging  walk though each viewport and assign its font  first, find the viewports that have a non-sys/ui-font font  the usual case -> built-in fonts  now find the corresponding skin_font  load the font - will handle loading the same font again if
         * multiple viewports use the same printf("[%d] %s -> %d\n",font_id, font->name, font->id); to stop trying to load it again if we fail  finally, assign the font_id to the viewport  default viewport  first viewport in the skin  x  y  width  height  font  Fix x position for RTL languages  IMPORTANT: element params are shared, so copy them if needed
         *            or use then NOW, dont presume they have a long lifespan
          Some tags need special handling for the tag, so add them here  tags that start with 'F', 'I' or 'D' are for the next file  to setup up the wps-data from a format-buffer (isfile = false)
   from a (wps-)file (isfile = true) get buffer space from the plugin buffer  copy the file's content to the buffer for parsing,
           ensuring that every line ends with a newline char.  align on 4-byte boundary  parse the skin source  get the bitmap dir  load the bitmaps that were found by the parsing  last_albumart_{width,height} is either both 0 or valid AA dimensions  Check if there are any touch regions from the skin and not just
     * auto-created ones for bars **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Nicolas Pennequin, Dan Everton, Matthias Mohr
 *               2010 Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************WPSEDITOR__PCTOOL__ which screen are we parsing for?  the current viewport  add a skin_token_list item to the list chain. ALWAYS appended because some of the
 * chains require the order to be kept.
  create and init a new wpsll item.
 * passing NULL to token will alloc a new one.
 * You should only pass NULL for the token when the token type (table above)
 * is WPS_NO_TOKEN which means it is not stored automatically in the skins token array
  This parser requires viewports which will use the settings font to
         * have font == 1, but the above viewport_set() calls set font to
         * the current real font id. So force 1 here it will be set correctly
         * at the end
          backwards compatability. Allow %xd(Aa) to still work  sanity check  specify a number. 1 being the first subimage (i.e top) NOT 0  format: %x(n,filename.bmp[,x,y])
       or %xl(n,filename.bmp[,x,y])
       or %xl(n,filename.bmp[,x,y,num_subimages])
     x,y,num_subimages handling:
     * If all 3 are left out use sane defaults.
     * If there are 2 params it must be x,y
     * if there is only 1 param it must be the num_subimages
      check the image number and load state  Invalid image ID  save a pointer to the filename  save current viewport  the id from font_load  filename without path and extension  how many glyphs to reserve room for  make sure the filename contains .fnt,
     * we dont actually use it, but require it anyway  only start and end are required  atoi() instead of using a number in the parser is because [si]
              * will select the number for something which looks like a colour
              * making the "colour" case (above) harder to parse  kill warning  format: %X(filename.bmp) or %X(d)  NOTE: both the string validations that happen in here will
     * automatically PASS on checkwps because its too hard to get
     * settings_list.c and english.lang built for it.
     * If that ever changes remove the #ifndef __PCTOOL__'s here
      Store the setting number  nothing to do  Will be computed during the rendering  (x, y, width, height, ...)  computed at rendering  include y in check only if it was non-default  calculate at display time  optional params, first is the image filename if it isnt recognised as a keyword  option needs the next param  option needs the next param  option needs the next param  noborder is incompatible together with image. There is no border
         * anyway.  load later  save a pointer to the filename  try to add some extra space on either end to make pressing the
         * full bar easier. ~5% on either side
          silence warning  reset albumart info in wps  default  default  if we got here, we parsed everything ok .. !  HAVE_ALBUMART  HAVE_SKIN_VARIABLES  generic actions, convert to screen actions on use  list/tree actions  returns to previous music, WPS/FM  not really WPS specific, but no equivilant ACTION_STD_*  generic settings changers  WPS specific actions  FM screen actions  Also allow browse, play, stop from WPS codes  __PCTOOL__  format: %T([label,], x,y,width,height,action[, ...])
     * if action starts with & the area must be held to happen
      should probably do some bounds checking here with the viewport... but later xywidthheight figure out the action  try to match with one of our touchregion screens  HAVE_RDS_CAP  CONFIG_TUNER  not a tag we care about, just don't skip  This is used to free any buflib allocations before the rest of
 * wps_data is reset.
 * The call to this in settings_apply_skins() is the last chance to do
 * any core_free()'s before wps_data is trashed and those handles lost
 
 * initial setup of wps_data; does reset everything
 * except fields which need to survive, i.e.
 * Also called if the load fails
 * Any active skins may be scrolling - which means using viewports which
     * will be moved after this callback returns. This is a hammer to make that
     * safe. TODO: use a screwdriver instead.
      only needed for remote targets  load the image  do this to force a crash later if the
                            caller doesnt call core_get_data()  free unused alpha channel, if any  Abort if we can't load an image  !__PCTOOL__  return false if a single image failed to load  regular images  has backdrop support  don't spit out after the first failue to aid debugging  walk though each viewport and assign its font  first, find the viewports that have a non-sys/ui-font font  the usual case -> built-in fonts  now find the corresponding skin_font  load the font - will handle loading the same font again if
         * multiple viewports use the same printf("[%d] %s -> %d\n",font_id, font->name, font->id); to stop trying to load it again if we fail  finally, assign the font_id to the viewport  default viewport  first viewport in the skin  x  y  width  height  font  Fix x position for RTL languages  IMPORTANT: element params are shared, so copy them if needed
         *            or use then NOW, dont presume they have a long lifespan
          Some tags need special handling for the tag, so add them here  tags that start with 'F', 'I' or 'D' are for the next file  to setup up the wps-data from a format-buffer (isfile = false)
   from a (wps-)file (isfile = true) get buffer space from the plugin buffer  copy the file's content to the buffer for parsing,
           ensuring that every line ends with a newline char.  align on 4-byte boundary  parse the skin source  get the bitmap dir  load the bitmaps that were found by the parsing  last_albumart_{width,height} is either both 0 or valid AA dimensions  Check if there are any touch regions from the skin and not just
     * auto-created ones for bars **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Nicolas Pennequin, Dan Everton, Matthias Mohr
 *               2010 Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************WPSEDITOR__PCTOOL__ which screen are we parsing for?  the current viewport  add a skin_token_list item to the list chain. ALWAYS appended because some of the
 * chains require the order to be kept.
  create and init a new wpsll item.
 * passing NULL to token will alloc a new one.
 * You should only pass NULL for the token when the token type (table above)
 * is WPS_NO_TOKEN which means it is not stored automatically in the skins token array
  This parser requires viewports which will use the settings font to
         * have font == 1, but the above viewport_set() calls set font to
         * the current real font id. So force 1 here it will be set correctly
         * at the end
          backwards compatability. Allow %xd(Aa) to still work  sanity check  specify a number. 1 being the first subimage (i.e top) NOT 0  format: %x(n,filename.bmp[,x,y])
       or %xl(n,filename.bmp[,x,y])
       or %xl(n,filename.bmp[,x,y,num_subimages])
     x,y,num_subimages handling:
     * If all 3 are left out use sane defaults.
     * If there are 2 params it must be x,y
     * if there is only 1 param it must be the num_subimages
      check the image number and load state  Invalid image ID  save a pointer to the filename  save current viewport  the id from font_load  filename without path and extension  how many glyphs to reserve room for  make sure the filename contains .fnt,
     * we dont actually use it, but require it anyway  only start and end are required  atoi() instead of using a number in the parser is because [si]
              * will select the number for something which looks like a colour
              * making the "colour" case (above) harder to parse  kill warning  format: %X(filename.bmp) or %X(d)  NOTE: both the string validations that happen in here will
     * automatically PASS on checkwps because its too hard to get
     * settings_list.c and english.lang built for it.
     * If that ever changes remove the #ifndef __PCTOOL__'s here
      Store the setting number  nothing to do  Will be computed during the rendering  (x, y, width, height, ...)  computed at rendering  include y in check only if it was non-default  calculate at display time  optional params, first is the image filename if it isnt recognised as a keyword  option needs the next param  option needs the next param  option needs the next param  noborder is incompatible together with image. There is no border
         * anyway.  load later  save a pointer to the filename  try to add some extra space on either end to make pressing the
         * full bar easier. ~5% on either side
          silence warning  reset albumart info in wps  default  default  if we got here, we parsed everything ok .. !  HAVE_ALBUMART  HAVE_SKIN_VARIABLES  generic actions, convert to screen actions on use  list/tree actions  returns to previous music, WPS/FM  not really WPS specific, but no equivilant ACTION_STD_*  generic settings changers  WPS specific actions  FM screen actions  Also allow browse, play, stop from WPS codes  __PCTOOL__  format: %T([label,], x,y,width,height,action[, ...])
     * if action starts with & the area must be held to happen
      should probably do some bounds checking here with the viewport... but later xywidthheight figure out the action  try to match with one of our touchregion screens  HAVE_RDS_CAP  CONFIG_TUNER  not a tag we care about, just don't skip  This is used to free any buflib allocations before the rest of
 * wps_data is reset.
 * The call to this in settings_apply_skins() is the last chance to do
 * any core_free()'s before wps_data is trashed and those handles lost
 
 * initial setup of wps_data; does reset everything
 * except fields which need to survive, i.e.
 * Also called if the load fails
 * Any active skins may be scrolling - which means using viewports which
     * will be moved after this callback returns. This is a hammer to make that
     * safe. TODO: use a screwdriver instead.
      only needed for remote targets  load the image  do this to force a crash later if the
                            caller doesnt call core_get_data()  free unused alpha channel, if any  Abort if we can't load an image  !__PCTOOL__  return false if a single image failed to load  regular images  has backdrop support  don't spit out after the first failue to aid debugging  walk though each viewport and assign its font  first, find the viewports that have a non-sys/ui-font font  the usual case -> built-in fonts  now find the corresponding skin_font  load the font - will handle loading the same font again if
         * multiple viewports use the same printf("[%d] %s -> %d\n",font_id, font->name, font->id); to stop trying to load it again if we fail  finally, assign the font_id to the viewport  default viewport  first viewport in the skin  x  y  width  height  font  Fix x position for RTL languages  IMPORTANT: element params are shared, so copy them if needed
         *            or use then NOW, dont presume they have a long lifespan
          Some tags need special handling for the tag, so add them here  tags that start with 'F', 'I' or 'D' are for the next file  to setup up the wps-data from a format-buffer (isfile = false)
   from a (wps-)file (isfile = true) get buffer space from the plugin buffer  copy the file's content to the buffer for parsing,
           ensuring that every line ends with a newline char.  align on 4-byte boundary  parse the skin source  get the bitmap dir  load the bitmaps that were found by the parsing  last_albumart_{width,height} is either both 0 or valid AA dimensions  Check if there are any touch regions from the skin and not just
     * auto-created ones for bars 