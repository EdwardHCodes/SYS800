 if not set (empty), default from ice_library.xml are used. TODO I neutered this for the time being because other participants on the localhost might be outside of this process.            dpQos.wire_protocol.participant_id = nextParticipantId++; mimic logic described here: http://community.rti.com/rti-doc/510/ndds/doc/html/api_java/classcom_1_1rti_1_1dds_1_1infrastructure_1_1DiscoveryQosPolicy.html If NDDS_DISCOVERY_PEERS does not contain a multicast address, then the string sequence com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses is cleared and the RTI discovery process will not listen for discovery messages via multicast. If NDDS_DISCOVERY_PEERS contains one or more multicast addresses, the addresses will be stored in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses, starting at element 0. They will be stored in the order they appear NDDS_DISCOVERY_PEERS. Note: Currently, RTI Connext will only listen for discovery traffic on the first multicast address (element 0) in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses. Initialize this builtin reader if not set (empty), default from ice_library.xml are used. TODO I neutered this for the time being because other participants on the localhost might be outside of this process.            dpQos.wire_protocol.participant_id = nextParticipantId++; mimic logic described here: http://community.rti.com/rti-doc/510/ndds/doc/html/api_java/classcom_1_1rti_1_1dds_1_1infrastructure_1_1DiscoveryQosPolicy.html If NDDS_DISCOVERY_PEERS does not contain a multicast address, then the string sequence com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses is cleared and the RTI discovery process will not listen for discovery messages via multicast. If NDDS_DISCOVERY_PEERS contains one or more multicast addresses, the addresses will be stored in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses, starting at element 0. They will be stored in the order they appear NDDS_DISCOVERY_PEERS. Note: Currently, RTI Connext will only listen for discovery traffic on the first multicast address (element 0) in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses. Initialize this builtin reader if not set (empty), default from ice_library.xml are used. TODO I neutered this for the time being because other participants on the localhost might be outside of this process.            dpQos.wire_protocol.participant_id = nextParticipantId++; mimic logic described here: http://community.rti.com/rti-doc/510/ndds/doc/html/api_java/classcom_1_1rti_1_1dds_1_1infrastructure_1_1DiscoveryQosPolicy.html If NDDS_DISCOVERY_PEERS does not contain a multicast address, then the string sequence com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses is cleared and the RTI discovery process will not listen for discovery messages via multicast. If NDDS_DISCOVERY_PEERS contains one or more multicast addresses, the addresses will be stored in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses, starting at element 0. They will be stored in the order they appear NDDS_DISCOVERY_PEERS. Note: Currently, RTI Connext will only listen for discovery traffic on the first multicast address (element 0) in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses. Initialize this builtin reader if not set (empty), default from ice_library.xml are used. TODO I neutered this for the time being because other participants on the localhost might be outside of this process.            dpQos.wire_protocol.participant_id = nextParticipantId++; mimic logic described here: http://community.rti.com/rti-doc/510/ndds/doc/html/api_java/classcom_1_1rti_1_1dds_1_1infrastructure_1_1DiscoveryQosPolicy.html If NDDS_DISCOVERY_PEERS does not contain a multicast address, then the string sequence com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses is cleared and the RTI discovery process will not listen for discovery messages via multicast. If NDDS_DISCOVERY_PEERS contains one or more multicast addresses, the addresses will be stored in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses, starting at element 0. They will be stored in the order they appear NDDS_DISCOVERY_PEERS. Note: Currently, RTI Connext will only listen for discovery traffic on the first multicast address (element 0) in com.rti.dds.infrastructure.DiscoveryQosPolicy.multicast_receive_addresses. Initialize this builtin reader