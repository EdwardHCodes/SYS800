 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

 usbreset -- send a USB port reset to a USB device 

http://marc.info/?l=linux-usb-users&m=116827193506484&w=2

and needs mounted usbfs filesystem

	sudo mount -t usbfs none /proc/bus/usb

There is a way to suspend a USB device.  In order to use it,
you must have a kernel with CONFIG_PM_SYSFS_DEPRECATED turned on.  To
suspend a device, do (as root):

	echo -n 2 >/sys/bus/usb/devices/.../power/state

where the "..." is the ID for your device.  To unsuspend, do the same
thing but with a "0" instead of the "2" above.

Note that this mechanism is slated to be removed from the kernel within
the next year.  Hopefully some other mechanism will take its place.

> To reset a
> device?

Here's a program to do it.  You invoke it as either

	usbreset /proc/bus/usb/BBB/DDD
or
	usbreset /dev/usbB.D

depending on how your system is set up, where BBB and DDD are the bus and
device address numbers.

Alan Stern

