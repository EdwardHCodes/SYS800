**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) Jonathan Gordon (2006)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** structure for color info  native color value             access to components as array  native red value               native green value             native blue value              8 bit red value                8 bit green value              8 bit blue value               assume byte packing        list of primary colors  Foreground colors for sliders  Fill colors for sliders  maximum values for components  Unpacks the color value into native rgb values and 24 bit rgb values  Packs the native rgb colors into a color value  Returns LCD_BLACK if the color is above a threshold brightness
   else return LCD_WHITE  Top margin of screen                  Bottom margin of screen               Gap between text and sliders          Space below title bar                 Margin on top and bottom of selector  Space between last slider and swatch  Height of > and < bitmaps             dunno why lcd_set_drawinfo should be left out of struct screen  Figure out widest label character in case they vary -
   this function assumes labels are one character  Draw title string  Get slider positions and top starting position  Find out if there's enough room for three sliders or just
       enough to display the selected slider - calculate total height
       of display with three sliders present  Title + 3 sliders      at least 2 lines        + margins for bottom  colored rectangle      Draw solid bar selection bar  Draw ">    <" around sliders  Draw label  Draw color value  Draw scrollbar  screen  x  y  width  height  items  min_shown  max_shown  flags  Advance to next line  end for  Format RGB: #rrggbb  Display color swatch on color screens only  Only draw if room  draw the big rectangle  Draw RGB: #rrggbb in middle of swatch  Draw border around the rect  Display RGB value only centered on remaining display if room  Get slider positions and top starting position
     * need vp.y here, because of the statusbar, since touchscreen
     * coordinates are absolute  same logic as in draw_screen  Find out if there's enough room for three sliders or just
       enough to display the selected slider - calculate total height
       of display with three sliders present  Title + 3 sliders      at least 2 lines        + margins for bottom  colored rectangle      touching the color area means accept  y is relative to the original viewport  add max_label_width to overcome integer division limits,
     * cap value later since that may lead to an overflow **********
 set_color
 returns true if USB was inserted, false otherwise
 color is a pointer to the colour (in native format) to modify
 set banned_color to -1 to allow all
 ************************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) Jonathan Gordon (2006)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** structure for color info  native color value             access to components as array  native red value               native green value             native blue value              8 bit red value                8 bit green value              8 bit blue value               assume byte packing        list of primary colors  Foreground colors for sliders  Fill colors for sliders  maximum values for components  Unpacks the color value into native rgb values and 24 bit rgb values  Packs the native rgb colors into a color value  Returns LCD_BLACK if the color is above a threshold brightness
   else return LCD_WHITE  Top margin of screen                  Bottom margin of screen               Gap between text and sliders          Space below title bar                 Margin on top and bottom of selector  Space between last slider and swatch  Height of > and < bitmaps             dunno why lcd_set_drawinfo should be left out of struct screen  Figure out widest label character in case they vary -
   this function assumes labels are one character  Draw title string  Get slider positions and top starting position  Find out if there's enough room for three sliders or just
       enough to display the selected slider - calculate total height
       of display with three sliders present  Title + 3 sliders      at least 2 lines        + margins for bottom  colored rectangle      Draw solid bar selection bar  Draw ">    <" around sliders  Draw label  Draw color value  Draw scrollbar  screen  x  y  width  height  items  min_shown  max_shown  flags  Advance to next line  end for  Format RGB: #rrggbb  Display color swatch on color screens only  Only draw if room  draw the big rectangle  Draw RGB: #rrggbb in middle of swatch  Draw border around the rect  Display RGB value only centered on remaining display if room  Get slider positions and top starting position
     * need vp.y here, because of the statusbar, since touchscreen
     * coordinates are absolute  same logic as in draw_screen  Find out if there's enough room for three sliders or just
       enough to display the selected slider - calculate total height
       of display with three sliders present  Title + 3 sliders      at least 2 lines        + margins for bottom  colored rectangle      touching the color area means accept  y is relative to the original viewport  add max_label_width to overcome integer division limits,
     * cap value later since that may lead to an overflow **********
 set_color
 returns true if USB was inserted, false otherwise
 color is a pointer to the colour (in native format) to modify
 set banned_color to -1 to allow all
 ************************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) Jonathan Gordon (2006)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** structure for color info  native color value             access to components as array  native red value               native green value             native blue value              8 bit red value                8 bit green value              8 bit blue value               assume byte packing        list of primary colors  Foreground colors for sliders  Fill colors for sliders  maximum values for components  Unpacks the color value into native rgb values and 24 bit rgb values  Packs the native rgb colors into a color value  Returns LCD_BLACK if the color is above a threshold brightness
   else return LCD_WHITE  Top margin of screen                  Bottom margin of screen               Gap between text and sliders          Space below title bar                 Margin on top and bottom of selector  Space between last slider and swatch  Height of > and < bitmaps             dunno why lcd_set_drawinfo should be left out of struct screen  Figure out widest label character in case they vary -
   this function assumes labels are one character  Draw title string  Get slider positions and top starting position  Find out if there's enough room for three sliders or just
       enough to display the selected slider - calculate total height
       of display with three sliders present  Title + 3 sliders      at least 2 lines        + margins for bottom  colored rectangle      Draw solid bar selection bar  Draw ">    <" around sliders  Draw label  Draw color value  Draw scrollbar  screen  x  y  width  height  items  min_shown  max_shown  flags  Advance to next line  end for  Format RGB: #rrggbb  Display color swatch on color screens only  Only draw if room  draw the big rectangle  Draw RGB: #rrggbb in middle of swatch  Draw border around the rect  Display RGB value only centered on remaining display if room  Get slider positions and top starting position
     * need vp.y here, because of the statusbar, since touchscreen
     * coordinates are absolute  same logic as in draw_screen  Find out if there's enough room for three sliders or just
       enough to display the selected slider - calculate total height
       of display with three sliders present  Title + 3 sliders      at least 2 lines        + margins for bottom  colored rectangle      touching the color area means accept  y is relative to the original viewport  add max_label_width to overcome integer division limits,
     * cap value later since that may lead to an overflow **********
 set_color
 returns true if USB was inserted, false otherwise
 color is a pointer to the colour (in native format) to modify
 set banned_color to -1 to allow all
 **********