 backlight clock enable, select backlight clock as 32kHz  baclight enable  pwm output, phase high, some initial duty cycle set as 24/32  set duty cycle in 1/32 units  write GRAM command  AHB bus write fifo  strips off MIPS segment coding  rb compat defines  here we exploit the fact that width fits in LSB only  column start MSB  column start LSB  column end MSB  column end LSB  row start MSB  row start LSB  row end MSB  row end LSB  we transfer 2px at once  adjust the width  set GRAM window  prepare for AHB write to fifo  for reference
 * When in act213x_fb_data()
 * YUV2RGB_CTL = 0xa02ae; -> DMA0-3 (AHB bus)
 * YUV2RGB_CTL = 0xa00ae; -> DMA4-7 (special bus)
  AHB bus DMA channels are 0-3  dst burst length = single  DMA no reload  dst DSP mode disable  dst row mode  dst address count dir - don't care  dst fixed address  dst DRQ trig source LCM  dst transfer width 32bits  dst transfer fixed size chunks  src burst length = incr8  reserved  src DSP mode disable  src row mode  src address count dir - increase  src address not fixed  src DRQ trig source SDRAM  src transfer width 32bit  src transfer not in fixed chunks  in bytes  start dma operation  dma clk, lcm clk  DMA4 clock enable  reset DMA4  enable multifunction 0xfe3f3f00 0x808092 this has side effect of enabling whole block  lcm clock divider  google says COG-IZT2298 is 2.8" lcd module  lcd reset pin GPIOA16  lcd controller init sequence matching HX8347-D  gamma block start  gamma block end  70Hz framerate  osc enable  16bpp  column start MSB  column start LSB  column end MSB  column end LSB  row start MSB  row start LSB  row end MSB  row end LSB  prepare for DMA write to fifo  clear lcd gram  disable WDT  Configure T0 interrupt as IP6. IP6 is unmasked in crt0.S  unmask T0 source in INTC  copy rb logo image  ADEC_N63.BIN seems to setup P_CLK as 7.5MHz which is timer clk  with this we should see transition every ~0.3125s and 'black' every ~10s  timer enable, timer reload, timer irq, clear irq pending bit  otherwise wdt will trigger reset wdt_feed(); Timer T0 interrupt service routine  clear pending bit in timer module  change backligh  backlight clock enable, select backlight clock as 32kHz  baclight enable  pwm output, phase high, some initial duty cycle set as 24/32  set duty cycle in 1/32 units  write GRAM command  AHB bus write fifo  strips off MIPS segment coding  rb compat defines  here we exploit the fact that width fits in LSB only  column start MSB  column start LSB  column end MSB  column end LSB  row start MSB  row start LSB  row end MSB  row end LSB  we transfer 2px at once  adjust the width  set GRAM window  prepare for AHB write to fifo  for reference
 * When in act213x_fb_data()
 * YUV2RGB_CTL = 0xa02ae; -> DMA0-3 (AHB bus)
 * YUV2RGB_CTL = 0xa00ae; -> DMA4-7 (special bus)
  AHB bus DMA channels are 0-3  dst burst length = single  DMA no reload  dst DSP mode disable  dst row mode  dst address count dir - don't care  dst fixed address  dst DRQ trig source LCM  dst transfer width 32bits  dst transfer fixed size chunks  src burst length = incr8  reserved  src DSP mode disable  src row mode  src address count dir - increase  src address not fixed  src DRQ trig source SDRAM  src transfer width 32bit  src transfer not in fixed chunks  in bytes  start dma operation  dma clk, lcm clk  DMA4 clock enable  reset DMA4  enable multifunction 0xfe3f3f00 0x808092 this has side effect of enabling whole block  lcm clock divider  google says COG-IZT2298 is 2.8" lcd module  lcd reset pin GPIOA16  lcd controller init sequence matching HX8347-D  gamma block start  gamma block end  70Hz framerate  osc enable  16bpp  column start MSB  column start LSB  column end MSB  column end LSB  row start MSB  row start LSB  row end MSB  row end LSB  prepare for DMA write to fifo  clear lcd gram  disable WDT  Configure T0 interrupt as IP6. IP6 is unmasked in crt0.S  unmask T0 source in INTC  copy rb logo image  ADEC_N63.BIN seems to setup P_CLK as 7.5MHz which is timer clk  with this we should see transition every ~0.3125s and 'black' every ~10s  timer enable, timer reload, timer irq, clear irq pending bit  otherwise wdt will trigger reset wdt_feed(); Timer T0 interrupt service routine  clear pending bit in timer module  change backligh  backlight clock enable, select backlight clock as 32kHz  baclight enable  pwm output, phase high, some initial duty cycle set as 24/32  set duty cycle in 1/32 units  write GRAM command  AHB bus write fifo  strips off MIPS segment coding  rb compat defines  here we exploit the fact that width fits in LSB only  column start MSB  column start LSB  column end MSB  column end LSB  row start MSB  row start LSB  row end MSB  row end LSB  we transfer 2px at once  adjust the width  set GRAM window  prepare for AHB write to fifo  for reference
 * When in act213x_fb_data()
 * YUV2RGB_CTL = 0xa02ae; -> DMA0-3 (AHB bus)
 * YUV2RGB_CTL = 0xa00ae; -> DMA4-7 (special bus)
  AHB bus DMA channels are 0-3  dst burst length = single  DMA no reload  dst DSP mode disable  dst row mode  dst address count dir - don't care  dst fixed address  dst DRQ trig source LCM  dst transfer width 32bits  dst transfer fixed size chunks  src burst length = incr8  reserved  src DSP mode disable  src row mode  src address count dir - increase  src address not fixed  src DRQ trig source SDRAM  src transfer width 32bit  src transfer not in fixed chunks  in bytes  start dma operation  dma clk, lcm clk  DMA4 clock enable  reset DMA4  enable multifunction 0xfe3f3f00 0x808092 this has side effect of enabling whole block  lcm clock divider  google says COG-IZT2298 is 2.8" lcd module  lcd reset pin GPIOA16  lcd controller init sequence matching HX8347-D  gamma block start  gamma block end  70Hz framerate  osc enable  16bpp  column start MSB  column start LSB  column end MSB  column end LSB  row start MSB  row start LSB  row end MSB  row end LSB  prepare for DMA write to fifo  clear lcd gram  disable WDT  Configure T0 interrupt as IP6. IP6 is unmasked in crt0.S  unmask T0 source in INTC  copy rb logo image  ADEC_N63.BIN seems to setup P_CLK as 7.5MHz which is timer clk  with this we should see transition every ~0.3125s and 'black' every ~10s  timer enable, timer reload, timer irq, clear irq pending bit  otherwise wdt will trigger reset wdt_feed(); Timer T0 interrupt service routine  clear pending bit in timer module  change backligh 