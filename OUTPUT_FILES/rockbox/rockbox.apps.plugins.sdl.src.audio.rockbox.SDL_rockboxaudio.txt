
  SDL - Simple DirectMedia Layer
  Copyright (C) 1997-2012 Sam Lantinga

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

  Sam Lantinga
  slouken@libsdl.org

  This file written by Franklin Wei (franklin@rockbox.org).
 SDL Rockbox audio driver  The tag name used by DISK audio  debug  Audio driver functions  Audio driver bootstrap functions  always!  filled in OpenAudio()  rockbox callback (in IRQ)  Circularly loop through the buffers starting after the one most
     * recently marked as playing, and find the next one that is
     * marked as filled.  Play this one. LOGF("Playing buffer %d", idx); Mark as playing  If the loop failed, we're lagging behind, so we play silence.  This function waits until it is possible to call PlayAudio
 * again. This is called from the SDL_audio thread.  We fill in the following cases:
         *  There's an empty buffer (status=0).
         *  There's more than buffers two marked as playing; this
         *  means at least one is stale and needs filling (status=2).
          when this is called, SDL wants us to play the samples in mixbuf  There are two cases in which we should be called:
     *  - There is an empty buffer (marked with status = 0)
     *  - There are more than two buffers marked as playing, meaning at least one is stale.
      Find the next empty or stale buffer and fill.  Empty or stale.  probably premature optimization here LOGF("filled buffer %d (status %d %d %d)", idx, this->hidden->status[0], this->hidden->status[1], this->hidden->status[2]); Initialize all variables that we clean on shutdown  Set the function pointers  Tell SDL to put samples in mixbuf  change to our format  switch to default we've changed it  Allocate mixing buffer  Increase to reduce skipping at the cost of latency.  Buffer 1 will be filled first.  allocate buffers  empty  We're ready to rock and roll. :-) 
  SDL - Simple DirectMedia Layer
  Copyright (C) 1997-2012 Sam Lantinga

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

  Sam Lantinga
  slouken@libsdl.org

  This file written by Franklin Wei (franklin@rockbox.org).
 SDL Rockbox audio driver  The tag name used by DISK audio  debug  Audio driver functions  Audio driver bootstrap functions  always!  filled in OpenAudio()  rockbox callback (in IRQ)  Circularly loop through the buffers starting after the one most
     * recently marked as playing, and find the next one that is
     * marked as filled.  Play this one. LOGF("Playing buffer %d", idx); Mark as playing  If the loop failed, we're lagging behind, so we play silence.  This function waits until it is possible to call PlayAudio
 * again. This is called from the SDL_audio thread.  We fill in the following cases:
         *  There's an empty buffer (status=0).
         *  There's more than buffers two marked as playing; this
         *  means at least one is stale and needs filling (status=2).
          when this is called, SDL wants us to play the samples in mixbuf  There are two cases in which we should be called:
     *  - There is an empty buffer (marked with status = 0)
     *  - There are more than two buffers marked as playing, meaning at least one is stale.
      Find the next empty or stale buffer and fill.  Empty or stale.  probably premature optimization here LOGF("filled buffer %d (status %d %d %d)", idx, this->hidden->status[0], this->hidden->status[1], this->hidden->status[2]); Initialize all variables that we clean on shutdown  Set the function pointers  Tell SDL to put samples in mixbuf  change to our format  switch to default we've changed it  Allocate mixing buffer  Increase to reduce skipping at the cost of latency.  Buffer 1 will be filled first.  allocate buffers  empty  We're ready to rock and roll. :-) 
  SDL - Simple DirectMedia Layer
  Copyright (C) 1997-2012 Sam Lantinga

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

  Sam Lantinga
  slouken@libsdl.org

  This file written by Franklin Wei (franklin@rockbox.org).
 SDL Rockbox audio driver  The tag name used by DISK audio  debug  Audio driver functions  Audio driver bootstrap functions  always!  filled in OpenAudio()  rockbox callback (in IRQ)  Circularly loop through the buffers starting after the one most
     * recently marked as playing, and find the next one that is
     * marked as filled.  Play this one. LOGF("Playing buffer %d", idx); Mark as playing  If the loop failed, we're lagging behind, so we play silence.  This function waits until it is possible to call PlayAudio
 * again. This is called from the SDL_audio thread.  We fill in the following cases:
         *  There's an empty buffer (status=0).
         *  There's more than buffers two marked as playing; this
         *  means at least one is stale and needs filling (status=2).
          when this is called, SDL wants us to play the samples in mixbuf  There are two cases in which we should be called:
     *  - There is an empty buffer (marked with status = 0)
     *  - There are more than two buffers marked as playing, meaning at least one is stale.
      Find the next empty or stale buffer and fill.  Empty or stale.  probably premature optimization here LOGF("filled buffer %d (status %d %d %d)", idx, this->hidden->status[0], this->hidden->status[1], this->hidden->status[2]); Initialize all variables that we clean on shutdown  Set the function pointers  Tell SDL to put samples in mixbuf  change to our format  switch to default we've changed it  Allocate mixing buffer  Increase to reduce skipping at the cost of latency.  Buffer 1 will be filled first.  allocate buffers  empty  We're ready to rock and roll. :-) 