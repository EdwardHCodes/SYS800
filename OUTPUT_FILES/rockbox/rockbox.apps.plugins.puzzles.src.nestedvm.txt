
 * nestedvm.c: NestedVM front end for my puzzle collection.
  TODO kill unneeded members!
     * We assume Java can cope with any UTF-8 likely to be emitted
     * by a puzzle.
      draw_update, {begin,end}_{doc,page,puzzle}  line_width, line_dotted  may clear timer_active  ignore failure  Now pause the vm. The VM will be call()ed when an input event occurs. shut down when the VM is resumed.
 * nestedvm.c: NestedVM front end for my puzzle collection.
  TODO kill unneeded members!
     * We assume Java can cope with any UTF-8 likely to be emitted
     * by a puzzle.
      draw_update, {begin,end}_{doc,page,puzzle}  line_width, line_dotted  may clear timer_active  ignore failure  Now pause the vm. The VM will be call()ed when an input event occurs. shut down when the VM is resumed.
 * nestedvm.c: NestedVM front end for my puzzle collection.
  TODO kill unneeded members!
     * We assume Java can cope with any UTF-8 likely to be emitted
     * by a puzzle.
      draw_update, {begin,end}_{doc,page,puzzle}  line_width, line_dotted  may clear timer_active  ignore failure  Now pause the vm. The VM will be call()ed when an input event occurs. shut down when the VM is resumed.