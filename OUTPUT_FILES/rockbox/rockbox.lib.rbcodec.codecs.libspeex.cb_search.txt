 Copyright (C) 2002-2006 Jean-Marc Valin 
   File: cb_search.c

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:
   
   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
   
   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
   
   - Neither the name of the Xiph.org Foundation nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.
   
   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 Compute codeword response using convolution with impulse response  Compute codeword energy printf ("%d\n", (int)res[j]); target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  FIXME: Do we still need to copy the target? Find new n-best based on previous n-best j Update excitation  FIXME: We could update the excitation directly above  Update target: only update target if necessary  target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  Complexity isn't as important for the codebooks as it is for the pitch  Pre-compute codewords response and energy For all subvectors"erase" nbest list This is not strictly necessary, but it provides an additonal safety 
         to prevent crashes in case something goes wrong in the previous
         steps (e.g. NaNs) For all n-bests of previous subvectorFind new n-best based on previous n-best jFor all new n-bests Compute total distance (including previous sub-vectors update n-best list n is equal to m here, so they're interchangeable previous target (we don't care what happened before New code: update the rest of the target only if it's worth it update old-new data just swap pointers instead of a long copy save indices Put everything back together  Update excitation  Update target: only update target if necessary  SPEEX_DISABLE_ENCODER non-overlapping codebook  number of samples in subframe  Decode codewords and gains  Compute decoded excitation  target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  SPEEX_DISABLE_ENCODER  non-overlapping codebook  number of samples in subframe  FIXME: This is bad, but I don't think the function ever gets called anyway  Copyright (C) 2002-2006 Jean-Marc Valin 
   File: cb_search.c

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:
   
   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
   
   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
   
   - Neither the name of the Xiph.org Foundation nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.
   
   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 Compute codeword response using convolution with impulse response  Compute codeword energy printf ("%d\n", (int)res[j]); target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  FIXME: Do we still need to copy the target? Find new n-best based on previous n-best j Update excitation  FIXME: We could update the excitation directly above  Update target: only update target if necessary  target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  Complexity isn't as important for the codebooks as it is for the pitch  Pre-compute codewords response and energy For all subvectors"erase" nbest list This is not strictly necessary, but it provides an additonal safety 
         to prevent crashes in case something goes wrong in the previous
         steps (e.g. NaNs) For all n-bests of previous subvectorFind new n-best based on previous n-best jFor all new n-bests Compute total distance (including previous sub-vectors update n-best list n is equal to m here, so they're interchangeable previous target (we don't care what happened before New code: update the rest of the target only if it's worth it update old-new data just swap pointers instead of a long copy save indices Put everything back together  Update excitation  Update target: only update target if necessary  SPEEX_DISABLE_ENCODER non-overlapping codebook  number of samples in subframe  Decode codewords and gains  Compute decoded excitation  target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  SPEEX_DISABLE_ENCODER  non-overlapping codebook  number of samples in subframe  FIXME: This is bad, but I don't think the function ever gets called anyway  Copyright (C) 2002-2006 Jean-Marc Valin 
   File: cb_search.c

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:
   
   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
   
   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
   
   - Neither the name of the Xiph.org Foundation nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.
   
   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 Compute codeword response using convolution with impulse response  Compute codeword energy printf ("%d\n", (int)res[j]); target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  FIXME: Do we still need to copy the target? Find new n-best based on previous n-best j Update excitation  FIXME: We could update the excitation directly above  Update target: only update target if necessary  target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  Complexity isn't as important for the codebooks as it is for the pitch  Pre-compute codewords response and energy For all subvectors"erase" nbest list This is not strictly necessary, but it provides an additonal safety 
         to prevent crashes in case something goes wrong in the previous
         steps (e.g. NaNs) For all n-bests of previous subvectorFind new n-best based on previous n-best jFor all new n-bests Compute total distance (including previous sub-vectors update n-best list n is equal to m here, so they're interchangeable previous target (we don't care what happened before New code: update the rest of the target only if it's worth it update old-new data just swap pointers instead of a long copy save indices Put everything back together  Update excitation  Update target: only update target if necessary  SPEEX_DISABLE_ENCODER non-overlapping codebook  number of samples in subframe  Decode codewords and gains  Compute decoded excitation  target vector  LPCs for this subframe  Weighted LPCs for this subframe  Weighted LPCs for this subframe  Codebook/search parameters number of LPC coeffs  number of samples in subframe  SPEEX_DISABLE_ENCODER  non-overlapping codebook  number of samples in subframe  FIXME: This is bad, but I don't think the function ever gets called anyway 