**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2008 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Do this so we may read all channels in a single SPI message  One for each input group  Read 10-bit ADC channel  Limit the traffic through here  Keep enable, start conversion, increment from channel 0,
         * increment from channel 4  2nd set of inputs  Start conversion  Wait for done signal  Read all 8 channels that are converted - two channels in each
         * word.  Channels 0-3/8-11 in ADD1, 4-7/12-15 in ADD2  ADC conversion complete event - called from PMIC ISR  Init so first reads get data  Enable increment-by-read, turn off extra conversions.  Enable ADC, set multi-channel mode  Enable ADCDONE event **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2008 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Do this so we may read all channels in a single SPI message  One for each input group  Read 10-bit ADC channel  Limit the traffic through here  Keep enable, start conversion, increment from channel 0,
         * increment from channel 4  2nd set of inputs  Start conversion  Wait for done signal  Read all 8 channels that are converted - two channels in each
         * word.  Channels 0-3/8-11 in ADD1, 4-7/12-15 in ADD2  ADC conversion complete event - called from PMIC ISR  Init so first reads get data  Enable increment-by-read, turn off extra conversions.  Enable ADC, set multi-channel mode  Enable ADCDONE event **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2008 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Do this so we may read all channels in a single SPI message  One for each input group  Read 10-bit ADC channel  Limit the traffic through here  Keep enable, start conversion, increment from channel 0,
         * increment from channel 4  2nd set of inputs  Start conversion  Wait for done signal  Read all 8 channels that are converted - two channels in each
         * word.  Channels 0-3/8-11 in ADD1, 4-7/12-15 in ADD2  ADC conversion complete event - called from PMIC ISR  Init so first reads get data  Enable increment-by-read, turn off extra conversions.  Enable ADC, set multi-channel mode  Enable ADCDONE event 