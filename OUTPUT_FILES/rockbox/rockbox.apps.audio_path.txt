**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Audio signal path management APIs
 *
 * Copyright (C) 2007 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Some audio sources may require a boosted CPU  audio_cpu_boost  AUDIO_CPU_BOOST *
 * Selects an audio source for recording or playback
 * powers/unpowers related devices and sets up monitoring.
 * Do power up/down of associated device(s) ** SPDIF * Always boost for SPDIF  AUDIO_CPU_BOOST  Check if S/PDIF output power should be switched off or on. NOTE: assumes
       both optical in and out is controlled by the same power source, which is
       the case on H1x0.  HAVE_SPDIF_POWER  Set the appropriate feed for spdif output  HAVE_SPDIF_OUT * Tuner * Switch radio off or on per source and flags.  set hardware inputs  audio_set_source *
 * Return SPDIF sample rate index in audio_master_sampr_list. Since we base
 * our reading on the actual SPDIF sample rate (which might be a bit
 * inaccurate), we round off to the closest sample rate that is supported by
 * SPDIF.
  Find which SPDIF sample rate we're closest to.  audio_get_spdif_sample_rate  HAVE_SPDIF_IN  PLATFORM_HOSTED * Sim stubs * audio_cpu_boost  AUDIO_CPU_BOOST  audio_set_output_source  Switch radio off or on per source and flags.  audio_set_input_source  audio_get_spdif_sample_rate  HAVE_SPDIF_IN  PLATFORM_NATIVE  if needed, query jack state  treat any nonzero value as enable **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Audio signal path management APIs
 *
 * Copyright (C) 2007 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Some audio sources may require a boosted CPU  audio_cpu_boost  AUDIO_CPU_BOOST *
 * Selects an audio source for recording or playback
 * powers/unpowers related devices and sets up monitoring.
 * Do power up/down of associated device(s) ** SPDIF * Always boost for SPDIF  AUDIO_CPU_BOOST  Check if S/PDIF output power should be switched off or on. NOTE: assumes
       both optical in and out is controlled by the same power source, which is
       the case on H1x0.  HAVE_SPDIF_POWER  Set the appropriate feed for spdif output  HAVE_SPDIF_OUT * Tuner * Switch radio off or on per source and flags.  set hardware inputs  audio_set_source *
 * Return SPDIF sample rate index in audio_master_sampr_list. Since we base
 * our reading on the actual SPDIF sample rate (which might be a bit
 * inaccurate), we round off to the closest sample rate that is supported by
 * SPDIF.
  Find which SPDIF sample rate we're closest to.  audio_get_spdif_sample_rate  HAVE_SPDIF_IN  PLATFORM_HOSTED * Sim stubs * audio_cpu_boost  AUDIO_CPU_BOOST  audio_set_output_source  Switch radio off or on per source and flags.  audio_set_input_source  audio_get_spdif_sample_rate  HAVE_SPDIF_IN  PLATFORM_NATIVE  if needed, query jack state  treat any nonzero value as enable **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Audio signal path management APIs
 *
 * Copyright (C) 2007 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Some audio sources may require a boosted CPU  audio_cpu_boost  AUDIO_CPU_BOOST *
 * Selects an audio source for recording or playback
 * powers/unpowers related devices and sets up monitoring.
 * Do power up/down of associated device(s) ** SPDIF * Always boost for SPDIF  AUDIO_CPU_BOOST  Check if S/PDIF output power should be switched off or on. NOTE: assumes
       both optical in and out is controlled by the same power source, which is
       the case on H1x0.  HAVE_SPDIF_POWER  Set the appropriate feed for spdif output  HAVE_SPDIF_OUT * Tuner * Switch radio off or on per source and flags.  set hardware inputs  audio_set_source *
 * Return SPDIF sample rate index in audio_master_sampr_list. Since we base
 * our reading on the actual SPDIF sample rate (which might be a bit
 * inaccurate), we round off to the closest sample rate that is supported by
 * SPDIF.
  Find which SPDIF sample rate we're closest to.  audio_get_spdif_sample_rate  HAVE_SPDIF_IN  PLATFORM_HOSTED * Sim stubs * audio_cpu_boost  AUDIO_CPU_BOOST  audio_set_output_source  Switch radio off or on per source and flags.  audio_set_input_source  audio_get_spdif_sample_rate  HAVE_SPDIF_IN  PLATFORM_NATIVE  if needed, query jack state  treat any nonzero value as enable 