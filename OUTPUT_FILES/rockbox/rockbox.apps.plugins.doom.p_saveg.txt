 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Archiving: SaveGame I/O.
 *
 *----------------------------------------------------------------------------- Pads save_p to a 4-byte boundary  so that the load/save works on SGI&Gecko. P_ArchivePlayers killough P_UnArchivePlayers will be set when unarc thinker P_ArchiveWorld killough 3/22/98: fix bug caused by hoisting save_p too early killough 10/98: adjust size for changes below killough killough 3/22/98 do sectors killough 10/98: save full floor & ceiling heights, including fraction needed?   yes -- transfer types needed?   need them -- killough do lines killough 10/98: save full sidedef offsets, preserving fractional scroll offsets P_UnArchiveWorld killough 3/22/98 do sectors killough 10/98: load full floor & ceiling heights, including fractionsjff 2/22/98 now three thinker fields, not two do lines killough 10/98: load full sidedef offsets, including fractions Thinkers phares 9/13/98: Moved this code outside of P_ArchiveThinkers so the thinker indices could be used by the code that saves sector info. killough 2/14/98: count the number of thinkers, and mark each one with its index, using the prev field as a placeholder, since it can be restored later. phares 9/13/98: Moved this code outside of P_ArchiveThinkers so the thinker indices could be used by the code that saves sector info. killough 2/14/98: restore prev pointers P_ArchiveThinkers 2/14/98 killough: substantially modified to fix savegame bugs killough 3/26/98: Save boss brain state check that enough room is available in savegame buffer
    * - killough 2/14/98
    * cph - use number_of_thinkers saved by P_ThinkerToIndex above
     save off the current thinkers killough 2/14/98: convert pointers into indices. Fixes many savegame problems, by properly saving target and tracer fields. Note: we store NULL if the thinker pointed to by these fields is not a mobj thinker. killough 2/14/98: new field: save last known enemy. Prevents monsters from going to sleep after killing monsters and not seeing player anymore. killough 2/14/98: end changes phares phares add a terminating marker killough 9/14/98: save soundtargets killough 9/14/98
 * killough 11/98
 *
 * Same as P_SetTarget() in p_tick.c, except that the target is nullified
 * first, so that no old target's reference count is decreased (when loading
 * savegames, old targets are indices, not really pointers to targets).
  P_UnArchiveThinkers 2/14/98 killough: substantially modified to fix savegame bugs killough 2/14/98: Translation table killough 2/14/98: size of or index into table killough 3/26/98: Load boss brain state remove all the current thinkers killough 2/14/98: count number of thinkers by skipping through them save pointer and skip header killough 2/14/98 skip all entries, adding up count first table entry special: 0 maps to NULL table of pointers restore save pointer read in saved thinkers killough 2/14/98 killough 2/14/98 -- insert pointers to thinkers into table, in order: killough 2/28/98: Fix for falling down into a wall after savegame loaded:      mobj->floorz = mobj->subsector->sector->floorheight;      mobj->ceilingz = mobj->subsector->sector->ceilingheight; killough 2/14/98: adjust target and tracer fields, plus lastenemy field, to correctly point to mobj thinkers. NULL entries automatically handled by first table entry. killough 11/98: use P_SetNewTarget() to set fields phares: added two new fields for Sprite Height problem killough 9/14/98: restore soundtargets free translation table killough 3/26/98: Spawn icon landings: P_ArchiveSpecialsjff 2/22/98 new elevator type thinker killough 3/7/98: new scroll effect thinker phares 3/22/98:  new push/pull effect thinker killough 10/4/98 Things to handle: T_MoveCeiling, (ceiling_t: sector_t * swizzle), - active list T_VerticalDoor, (vldoor_t: sector_t * swizzle), T_MoveFloor, (floormove_t: sector_t * swizzle), T_LightFlash, (lightflash_t: sector_t * swizzle), T_StrobeFlash, (strobe_t: sector_t *), T_Glow, (glow_t: sector_t *), T_PlatRaise, (plat_t: sector_t *), - active list T_MoveElevator, (plat_t: sector_t *), - active list      // jff 2/22/98 T_Scroll                                                 // killough 3/7/98 T_Pusher                                                 // phares 3/22/98 T_FireFlicker                                            // killough 10/4/98 killough save off the current thinkers (memory size calculation -- killough)jff 2/22/98 need this for ceilings too now killough 2/14/98 search for activeceilingjff 2/22/98 killough save off the current thinkersjff 2/22/98 add iter variable for ceilings killough 2/8/98: fix plat original height bug. Since acv==NULL, this could be a plat in stasis. so check the active plats list, and save this plat (jff: or ceiling) even if it is in stasis. killough 2/14/98jff 2/22/98 killough 2/14/98jff 1/31/98 archive line remembered by door as well killough 2/14/98: added fix for original plat height above killough 10/4/98: save flickersjff 2/22/98 new case for elevatorsjff 2/22/98 killough 3/7/98: Scroll effect thinkers phares 3/22/98: Push/Pull effect thinkers add a terminating marker P_UnArchiveSpecials read in saved thinkers killough 2/14/98jff 2/22/98jff 1/31/98 unarchive line remembered by door as welljff 2/22/98jff 2/22/98jff 2/22/98 killough 10/4/98jff 2/22/98 new case for elevatorsjff 2/22/98jff 2/22/98 killough 3/7/98: scroll effect thinkers phares 3/22/98: new Push/Pull effect thinkers killough 2/16/98: save/restore random number generator state information killough 2/22/98: Save/restore automap state killough 2/22/98: Save/restore automap state CPhipps - used to be viewactive, now that's worked out locally by D_Display CPhipps - used to be followplayer  that is now part of automapmode CPhipps - used to be automap_grid, ditto Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Archiving: SaveGame I/O.
 *
 *----------------------------------------------------------------------------- Pads save_p to a 4-byte boundary  so that the load/save works on SGI&Gecko. P_ArchivePlayers killough P_UnArchivePlayers will be set when unarc thinker P_ArchiveWorld killough 3/22/98: fix bug caused by hoisting save_p too early killough 10/98: adjust size for changes below killough killough 3/22/98 do sectors killough 10/98: save full floor & ceiling heights, including fraction needed?   yes -- transfer types needed?   need them -- killough do lines killough 10/98: save full sidedef offsets, preserving fractional scroll offsets P_UnArchiveWorld killough 3/22/98 do sectors killough 10/98: load full floor & ceiling heights, including fractionsjff 2/22/98 now three thinker fields, not two do lines killough 10/98: load full sidedef offsets, including fractions Thinkers phares 9/13/98: Moved this code outside of P_ArchiveThinkers so the thinker indices could be used by the code that saves sector info. killough 2/14/98: count the number of thinkers, and mark each one with its index, using the prev field as a placeholder, since it can be restored later. phares 9/13/98: Moved this code outside of P_ArchiveThinkers so the thinker indices could be used by the code that saves sector info. killough 2/14/98: restore prev pointers P_ArchiveThinkers 2/14/98 killough: substantially modified to fix savegame bugs killough 3/26/98: Save boss brain state check that enough room is available in savegame buffer
    * - killough 2/14/98
    * cph - use number_of_thinkers saved by P_ThinkerToIndex above
     save off the current thinkers killough 2/14/98: convert pointers into indices. Fixes many savegame problems, by properly saving target and tracer fields. Note: we store NULL if the thinker pointed to by these fields is not a mobj thinker. killough 2/14/98: new field: save last known enemy. Prevents monsters from going to sleep after killing monsters and not seeing player anymore. killough 2/14/98: end changes phares phares add a terminating marker killough 9/14/98: save soundtargets killough 9/14/98
 * killough 11/98
 *
 * Same as P_SetTarget() in p_tick.c, except that the target is nullified
 * first, so that no old target's reference count is decreased (when loading
 * savegames, old targets are indices, not really pointers to targets).
  P_UnArchiveThinkers 2/14/98 killough: substantially modified to fix savegame bugs killough 2/14/98: Translation table killough 2/14/98: size of or index into table killough 3/26/98: Load boss brain state remove all the current thinkers killough 2/14/98: count number of thinkers by skipping through them save pointer and skip header killough 2/14/98 skip all entries, adding up count first table entry special: 0 maps to NULL table of pointers restore save pointer read in saved thinkers killough 2/14/98 killough 2/14/98 -- insert pointers to thinkers into table, in order: killough 2/28/98: Fix for falling down into a wall after savegame loaded:      mobj->floorz = mobj->subsector->sector->floorheight;      mobj->ceilingz = mobj->subsector->sector->ceilingheight; killough 2/14/98: adjust target and tracer fields, plus lastenemy field, to correctly point to mobj thinkers. NULL entries automatically handled by first table entry. killough 11/98: use P_SetNewTarget() to set fields phares: added two new fields for Sprite Height problem killough 9/14/98: restore soundtargets free translation table killough 3/26/98: Spawn icon landings: P_ArchiveSpecialsjff 2/22/98 new elevator type thinker killough 3/7/98: new scroll effect thinker phares 3/22/98:  new push/pull effect thinker killough 10/4/98 Things to handle: T_MoveCeiling, (ceiling_t: sector_t * swizzle), - active list T_VerticalDoor, (vldoor_t: sector_t * swizzle), T_MoveFloor, (floormove_t: sector_t * swizzle), T_LightFlash, (lightflash_t: sector_t * swizzle), T_StrobeFlash, (strobe_t: sector_t *), T_Glow, (glow_t: sector_t *), T_PlatRaise, (plat_t: sector_t *), - active list T_MoveElevator, (plat_t: sector_t *), - active list      // jff 2/22/98 T_Scroll                                                 // killough 3/7/98 T_Pusher                                                 // phares 3/22/98 T_FireFlicker                                            // killough 10/4/98 killough save off the current thinkers (memory size calculation -- killough)jff 2/22/98 need this for ceilings too now killough 2/14/98 search for activeceilingjff 2/22/98 killough save off the current thinkersjff 2/22/98 add iter variable for ceilings killough 2/8/98: fix plat original height bug. Since acv==NULL, this could be a plat in stasis. so check the active plats list, and save this plat (jff: or ceiling) even if it is in stasis. killough 2/14/98jff 2/22/98 killough 2/14/98jff 1/31/98 archive line remembered by door as well killough 2/14/98: added fix for original plat height above killough 10/4/98: save flickersjff 2/22/98 new case for elevatorsjff 2/22/98 killough 3/7/98: Scroll effect thinkers phares 3/22/98: Push/Pull effect thinkers add a terminating marker P_UnArchiveSpecials read in saved thinkers killough 2/14/98jff 2/22/98jff 1/31/98 unarchive line remembered by door as welljff 2/22/98jff 2/22/98jff 2/22/98 killough 10/4/98jff 2/22/98 new case for elevatorsjff 2/22/98jff 2/22/98 killough 3/7/98: scroll effect thinkers phares 3/22/98: new Push/Pull effect thinkers killough 2/16/98: save/restore random number generator state information killough 2/22/98: Save/restore automap state killough 2/22/98: Save/restore automap state CPhipps - used to be viewactive, now that's worked out locally by D_Display CPhipps - used to be followplayer  that is now part of automapmode CPhipps - used to be automap_grid, ditto Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      Archiving: SaveGame I/O.
 *
 *----------------------------------------------------------------------------- Pads save_p to a 4-byte boundary  so that the load/save works on SGI&Gecko. P_ArchivePlayers killough P_UnArchivePlayers will be set when unarc thinker P_ArchiveWorld killough 3/22/98: fix bug caused by hoisting save_p too early killough 10/98: adjust size for changes below killough killough 3/22/98 do sectors killough 10/98: save full floor & ceiling heights, including fraction needed?   yes -- transfer types needed?   need them -- killough do lines killough 10/98: save full sidedef offsets, preserving fractional scroll offsets P_UnArchiveWorld killough 3/22/98 do sectors killough 10/98: load full floor & ceiling heights, including fractionsjff 2/22/98 now three thinker fields, not two do lines killough 10/98: load full sidedef offsets, including fractions Thinkers phares 9/13/98: Moved this code outside of P_ArchiveThinkers so the thinker indices could be used by the code that saves sector info. killough 2/14/98: count the number of thinkers, and mark each one with its index, using the prev field as a placeholder, since it can be restored later. phares 9/13/98: Moved this code outside of P_ArchiveThinkers so the thinker indices could be used by the code that saves sector info. killough 2/14/98: restore prev pointers P_ArchiveThinkers 2/14/98 killough: substantially modified to fix savegame bugs killough 3/26/98: Save boss brain state check that enough room is available in savegame buffer
    * - killough 2/14/98
    * cph - use number_of_thinkers saved by P_ThinkerToIndex above
     save off the current thinkers killough 2/14/98: convert pointers into indices. Fixes many savegame problems, by properly saving target and tracer fields. Note: we store NULL if the thinker pointed to by these fields is not a mobj thinker. killough 2/14/98: new field: save last known enemy. Prevents monsters from going to sleep after killing monsters and not seeing player anymore. killough 2/14/98: end changes phares phares add a terminating marker killough 9/14/98: save soundtargets killough 9/14/98
 * killough 11/98
 *
 * Same as P_SetTarget() in p_tick.c, except that the target is nullified
 * first, so that no old target's reference count is decreased (when loading
 * savegames, old targets are indices, not really pointers to targets).
  P_UnArchiveThinkers 2/14/98 killough: substantially modified to fix savegame bugs killough 2/14/98: Translation table killough 2/14/98: size of or index into table killough 3/26/98: Load boss brain state remove all the current thinkers killough 2/14/98: count number of thinkers by skipping through them save pointer and skip header killough 2/14/98 skip all entries, adding up count first table entry special: 0 maps to NULL table of pointers restore save pointer read in saved thinkers killough 2/14/98 killough 2/14/98 -- insert pointers to thinkers into table, in order: killough 2/28/98: Fix for falling down into a wall after savegame loaded:      mobj->floorz = mobj->subsector->sector->floorheight;      mobj->ceilingz = mobj->subsector->sector->ceilingheight; killough 2/14/98: adjust target and tracer fields, plus lastenemy field, to correctly point to mobj thinkers. NULL entries automatically handled by first table entry. killough 11/98: use P_SetNewTarget() to set fields phares: added two new fields for Sprite Height problem killough 9/14/98: restore soundtargets free translation table killough 3/26/98: Spawn icon landings: P_ArchiveSpecialsjff 2/22/98 new elevator type thinker killough 3/7/98: new scroll effect thinker phares 3/22/98:  new push/pull effect thinker killough 10/4/98 Things to handle: T_MoveCeiling, (ceiling_t: sector_t * swizzle), - active list T_VerticalDoor, (vldoor_t: sector_t * swizzle), T_MoveFloor, (floormove_t: sector_t * swizzle), T_LightFlash, (lightflash_t: sector_t * swizzle), T_StrobeFlash, (strobe_t: sector_t *), T_Glow, (glow_t: sector_t *), T_PlatRaise, (plat_t: sector_t *), - active list T_MoveElevator, (plat_t: sector_t *), - active list      // jff 2/22/98 T_Scroll                                                 // killough 3/7/98 T_Pusher                                                 // phares 3/22/98 T_FireFlicker                                            // killough 10/4/98 killough save off the current thinkers (memory size calculation -- killough)jff 2/22/98 need this for ceilings too now killough 2/14/98 search for activeceilingjff 2/22/98 killough save off the current thinkersjff 2/22/98 add iter variable for ceilings killough 2/8/98: fix plat original height bug. Since acv==NULL, this could be a plat in stasis. so check the active plats list, and save this plat (jff: or ceiling) even if it is in stasis. killough 2/14/98jff 2/22/98 killough 2/14/98jff 1/31/98 archive line remembered by door as well killough 2/14/98: added fix for original plat height above killough 10/4/98: save flickersjff 2/22/98 new case for elevatorsjff 2/22/98 killough 3/7/98: Scroll effect thinkers phares 3/22/98: Push/Pull effect thinkers add a terminating marker P_UnArchiveSpecials read in saved thinkers killough 2/14/98jff 2/22/98jff 1/31/98 unarchive line remembered by door as welljff 2/22/98jff 2/22/98jff 2/22/98 killough 10/4/98jff 2/22/98 new case for elevatorsjff 2/22/98jff 2/22/98 killough 3/7/98: scroll effect thinkers phares 3/22/98: new Push/Pull effect thinkers killough 2/16/98: save/restore random number generator state information killough 2/22/98: Save/restore automap state killough 2/22/98: Save/restore automap state CPhipps - used to be viewactive, now that's worked out locally by D_Display CPhipps - used to be followplayer  that is now part of automapmode CPhipps - used to be automap_grid, ditto