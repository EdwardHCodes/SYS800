**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Thom Johansen
 * Copyright (C) 2010 Bertrik Sikken
 * Copyright (C) 2012 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Implemented here or in target assembly code *
 * Applies crossfeed to the stereo signal.
 *
 * Crossfeed is a process where listening over speakers is simulated. This
 * is good for old hard panned stereo records, which might be quite fatiguing
 * to listen to on headphones with no crossfeed.
  ~300 uS  Crossfeed  Data for meier crossfeed  00h: Reserved: overlaps gain  04h: Left filter output  08h: Right filter output  0ch: L-R difference signal  10h: Left/right filter coef  14h: Crossfeed filter coef  Data for custom crossfeed  00h: Direct path gain  04h: Filter coefficients: b0, b1, a1  10h: Format is x[n - 1], y[n - 1] (L + R)  20h: Current pointer into the delay line  24h: Current max pointer of delay line  28h: Delay line buffer (L + R interleaved)  Target-dependent size  Cached custom settings  Discard the sample histories  1 / (F.Rforward.C)  1 / (F.Rcross.C)  Divide cutoff by sqrt(10^(hf_gain/20)) to place cutoff at the -3 dB
     * point instead of shelf midpoint. This is for compatibility with the old
     * crossfeed shelf filter and should be removed if crossfeed settings are
     * ever made incompatible for any other good reason.
      Scale coefs by LF gain and shift them to s0.31 format. We have no gains
     * over 1 and can do this safely
     * DSP interface * Set the type of crossfeed to use  No change  Set the gain of the dry mix  Both gains should be below 0 dB  Apply the crossfade to the buffer in place  Filter delayed sample from left speaker  Save filter history for left speaker  Filter delayed sample from right speaker  Save filter history for right speaker  Now add the attenuated direct sound and write to outputs  Wrap delay line index if bigger than delay line size  Write back local copies of data we've modified  CPU *
 * Implementation of the "simple" passive crossfeed circuit by Jan Meier.
 * See also: http://www.meier-audio.homepage.t-online.de/passivefilter.htm
  Get filter state  Calculate new output  Update filter state  Store filter state  CPU  Update the processing function according to crossfeed type  Set proper function  Crossfeed boot/format change function  Going online  Can't do this. Sleep until next change  DSP message hook  Database entry **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Thom Johansen
 * Copyright (C) 2010 Bertrik Sikken
 * Copyright (C) 2012 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Implemented here or in target assembly code *
 * Applies crossfeed to the stereo signal.
 *
 * Crossfeed is a process where listening over speakers is simulated. This
 * is good for old hard panned stereo records, which might be quite fatiguing
 * to listen to on headphones with no crossfeed.
  ~300 uS  Crossfeed  Data for meier crossfeed  00h: Reserved: overlaps gain  04h: Left filter output  08h: Right filter output  0ch: L-R difference signal  10h: Left/right filter coef  14h: Crossfeed filter coef  Data for custom crossfeed  00h: Direct path gain  04h: Filter coefficients: b0, b1, a1  10h: Format is x[n - 1], y[n - 1] (L + R)  20h: Current pointer into the delay line  24h: Current max pointer of delay line  28h: Delay line buffer (L + R interleaved)  Target-dependent size  Cached custom settings  Discard the sample histories  1 / (F.Rforward.C)  1 / (F.Rcross.C)  Divide cutoff by sqrt(10^(hf_gain/20)) to place cutoff at the -3 dB
     * point instead of shelf midpoint. This is for compatibility with the old
     * crossfeed shelf filter and should be removed if crossfeed settings are
     * ever made incompatible for any other good reason.
      Scale coefs by LF gain and shift them to s0.31 format. We have no gains
     * over 1 and can do this safely
     * DSP interface * Set the type of crossfeed to use  No change  Set the gain of the dry mix  Both gains should be below 0 dB  Apply the crossfade to the buffer in place  Filter delayed sample from left speaker  Save filter history for left speaker  Filter delayed sample from right speaker  Save filter history for right speaker  Now add the attenuated direct sound and write to outputs  Wrap delay line index if bigger than delay line size  Write back local copies of data we've modified  CPU *
 * Implementation of the "simple" passive crossfeed circuit by Jan Meier.
 * See also: http://www.meier-audio.homepage.t-online.de/passivefilter.htm
  Get filter state  Calculate new output  Update filter state  Store filter state  CPU  Update the processing function according to crossfeed type  Set proper function  Crossfeed boot/format change function  Going online  Can't do this. Sleep until next change  DSP message hook  Database entry **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Thom Johansen
 * Copyright (C) 2010 Bertrik Sikken
 * Copyright (C) 2012 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Implemented here or in target assembly code *
 * Applies crossfeed to the stereo signal.
 *
 * Crossfeed is a process where listening over speakers is simulated. This
 * is good for old hard panned stereo records, which might be quite fatiguing
 * to listen to on headphones with no crossfeed.
  ~300 uS  Crossfeed  Data for meier crossfeed  00h: Reserved: overlaps gain  04h: Left filter output  08h: Right filter output  0ch: L-R difference signal  10h: Left/right filter coef  14h: Crossfeed filter coef  Data for custom crossfeed  00h: Direct path gain  04h: Filter coefficients: b0, b1, a1  10h: Format is x[n - 1], y[n - 1] (L + R)  20h: Current pointer into the delay line  24h: Current max pointer of delay line  28h: Delay line buffer (L + R interleaved)  Target-dependent size  Cached custom settings  Discard the sample histories  1 / (F.Rforward.C)  1 / (F.Rcross.C)  Divide cutoff by sqrt(10^(hf_gain/20)) to place cutoff at the -3 dB
     * point instead of shelf midpoint. This is for compatibility with the old
     * crossfeed shelf filter and should be removed if crossfeed settings are
     * ever made incompatible for any other good reason.
      Scale coefs by LF gain and shift them to s0.31 format. We have no gains
     * over 1 and can do this safely
     * DSP interface * Set the type of crossfeed to use  No change  Set the gain of the dry mix  Both gains should be below 0 dB  Apply the crossfade to the buffer in place  Filter delayed sample from left speaker  Save filter history for left speaker  Filter delayed sample from right speaker  Save filter history for right speaker  Now add the attenuated direct sound and write to outputs  Wrap delay line index if bigger than delay line size  Write back local copies of data we've modified  CPU *
 * Implementation of the "simple" passive crossfeed circuit by Jan Meier.
 * See also: http://www.meier-audio.homepage.t-online.de/passivefilter.htm
  Get filter state  Calculate new output  Update filter state  Store filter state  CPU  Update the processing function according to crossfeed type  Set proper function  Crossfeed boot/format change function  Going online  Can't do this. Sleep until next change  DSP message hook  Database entry 