**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © Amaury Pouly 2011
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** {Action Code,    Button code,    Prereq button code } 
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code }
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping
   { ACTION_STD_REC,                   BUTTON_REC|BUTTON_REPEAT,          BUTTON_REC },   on some gesture later? button_context_standard   Playlist should be hard linked on BOTTOMRIGHT and hotkey move to some gesture in the future
    { ACTION_WPS_VIEW_PLAYLIST,         BUTTON_BACK|BUTTON_DOWN,           BUTTON_NONE },
    { ACTION_WPS_ABSETB_NEXTDIR,        BUTTON_BACK|BUTTON_RIGHT,          BUTTON_BACK },
    { ACTION_WPS_ABSETA_PREVDIR,        BUTTON_BACK|BUTTON_LEFT,           BUTTON_BACK },
    { ACTION_WPS_ABRESET,               BUTTON_BACK|BUTTON_SELECT,         BUTTON_BACK },
     on some gesture later?  button_context_wps  button_context_keyboard  button_context_quickscreen  button_context_tree   { ACTION_LISTTREE_PGUP,             BUTTON_BOTTOMLEFT,                 BUTTON_NONE },  { ACTION_LISTTREE_PGDOWN,           BUTTON_BOTTOMRIGHT,                BUTTON_NONE },on some gesture later? button_context_list  button_context_radio  button_context_recscreen  we overwrite this to avoid select from std  button_context_settings  button_context_settingsgraphical  button_context_time  button_context_colorchooser  button_context_eq  Bookmark Screen  button_context_bmark  button_context_pitchcreen  button_context_yesno  button_context_usb_hid  button_context_usb_hid_mode_multimedia  button_context_usb_hid_mode_presentation  button_context_usb_hid_mode_browser  button_context_usb_hid_mode_mouse  get_context_mapping returns a pointer to one of the above defined arrays depending on the context **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © Amaury Pouly 2011
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** {Action Code,    Button code,    Prereq button code } 
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code }
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping
   { ACTION_STD_REC,                   BUTTON_REC|BUTTON_REPEAT,          BUTTON_REC },   on some gesture later? button_context_standard   Playlist should be hard linked on BOTTOMRIGHT and hotkey move to some gesture in the future
    { ACTION_WPS_VIEW_PLAYLIST,         BUTTON_BACK|BUTTON_DOWN,           BUTTON_NONE },
    { ACTION_WPS_ABSETB_NEXTDIR,        BUTTON_BACK|BUTTON_RIGHT,          BUTTON_BACK },
    { ACTION_WPS_ABSETA_PREVDIR,        BUTTON_BACK|BUTTON_LEFT,           BUTTON_BACK },
    { ACTION_WPS_ABRESET,               BUTTON_BACK|BUTTON_SELECT,         BUTTON_BACK },
     on some gesture later?  button_context_wps  button_context_keyboard  button_context_quickscreen  button_context_tree   { ACTION_LISTTREE_PGUP,             BUTTON_BOTTOMLEFT,                 BUTTON_NONE },  { ACTION_LISTTREE_PGDOWN,           BUTTON_BOTTOMRIGHT,                BUTTON_NONE },on some gesture later? button_context_list  button_context_radio  button_context_recscreen  we overwrite this to avoid select from std  button_context_settings  button_context_settingsgraphical  button_context_time  button_context_colorchooser  button_context_eq  Bookmark Screen  button_context_bmark  button_context_pitchcreen  button_context_yesno  button_context_usb_hid  button_context_usb_hid_mode_multimedia  button_context_usb_hid_mode_presentation  button_context_usb_hid_mode_browser  button_context_usb_hid_mode_mouse  get_context_mapping returns a pointer to one of the above defined arrays depending on the context **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright © Amaury Pouly 2011
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** {Action Code,    Button code,    Prereq button code } 
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code }
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping
   { ACTION_STD_REC,                   BUTTON_REC|BUTTON_REPEAT,          BUTTON_REC },   on some gesture later? button_context_standard   Playlist should be hard linked on BOTTOMRIGHT and hotkey move to some gesture in the future
    { ACTION_WPS_VIEW_PLAYLIST,         BUTTON_BACK|BUTTON_DOWN,           BUTTON_NONE },
    { ACTION_WPS_ABSETB_NEXTDIR,        BUTTON_BACK|BUTTON_RIGHT,          BUTTON_BACK },
    { ACTION_WPS_ABSETA_PREVDIR,        BUTTON_BACK|BUTTON_LEFT,           BUTTON_BACK },
    { ACTION_WPS_ABRESET,               BUTTON_BACK|BUTTON_SELECT,         BUTTON_BACK },
     on some gesture later?  button_context_wps  button_context_keyboard  button_context_quickscreen  button_context_tree   { ACTION_LISTTREE_PGUP,             BUTTON_BOTTOMLEFT,                 BUTTON_NONE },  { ACTION_LISTTREE_PGDOWN,           BUTTON_BOTTOMRIGHT,                BUTTON_NONE },on some gesture later? button_context_list  button_context_radio  button_context_recscreen  we overwrite this to avoid select from std  button_context_settings  button_context_settingsgraphical  button_context_time  button_context_colorchooser  button_context_eq  Bookmark Screen  button_context_bmark  button_context_pitchcreen  button_context_yesno  button_context_usb_hid  button_context_usb_hid_mode_multimedia  button_context_usb_hid_mode_presentation  button_context_usb_hid_mode_browser  button_context_usb_hid_mode_mouse  get_context_mapping returns a pointer to one of the above defined arrays depending on the context 