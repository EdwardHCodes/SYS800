*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
*****************************************************************************
**
** FILE NAME    : ifxmips_deu_vr9.c
** PROJECT      : IFX UEIP
** MODULES      : DEU Module for VR9
**
** DATE         : September 8, 2009
** AUTHOR       : Mohammad Firdaus
** DESCRIPTION  : Data Encryption Unit Driver
** COPYRIGHT    :       Copyright (c) 2009
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author             $Comment
** 08,Sept 2009 Mohammad Firdaus    Initial UEIP release
******************************************************************************!
  \defgroup  IFX_DEU IFX_DEU_DRIVERS
  \ingroup  API
  \brief deu driver module
!
  \file		ifxmips_deu_vr9.c
  \ingroup 	IFX_DEU
  \brief 	board specific deu driver file for vr9
!
  \defgroup   BOARD_SPECIFIC_FUNCTIONS IFX_BOARD_SPECIFIC_FUNCTIONS
  \ingroup IFX_DEU
  \brief board specific deu driver functions
 Project header files dma_cache_inv Function decleration  Variables ! \fn u32 endian_swap(u32 input) 
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Swap data given to the function 
 *  \param input Data input to be swapped
 *  \return either the swapped data or the input data depending on whether it is in DMA mode or FPI mode
! \fn u32 input_swap(u32 input)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief Not used  
 *  \return input
! \fn void aes_chip_init (void)
 *  \ingroup BOARD_SPECIFIC_FUNCTIONS
 *  \brief initialize AES hardware   
 start crypto engine with write to ILR! \fn void des_chip_init (void)
 *  \ingroup IFX_AES_FUNCTIONS
 *  \brief initialize DES hardware
 start crypto engine with write to ILR! \fn void chip_version(void)
 *  \ingroup IFX_DES_FUNCTIONS
 *  \brief function not used in VR9
