**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2011 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE charger state is maintained in charge_state (see powermgmt.h)  timeout before charging will be declared broken  timeout before stopping charging after topping off  Returns battery voltage from ADC [millivolts]  battery value is in 8mV LSB  assume that adc_init was called and battery monitoring via LRADC setup  setup linear regulator offsets to 25 mV below to prevent contention between
     * linear regulators and DCDC  enable a few bits controlling the DC-DC as recommended by Freescale  The code below assumes HZ = 100 so that it runs every 10ms  only ramp up in the TRICKLE state and if we haven't reached the maximum yet  IMX233_SUBTARGET >= 3780  stmp < 3780 does not have a 4.2 rail  initial state & 5v -> battery transition  5V has been lost: disable 4p2 power rail  battery -> 5v transition  5V has been detected: prepare 4.2V power rail for activation
         * WARNING we can reach this situation when starting after Freescale bootloader
         * or after RoLo in a state where the DCDC is running. In this case,
         * we must *NOT* disable it or this will shutdown the device. This procedure
         * is safe: it will never disable the DCDC and will not reduce the charge
         * limit on the 4P2 rail.  start by drawing 0mA  FIXME: manual error ? the tick task will take care of slowly ramping up the current in the rail
         * every 10ms (since it runs at HZ and HZ=100)  trickle -> charging transition  If 4.2V current limit has not reached 780mA, don't do anything, the
         * DPC is still running  If we've reached the maximum, take action  adjust arbitration between 4.2 and battery  85%  select greater, 200 mV drop  switch to DCDC  enable battery charging  charging -> error transition  we have charged for a too long time, declare charger broken  stop charging, note that we leave the 4.2 rail active so that the DCDC
         * keep drawing current from the 4.2 only and leave the battery untouched  goto error state  charging -> topoff transition  topoff -> disabled transition  stop charging, note that we leave the 4.2 rail active so that the DCDC
         * keep drawing current from the 4.2 only and leave the battery untouched **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2011 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE charger state is maintained in charge_state (see powermgmt.h)  timeout before charging will be declared broken  timeout before stopping charging after topping off  Returns battery voltage from ADC [millivolts]  battery value is in 8mV LSB  assume that adc_init was called and battery monitoring via LRADC setup  setup linear regulator offsets to 25 mV below to prevent contention between
     * linear regulators and DCDC  enable a few bits controlling the DC-DC as recommended by Freescale  The code below assumes HZ = 100 so that it runs every 10ms  only ramp up in the TRICKLE state and if we haven't reached the maximum yet  IMX233_SUBTARGET >= 3780  stmp < 3780 does not have a 4.2 rail  initial state & 5v -> battery transition  5V has been lost: disable 4p2 power rail  battery -> 5v transition  5V has been detected: prepare 4.2V power rail for activation
         * WARNING we can reach this situation when starting after Freescale bootloader
         * or after RoLo in a state where the DCDC is running. In this case,
         * we must *NOT* disable it or this will shutdown the device. This procedure
         * is safe: it will never disable the DCDC and will not reduce the charge
         * limit on the 4P2 rail.  start by drawing 0mA  FIXME: manual error ? the tick task will take care of slowly ramping up the current in the rail
         * every 10ms (since it runs at HZ and HZ=100)  trickle -> charging transition  If 4.2V current limit has not reached 780mA, don't do anything, the
         * DPC is still running  If we've reached the maximum, take action  adjust arbitration between 4.2 and battery  85%  select greater, 200 mV drop  switch to DCDC  enable battery charging  charging -> error transition  we have charged for a too long time, declare charger broken  stop charging, note that we leave the 4.2 rail active so that the DCDC
         * keep drawing current from the 4.2 only and leave the battery untouched  goto error state  charging -> topoff transition  topoff -> disabled transition  stop charging, note that we leave the 4.2 rail active so that the DCDC
         * keep drawing current from the 4.2 only and leave the battery untouched **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2011 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************#define LOGF_ENABLE charger state is maintained in charge_state (see powermgmt.h)  timeout before charging will be declared broken  timeout before stopping charging after topping off  Returns battery voltage from ADC [millivolts]  battery value is in 8mV LSB  assume that adc_init was called and battery monitoring via LRADC setup  setup linear regulator offsets to 25 mV below to prevent contention between
     * linear regulators and DCDC  enable a few bits controlling the DC-DC as recommended by Freescale  The code below assumes HZ = 100 so that it runs every 10ms  only ramp up in the TRICKLE state and if we haven't reached the maximum yet  IMX233_SUBTARGET >= 3780  stmp < 3780 does not have a 4.2 rail  initial state & 5v -> battery transition  5V has been lost: disable 4p2 power rail  battery -> 5v transition  5V has been detected: prepare 4.2V power rail for activation
         * WARNING we can reach this situation when starting after Freescale bootloader
         * or after RoLo in a state where the DCDC is running. In this case,
         * we must *NOT* disable it or this will shutdown the device. This procedure
         * is safe: it will never disable the DCDC and will not reduce the charge
         * limit on the 4P2 rail.  start by drawing 0mA  FIXME: manual error ? the tick task will take care of slowly ramping up the current in the rail
         * every 10ms (since it runs at HZ and HZ=100)  trickle -> charging transition  If 4.2V current limit has not reached 780mA, don't do anything, the
         * DPC is still running  If we've reached the maximum, take action  adjust arbitration between 4.2 and battery  85%  select greater, 200 mV drop  switch to DCDC  enable battery charging  charging -> error transition  we have charged for a too long time, declare charger broken  stop charging, note that we leave the 4.2 rail active so that the DCDC
         * keep drawing current from the 4.2 only and leave the battery untouched  goto error state  charging -> topoff transition  topoff -> disabled transition  stop charging, note that we leave the 4.2 rail active so that the DCDC
         * keep drawing current from the 4.2 only and leave the battery untouched 