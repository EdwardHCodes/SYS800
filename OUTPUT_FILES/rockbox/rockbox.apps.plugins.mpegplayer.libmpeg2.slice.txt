
 * slice.c
 * Copyright (C) 2000-2003 Michel Lespinasse <walken@zoy.org>
 * Copyright (C) 2003      Peter Gubanov <peter@elecard.net.ru>
 * Copyright (C) 1999-2000 Aaron Holtzman <aholtzma@ess.engr.uvic.ca>
 *
 * This file is part of mpeg2dec, a free MPEG-2 video stream decoder.
 * See http://libmpeg2.sourceforge.net/ for updates.
 *
 * mpeg2dec is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * mpeg2dec is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 * libmpeg2 sync history:
 * 2008-07-01 - CVS revision 1.55
  if (! (macroblock_modes & MACROBLOCK_INTRA))  MPEG2_COLOR  end of block  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  if (bitstream_get (1)) val = -val;  end of block. I commented out this code because if we  dont exit here we will still exit at the later test :)  if (i >= 128) break;         end of block  escape code  illegal, check against buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  oddification  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  oddification  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  oddification  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  oddification  illegal, check needed to avoid buffer overflow  dump end of block code  Get the intra DC coefficient and inverse quantize it  end of block  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  escape code  illegal, check needed to avoid buffer overflow  Can't dump more than 16 atm  illegal, check needed to avoid buffer overflow  dump end of block code  end of block. I commented out this code because if we  dont exit here we will still exit at the later test :)  if (i >= 128) break;         end of block  escape code  illegal, check against buffer overflow  Can't dump more than 16 atm  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  !MPEG2_COLOR  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  like motion_frame, but parsing without actual motion compensation  remove marker_bit  remove field_select  remove marker_bit  just so we can use the break statement  ignore intra_slice and all the extra data  decode initial macroblock address increment  macroblock_escape  macroblock_stuffing (MPEG1 only)  error  maybe integrate MACROBLOCK_QUANT test into get_macroblock_modes ?  MPEG2_COLOR  MPEG2_COLOR  MPEG2_COLOR  MPEG2_COLOR  macroblock_escape  pass through  macroblock_stuffing (MPEG1 only)  end of slice, or error 
 * slice.c
 * Copyright (C) 2000-2003 Michel Lespinasse <walken@zoy.org>
 * Copyright (C) 2003      Peter Gubanov <peter@elecard.net.ru>
 * Copyright (C) 1999-2000 Aaron Holtzman <aholtzma@ess.engr.uvic.ca>
 *
 * This file is part of mpeg2dec, a free MPEG-2 video stream decoder.
 * See http://libmpeg2.sourceforge.net/ for updates.
 *
 * mpeg2dec is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * mpeg2dec is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 * libmpeg2 sync history:
 * 2008-07-01 - CVS revision 1.55
  if (! (macroblock_modes & MACROBLOCK_INTRA))  MPEG2_COLOR  end of block  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  if (bitstream_get (1)) val = -val;  end of block. I commented out this code because if we  dont exit here we will still exit at the later test :)  if (i >= 128) break;         end of block  escape code  illegal, check against buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  oddification  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  oddification  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  oddification  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  oddification  illegal, check needed to avoid buffer overflow  dump end of block code  Get the intra DC coefficient and inverse quantize it  end of block  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  escape code  illegal, check needed to avoid buffer overflow  Can't dump more than 16 atm  illegal, check needed to avoid buffer overflow  dump end of block code  end of block. I commented out this code because if we  dont exit here we will still exit at the later test :)  if (i >= 128) break;         end of block  escape code  illegal, check against buffer overflow  Can't dump more than 16 atm  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  !MPEG2_COLOR  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  like motion_frame, but parsing without actual motion compensation  remove marker_bit  remove field_select  remove marker_bit  just so we can use the break statement  ignore intra_slice and all the extra data  decode initial macroblock address increment  macroblock_escape  macroblock_stuffing (MPEG1 only)  error  maybe integrate MACROBLOCK_QUANT test into get_macroblock_modes ?  MPEG2_COLOR  MPEG2_COLOR  MPEG2_COLOR  MPEG2_COLOR  macroblock_escape  pass through  macroblock_stuffing (MPEG1 only)  end of slice, or error 
 * slice.c
 * Copyright (C) 2000-2003 Michel Lespinasse <walken@zoy.org>
 * Copyright (C) 2003      Peter Gubanov <peter@elecard.net.ru>
 * Copyright (C) 1999-2000 Aaron Holtzman <aholtzma@ess.engr.uvic.ca>
 *
 * This file is part of mpeg2dec, a free MPEG-2 video stream decoder.
 * See http://libmpeg2.sourceforge.net/ for updates.
 *
 * mpeg2dec is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * mpeg2dec is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 * libmpeg2 sync history:
 * 2008-07-01 - CVS revision 1.55
  if (! (macroblock_modes & MACROBLOCK_INTRA))  MPEG2_COLOR  end of block  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  if (bitstream_get (1)) val = -val;  end of block. I commented out this code because if we  dont exit here we will still exit at the later test :)  if (i >= 128) break;         end of block  escape code  illegal, check against buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  oddification  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  oddification  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  oddification  if (bitstream_get (1)) val = -val;  escape code  illegal, check needed to avoid buffer overflow  oddification  illegal, check needed to avoid buffer overflow  dump end of block code  Get the intra DC coefficient and inverse quantize it  end of block  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  escape code  illegal, check needed to avoid buffer overflow  Can't dump more than 16 atm  illegal, check needed to avoid buffer overflow  dump end of block code  end of block. I commented out this code because if we  dont exit here we will still exit at the later test :)  if (i >= 128) break;         end of block  escape code  illegal, check against buffer overflow  Can't dump more than 16 atm  illegal, check needed to avoid buffer overflow  dump end of block code  end of block  escape code  illegal, check needed to avoid buffer overflow  illegal, check needed to avoid buffer overflow  dump end of block code  !MPEG2_COLOR  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  motion_y = bound_motion_vector (motion_y, motion->f_code[1]);  like motion_frame, but parsing without actual motion compensation  remove marker_bit  remove field_select  remove marker_bit  just so we can use the break statement  ignore intra_slice and all the extra data  decode initial macroblock address increment  macroblock_escape  macroblock_stuffing (MPEG1 only)  error  maybe integrate MACROBLOCK_QUANT test into get_macroblock_modes ?  MPEG2_COLOR  MPEG2_COLOR  MPEG2_COLOR  MPEG2_COLOR  macroblock_escape  pass through  macroblock_stuffing (MPEG1 only)  end of slice, or error 