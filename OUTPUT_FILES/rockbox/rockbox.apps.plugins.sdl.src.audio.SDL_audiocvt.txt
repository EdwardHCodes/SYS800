
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Functions for audio drivers to perform runtime conversion of audio format  Effectively mix right and left channels into a single channel  Discard top 4 channels  Discard top 2 channels of 6  Duplicate a mono channel to both stereo channels  Duplicate a stereo channel to a pseudo-5.1 stream  Duplicate a stereo channel to a pseudo-4.0 stream  Convert 8-bit to 16-bit - LSB  Convert 8-bit to 16-bit - MSB  Convert 16-bit to 8-bit  Little endian  Toggle signed/unsigned  Little endian  Toggle endianness  Convert rate up by multiple of 2  Convert rate up by multiple of 2, for stereo  Convert rate up by multiple of 2, for quad  Convert rate up by multiple of 2, for 5.1  Convert rate down by multiple of 2  Convert rate down by multiple of 2, for stereo  Convert rate down by multiple of 2, for quad  Convert rate down by multiple of 2, for 5.1  Very slow rate conversion routine  Make sure there's data to convert  Return okay if no conversion is necessary  Set up the conversion and go!  Creates a set of audio filters to convert from one format to another. 
   Returns -1 if the format conversion is not supported, or 1 if the
   audio filter is set up.
printf("Build format %04x->%04x, channels %u->%u, rate %d->%d\n",
		src_format, dst_format, src_channels, dst_channels, src_rate, dst_rate); Start off with no conversion necessary  First filter:  Endian conversion from src to dst  Second filter: Sign conversion -- signed/unsigned  Next filter:  Convert 16 bit <--> 8 bit PCM  Last filter:  Mono/Stereo conversion  This assumes that 4 channel audio is in the format:
		     Left {front/back} + Right {front/back}
		   so converting to L/R stereo works properly.
		  Uh oh..  Do rate conversion  If hi_rate = lo_rate*2^x then conversion is easy  We may need a slow conversion here to finish up  The problem with this is that if the input buffer is
			   say 1K, and the conversion rate is say 1.1, then the
			   output buffer is 1.1K, which may not be an acceptable
			   buffer size for the audio driver (not a power of 2)
			 For now, punt and hope the rate distortion isn't great.
			 Set up the filter information 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Functions for audio drivers to perform runtime conversion of audio format  Effectively mix right and left channels into a single channel  Discard top 4 channels  Discard top 2 channels of 6  Duplicate a mono channel to both stereo channels  Duplicate a stereo channel to a pseudo-5.1 stream  Duplicate a stereo channel to a pseudo-4.0 stream  Convert 8-bit to 16-bit - LSB  Convert 8-bit to 16-bit - MSB  Convert 16-bit to 8-bit  Little endian  Toggle signed/unsigned  Little endian  Toggle endianness  Convert rate up by multiple of 2  Convert rate up by multiple of 2, for stereo  Convert rate up by multiple of 2, for quad  Convert rate up by multiple of 2, for 5.1  Convert rate down by multiple of 2  Convert rate down by multiple of 2, for stereo  Convert rate down by multiple of 2, for quad  Convert rate down by multiple of 2, for 5.1  Very slow rate conversion routine  Make sure there's data to convert  Return okay if no conversion is necessary  Set up the conversion and go!  Creates a set of audio filters to convert from one format to another. 
   Returns -1 if the format conversion is not supported, or 1 if the
   audio filter is set up.
printf("Build format %04x->%04x, channels %u->%u, rate %d->%d\n",
		src_format, dst_format, src_channels, dst_channels, src_rate, dst_rate); Start off with no conversion necessary  First filter:  Endian conversion from src to dst  Second filter: Sign conversion -- signed/unsigned  Next filter:  Convert 16 bit <--> 8 bit PCM  Last filter:  Mono/Stereo conversion  This assumes that 4 channel audio is in the format:
		     Left {front/back} + Right {front/back}
		   so converting to L/R stereo works properly.
		  Uh oh..  Do rate conversion  If hi_rate = lo_rate*2^x then conversion is easy  We may need a slow conversion here to finish up  The problem with this is that if the input buffer is
			   say 1K, and the conversion rate is say 1.1, then the
			   output buffer is 1.1K, which may not be an acceptable
			   buffer size for the audio driver (not a power of 2)
			 For now, punt and hope the rate distortion isn't great.
			 Set up the filter information 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Functions for audio drivers to perform runtime conversion of audio format  Effectively mix right and left channels into a single channel  Discard top 4 channels  Discard top 2 channels of 6  Duplicate a mono channel to both stereo channels  Duplicate a stereo channel to a pseudo-5.1 stream  Duplicate a stereo channel to a pseudo-4.0 stream  Convert 8-bit to 16-bit - LSB  Convert 8-bit to 16-bit - MSB  Convert 16-bit to 8-bit  Little endian  Toggle signed/unsigned  Little endian  Toggle endianness  Convert rate up by multiple of 2  Convert rate up by multiple of 2, for stereo  Convert rate up by multiple of 2, for quad  Convert rate up by multiple of 2, for 5.1  Convert rate down by multiple of 2  Convert rate down by multiple of 2, for stereo  Convert rate down by multiple of 2, for quad  Convert rate down by multiple of 2, for 5.1  Very slow rate conversion routine  Make sure there's data to convert  Return okay if no conversion is necessary  Set up the conversion and go!  Creates a set of audio filters to convert from one format to another. 
   Returns -1 if the format conversion is not supported, or 1 if the
   audio filter is set up.
printf("Build format %04x->%04x, channels %u->%u, rate %d->%d\n",
		src_format, dst_format, src_channels, dst_channels, src_rate, dst_rate); Start off with no conversion necessary  First filter:  Endian conversion from src to dst  Second filter: Sign conversion -- signed/unsigned  Next filter:  Convert 16 bit <--> 8 bit PCM  Last filter:  Mono/Stereo conversion  This assumes that 4 channel audio is in the format:
		     Left {front/back} + Right {front/back}
		   so converting to L/R stereo works properly.
		  Uh oh..  Do rate conversion  If hi_rate = lo_rate*2^x then conversion is easy  We may need a slow conversion here to finish up  The problem with this is that if the input buffer is
			   say 1K, and the conversion rate is say 1.1, then the
			   output buffer is 1.1K, which may not be an acceptable
			   buffer size for the audio driver (not a power of 2)
			 For now, punt and hope the rate distortion isn't great.
			 Set up the filter information 