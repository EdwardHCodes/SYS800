**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Greg White
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Show the Rockbox logo - in show_logo.c  Where files sent via MTP are stored  Can use memory after vector table up to 0x01f00000  Firmware data  Show a message + "Shutting down...", then power off the device  TODO: Handle charging while connected  We need full button and backlight handling now  Start the USB driver  Wait for threads to connect or cable is pulled  Hit  Timed out waiting for the connect - will happen when connected
             * to a charger through the USB port  Cable pulled  Switch to verbose mode if not in it so that the status updates
         * are shown  Got the message - wait for disconnect  Sleep a little to let the backlight ramp up  Put drivers initialized for USB connection into a known state  Paranoid but proper  Check for EOF  Parse the size field  Skip rest of header  Make the path absolute  file  directory  Remove the trailing slash  Create the dir  Look for a tar file or rockbox binary in the MTP directory  Check whether the file is a rockbox binary.  Check whether the file is a tar file.  Try to load the firmware and run it  Pause to look at messages  Ignore settings reset  If the disk powers off, the firmware will lock at startup  Put drivers into a known state  Halt  Keep button_device_init early to delay calls to button_read_device  Do USB first since a tar or binary could be added to the MTP directory
     * at the time and we can untar or move after unplugging.  No return **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Greg White
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Show the Rockbox logo - in show_logo.c  Where files sent via MTP are stored  Can use memory after vector table up to 0x01f00000  Firmware data  Show a message + "Shutting down...", then power off the device  TODO: Handle charging while connected  We need full button and backlight handling now  Start the USB driver  Wait for threads to connect or cable is pulled  Hit  Timed out waiting for the connect - will happen when connected
             * to a charger through the USB port  Cable pulled  Switch to verbose mode if not in it so that the status updates
         * are shown  Got the message - wait for disconnect  Sleep a little to let the backlight ramp up  Put drivers initialized for USB connection into a known state  Paranoid but proper  Check for EOF  Parse the size field  Skip rest of header  Make the path absolute  file  directory  Remove the trailing slash  Create the dir  Look for a tar file or rockbox binary in the MTP directory  Check whether the file is a rockbox binary.  Check whether the file is a tar file.  Try to load the firmware and run it  Pause to look at messages  Ignore settings reset  If the disk powers off, the firmware will lock at startup  Put drivers into a known state  Halt  Keep button_device_init early to delay calls to button_read_device  Do USB first since a tar or binary could be added to the MTP directory
     * at the time and we can untar or move after unplugging.  No return **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Greg White
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Show the Rockbox logo - in show_logo.c  Where files sent via MTP are stored  Can use memory after vector table up to 0x01f00000  Firmware data  Show a message + "Shutting down...", then power off the device  TODO: Handle charging while connected  We need full button and backlight handling now  Start the USB driver  Wait for threads to connect or cable is pulled  Hit  Timed out waiting for the connect - will happen when connected
             * to a charger through the USB port  Cable pulled  Switch to verbose mode if not in it so that the status updates
         * are shown  Got the message - wait for disconnect  Sleep a little to let the backlight ramp up  Put drivers initialized for USB connection into a known state  Paranoid but proper  Check for EOF  Parse the size field  Skip rest of header  Make the path absolute  file  directory  Remove the trailing slash  Create the dir  Look for a tar file or rockbox binary in the MTP directory  Check whether the file is a rockbox binary.  Check whether the file is a tar file.  Try to load the firmware and run it  Pause to look at messages  Ignore settings reset  If the disk powers off, the firmware will lock at startup  Put drivers into a known state  Halt  Keep button_device_init early to delay calls to button_read_device  Do USB first since a tar or binary could be added to the MTP directory
     * at the time and we can untar or move after unplugging.  No return 