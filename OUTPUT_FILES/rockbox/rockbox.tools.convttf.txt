**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Jonas Hurrelmann
 *
 * A command-line tool to convert ttf file to bitmap fonts
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Set the default values used to generate a BDF font.
 
 * nameID macros for getting strings from the OT font.
 
 * String names for the string indexes. Used for error messages.
 
 * The default platform and encoding ID's.
 
 * A flag indicating if a CMap was found or not.
  display ttc table if it is not zero.  smooth fonts with gray levels   Try to make digits equally wide  trim descent percent  trim descnet actual   trim ascent  precent  trim ascent  actual   magic number and version bytes  max width in pixels  height in pixels  ascent (baseline) height  depth 0=1-bit, 1=4-bit  first character in font  default character in font  # characters in font  # bytes imagebits data in file  = bits_size  # longs offset data in file  # bytes width data in file  exit the program with given message  print usage information  remove directory prefix and file suffix from full path remove prepended path and extension
     * Get the requested cmap.
     
         * Make a special case when this fails with pid == 3 and eid == 1.
         * Change to eid == 0 and try again.  This captures the two possible
         * cases for MS fonts.  Some other method should be used to cycle
         * through all the alternatives later.
         
             * No CMAP was found.
             
 * quote in otf2bdf.
 * A generic routine to get a name from the OT name table.  This routine
 * always looks for English language names and checks three possibilities:
 * 1. English names with the MS Unicode encoding ID.
 * 2. English names with the MS unknown encoding ID.
 * 3. English names with the Apple Unicode encoding ID.
 *
 * The particular name ID mut be provided (e.g. nameID = 0 for copyright
 * string, nameID = 6 for Postscript name, nameID = 1 for typeface name.
 *
 * If the `dash_to_space' flag is non-zero, all dashes (-) in the name will be
 * replaced with the character passed.
 *
 * Returns the number of bytes added.
 
         * Locate one of the MS English font names.
         
             * Found one of the MS English font names.  The name is by
             * definition encoded in Unicode, so copy every second byte into
             * the `name' parameter, assuming there is enough space.
             
     * No MS English name found, attempt to find an Apple Unicode English
     * name.
     
         * Found the Apple Unicode English name.  The name is by definition
         * encoded in Unicode, so copy every second byte into the `name'
         * parameter, assuming there is enough space.
          init number of ttf in ttc  Initialize engine  Load face  convert to fixed point  nothing to do?  Initialize engine  Load face  Set font header data  "face->num_glyphs" is NG.;  calculate memory usage  check if we need to use long offsets  allocate memory  for now we use the full height for each character  insert empty pixels on the left  Get gylph index from the char and render it  copy the glyph bitmap to a full sized glyph bitmap  insert empty pixels on the left  Pad last byte  debug: dump char  font info  pad  pad  default  generate filename  set face_index of ttc  convert all fonts  parse command line options multiple -args on av[] next option must have dash proceed to next option set output file set encoding limit set encoding start set pixel size set spaece between characters  display ttc table  Don't try to make digits equally wide  Light rendering algorithm  skip av[0] read command line options
 * Trie node structure.
  Key value.                    Data for the key.                 Offset of siblings from trie beginning.   Offset of children from trie beginning.  
 * The trie used for remapping codes.
 
     * If no mapping table was loaded, then simply return the code.
     **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Jonas Hurrelmann
 *
 * A command-line tool to convert ttf file to bitmap fonts
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Set the default values used to generate a BDF font.
 
 * nameID macros for getting strings from the OT font.
 
 * String names for the string indexes. Used for error messages.
 
 * The default platform and encoding ID's.
 
 * A flag indicating if a CMap was found or not.
  display ttc table if it is not zero.  smooth fonts with gray levels   Try to make digits equally wide  trim descent percent  trim descnet actual   trim ascent  precent  trim ascent  actual   magic number and version bytes  max width in pixels  height in pixels  ascent (baseline) height  depth 0=1-bit, 1=4-bit  first character in font  default character in font  # characters in font  # bytes imagebits data in file  = bits_size  # longs offset data in file  # bytes width data in file  exit the program with given message  print usage information  remove directory prefix and file suffix from full path remove prepended path and extension
     * Get the requested cmap.
     
         * Make a special case when this fails with pid == 3 and eid == 1.
         * Change to eid == 0 and try again.  This captures the two possible
         * cases for MS fonts.  Some other method should be used to cycle
         * through all the alternatives later.
         
             * No CMAP was found.
             
 * quote in otf2bdf.
 * A generic routine to get a name from the OT name table.  This routine
 * always looks for English language names and checks three possibilities:
 * 1. English names with the MS Unicode encoding ID.
 * 2. English names with the MS unknown encoding ID.
 * 3. English names with the Apple Unicode encoding ID.
 *
 * The particular name ID mut be provided (e.g. nameID = 0 for copyright
 * string, nameID = 6 for Postscript name, nameID = 1 for typeface name.
 *
 * If the `dash_to_space' flag is non-zero, all dashes (-) in the name will be
 * replaced with the character passed.
 *
 * Returns the number of bytes added.
 
         * Locate one of the MS English font names.
         
             * Found one of the MS English font names.  The name is by
             * definition encoded in Unicode, so copy every second byte into
             * the `name' parameter, assuming there is enough space.
             
     * No MS English name found, attempt to find an Apple Unicode English
     * name.
     
         * Found the Apple Unicode English name.  The name is by definition
         * encoded in Unicode, so copy every second byte into the `name'
         * parameter, assuming there is enough space.
          init number of ttf in ttc  Initialize engine  Load face  convert to fixed point  nothing to do?  Initialize engine  Load face  Set font header data  "face->num_glyphs" is NG.;  calculate memory usage  check if we need to use long offsets  allocate memory  for now we use the full height for each character  insert empty pixels on the left  Get gylph index from the char and render it  copy the glyph bitmap to a full sized glyph bitmap  insert empty pixels on the left  Pad last byte  debug: dump char  font info  pad  pad  default  generate filename  set face_index of ttc  convert all fonts  parse command line options multiple -args on av[] next option must have dash proceed to next option set output file set encoding limit set encoding start set pixel size set spaece between characters  display ttc table  Don't try to make digits equally wide  Light rendering algorithm  skip av[0] read command line options
 * Trie node structure.
  Key value.                    Data for the key.                 Offset of siblings from trie beginning.   Offset of children from trie beginning.  
 * The trie used for remapping codes.
 
     * If no mapping table was loaded, then simply return the code.
     **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Jonas Hurrelmann
 *
 * A command-line tool to convert ttf file to bitmap fonts
 *
 * All files in this archive are subject to the GNU General Public License.
 * See the file COPYING in the source tree root for full license agreement.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Set the default values used to generate a BDF font.
 
 * nameID macros for getting strings from the OT font.
 
 * String names for the string indexes. Used for error messages.
 
 * The default platform and encoding ID's.
 
 * A flag indicating if a CMap was found or not.
  display ttc table if it is not zero.  smooth fonts with gray levels   Try to make digits equally wide  trim descent percent  trim descnet actual   trim ascent  precent  trim ascent  actual   magic number and version bytes  max width in pixels  height in pixels  ascent (baseline) height  depth 0=1-bit, 1=4-bit  first character in font  default character in font  # characters in font  # bytes imagebits data in file  = bits_size  # longs offset data in file  # bytes width data in file  exit the program with given message  print usage information  remove directory prefix and file suffix from full path remove prepended path and extension
     * Get the requested cmap.
     
         * Make a special case when this fails with pid == 3 and eid == 1.
         * Change to eid == 0 and try again.  This captures the two possible
         * cases for MS fonts.  Some other method should be used to cycle
         * through all the alternatives later.
         
             * No CMAP was found.
             
 * quote in otf2bdf.
 * A generic routine to get a name from the OT name table.  This routine
 * always looks for English language names and checks three possibilities:
 * 1. English names with the MS Unicode encoding ID.
 * 2. English names with the MS unknown encoding ID.
 * 3. English names with the Apple Unicode encoding ID.
 *
 * The particular name ID mut be provided (e.g. nameID = 0 for copyright
 * string, nameID = 6 for Postscript name, nameID = 1 for typeface name.
 *
 * If the `dash_to_space' flag is non-zero, all dashes (-) in the name will be
 * replaced with the character passed.
 *
 * Returns the number of bytes added.
 
         * Locate one of the MS English font names.
         
             * Found one of the MS English font names.  The name is by
             * definition encoded in Unicode, so copy every second byte into
             * the `name' parameter, assuming there is enough space.
             
     * No MS English name found, attempt to find an Apple Unicode English
     * name.
     
         * Found the Apple Unicode English name.  The name is by definition
         * encoded in Unicode, so copy every second byte into the `name'
         * parameter, assuming there is enough space.
          init number of ttf in ttc  Initialize engine  Load face  convert to fixed point  nothing to do?  Initialize engine  Load face  Set font header data  "face->num_glyphs" is NG.;  calculate memory usage  check if we need to use long offsets  allocate memory  for now we use the full height for each character  insert empty pixels on the left  Get gylph index from the char and render it  copy the glyph bitmap to a full sized glyph bitmap  insert empty pixels on the left  Pad last byte  debug: dump char  font info  pad  pad  default  generate filename  set face_index of ttc  convert all fonts  parse command line options multiple -args on av[] next option must have dash proceed to next option set output file set encoding limit set encoding start set pixel size set spaece between characters  display ttc table  Don't try to make digits equally wide  Light rendering algorithm  skip av[0] read command line options
 * Trie node structure.
  Key value.                    Data for the key.                 Offset of siblings from trie beginning.   Offset of children from trie beginning.  
 * The trie used for remapping codes.
 
     * If no mapping table was loaded, then simply return the code.
     