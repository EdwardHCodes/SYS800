 Copyright (c) 2010 Xiph.Org Foundation, Skype Limited
   Written by Jean-Marc Valin and Koen Vos 
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
   OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
* Sampling rate (at the API level)  Everything beyond this point gets cleared on a reset  Initialize SILK encoder  Reset decoder  Initialize CELT decoder  26540 for 64bit environment  Limit frame_size to avoid excessive stack allocations.  Payloads of 1 (2 including ToC) or 0 trigger the PLC/DTX  In that case, don't conceal more than what the ToC says  If we haven't got any packet yet, all we can do is return zeros  Avoids trying to run the PLC on sizes other than 2.5 (CELT), 5 (CELT),
         10, or 20 (e.g. 12.5 or 30 ms).  In fixed-point, we can tell CELT to do the accumulation on top of the
      SILK PCM buffer. This saves some stack space.  Decide where to allocate the stack memory for pcm_transition fprintf(stderr, "PCM buffer too small: %d vs %d (mode = %d)\n", audiosize, frame_size, mode); Don't allocate any memory when in CELT-only mode  SILK processing  The SILK PLC cannot produce frames of less than 10 ms  Hybrid mode  Call SILK decoder  PLC failure should not be fatal  Check if we have a redundant 0-8 kHz band  redundancy_bytes will be at least two, in the non-hybrid
            case due to the ec_tell() check above  This is a sanity check. It should never happen for a valid
            packet, so the exact behaviour is not normative.  Shrink decoder because of raw bits  Only allocation memory for redundancy if/when needed  5 ms redundant frame for CELT->SILK MUST be after PLC  Make sure to discard any previous CELT state  Decode CELT  For hybrid -> SILK transitions, we let the CELT MDCT
         do a fade-out by decoding a silence frame  5 ms redundant frame for SILK->CELT  Not enough time to do a clean transition, but we do it anyway
            This will not preserve amplitude perfectly and may introduce
            a bit of temporal aliasing, but it shouldn't be too bad and
            that's pretty much the best we can do. In any case, generating this
            transition it pretty silly in the first place  48 x 2.5 ms = 120 ms  For FEC/PLC, frame_size has to be to have a multiple of 2.5 ms  If no FEC can be present, run the PLC (recursive call)  Otherwise, run the PLC on everything except the size for which we might have FEC  Complete with FEC  Update the state as the last step to avoid updating it on an invalid packet fprintf(stderr, "unknown opus_decoder_ctl() request: %d", request); Can't have more than 120 ms  Copyright (c) 2010 Xiph.Org Foundation, Skype Limited
   Written by Jean-Marc Valin and Koen Vos 
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
   OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
* Sampling rate (at the API level)  Everything beyond this point gets cleared on a reset  Initialize SILK encoder  Reset decoder  Initialize CELT decoder  26540 for 64bit environment  Limit frame_size to avoid excessive stack allocations.  Payloads of 1 (2 including ToC) or 0 trigger the PLC/DTX  In that case, don't conceal more than what the ToC says  If we haven't got any packet yet, all we can do is return zeros  Avoids trying to run the PLC on sizes other than 2.5 (CELT), 5 (CELT),
         10, or 20 (e.g. 12.5 or 30 ms).  In fixed-point, we can tell CELT to do the accumulation on top of the
      SILK PCM buffer. This saves some stack space.  Decide where to allocate the stack memory for pcm_transition fprintf(stderr, "PCM buffer too small: %d vs %d (mode = %d)\n", audiosize, frame_size, mode); Don't allocate any memory when in CELT-only mode  SILK processing  The SILK PLC cannot produce frames of less than 10 ms  Hybrid mode  Call SILK decoder  PLC failure should not be fatal  Check if we have a redundant 0-8 kHz band  redundancy_bytes will be at least two, in the non-hybrid
            case due to the ec_tell() check above  This is a sanity check. It should never happen for a valid
            packet, so the exact behaviour is not normative.  Shrink decoder because of raw bits  Only allocation memory for redundancy if/when needed  5 ms redundant frame for CELT->SILK MUST be after PLC  Make sure to discard any previous CELT state  Decode CELT  For hybrid -> SILK transitions, we let the CELT MDCT
         do a fade-out by decoding a silence frame  5 ms redundant frame for SILK->CELT  Not enough time to do a clean transition, but we do it anyway
            This will not preserve amplitude perfectly and may introduce
            a bit of temporal aliasing, but it shouldn't be too bad and
            that's pretty much the best we can do. In any case, generating this
            transition it pretty silly in the first place  48 x 2.5 ms = 120 ms  For FEC/PLC, frame_size has to be to have a multiple of 2.5 ms  If no FEC can be present, run the PLC (recursive call)  Otherwise, run the PLC on everything except the size for which we might have FEC  Complete with FEC  Update the state as the last step to avoid updating it on an invalid packet fprintf(stderr, "unknown opus_decoder_ctl() request: %d", request); Can't have more than 120 ms  Copyright (c) 2010 Xiph.Org Foundation, Skype Limited
   Written by Jean-Marc Valin and Koen Vos 
   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
   OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
* Sampling rate (at the API level)  Everything beyond this point gets cleared on a reset  Initialize SILK encoder  Reset decoder  Initialize CELT decoder  26540 for 64bit environment  Limit frame_size to avoid excessive stack allocations.  Payloads of 1 (2 including ToC) or 0 trigger the PLC/DTX  In that case, don't conceal more than what the ToC says  If we haven't got any packet yet, all we can do is return zeros  Avoids trying to run the PLC on sizes other than 2.5 (CELT), 5 (CELT),
         10, or 20 (e.g. 12.5 or 30 ms).  In fixed-point, we can tell CELT to do the accumulation on top of the
      SILK PCM buffer. This saves some stack space.  Decide where to allocate the stack memory for pcm_transition fprintf(stderr, "PCM buffer too small: %d vs %d (mode = %d)\n", audiosize, frame_size, mode); Don't allocate any memory when in CELT-only mode  SILK processing  The SILK PLC cannot produce frames of less than 10 ms  Hybrid mode  Call SILK decoder  PLC failure should not be fatal  Check if we have a redundant 0-8 kHz band  redundancy_bytes will be at least two, in the non-hybrid
            case due to the ec_tell() check above  This is a sanity check. It should never happen for a valid
            packet, so the exact behaviour is not normative.  Shrink decoder because of raw bits  Only allocation memory for redundancy if/when needed  5 ms redundant frame for CELT->SILK MUST be after PLC  Make sure to discard any previous CELT state  Decode CELT  For hybrid -> SILK transitions, we let the CELT MDCT
         do a fade-out by decoding a silence frame  5 ms redundant frame for SILK->CELT  Not enough time to do a clean transition, but we do it anyway
            This will not preserve amplitude perfectly and may introduce
            a bit of temporal aliasing, but it shouldn't be too bad and
            that's pretty much the best we can do. In any case, generating this
            transition it pretty silly in the first place  48 x 2.5 ms = 120 ms  For FEC/PLC, frame_size has to be to have a multiple of 2.5 ms  If no FEC can be present, run the PLC (recursive call)  Otherwise, run the PLC on everything except the size for which we might have FEC  Complete with FEC  Update the state as the last step to avoid updating it on an invalid packet fprintf(stderr, "unknown opus_decoder_ctl() request: %d", request); Can't have more than 120 ms 