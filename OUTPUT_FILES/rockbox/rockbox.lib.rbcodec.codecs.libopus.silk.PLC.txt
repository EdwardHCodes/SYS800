**********************************************************************
Copyright (c) 2006-2011, Skype Limited. All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
- Neither the name of Internet Society, IETF or IETF Trust, nor the
names of specific contributors, may be used to endorse or promote
products derived from this software without specific prior written
permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
********************************************************************** 0.99, 0.95  0.95, 0.8  0.99, 0.9  I/O Decoder state         I/O Decoder control       I/O Decoder state         I/O Decoder control       O LPC residual signal     I/O Decoder state         I/O Decoder state         I/O Decoder control       I/O  signal               I Loss flag               PLC control function ************************** Generate Signal          **************************************************** Update state             ************************************************************************** Update state of PLC                            ************************************************ I/O Decoder state         I/O Decoder control       Update parameters used in case of packet loss  Find the parameters for the last subframe which contains a pitch pulse  Limit LT coefs  Save LPC coeficients  Save last two gains  Find random noise component  Scale previous excitation signal  Find the subframe with lowest energy of the last two and use that as random noise generator  I/O Decoder state         I/O Decoder control       O LPC residual signal     Ugly hack that breaks aliasing rules to save stack: put sLTP at the very end of sLTP_Q14.  First sub-frame has lowest energy  Second sub-frame has lowest energy  Set up Gain to random noise component  Set up attenuation gains  LPC concealment. Apply BWE to previous LPC  Preload LPC coeficients to array on stack. Gives small performance gain  First Lost frame  Reduce random noise Gain for voiced frames  0.2  Reduce random noise for unvoiced frames with high LPC gain  Rewhiten LTP state  Scale LTP state ************************* LTP synthesis filtering ************************* Set up pointer  Unrolled loop  Avoids introducing a bias because silk_SMLAWB() always rounds to -inf  Generate LPC excitation  Gradually reduce LTP gain  Gradually reduce excitation gain  Slowly increase pitch lag ************************* LPC synthesis filtering ************************* Copy LPC state  check that unrolling works  partly unrolled  Avoids introducing a bias because silk_SMLAWB() always rounds to -inf  Add prediction to LPC excitation  Scale with Gain  Save LPC state ************************************ Update states                      ************************************ Glues concealed frames with new good received frames  I/O decoder state         I/O signal                I length of signal        Calculate energy in concealed residual  Calculate residual in decoded signal if last frame was lost  Normalize energies  Fade in the energy difference  Make slope 4x steeper to avoid missing onsets after DTX **********************************************************************
Copyright (c) 2006-2011, Skype Limited. All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
- Neither the name of Internet Society, IETF or IETF Trust, nor the
names of specific contributors, may be used to endorse or promote
products derived from this software without specific prior written
permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
********************************************************************** 0.99, 0.95  0.95, 0.8  0.99, 0.9  I/O Decoder state         I/O Decoder control       I/O Decoder state         I/O Decoder control       O LPC residual signal     I/O Decoder state         I/O Decoder state         I/O Decoder control       I/O  signal               I Loss flag               PLC control function ************************** Generate Signal          **************************************************** Update state             ************************************************************************** Update state of PLC                            ************************************************ I/O Decoder state         I/O Decoder control       Update parameters used in case of packet loss  Find the parameters for the last subframe which contains a pitch pulse  Limit LT coefs  Save LPC coeficients  Save last two gains  Find random noise component  Scale previous excitation signal  Find the subframe with lowest energy of the last two and use that as random noise generator  I/O Decoder state         I/O Decoder control       O LPC residual signal     Ugly hack that breaks aliasing rules to save stack: put sLTP at the very end of sLTP_Q14.  First sub-frame has lowest energy  Second sub-frame has lowest energy  Set up Gain to random noise component  Set up attenuation gains  LPC concealment. Apply BWE to previous LPC  Preload LPC coeficients to array on stack. Gives small performance gain  First Lost frame  Reduce random noise Gain for voiced frames  0.2  Reduce random noise for unvoiced frames with high LPC gain  Rewhiten LTP state  Scale LTP state ************************* LTP synthesis filtering ************************* Set up pointer  Unrolled loop  Avoids introducing a bias because silk_SMLAWB() always rounds to -inf  Generate LPC excitation  Gradually reduce LTP gain  Gradually reduce excitation gain  Slowly increase pitch lag ************************* LPC synthesis filtering ************************* Copy LPC state  check that unrolling works  partly unrolled  Avoids introducing a bias because silk_SMLAWB() always rounds to -inf  Add prediction to LPC excitation  Scale with Gain  Save LPC state ************************************ Update states                      ************************************ Glues concealed frames with new good received frames  I/O decoder state         I/O signal                I length of signal        Calculate energy in concealed residual  Calculate residual in decoded signal if last frame was lost  Normalize energies  Fade in the energy difference  Make slope 4x steeper to avoid missing onsets after DTX **********************************************************************
Copyright (c) 2006-2011, Skype Limited. All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
- Neither the name of Internet Society, IETF or IETF Trust, nor the
names of specific contributors, may be used to endorse or promote
products derived from this software without specific prior written
permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
********************************************************************** 0.99, 0.95  0.95, 0.8  0.99, 0.9  I/O Decoder state         I/O Decoder control       I/O Decoder state         I/O Decoder control       O LPC residual signal     I/O Decoder state         I/O Decoder state         I/O Decoder control       I/O  signal               I Loss flag               PLC control function ************************** Generate Signal          **************************************************** Update state             ************************************************************************** Update state of PLC                            ************************************************ I/O Decoder state         I/O Decoder control       Update parameters used in case of packet loss  Find the parameters for the last subframe which contains a pitch pulse  Limit LT coefs  Save LPC coeficients  Save last two gains  Find random noise component  Scale previous excitation signal  Find the subframe with lowest energy of the last two and use that as random noise generator  I/O Decoder state         I/O Decoder control       O LPC residual signal     Ugly hack that breaks aliasing rules to save stack: put sLTP at the very end of sLTP_Q14.  First sub-frame has lowest energy  Second sub-frame has lowest energy  Set up Gain to random noise component  Set up attenuation gains  LPC concealment. Apply BWE to previous LPC  Preload LPC coeficients to array on stack. Gives small performance gain  First Lost frame  Reduce random noise Gain for voiced frames  0.2  Reduce random noise for unvoiced frames with high LPC gain  Rewhiten LTP state  Scale LTP state ************************* LTP synthesis filtering ************************* Set up pointer  Unrolled loop  Avoids introducing a bias because silk_SMLAWB() always rounds to -inf  Generate LPC excitation  Gradually reduce LTP gain  Gradually reduce excitation gain  Slowly increase pitch lag ************************* LPC synthesis filtering ************************* Copy LPC state  check that unrolling works  partly unrolled  Avoids introducing a bias because silk_SMLAWB() always rounds to -inf  Add prediction to LPC excitation  Scale with Gain  Save LPC state ************************************ Update states                      ************************************ Glues concealed frames with new good received frames  I/O decoder state         I/O signal                I length of signal        Calculate energy in concealed residual  Calculate residual in decoded signal if last frame was lost  Normalize energies  Fade in the energy difference  Make slope 4x steeper to avoid missing onsets after DTX 