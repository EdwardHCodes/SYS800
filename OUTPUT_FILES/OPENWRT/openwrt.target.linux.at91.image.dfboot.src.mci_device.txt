*----------------------------------------------------------------------------*         ATMEL Microcontroller Software Support  -  ROUSSET  -*----------------------------------------------------------------------------* The software is delivered "AS IS" without warranty or condition of any* kind, either express, implied or statutory. This includes without* limitation any warranty or condition with respect to merchantability or* fitness for any particular purpose, or against the infringements of* intellectual property rights of others.*----------------------------------------------------------------------------* File Name           : mci_device.c* Object              : TEST DataFlash Functions* Creation            : FB   26/11/2002**---------------------------------------------------------------------------- For AT91F_MCIDeviceWaitReady * External Functions* Global Variables*----------------------------------------------------------------------------* \fn    AT91F_MCI_SendCommand* \brief Generic function to send a command to the MMC or SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) ); Test error  ==> if crc error and response R3 ==> don't check error if the command is SEND_OP_COND the CRC error flag is always present (cf : R3 response)*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SendAppCommand* \brief Specific function to send a specific command to the SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the CMD55 for application specific command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) );	 if an error occurs check if it is a specific command and then send the command*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetStatus* \brief Addressed card sends its status register*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_Device_Handler* \brief MCI C interrupt handler*---------------------------------------------------------------------------- If End of Tx Buffer Empty interrupt occurred End of if AT91C_MCI_TXBUFF		 If End of Rx Buffer Full interrupt occurred End of if AT91C_MCI_RXBUFF*----------------------------------------------------------------------------* \fn    AT91F_MCI_Handler* \brief MCI Handler*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlock* \brief Read an ENTIRE block or PARTIAL block*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Read Block ALWAYS SUPPORTED IN SD Memory Card////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Send the Read single block command Enable AT91C_MCI_RXBUFF Interrupt (PDC) Receiver Transfer Enable*----------------------------------------------------------------------------* \fn    AT91F_MCI_WriteBlock* \brief  Write an ENTIRE block but not always PARTIAL block !!!*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Write Block ////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Init PDC for write sequence Send the write single block command Enable AT91C_MCI_TXBUFE Interrupt Enables TX for PDC transfert requests*------------------------------------------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_SelectCard* \brief Toggles a card between the Stand_by and Transfer states or between Programming and Disconnect states*------------------------------------------------------------------------------------------------------------* Check if the MMC card chosen is already the selected one* Search for the MMC Card to be selected, status = the Corresponding Device Number*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetCSD* \brief Asks to the specified card to send its CSD*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SetBlocklength* \brief Select a block length for all following block commands (R/W)*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllOCR* \brief Asks to all cards to send their operations conditions*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllCID* \brief Asks to the MMC on the chosen slot to send its CID*----------------------------------------------------------------------------* Assignation of the relative address to the MMC CARD* Set the insert flag* If no error during assignation address ==> Increment Nb_cards_Found*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_Init* \brief Return the MMC initialisation status*----------------------------------------------------------------------------* Resets all MMC Cards in Idle state* Set the Mode Register None in MMC specification version 2.2// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity end of else			   end of for end of if*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetOCR* \brief Asks to all cards to send their operations conditions*---------------------------------------------------------------------------- The RCA to be used for CMD55 in Idle state shall be the card's default RCA=0x0000.*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetCID* \brief Asks to the SDCard on the chosen slot to send its CID*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SetBusWidth* \brief  Set bus width for SDCard*---------------------------------------------------------------------------- Select Card Set bus width for Sdcard*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_Init* \brief Return the SDCard initialisation status*----------------------------------------------------------------------------// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity*----------------------------------------------------------------------------* \fn    AT91F_CfgDevice* \brief This function is used to initialise MMC or SDCard Features*---------------------------------------------------------------------------- Init Device Structure Init AT91S_DataFlash Global Structure, by default AT45DB choosen !!!*----------------------------------------------------------------------------* \fn    AT91F_MCI_Init* \brief Initialsise Card*----------------------------------------------------------------------------/////////////////////////////////////////////////////////////////////////////////////////  MCI Init : common to MMC and SDCard///////////////////////////////////////////////////////////////////////////////////////// Set up PIO SDC_TYPE to switch on MMC/SDCard and not DataFlash Card Init MCI for MMC and SDCard interface Disable all the interrupts Init MCI Device Structures Configure MCI interrupt  Enable MCI interrupt Enable Receiver 15MHz for MCK = 60MHz (CLKDIV = 1)*----------------------------------------------------------------------------* \fn    AT91F_MCIDeviceWaitReady* \brief Wait for MCI Device ready*----------------------------------------------------------------------------*--------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlockSwab* \brief Read Block and swap byte order*--------------------------------------------------------------------* Read Block 1* Wait end of Read*----------------------------------------------------------------------------*         ATMEL Microcontroller Software Support  -  ROUSSET  -*----------------------------------------------------------------------------* The software is delivered "AS IS" without warranty or condition of any* kind, either express, implied or statutory. This includes without* limitation any warranty or condition with respect to merchantability or* fitness for any particular purpose, or against the infringements of* intellectual property rights of others.*----------------------------------------------------------------------------* File Name           : mci_device.c* Object              : TEST DataFlash Functions* Creation            : FB   26/11/2002**---------------------------------------------------------------------------- For AT91F_MCIDeviceWaitReady * External Functions* Global Variables*----------------------------------------------------------------------------* \fn    AT91F_MCI_SendCommand* \brief Generic function to send a command to the MMC or SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) ); Test error  ==> if crc error and response R3 ==> don't check error if the command is SEND_OP_COND the CRC error flag is always present (cf : R3 response)*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SendAppCommand* \brief Specific function to send a specific command to the SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the CMD55 for application specific command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) );	 if an error occurs check if it is a specific command and then send the command*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetStatus* \brief Addressed card sends its status register*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_Device_Handler* \brief MCI C interrupt handler*---------------------------------------------------------------------------- If End of Tx Buffer Empty interrupt occurred End of if AT91C_MCI_TXBUFF		 If End of Rx Buffer Full interrupt occurred End of if AT91C_MCI_RXBUFF*----------------------------------------------------------------------------* \fn    AT91F_MCI_Handler* \brief MCI Handler*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlock* \brief Read an ENTIRE block or PARTIAL block*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Read Block ALWAYS SUPPORTED IN SD Memory Card////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Send the Read single block command Enable AT91C_MCI_RXBUFF Interrupt (PDC) Receiver Transfer Enable*----------------------------------------------------------------------------* \fn    AT91F_MCI_WriteBlock* \brief  Write an ENTIRE block but not always PARTIAL block !!!*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Write Block ////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Init PDC for write sequence Send the write single block command Enable AT91C_MCI_TXBUFE Interrupt Enables TX for PDC transfert requests*------------------------------------------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_SelectCard* \brief Toggles a card between the Stand_by and Transfer states or between Programming and Disconnect states*------------------------------------------------------------------------------------------------------------* Check if the MMC card chosen is already the selected one* Search for the MMC Card to be selected, status = the Corresponding Device Number*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetCSD* \brief Asks to the specified card to send its CSD*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SetBlocklength* \brief Select a block length for all following block commands (R/W)*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllOCR* \brief Asks to all cards to send their operations conditions*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllCID* \brief Asks to the MMC on the chosen slot to send its CID*----------------------------------------------------------------------------* Assignation of the relative address to the MMC CARD* Set the insert flag* If no error during assignation address ==> Increment Nb_cards_Found*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_Init* \brief Return the MMC initialisation status*----------------------------------------------------------------------------* Resets all MMC Cards in Idle state* Set the Mode Register None in MMC specification version 2.2// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity end of else			   end of for end of if*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetOCR* \brief Asks to all cards to send their operations conditions*---------------------------------------------------------------------------- The RCA to be used for CMD55 in Idle state shall be the card's default RCA=0x0000.*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetCID* \brief Asks to the SDCard on the chosen slot to send its CID*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SetBusWidth* \brief  Set bus width for SDCard*---------------------------------------------------------------------------- Select Card Set bus width for Sdcard*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_Init* \brief Return the SDCard initialisation status*----------------------------------------------------------------------------// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity*----------------------------------------------------------------------------* \fn    AT91F_CfgDevice* \brief This function is used to initialise MMC or SDCard Features*---------------------------------------------------------------------------- Init Device Structure Init AT91S_DataFlash Global Structure, by default AT45DB choosen !!!*----------------------------------------------------------------------------* \fn    AT91F_MCI_Init* \brief Initialsise Card*----------------------------------------------------------------------------/////////////////////////////////////////////////////////////////////////////////////////  MCI Init : common to MMC and SDCard///////////////////////////////////////////////////////////////////////////////////////// Set up PIO SDC_TYPE to switch on MMC/SDCard and not DataFlash Card Init MCI for MMC and SDCard interface Disable all the interrupts Init MCI Device Structures Configure MCI interrupt  Enable MCI interrupt Enable Receiver 15MHz for MCK = 60MHz (CLKDIV = 1)*----------------------------------------------------------------------------* \fn    AT91F_MCIDeviceWaitReady* \brief Wait for MCI Device ready*----------------------------------------------------------------------------*--------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlockSwab* \brief Read Block and swap byte order*--------------------------------------------------------------------* Read Block 1* Wait end of Read*----------------------------------------------------------------------------*         ATMEL Microcontroller Software Support  -  ROUSSET  -*----------------------------------------------------------------------------* The software is delivered "AS IS" without warranty or condition of any* kind, either express, implied or statutory. This includes without* limitation any warranty or condition with respect to merchantability or* fitness for any particular purpose, or against the infringements of* intellectual property rights of others.*----------------------------------------------------------------------------* File Name           : mci_device.c* Object              : TEST DataFlash Functions* Creation            : FB   26/11/2002**---------------------------------------------------------------------------- For AT91F_MCIDeviceWaitReady * External Functions* Global Variables*----------------------------------------------------------------------------* \fn    AT91F_MCI_SendCommand* \brief Generic function to send a command to the MMC or SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) ); Test error  ==> if crc error and response R3 ==> don't check error if the command is SEND_OP_COND the CRC error flag is always present (cf : R3 response)*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SendAppCommand* \brief Specific function to send a specific command to the SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the CMD55 for application specific command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) );	 if an error occurs check if it is a specific command and then send the command*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetStatus* \brief Addressed card sends its status register*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_Device_Handler* \brief MCI C interrupt handler*---------------------------------------------------------------------------- If End of Tx Buffer Empty interrupt occurred End of if AT91C_MCI_TXBUFF		 If End of Rx Buffer Full interrupt occurred End of if AT91C_MCI_RXBUFF*----------------------------------------------------------------------------* \fn    AT91F_MCI_Handler* \brief MCI Handler*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlock* \brief Read an ENTIRE block or PARTIAL block*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Read Block ALWAYS SUPPORTED IN SD Memory Card////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Send the Read single block command Enable AT91C_MCI_RXBUFF Interrupt (PDC) Receiver Transfer Enable*----------------------------------------------------------------------------* \fn    AT91F_MCI_WriteBlock* \brief  Write an ENTIRE block but not always PARTIAL block !!!*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Write Block ////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Init PDC for write sequence Send the write single block command Enable AT91C_MCI_TXBUFE Interrupt Enables TX for PDC transfert requests*------------------------------------------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_SelectCard* \brief Toggles a card between the Stand_by and Transfer states or between Programming and Disconnect states*------------------------------------------------------------------------------------------------------------* Check if the MMC card chosen is already the selected one* Search for the MMC Card to be selected, status = the Corresponding Device Number*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetCSD* \brief Asks to the specified card to send its CSD*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SetBlocklength* \brief Select a block length for all following block commands (R/W)*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllOCR* \brief Asks to all cards to send their operations conditions*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllCID* \brief Asks to the MMC on the chosen slot to send its CID*----------------------------------------------------------------------------* Assignation of the relative address to the MMC CARD* Set the insert flag* If no error during assignation address ==> Increment Nb_cards_Found*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_Init* \brief Return the MMC initialisation status*----------------------------------------------------------------------------* Resets all MMC Cards in Idle state* Set the Mode Register None in MMC specification version 2.2// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity end of else			   end of for end of if*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetOCR* \brief Asks to all cards to send their operations conditions*---------------------------------------------------------------------------- The RCA to be used for CMD55 in Idle state shall be the card's default RCA=0x0000.*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetCID* \brief Asks to the SDCard on the chosen slot to send its CID*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SetBusWidth* \brief  Set bus width for SDCard*---------------------------------------------------------------------------- Select Card Set bus width for Sdcard*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_Init* \brief Return the SDCard initialisation status*----------------------------------------------------------------------------// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity*----------------------------------------------------------------------------* \fn    AT91F_CfgDevice* \brief This function is used to initialise MMC or SDCard Features*---------------------------------------------------------------------------- Init Device Structure Init AT91S_DataFlash Global Structure, by default AT45DB choosen !!!*----------------------------------------------------------------------------* \fn    AT91F_MCI_Init* \brief Initialsise Card*----------------------------------------------------------------------------/////////////////////////////////////////////////////////////////////////////////////////  MCI Init : common to MMC and SDCard///////////////////////////////////////////////////////////////////////////////////////// Set up PIO SDC_TYPE to switch on MMC/SDCard and not DataFlash Card Init MCI for MMC and SDCard interface Disable all the interrupts Init MCI Device Structures Configure MCI interrupt  Enable MCI interrupt Enable Receiver 15MHz for MCK = 60MHz (CLKDIV = 1)*----------------------------------------------------------------------------* \fn    AT91F_MCIDeviceWaitReady* \brief Wait for MCI Device ready*----------------------------------------------------------------------------*--------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlockSwab* \brief Read Block and swap byte order*--------------------------------------------------------------------* Read Block 1* Wait end of Read*----------------------------------------------------------------------------*         ATMEL Microcontroller Software Support  -  ROUSSET  -*----------------------------------------------------------------------------* The software is delivered "AS IS" without warranty or condition of any* kind, either express, implied or statutory. This includes without* limitation any warranty or condition with respect to merchantability or* fitness for any particular purpose, or against the infringements of* intellectual property rights of others.*----------------------------------------------------------------------------* File Name           : mci_device.c* Object              : TEST DataFlash Functions* Creation            : FB   26/11/2002**---------------------------------------------------------------------------- For AT91F_MCIDeviceWaitReady * External Functions* Global Variables*----------------------------------------------------------------------------* \fn    AT91F_MCI_SendCommand* \brief Generic function to send a command to the MMC or SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) ); Test error  ==> if crc error and response R3 ==> don't check error if the command is SEND_OP_COND the CRC error flag is always present (cf : R3 response)*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SendAppCommand* \brief Specific function to send a specific command to the SDCard*----------------------------------------------------------------------------unsigned int	tick=0; Send the CMD55 for application specific command wait for CMDRDY Status flag to read the responsetick++;&& (tick<100) );	 if an error occurs check if it is a specific command and then send the command*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetStatus* \brief Addressed card sends its status register*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_Device_Handler* \brief MCI C interrupt handler*---------------------------------------------------------------------------- If End of Tx Buffer Empty interrupt occurred End of if AT91C_MCI_TXBUFF		 If End of Rx Buffer Full interrupt occurred End of if AT91C_MCI_RXBUFF*----------------------------------------------------------------------------* \fn    AT91F_MCI_Handler* \brief MCI Handler*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlock* \brief Read an ENTIRE block or PARTIAL block*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Read Block ALWAYS SUPPORTED IN SD Memory Card////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Send the Read single block command Enable AT91C_MCI_RXBUFF Interrupt (PDC) Receiver Transfer Enable*----------------------------------------------------------------------------* \fn    AT91F_MCI_WriteBlock* \brief  Write an ENTIRE block but not always PARTIAL block !!!*----------------------------------------------------------------------------////////////////////////////////////////////////////////////////////////////////////////// If source does not fit a begin of a block Test if the MMC supports Partial Write Block ////////////////////////////////////////////////////////////////////////////////////////// Init Mode Register Init PDC for write sequence Send the write single block command Enable AT91C_MCI_TXBUFE Interrupt Enables TX for PDC transfert requests*------------------------------------------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_SelectCard* \brief Toggles a card between the Stand_by and Transfer states or between Programming and Disconnect states*------------------------------------------------------------------------------------------------------------* Check if the MMC card chosen is already the selected one* Search for the MMC Card to be selected, status = the Corresponding Device Number*----------------------------------------------------------------------------* \fn    AT91F_MCI_GetCSD* \brief Asks to the specified card to send its CSD*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SetBlocklength* \brief Select a block length for all following block commands (R/W)*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllOCR* \brief Asks to all cards to send their operations conditions*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_GetAllCID* \brief Asks to the MMC on the chosen slot to send its CID*----------------------------------------------------------------------------* Assignation of the relative address to the MMC CARD* Set the insert flag* If no error during assignation address ==> Increment Nb_cards_Found*----------------------------------------------------------------------------* \fn    AT91F_MCI_MMC_Init* \brief Return the MMC initialisation status*----------------------------------------------------------------------------* Resets all MMC Cards in Idle state* Set the Mode Register None in MMC specification version 2.2// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity end of else			   end of for end of if*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetOCR* \brief Asks to all cards to send their operations conditions*---------------------------------------------------------------------------- The RCA to be used for CMD55 in Idle state shall be the card's default RCA=0x0000.*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_GetCID* \brief Asks to the SDCard on the chosen slot to send its CID*----------------------------------------------------------------------------*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_SetBusWidth* \brief  Set bus width for SDCard*---------------------------------------------------------------------------- Select Card Set bus width for Sdcard*----------------------------------------------------------------------------* \fn    AT91F_MCI_SDCard_Init* \brief Return the SDCard initialisation status*----------------------------------------------------------------------------// Compute Memory Capacity compute MULT compute MSB of C_SIZE compute MULT * (LSB of C-SIZE + MSB already computed + 1) = BLOCKNR// End of Compute Memory Capacity*----------------------------------------------------------------------------* \fn    AT91F_CfgDevice* \brief This function is used to initialise MMC or SDCard Features*---------------------------------------------------------------------------- Init Device Structure Init AT91S_DataFlash Global Structure, by default AT45DB choosen !!!*----------------------------------------------------------------------------* \fn    AT91F_MCI_Init* \brief Initialsise Card*----------------------------------------------------------------------------/////////////////////////////////////////////////////////////////////////////////////////  MCI Init : common to MMC and SDCard///////////////////////////////////////////////////////////////////////////////////////// Set up PIO SDC_TYPE to switch on MMC/SDCard and not DataFlash Card Init MCI for MMC and SDCard interface Disable all the interrupts Init MCI Device Structures Configure MCI interrupt  Enable MCI interrupt Enable Receiver 15MHz for MCK = 60MHz (CLKDIV = 1)*----------------------------------------------------------------------------* \fn    AT91F_MCIDeviceWaitReady* \brief Wait for MCI Device ready*----------------------------------------------------------------------------*--------------------------------------------------------------------* \fn    AT91F_MCI_ReadBlockSwab* \brief Read Block and swap byte order*--------------------------------------------------------------------* Read Block 1* Wait end of Read