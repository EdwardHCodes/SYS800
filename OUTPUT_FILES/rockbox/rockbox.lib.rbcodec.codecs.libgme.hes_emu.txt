 Game_Music_Emu 0.5.2. http://www.slack.net/~ant/ Copyright (C) 2006 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  scanlines * clocks per scanline defaults Set default track count  clears fields Setup Unload if ( header_.vers != 0 )
		warning( "Unknown file version" );
	
	if ( memcmp( header_.data_tag, "DATA", 4 ) )
		warning( "Data header missing" );
	
	if ( memcmp( header_.unused, "\0\0\0\0", 4 ) )
		warning( "Unknown header data" );  File spec supports multiple blocks, but I haven't found any, and many files have bad sizes in the only block, so it's simpler to just try to load the damn data as best as possible. int rom_size = get_le32( this->header.size );  warning( "Invalid address" );  if ( (unsigned) (addr + size) > (unsigned) rom_max )
		warning( "Invalid size" );
	
	if ( rom_size != rom.file_size() )
	{
		if ( size <= rom.file_size() - 4 && !memcmp( rom.begin() + size, "DATA", 4 ) )
			warning( "Multiple DATA not supported" );
		else if ( size < rom.file_size() )
			warning( "Extra file data" );
		else
			warning( "Missing file data" );
	}  Setup buffer	 Emulation Hardware if ( data & 0x04 )
				warning( "Scanline interrupt unsupported" );  else
		{
			dprintf( "VDP not supported: $%02X <- $%02X\n", vdp.latch, data );
		}  dprintf( "VDP MSB not supported: $%02X <- $%02X\n", vdp.latch, data );  Avoid going way past end when a long block xfer is writing to I/O space. Not a problem for other registers below because they don't write to Blip_Buffer. if ( (data & 0xF8) && (data & 0xF8) != 0xF8 ) // flag questionable values
			dprintf( "Int mask: $%02X\n", data );  I/O port palette dprintf( "unmapped write $%04X <- $%02X\n", addr, data );  case 0x0002:
	case 0x0003:
		dprintf( "VDP read not supported: %d\n", addr );
		return 0; return timer.enabled; // TODO: remove? dprintf( "Timer count read\n" );  I/O portcase 0x180C: // CD-ROMcase 0x180D: default:
			dprintf( "unmapped read  $%04X\n", addr );  overkill, but not worth writing custom code work around for bugs with music not acknowledging VDPrun_until( present );irq.vdp = cpu.future_time;irq_changed(); if ( run_cpu( this, duration ) )
		warning( "Emulation error (illegal instruction)" ); check( time() - duration < 20 ); // Txx instruction could cause going way over end time frame Remute voices Music emu sample rate can't be changed once set Set bass frequency sample rate must be set first Set adpcm voice Set apu voices all or nothing sample rate must be set first Remap track if playlist available some HES music relies on zero fill unmapped beyond end of address space convert filter times to samples Tell/Seek for long skip, mute sound round to multiple of 2048 start_track() must have been called already Game_Music_Emu 0.5.2. http://www.slack.net/~ant/ Copyright (C) 2006 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  scanlines * clocks per scanline defaults Set default track count  clears fields Setup Unload if ( header_.vers != 0 )
		warning( "Unknown file version" );
	
	if ( memcmp( header_.data_tag, "DATA", 4 ) )
		warning( "Data header missing" );
	
	if ( memcmp( header_.unused, "\0\0\0\0", 4 ) )
		warning( "Unknown header data" );  File spec supports multiple blocks, but I haven't found any, and many files have bad sizes in the only block, so it's simpler to just try to load the damn data as best as possible. int rom_size = get_le32( this->header.size );  warning( "Invalid address" );  if ( (unsigned) (addr + size) > (unsigned) rom_max )
		warning( "Invalid size" );
	
	if ( rom_size != rom.file_size() )
	{
		if ( size <= rom.file_size() - 4 && !memcmp( rom.begin() + size, "DATA", 4 ) )
			warning( "Multiple DATA not supported" );
		else if ( size < rom.file_size() )
			warning( "Extra file data" );
		else
			warning( "Missing file data" );
	}  Setup buffer	 Emulation Hardware if ( data & 0x04 )
				warning( "Scanline interrupt unsupported" );  else
		{
			dprintf( "VDP not supported: $%02X <- $%02X\n", vdp.latch, data );
		}  dprintf( "VDP MSB not supported: $%02X <- $%02X\n", vdp.latch, data );  Avoid going way past end when a long block xfer is writing to I/O space. Not a problem for other registers below because they don't write to Blip_Buffer. if ( (data & 0xF8) && (data & 0xF8) != 0xF8 ) // flag questionable values
			dprintf( "Int mask: $%02X\n", data );  I/O port palette dprintf( "unmapped write $%04X <- $%02X\n", addr, data );  case 0x0002:
	case 0x0003:
		dprintf( "VDP read not supported: %d\n", addr );
		return 0; return timer.enabled; // TODO: remove? dprintf( "Timer count read\n" );  I/O portcase 0x180C: // CD-ROMcase 0x180D: default:
			dprintf( "unmapped read  $%04X\n", addr );  overkill, but not worth writing custom code work around for bugs with music not acknowledging VDPrun_until( present );irq.vdp = cpu.future_time;irq_changed(); if ( run_cpu( this, duration ) )
		warning( "Emulation error (illegal instruction)" ); check( time() - duration < 20 ); // Txx instruction could cause going way over end time frame Remute voices Music emu sample rate can't be changed once set Set bass frequency sample rate must be set first Set adpcm voice Set apu voices all or nothing sample rate must be set first Remap track if playlist available some HES music relies on zero fill unmapped beyond end of address space convert filter times to samples Tell/Seek for long skip, mute sound round to multiple of 2048 start_track() must have been called already Game_Music_Emu 0.5.2. http://www.slack.net/~ant/ Copyright (C) 2006 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  scanlines * clocks per scanline defaults Set default track count  clears fields Setup Unload if ( header_.vers != 0 )
		warning( "Unknown file version" );
	
	if ( memcmp( header_.data_tag, "DATA", 4 ) )
		warning( "Data header missing" );
	
	if ( memcmp( header_.unused, "\0\0\0\0", 4 ) )
		warning( "Unknown header data" );  File spec supports multiple blocks, but I haven't found any, and many files have bad sizes in the only block, so it's simpler to just try to load the damn data as best as possible. int rom_size = get_le32( this->header.size );  warning( "Invalid address" );  if ( (unsigned) (addr + size) > (unsigned) rom_max )
		warning( "Invalid size" );
	
	if ( rom_size != rom.file_size() )
	{
		if ( size <= rom.file_size() - 4 && !memcmp( rom.begin() + size, "DATA", 4 ) )
			warning( "Multiple DATA not supported" );
		else if ( size < rom.file_size() )
			warning( "Extra file data" );
		else
			warning( "Missing file data" );
	}  Setup buffer	 Emulation Hardware if ( data & 0x04 )
				warning( "Scanline interrupt unsupported" );  else
		{
			dprintf( "VDP not supported: $%02X <- $%02X\n", vdp.latch, data );
		}  dprintf( "VDP MSB not supported: $%02X <- $%02X\n", vdp.latch, data );  Avoid going way past end when a long block xfer is writing to I/O space. Not a problem for other registers below because they don't write to Blip_Buffer. if ( (data & 0xF8) && (data & 0xF8) != 0xF8 ) // flag questionable values
			dprintf( "Int mask: $%02X\n", data );  I/O port palette dprintf( "unmapped write $%04X <- $%02X\n", addr, data );  case 0x0002:
	case 0x0003:
		dprintf( "VDP read not supported: %d\n", addr );
		return 0; return timer.enabled; // TODO: remove? dprintf( "Timer count read\n" );  I/O portcase 0x180C: // CD-ROMcase 0x180D: default:
			dprintf( "unmapped read  $%04X\n", addr );  overkill, but not worth writing custom code work around for bugs with music not acknowledging VDPrun_until( present );irq.vdp = cpu.future_time;irq_changed(); if ( run_cpu( this, duration ) )
		warning( "Emulation error (illegal instruction)" ); check( time() - duration < 20 ); // Txx instruction could cause going way over end time frame Remute voices Music emu sample rate can't be changed once set Set bass frequency sample rate must be set first Set adpcm voice Set apu voices all or nothing sample rate must be set first Remap track if playlist available some HES music relies on zero fill unmapped beyond end of address space convert filter times to samples Tell/Seek for long skip, mute sound round to multiple of 2048 start_track() must have been called already