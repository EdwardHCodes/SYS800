
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 r_main.cdefine	PASSAGES view origin screen size info refresh flags so frame counts initialized to 0 don't match if 1, surface cache is currently empty and must be reinitialized for current cache size 8.8 fraction of base light value
==================
R_InitTextures
==================
 create a simple checkerboard texture for the default
===============
R_Init
===============
 get stack position so we can guess if we are going to overflow TODO: collect 386-specific code in one place id386
===============
R_NewMap
===============
 clear out efrags in case the level hasn't been reloaded FIXME: is this one short? surface 0 doesn't really exist; it's just a dummy because index 0 is used to indicate no edge attached to surface
===============
R_SetVrect
===============
 min for icons
===============
R_ViewChanged

Called every time the vid structure or r_refdef changes.
Guaranteed to be called before the first refresh
===============
 320*200 1.0 pixelAspect = 1.6 screenAspect 320*240 1.0 pixelAspect = 1.3333 screenAspect proper 320*200 pixelAspect = 0.8333333 values for perspective projection if math were exact, the values would range from 0.5 to to range+0.5 hopefully they wll be in the 0.000001 to range+.999999 and truncate the polygon rasterization will never render in the first row or column but will definately render in the [range] row and column, so adjust the buffer origin to get an exact edge to edge fill9.239.2310.2210.22 left side clip right side clip top side clip bottom side clip TODO: collect 386-specific code in one place id386
===============
R_MarkLeaves
===============

=============
R_DrawEntitiesOnList
=============
 FIXME: remove and do real lighting don't draw the player see if the bounding box lets us trivially reject, also sets trivial accept status clamp lighting so it doesn't overbright as much
=============
R_DrawViewModel
=============
 FIXME: remove and do real lighting allways give some light on gun add dynamic lights		 clamp lighting so it doesn't overbright as much
=============
R_BmodelCheckBBox
=============
 generate accept and reject points FIXME: do with fast look-ups or integer tests based on the sign bit of the floating point values
=============
R_DrawBEntitiesOnList
=============
 see if the bounding box lets us trivially reject, also sets trivial accept status FIXME: is this needed? FIXME: stop transforming twice calculate dynamic lighting for bmodel if it's not an instanced model if the driver wants polygons, deliver those. Z-buffering is on at this point, so no clipping to the world tree is needed, just frustum clipping not a leaf; has to be clipped to the world BSP falls entirely in one leaf, so we just put all the edges in the edge list and let 1/z sorting handle drawing order put back world rotation and frustum clipping		 FIXME: R_RotateBmodel should just work off base_vxx
================
R_EdgeDrawing
================
 surface 0 doesn't really exist; it's just a dummy because index 0 is used to indicate no edge attached to surface only the world can be drawn back to front with no z reads or compares, just z writes, so have the driver turn z compares on now don't let sound get messed up if going slow
================
R_RenderView

r_refdef must be set before the first call
================
 done here so we know if we're in water make FDIV fast. This reduces timing precision after we've been running for a while, so we don't do it globally.  This also sets chop mode, and we do it here so that setup stuff like the refresh area calculations match what's done in screen.c don't let sound get messed up if going slow let sound run don't let sound get messed up if going slow let sound run back to high floating-point precision
================
R_InitTurb
================
 AMP2, not 20
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 r_main.cdefine	PASSAGES view origin screen size info refresh flags so frame counts initialized to 0 don't match if 1, surface cache is currently empty and must be reinitialized for current cache size 8.8 fraction of base light value
==================
R_InitTextures
==================
 create a simple checkerboard texture for the default
===============
R_Init
===============
 get stack position so we can guess if we are going to overflow TODO: collect 386-specific code in one place id386
===============
R_NewMap
===============
 clear out efrags in case the level hasn't been reloaded FIXME: is this one short? surface 0 doesn't really exist; it's just a dummy because index 0 is used to indicate no edge attached to surface
===============
R_SetVrect
===============
 min for icons
===============
R_ViewChanged

Called every time the vid structure or r_refdef changes.
Guaranteed to be called before the first refresh
===============
 320*200 1.0 pixelAspect = 1.6 screenAspect 320*240 1.0 pixelAspect = 1.3333 screenAspect proper 320*200 pixelAspect = 0.8333333 values for perspective projection if math were exact, the values would range from 0.5 to to range+0.5 hopefully they wll be in the 0.000001 to range+.999999 and truncate the polygon rasterization will never render in the first row or column but will definately render in the [range] row and column, so adjust the buffer origin to get an exact edge to edge fill9.239.2310.2210.22 left side clip right side clip top side clip bottom side clip TODO: collect 386-specific code in one place id386
===============
R_MarkLeaves
===============

=============
R_DrawEntitiesOnList
=============
 FIXME: remove and do real lighting don't draw the player see if the bounding box lets us trivially reject, also sets trivial accept status clamp lighting so it doesn't overbright as much
=============
R_DrawViewModel
=============
 FIXME: remove and do real lighting allways give some light on gun add dynamic lights		 clamp lighting so it doesn't overbright as much
=============
R_BmodelCheckBBox
=============
 generate accept and reject points FIXME: do with fast look-ups or integer tests based on the sign bit of the floating point values
=============
R_DrawBEntitiesOnList
=============
 see if the bounding box lets us trivially reject, also sets trivial accept status FIXME: is this needed? FIXME: stop transforming twice calculate dynamic lighting for bmodel if it's not an instanced model if the driver wants polygons, deliver those. Z-buffering is on at this point, so no clipping to the world tree is needed, just frustum clipping not a leaf; has to be clipped to the world BSP falls entirely in one leaf, so we just put all the edges in the edge list and let 1/z sorting handle drawing order put back world rotation and frustum clipping		 FIXME: R_RotateBmodel should just work off base_vxx
================
R_EdgeDrawing
================
 surface 0 doesn't really exist; it's just a dummy because index 0 is used to indicate no edge attached to surface only the world can be drawn back to front with no z reads or compares, just z writes, so have the driver turn z compares on now don't let sound get messed up if going slow
================
R_RenderView

r_refdef must be set before the first call
================
 done here so we know if we're in water make FDIV fast. This reduces timing precision after we've been running for a while, so we don't do it globally.  This also sets chop mode, and we do it here so that setup stuff like the refresh area calculations match what's done in screen.c don't let sound get messed up if going slow let sound run don't let sound get messed up if going slow let sound run back to high floating-point precision
================
R_InitTurb
================
 AMP2, not 20
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 r_main.cdefine	PASSAGES view origin screen size info refresh flags so frame counts initialized to 0 don't match if 1, surface cache is currently empty and must be reinitialized for current cache size 8.8 fraction of base light value
==================
R_InitTextures
==================
 create a simple checkerboard texture for the default
===============
R_Init
===============
 get stack position so we can guess if we are going to overflow TODO: collect 386-specific code in one place id386
===============
R_NewMap
===============
 clear out efrags in case the level hasn't been reloaded FIXME: is this one short? surface 0 doesn't really exist; it's just a dummy because index 0 is used to indicate no edge attached to surface
===============
R_SetVrect
===============
 min for icons
===============
R_ViewChanged

Called every time the vid structure or r_refdef changes.
Guaranteed to be called before the first refresh
===============
 320*200 1.0 pixelAspect = 1.6 screenAspect 320*240 1.0 pixelAspect = 1.3333 screenAspect proper 320*200 pixelAspect = 0.8333333 values for perspective projection if math were exact, the values would range from 0.5 to to range+0.5 hopefully they wll be in the 0.000001 to range+.999999 and truncate the polygon rasterization will never render in the first row or column but will definately render in the [range] row and column, so adjust the buffer origin to get an exact edge to edge fill9.239.2310.2210.22 left side clip right side clip top side clip bottom side clip TODO: collect 386-specific code in one place id386
===============
R_MarkLeaves
===============

=============
R_DrawEntitiesOnList
=============
 FIXME: remove and do real lighting don't draw the player see if the bounding box lets us trivially reject, also sets trivial accept status clamp lighting so it doesn't overbright as much
=============
R_DrawViewModel
=============
 FIXME: remove and do real lighting allways give some light on gun add dynamic lights		 clamp lighting so it doesn't overbright as much
=============
R_BmodelCheckBBox
=============
 generate accept and reject points FIXME: do with fast look-ups or integer tests based on the sign bit of the floating point values
=============
R_DrawBEntitiesOnList
=============
 see if the bounding box lets us trivially reject, also sets trivial accept status FIXME: is this needed? FIXME: stop transforming twice calculate dynamic lighting for bmodel if it's not an instanced model if the driver wants polygons, deliver those. Z-buffering is on at this point, so no clipping to the world tree is needed, just frustum clipping not a leaf; has to be clipped to the world BSP falls entirely in one leaf, so we just put all the edges in the edge list and let 1/z sorting handle drawing order put back world rotation and frustum clipping		 FIXME: R_RotateBmodel should just work off base_vxx
================
R_EdgeDrawing
================
 surface 0 doesn't really exist; it's just a dummy because index 0 is used to indicate no edge attached to surface only the world can be drawn back to front with no z reads or compares, just z writes, so have the driver turn z compares on now don't let sound get messed up if going slow
================
R_RenderView

r_refdef must be set before the first call
================
 done here so we know if we're in water make FDIV fast. This reduces timing precision after we've been running for a while, so we don't do it globally.  This also sets chop mode, and we do it here so that setup stuff like the refresh area calculations match what's done in screen.c don't let sound get messed up if going slow let sound run don't let sound get messed up if going slow let sound run back to high floating-point precision
================
R_InitTurb
================
 AMP2, not 20