 Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.  #ifdef ROCKBOX ROCKBOX  ROCKBOX  name under which an extern is invoked  factory for creating "object" boxes  factory for creating canvases  handle "list" messages to Pds without explicit list methods defined.  a list with one element which is a number can be handled by a
	    "float" method if any is defined; same for "symbol", "pointer".  Next try for an "anything" method  if the object is patchable (i.e., can have proper inlets)
	    send it on to obj_list which will unpack the list into the inlets  otherwise gove up and complain.  for now we assume that all "gobjs" are text unless explicitly
    overridden later by calling class_setbehavior().  I'm not sure
    how to deal with Pds that aren't gobjs; shouldn't there be a
    way to check that at run time?  Perhaps the presence of a "newmethod"
    should be our cue, or perhaps the "tiny" flag.   another matter.  This routine does two unrelated things: it creates
    a Pd class, but also adds a "new" method to create an instance of it.
    These are combined for historical reasons and for brevity in writing
    objects.  To avoid adding a "new" method send a null function pointer.
    To add additional ones, use class_addcreator below.  Some "classes", like
    "select", are actually two classes of the same name, one for the single-
    argument form, one for the multiple one; see select_setup() to find out
    how this is handled.   add a "new" method by the name specified by the object  if we're loading an extern it might have been invoked by a
		longer file name; in this case, make this an admissible name
		too.  add a creation method, which is a function that returns a Pd object
    suitable for putting in an object box.  We presume you've got a class it
    can belong to, but this won't be used until the newmethod is actually
    called back (and the new method explicitly takes care of this.)  "signal" method specifies that we take audio signals but
	that we don't want automatic float to signal conversion.  This
	is obsolete; you should now use the CLASS_MAINSIGNALIN macro.  check for special cases.  "Pointer" is missing here so that
    	pd_objectmaker's pointer method can be typechecked differently.   Instead of these, see the "class_addfloat", etc.,  macros in m_pd.h  ---------------- the symbol table ------------------------  printf("gensym: %s\n", s); this routine is called when a new "object" is requested whose class Pd
    doesn't know.  Pd tries to load it as an extern, then as an abstraction.  bug fix by Krzysztof Czaja  This is externally available, but note that it might later disappear; the
whole "newest" thing is a hack which needs to be redesigned.  horribly, we need prototypes for each of the artificial function
    calls in typedmess(), to keep the compiler quiet.  check for messages that are handled by fixed slots in the class
    	structure.  We don't catch "pointer" though so that sending "pointer"
	to pd_objectmaker doesn't require that we supply a pointer value.  if it's an unfilled "dollar" argument it appears
			    as zero here; cheat and bash it to the null
			    symbol.  Unfortunately, this lets real zeros
			    pass as symbols too, which seems wrong...  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.  #ifdef ROCKBOX ROCKBOX  ROCKBOX  name under which an extern is invoked  factory for creating "object" boxes  factory for creating canvases  handle "list" messages to Pds without explicit list methods defined.  a list with one element which is a number can be handled by a
	    "float" method if any is defined; same for "symbol", "pointer".  Next try for an "anything" method  if the object is patchable (i.e., can have proper inlets)
	    send it on to obj_list which will unpack the list into the inlets  otherwise gove up and complain.  for now we assume that all "gobjs" are text unless explicitly
    overridden later by calling class_setbehavior().  I'm not sure
    how to deal with Pds that aren't gobjs; shouldn't there be a
    way to check that at run time?  Perhaps the presence of a "newmethod"
    should be our cue, or perhaps the "tiny" flag.   another matter.  This routine does two unrelated things: it creates
    a Pd class, but also adds a "new" method to create an instance of it.
    These are combined for historical reasons and for brevity in writing
    objects.  To avoid adding a "new" method send a null function pointer.
    To add additional ones, use class_addcreator below.  Some "classes", like
    "select", are actually two classes of the same name, one for the single-
    argument form, one for the multiple one; see select_setup() to find out
    how this is handled.   add a "new" method by the name specified by the object  if we're loading an extern it might have been invoked by a
		longer file name; in this case, make this an admissible name
		too.  add a creation method, which is a function that returns a Pd object
    suitable for putting in an object box.  We presume you've got a class it
    can belong to, but this won't be used until the newmethod is actually
    called back (and the new method explicitly takes care of this.)  "signal" method specifies that we take audio signals but
	that we don't want automatic float to signal conversion.  This
	is obsolete; you should now use the CLASS_MAINSIGNALIN macro.  check for special cases.  "Pointer" is missing here so that
    	pd_objectmaker's pointer method can be typechecked differently.   Instead of these, see the "class_addfloat", etc.,  macros in m_pd.h  ---------------- the symbol table ------------------------  printf("gensym: %s\n", s); this routine is called when a new "object" is requested whose class Pd
    doesn't know.  Pd tries to load it as an extern, then as an abstraction.  bug fix by Krzysztof Czaja  This is externally available, but note that it might later disappear; the
whole "newest" thing is a hack which needs to be redesigned.  horribly, we need prototypes for each of the artificial function
    calls in typedmess(), to keep the compiler quiet.  check for messages that are handled by fixed slots in the class
    	structure.  We don't catch "pointer" though so that sending "pointer"
	to pd_objectmaker doesn't require that we supply a pointer value.  if it's an unfilled "dollar" argument it appears
			    as zero here; cheat and bash it to the null
			    symbol.  Unfortunately, this lets real zeros
			    pass as symbols too, which seems wrong...  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.  #ifdef ROCKBOX ROCKBOX  ROCKBOX  name under which an extern is invoked  factory for creating "object" boxes  factory for creating canvases  handle "list" messages to Pds without explicit list methods defined.  a list with one element which is a number can be handled by a
	    "float" method if any is defined; same for "symbol", "pointer".  Next try for an "anything" method  if the object is patchable (i.e., can have proper inlets)
	    send it on to obj_list which will unpack the list into the inlets  otherwise gove up and complain.  for now we assume that all "gobjs" are text unless explicitly
    overridden later by calling class_setbehavior().  I'm not sure
    how to deal with Pds that aren't gobjs; shouldn't there be a
    way to check that at run time?  Perhaps the presence of a "newmethod"
    should be our cue, or perhaps the "tiny" flag.   another matter.  This routine does two unrelated things: it creates
    a Pd class, but also adds a "new" method to create an instance of it.
    These are combined for historical reasons and for brevity in writing
    objects.  To avoid adding a "new" method send a null function pointer.
    To add additional ones, use class_addcreator below.  Some "classes", like
    "select", are actually two classes of the same name, one for the single-
    argument form, one for the multiple one; see select_setup() to find out
    how this is handled.   add a "new" method by the name specified by the object  if we're loading an extern it might have been invoked by a
		longer file name; in this case, make this an admissible name
		too.  add a creation method, which is a function that returns a Pd object
    suitable for putting in an object box.  We presume you've got a class it
    can belong to, but this won't be used until the newmethod is actually
    called back (and the new method explicitly takes care of this.)  "signal" method specifies that we take audio signals but
	that we don't want automatic float to signal conversion.  This
	is obsolete; you should now use the CLASS_MAINSIGNALIN macro.  check for special cases.  "Pointer" is missing here so that
    	pd_objectmaker's pointer method can be typechecked differently.   Instead of these, see the "class_addfloat", etc.,  macros in m_pd.h  ---------------- the symbol table ------------------------  printf("gensym: %s\n", s); this routine is called when a new "object" is requested whose class Pd
    doesn't know.  Pd tries to load it as an extern, then as an abstraction.  bug fix by Krzysztof Czaja  This is externally available, but note that it might later disappear; the
whole "newest" thing is a hack which needs to be redesigned.  horribly, we need prototypes for each of the artificial function
    calls in typedmess(), to keep the compiler quiet.  check for messages that are handled by fixed slots in the class
    	structure.  We don't catch "pointer" though so that sending "pointer"
	to pd_objectmaker doesn't require that we supply a pointer value.  if it's an unfilled "dollar" argument it appears
			    as zero here; cheat and bash it to the null
			    symbol.  Unfortunately, this lets real zeros
			    pass as symbols too, which seems wrong... 