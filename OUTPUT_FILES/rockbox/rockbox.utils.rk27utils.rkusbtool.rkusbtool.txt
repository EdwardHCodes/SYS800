 on ubuntu compile with gcc -W rkusbtool.c -o rkusbtool -lusb-1.0 -I/usr/include/libusb-1.0/  rockchip specific commands  device to host  transfer command to the device  get CSW response from device  In case of CSW indicating error dump the content of the packet  enter command  RK_GET_VERSION, RK_OPEN_SYSDISK, RK_SWITCH_ROCKUSB  size of transfer in response to this command  get the response  print banner  arguments handling  initialize libusb  usb_set_debug(2);  BulkOnly reset ret = libusb_control_transfer(hdev, 0x21, 0xff, 0, 0, NULL, 0, USB_TIMEOUT); BulkOnly get max lun ret = libusb_control_transfer(hdev, 0xa1, 0xfe, 0, 0, &maxlun, 1, USB_TIMEOUT); Devices that do not support multiple LUNs may STALL this command. if (ret == 0)   maxlun = -1;printf("MAXLUN: %d\n", maxlun);if (ret){    libusb_close(hdev);    return ret;} on ubuntu compile with gcc -W rkusbtool.c -o rkusbtool -lusb-1.0 -I/usr/include/libusb-1.0/  rockchip specific commands  device to host  transfer command to the device  get CSW response from device  In case of CSW indicating error dump the content of the packet  enter command  RK_GET_VERSION, RK_OPEN_SYSDISK, RK_SWITCH_ROCKUSB  size of transfer in response to this command  get the response  print banner  arguments handling  initialize libusb  usb_set_debug(2);  BulkOnly reset ret = libusb_control_transfer(hdev, 0x21, 0xff, 0, 0, NULL, 0, USB_TIMEOUT); BulkOnly get max lun ret = libusb_control_transfer(hdev, 0xa1, 0xfe, 0, 0, &maxlun, 1, USB_TIMEOUT); Devices that do not support multiple LUNs may STALL this command. if (ret == 0)   maxlun = -1;printf("MAXLUN: %d\n", maxlun);if (ret){    libusb_close(hdev);    return ret;} on ubuntu compile with gcc -W rkusbtool.c -o rkusbtool -lusb-1.0 -I/usr/include/libusb-1.0/  rockchip specific commands  device to host  transfer command to the device  get CSW response from device  In case of CSW indicating error dump the content of the packet  enter command  RK_GET_VERSION, RK_OPEN_SYSDISK, RK_SWITCH_ROCKUSB  size of transfer in response to this command  get the response  print banner  arguments handling  initialize libusb  usb_set_debug(2);  BulkOnly reset ret = libusb_control_transfer(hdev, 0x21, 0xff, 0, 0, NULL, 0, USB_TIMEOUT); BulkOnly get max lun ret = libusb_control_transfer(hdev, 0xa1, 0xfe, 0, 0, &maxlun, 1, USB_TIMEOUT); Devices that do not support multiple LUNs may STALL this command. if (ret == 0)   maxlun = -1;printf("MAXLUN: %d\n", maxlun);if (ret){    libusb_close(hdev);    return ret;}