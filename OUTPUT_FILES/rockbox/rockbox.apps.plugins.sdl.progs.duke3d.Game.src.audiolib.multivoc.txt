
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: MULTIVOC.C

   author: James R. Dose
   date:   December 20, 1993

   Routines to provide multichannel digitized sound playback for
   Sound Blaster compatible sound cards.

   (c) Copyright 1993 James R. Dose.  All Rights Reserved.
********************************************************************* for the Mutex #define IS_QUIET( ptr )  ( ( void * )( ptr ) == ( void * )&MV_VolumeTable[ 0 ] )static signed short MV_VolumeTable[ MV_MaxVolume + 1 ][ 256 ];static signed short MV_VolumeTable[ 63 + 1 ][ 256 ];static Pan MV_PanTable[ MV_NumPanPositions ][ MV_MaxVolume + 1 ]; raw samples in range [-2^15, 2^15-1], interleaved stereo static char  *MV_HarshClipTable;---------------------------------------------------------------------
   Function: MV_ErrorString

   Returns a pointer to the error message associated with an error
   number.  A -1 returns a pointer the current error.
---------------------------------------------------------------------*********************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: MV_Mix

   Mixes the sound into the buffer.
--------------------------------------------------------------------- Add this voice to the mix Check if the last sample in this buffer would be beyond the length of the sample block Get the next block of sound Get the position of the last sample in the buffer---------------------------------------------------------------------
   Function: MV_PlayVoice

   Adds a voice to the play list.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_StopVoice

   Removes the voice from the play list and adds it to the free list.
--------------------------------------------------------------------- move the voice from the play list to the free list---------------------------------------------------------------------
   Function: MV_ServiceVoc

   Starts playback of the waiting buffer and mixes the next one.
--------------------------------------------------------------------- static int backcolor = 1; Toggle which buffer we'll mix next Play any waiting voices      if ( ( voice < &MV_Voices[ 0 ] ) || ( voice > &MV_Voices[ 8 ] ) )         {         SetBorderColor(backcolor++);         break;         } This sound is null, early out, or face a nasty crash. Is this voice done?---------------------------------------------------------------------
   Function: MV_GetNextVOCBlock

   Interperate the information of a VOC format sound file.
--------------------------------------------------------------------- Stop playing if we get a NULL pointer End of data Sound data block Skip packed or stereo data Sound continuation block Silence Not implimented. Marker Not implimented. ASCII string Not implimented. Repeat begin Repeat end Extended block New sound data block Unknown data.  Probably not a VOC file. Multiply by MixBufferSize - 1---------------------------------------------------------------------
   Function: MV_GetNextDemandFeedBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetNextRawBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetNextWAVBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_ServiceRecord

   Starts recording of the waiting buffer.
--------------------------------------------------------------------- Toggle which buffer we'll mix next---------------------------------------------------------------------
   Function: MV_GetVoice

   Locates the voice with the specified handle.
--------------------------------------------------------------------- SBF - should this return null?---------------------------------------------------------------------
   Function: MV_VoicePlaying

   Checks if the voice associated with the specified handle is
   playing.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_KillAllVoices

   Stops output of all currently active voices.
--------------------------------------------------------------------- Remove all the voices from the list---------------------------------------------------------------------
   Function: MV_Kill

   Stops output of the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_VoicesPlaying

   Determines the number of currently active voices.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_AllocVoice

   Retrieve an inactive or lower priority voice for output.
---------------------------------------------------------------------return( NULL ); Check if we have any free voices check if we have a higher priority than a voice that is playing. Check if any voices are in the voice pool No free voices Find a free voice handle---------------------------------------------------------------------
   Function: MV_VoiceAvailable

   Checks if a voice can be play at the specified priority.
--------------------------------------------------------------------- Check if we have any free voices check if we have a higher priority than a voice that is playing.---------------------------------------------------------------------
   Function: MV_SetVoicePitch

   Sets the pitch for the specified voice.
--------------------------------------------------------------------- Multiply by MixBufferSize - 1---------------------------------------------------------------------
   Function: MV_SetPitch

   Sets the pitch for the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetFrequency

   Sets the frequency for the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetVolumeTable

   Returns a pointer to the volume table associated with the specified
   volume.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVoiceMixMode

   Selects which method should be used to mix the voice.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVoiceVolume

   Sets the stereo and mono volume level of the voice associated
   with the specified handle.
--------------------------------------------------------------------- SBPro uses reversed panning---------------------------------------------------------------------
   Function: MV_EndLooping

   Stops the voice associated with the specified handle from looping
   without stoping the sound.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetPan

   Sets the stereo and mono volume level of the voice associated
   with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_Pan3D

   Set the angle and distance from the listener of the voice associated
   with the specified handle.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_SetReverb

   Sets the level of reverb to add to mix.
--------------------------------------------------------------------- &MV_VolumeTable[ MV_ReverbLevel ];---------------------------------------------------------------------
   Function: MV_SetFastReverb

   Sets the level of reverb to add to mix.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetMaxReverbDelay

   Returns the maximum delay time for reverb.
---------------------------------------------------------------------MixBufferSize * MV_NumberOfBuffers;---------------------------------------------------------------------
   Function: MV_GetReverbDelay

   Returns the current delay time for reverb.
--------------------------------------------------------------------- / MV_SampleSize;---------------------------------------------------------------------
   Function: MV_SetReverbDelay

   Sets the delay level of reverb to add to mix.
--------------------------------------------------------------------- blah, ignore MV_ReverbDelay *= MV_SampleSize;---------------------------------------------------------------------
   Function: MV_SetMixMode

   Prepares Multivoc to play stereo of mono digitized sounds.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_StartPlayback

   Starts the sound playback engine.
--------------------------------------------------------------------- Initialize the buffers Set the mix buffer variablesJIM   MV_MixRate = MV_RequestedMixRate;   return( MV_Ok ); Start playback---------------------------------------------------------------------
   Function: MV_StopPlayback

   Stops the sound playback engine.
--------------------------------------------------------------------- Stop sound playback Make sure all callbacks are done.---------------------------------------------------------------------
   Function: MV_StartRecording

   Starts the sound recording engine.
--------------------------------------------------------------------- Initialize the buffers Set the mix buffer variables Start playback---------------------------------------------------------------------
   Function: MV_StopRecord

   Stops the sound record engine.
--------------------------------------------------------------------- Stop sound playback---------------------------------------------------------------------
   Function: MV_StartDemandFeedPlayback

   Plays a digitized sound from a user controlled buffering system.
--------------------------------------------------------------------- Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayRaw

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayLoopedRaw

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayWAV

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayWAV3D

   Begin playback of sound data at specified angle and distance
   from listener.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_PlayLoopedWAV

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Check if it's PCM data. Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayVOC3D

   Begin playback of sound data at specified angle and distance
   from listener.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_PlayVOC

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayLoopedVOC

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Make sure it's a valid VOC file. Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CreateVolumeTable

   Create the table used to convert sound data to a specific volume
   level.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CalcVolume

   Create the table used to convert sound data to a specific volume
   level.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CalcPanTable

   Create the table used to determine the stereo volume level of
   a sound located at a specific angle and distance from the listener.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVolume

   Sets the volume of digitized sound playback.
--------------------------------------------------------------------- Calculate volume table---------------------------------------------------------------------
   Function: MV_GetVolume

   Returns the volume of digitized sound playback.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetCallBack

   Set the function to call when a voice stops.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetReverseStereo

   Set the orientation of the left and right channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetReverseStereo

   Returns the orientation of the left and right channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_TestPlayback

   Checks if playback has started.
--------------------------------------------------------------------- Just in case an error doesn't get reported---------------------------------------------------------------------
   Function: MV_Init

   Perform the initialization of variables and memory used by
   Multivoc.
--------------------------------------------------------------------- + sizeof( HARSH_CLIP_TABLE_8 );   MV_HarshClipTable = ptr + ( MV_TotalMemory - sizeof( HARSH_CLIP_TABLE_8 ) ); Set number of voices before calculating volume table Allocate mix buffer within 1st megabyte Initialize the sound cardJIM Set the sampling rate Set Mixer to play stereo digitized sound MV_BufferSize * 3;InitializeCriticalSection(&reverbCS); Make sure we don't cross a physical page Calculate pan table Start the playback engine Preserve error code while we shutdown.---------------------------------------------------------------------
   Function: MV_Shutdown

   Restore any resources allocated by Multivoc back to the system.
--------------------------------------------------------------------- Stop the sound recording engine Stop the sound playback engine Free reverb buffer, if allocatedDeleteCriticalSection(&reverbCS); Shutdown the sound card Free any voices we allocated Release the descriptor from our mix buffer---------------------------------------------------------------------
   Function: MV_UnlockMemory

   Unlocks all neccessary data.
---------------------------------------------------------------------   DPMI_Unlock( MV_VolumeTable );   DPMI_Unlock( MV_HarshClipTable );---------------------------------------------------------------------
   Function: MV_LockMemory

   Locks all neccessary data.
---------------------------------------------------------------------   status |= DPMI_Lock( MV_VolumeTable );   status |= DPMI_Lock( MV_HarshClipTable );
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: MULTIVOC.C

   author: James R. Dose
   date:   December 20, 1993

   Routines to provide multichannel digitized sound playback for
   Sound Blaster compatible sound cards.

   (c) Copyright 1993 James R. Dose.  All Rights Reserved.
********************************************************************* for the Mutex #define IS_QUIET( ptr )  ( ( void * )( ptr ) == ( void * )&MV_VolumeTable[ 0 ] )static signed short MV_VolumeTable[ MV_MaxVolume + 1 ][ 256 ];static signed short MV_VolumeTable[ 63 + 1 ][ 256 ];static Pan MV_PanTable[ MV_NumPanPositions ][ MV_MaxVolume + 1 ]; raw samples in range [-2^15, 2^15-1], interleaved stereo static char  *MV_HarshClipTable;---------------------------------------------------------------------
   Function: MV_ErrorString

   Returns a pointer to the error message associated with an error
   number.  A -1 returns a pointer the current error.
---------------------------------------------------------------------*********************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: MV_Mix

   Mixes the sound into the buffer.
--------------------------------------------------------------------- Add this voice to the mix Check if the last sample in this buffer would be beyond the length of the sample block Get the next block of sound Get the position of the last sample in the buffer---------------------------------------------------------------------
   Function: MV_PlayVoice

   Adds a voice to the play list.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_StopVoice

   Removes the voice from the play list and adds it to the free list.
--------------------------------------------------------------------- move the voice from the play list to the free list---------------------------------------------------------------------
   Function: MV_ServiceVoc

   Starts playback of the waiting buffer and mixes the next one.
--------------------------------------------------------------------- static int backcolor = 1; Toggle which buffer we'll mix next Play any waiting voices      if ( ( voice < &MV_Voices[ 0 ] ) || ( voice > &MV_Voices[ 8 ] ) )         {         SetBorderColor(backcolor++);         break;         } This sound is null, early out, or face a nasty crash. Is this voice done?---------------------------------------------------------------------
   Function: MV_GetNextVOCBlock

   Interperate the information of a VOC format sound file.
--------------------------------------------------------------------- Stop playing if we get a NULL pointer End of data Sound data block Skip packed or stereo data Sound continuation block Silence Not implimented. Marker Not implimented. ASCII string Not implimented. Repeat begin Repeat end Extended block New sound data block Unknown data.  Probably not a VOC file. Multiply by MixBufferSize - 1---------------------------------------------------------------------
   Function: MV_GetNextDemandFeedBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetNextRawBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetNextWAVBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_ServiceRecord

   Starts recording of the waiting buffer.
--------------------------------------------------------------------- Toggle which buffer we'll mix next---------------------------------------------------------------------
   Function: MV_GetVoice

   Locates the voice with the specified handle.
--------------------------------------------------------------------- SBF - should this return null?---------------------------------------------------------------------
   Function: MV_VoicePlaying

   Checks if the voice associated with the specified handle is
   playing.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_KillAllVoices

   Stops output of all currently active voices.
--------------------------------------------------------------------- Remove all the voices from the list---------------------------------------------------------------------
   Function: MV_Kill

   Stops output of the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_VoicesPlaying

   Determines the number of currently active voices.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_AllocVoice

   Retrieve an inactive or lower priority voice for output.
---------------------------------------------------------------------return( NULL ); Check if we have any free voices check if we have a higher priority than a voice that is playing. Check if any voices are in the voice pool No free voices Find a free voice handle---------------------------------------------------------------------
   Function: MV_VoiceAvailable

   Checks if a voice can be play at the specified priority.
--------------------------------------------------------------------- Check if we have any free voices check if we have a higher priority than a voice that is playing.---------------------------------------------------------------------
   Function: MV_SetVoicePitch

   Sets the pitch for the specified voice.
--------------------------------------------------------------------- Multiply by MixBufferSize - 1---------------------------------------------------------------------
   Function: MV_SetPitch

   Sets the pitch for the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetFrequency

   Sets the frequency for the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetVolumeTable

   Returns a pointer to the volume table associated with the specified
   volume.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVoiceMixMode

   Selects which method should be used to mix the voice.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVoiceVolume

   Sets the stereo and mono volume level of the voice associated
   with the specified handle.
--------------------------------------------------------------------- SBPro uses reversed panning---------------------------------------------------------------------
   Function: MV_EndLooping

   Stops the voice associated with the specified handle from looping
   without stoping the sound.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetPan

   Sets the stereo and mono volume level of the voice associated
   with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_Pan3D

   Set the angle and distance from the listener of the voice associated
   with the specified handle.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_SetReverb

   Sets the level of reverb to add to mix.
--------------------------------------------------------------------- &MV_VolumeTable[ MV_ReverbLevel ];---------------------------------------------------------------------
   Function: MV_SetFastReverb

   Sets the level of reverb to add to mix.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetMaxReverbDelay

   Returns the maximum delay time for reverb.
---------------------------------------------------------------------MixBufferSize * MV_NumberOfBuffers;---------------------------------------------------------------------
   Function: MV_GetReverbDelay

   Returns the current delay time for reverb.
--------------------------------------------------------------------- / MV_SampleSize;---------------------------------------------------------------------
   Function: MV_SetReverbDelay

   Sets the delay level of reverb to add to mix.
--------------------------------------------------------------------- blah, ignore MV_ReverbDelay *= MV_SampleSize;---------------------------------------------------------------------
   Function: MV_SetMixMode

   Prepares Multivoc to play stereo of mono digitized sounds.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_StartPlayback

   Starts the sound playback engine.
--------------------------------------------------------------------- Initialize the buffers Set the mix buffer variablesJIM   MV_MixRate = MV_RequestedMixRate;   return( MV_Ok ); Start playback---------------------------------------------------------------------
   Function: MV_StopPlayback

   Stops the sound playback engine.
--------------------------------------------------------------------- Stop sound playback Make sure all callbacks are done.---------------------------------------------------------------------
   Function: MV_StartRecording

   Starts the sound recording engine.
--------------------------------------------------------------------- Initialize the buffers Set the mix buffer variables Start playback---------------------------------------------------------------------
   Function: MV_StopRecord

   Stops the sound record engine.
--------------------------------------------------------------------- Stop sound playback---------------------------------------------------------------------
   Function: MV_StartDemandFeedPlayback

   Plays a digitized sound from a user controlled buffering system.
--------------------------------------------------------------------- Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayRaw

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayLoopedRaw

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayWAV

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayWAV3D

   Begin playback of sound data at specified angle and distance
   from listener.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_PlayLoopedWAV

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Check if it's PCM data. Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayVOC3D

   Begin playback of sound data at specified angle and distance
   from listener.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_PlayVOC

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayLoopedVOC

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Make sure it's a valid VOC file. Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CreateVolumeTable

   Create the table used to convert sound data to a specific volume
   level.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CalcVolume

   Create the table used to convert sound data to a specific volume
   level.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CalcPanTable

   Create the table used to determine the stereo volume level of
   a sound located at a specific angle and distance from the listener.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVolume

   Sets the volume of digitized sound playback.
--------------------------------------------------------------------- Calculate volume table---------------------------------------------------------------------
   Function: MV_GetVolume

   Returns the volume of digitized sound playback.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetCallBack

   Set the function to call when a voice stops.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetReverseStereo

   Set the orientation of the left and right channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetReverseStereo

   Returns the orientation of the left and right channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_TestPlayback

   Checks if playback has started.
--------------------------------------------------------------------- Just in case an error doesn't get reported---------------------------------------------------------------------
   Function: MV_Init

   Perform the initialization of variables and memory used by
   Multivoc.
--------------------------------------------------------------------- + sizeof( HARSH_CLIP_TABLE_8 );   MV_HarshClipTable = ptr + ( MV_TotalMemory - sizeof( HARSH_CLIP_TABLE_8 ) ); Set number of voices before calculating volume table Allocate mix buffer within 1st megabyte Initialize the sound cardJIM Set the sampling rate Set Mixer to play stereo digitized sound MV_BufferSize * 3;InitializeCriticalSection(&reverbCS); Make sure we don't cross a physical page Calculate pan table Start the playback engine Preserve error code while we shutdown.---------------------------------------------------------------------
   Function: MV_Shutdown

   Restore any resources allocated by Multivoc back to the system.
--------------------------------------------------------------------- Stop the sound recording engine Stop the sound playback engine Free reverb buffer, if allocatedDeleteCriticalSection(&reverbCS); Shutdown the sound card Free any voices we allocated Release the descriptor from our mix buffer---------------------------------------------------------------------
   Function: MV_UnlockMemory

   Unlocks all neccessary data.
---------------------------------------------------------------------   DPMI_Unlock( MV_VolumeTable );   DPMI_Unlock( MV_HarshClipTable );---------------------------------------------------------------------
   Function: MV_LockMemory

   Locks all neccessary data.
---------------------------------------------------------------------   status |= DPMI_Lock( MV_VolumeTable );   status |= DPMI_Lock( MV_HarshClipTable );
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: MULTIVOC.C

   author: James R. Dose
   date:   December 20, 1993

   Routines to provide multichannel digitized sound playback for
   Sound Blaster compatible sound cards.

   (c) Copyright 1993 James R. Dose.  All Rights Reserved.
********************************************************************* for the Mutex #define IS_QUIET( ptr )  ( ( void * )( ptr ) == ( void * )&MV_VolumeTable[ 0 ] )static signed short MV_VolumeTable[ MV_MaxVolume + 1 ][ 256 ];static signed short MV_VolumeTable[ 63 + 1 ][ 256 ];static Pan MV_PanTable[ MV_NumPanPositions ][ MV_MaxVolume + 1 ]; raw samples in range [-2^15, 2^15-1], interleaved stereo static char  *MV_HarshClipTable;---------------------------------------------------------------------
   Function: MV_ErrorString

   Returns a pointer to the error message associated with an error
   number.  A -1 returns a pointer the current error.
---------------------------------------------------------------------*********************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: MV_Mix

   Mixes the sound into the buffer.
--------------------------------------------------------------------- Add this voice to the mix Check if the last sample in this buffer would be beyond the length of the sample block Get the next block of sound Get the position of the last sample in the buffer---------------------------------------------------------------------
   Function: MV_PlayVoice

   Adds a voice to the play list.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_StopVoice

   Removes the voice from the play list and adds it to the free list.
--------------------------------------------------------------------- move the voice from the play list to the free list---------------------------------------------------------------------
   Function: MV_ServiceVoc

   Starts playback of the waiting buffer and mixes the next one.
--------------------------------------------------------------------- static int backcolor = 1; Toggle which buffer we'll mix next Play any waiting voices      if ( ( voice < &MV_Voices[ 0 ] ) || ( voice > &MV_Voices[ 8 ] ) )         {         SetBorderColor(backcolor++);         break;         } This sound is null, early out, or face a nasty crash. Is this voice done?---------------------------------------------------------------------
   Function: MV_GetNextVOCBlock

   Interperate the information of a VOC format sound file.
--------------------------------------------------------------------- Stop playing if we get a NULL pointer End of data Sound data block Skip packed or stereo data Sound continuation block Silence Not implimented. Marker Not implimented. ASCII string Not implimented. Repeat begin Repeat end Extended block New sound data block Unknown data.  Probably not a VOC file. Multiply by MixBufferSize - 1---------------------------------------------------------------------
   Function: MV_GetNextDemandFeedBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetNextRawBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetNextWAVBlock

   Controls playback of demand fed data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_ServiceRecord

   Starts recording of the waiting buffer.
--------------------------------------------------------------------- Toggle which buffer we'll mix next---------------------------------------------------------------------
   Function: MV_GetVoice

   Locates the voice with the specified handle.
--------------------------------------------------------------------- SBF - should this return null?---------------------------------------------------------------------
   Function: MV_VoicePlaying

   Checks if the voice associated with the specified handle is
   playing.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_KillAllVoices

   Stops output of all currently active voices.
--------------------------------------------------------------------- Remove all the voices from the list---------------------------------------------------------------------
   Function: MV_Kill

   Stops output of the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_VoicesPlaying

   Determines the number of currently active voices.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_AllocVoice

   Retrieve an inactive or lower priority voice for output.
---------------------------------------------------------------------return( NULL ); Check if we have any free voices check if we have a higher priority than a voice that is playing. Check if any voices are in the voice pool No free voices Find a free voice handle---------------------------------------------------------------------
   Function: MV_VoiceAvailable

   Checks if a voice can be play at the specified priority.
--------------------------------------------------------------------- Check if we have any free voices check if we have a higher priority than a voice that is playing.---------------------------------------------------------------------
   Function: MV_SetVoicePitch

   Sets the pitch for the specified voice.
--------------------------------------------------------------------- Multiply by MixBufferSize - 1---------------------------------------------------------------------
   Function: MV_SetPitch

   Sets the pitch for the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetFrequency

   Sets the frequency for the voice associated with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetVolumeTable

   Returns a pointer to the volume table associated with the specified
   volume.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVoiceMixMode

   Selects which method should be used to mix the voice.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVoiceVolume

   Sets the stereo and mono volume level of the voice associated
   with the specified handle.
--------------------------------------------------------------------- SBPro uses reversed panning---------------------------------------------------------------------
   Function: MV_EndLooping

   Stops the voice associated with the specified handle from looping
   without stoping the sound.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetPan

   Sets the stereo and mono volume level of the voice associated
   with the specified handle.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_Pan3D

   Set the angle and distance from the listener of the voice associated
   with the specified handle.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_SetReverb

   Sets the level of reverb to add to mix.
--------------------------------------------------------------------- &MV_VolumeTable[ MV_ReverbLevel ];---------------------------------------------------------------------
   Function: MV_SetFastReverb

   Sets the level of reverb to add to mix.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetMaxReverbDelay

   Returns the maximum delay time for reverb.
---------------------------------------------------------------------MixBufferSize * MV_NumberOfBuffers;---------------------------------------------------------------------
   Function: MV_GetReverbDelay

   Returns the current delay time for reverb.
--------------------------------------------------------------------- / MV_SampleSize;---------------------------------------------------------------------
   Function: MV_SetReverbDelay

   Sets the delay level of reverb to add to mix.
--------------------------------------------------------------------- blah, ignore MV_ReverbDelay *= MV_SampleSize;---------------------------------------------------------------------
   Function: MV_SetMixMode

   Prepares Multivoc to play stereo of mono digitized sounds.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_StartPlayback

   Starts the sound playback engine.
--------------------------------------------------------------------- Initialize the buffers Set the mix buffer variablesJIM   MV_MixRate = MV_RequestedMixRate;   return( MV_Ok ); Start playback---------------------------------------------------------------------
   Function: MV_StopPlayback

   Stops the sound playback engine.
--------------------------------------------------------------------- Stop sound playback Make sure all callbacks are done.---------------------------------------------------------------------
   Function: MV_StartRecording

   Starts the sound recording engine.
--------------------------------------------------------------------- Initialize the buffers Set the mix buffer variables Start playback---------------------------------------------------------------------
   Function: MV_StopRecord

   Stops the sound record engine.
--------------------------------------------------------------------- Stop sound playback---------------------------------------------------------------------
   Function: MV_StartDemandFeedPlayback

   Plays a digitized sound from a user controlled buffering system.
--------------------------------------------------------------------- Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayRaw

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayLoopedRaw

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayWAV

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayWAV3D

   Begin playback of sound data at specified angle and distance
   from listener.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_PlayLoopedWAV

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Check if it's PCM data. Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_PlayVOC3D

   Begin playback of sound data at specified angle and distance
   from listener.
--------------------------------------------------------------------- Ensure angle is within 0 - 31---------------------------------------------------------------------
   Function: MV_PlayVOC

   Begin playback of sound data with the given sound levels and
   priority.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_PlayLoopedVOC

   Begin playback of sound data with the given sound levels and
   priority.
--------------------------------------------------------------------- Make sure it's a valid VOC file. Request a voice from the voice pool---------------------------------------------------------------------
   Function: MV_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CreateVolumeTable

   Create the table used to convert sound data to a specific volume
   level.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CalcVolume

   Create the table used to convert sound data to a specific volume
   level.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_CalcPanTable

   Create the table used to determine the stereo volume level of
   a sound located at a specific angle and distance from the listener.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetVolume

   Sets the volume of digitized sound playback.
--------------------------------------------------------------------- Calculate volume table---------------------------------------------------------------------
   Function: MV_GetVolume

   Returns the volume of digitized sound playback.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetCallBack

   Set the function to call when a voice stops.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_SetReverseStereo

   Set the orientation of the left and right channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_GetReverseStereo

   Returns the orientation of the left and right channels.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: MV_TestPlayback

   Checks if playback has started.
--------------------------------------------------------------------- Just in case an error doesn't get reported---------------------------------------------------------------------
   Function: MV_Init

   Perform the initialization of variables and memory used by
   Multivoc.
--------------------------------------------------------------------- + sizeof( HARSH_CLIP_TABLE_8 );   MV_HarshClipTable = ptr + ( MV_TotalMemory - sizeof( HARSH_CLIP_TABLE_8 ) ); Set number of voices before calculating volume table Allocate mix buffer within 1st megabyte Initialize the sound cardJIM Set the sampling rate Set Mixer to play stereo digitized sound MV_BufferSize * 3;InitializeCriticalSection(&reverbCS); Make sure we don't cross a physical page Calculate pan table Start the playback engine Preserve error code while we shutdown.---------------------------------------------------------------------
   Function: MV_Shutdown

   Restore any resources allocated by Multivoc back to the system.
--------------------------------------------------------------------- Stop the sound recording engine Stop the sound playback engine Free reverb buffer, if allocatedDeleteCriticalSection(&reverbCS); Shutdown the sound card Free any voices we allocated Release the descriptor from our mix buffer---------------------------------------------------------------------
   Function: MV_UnlockMemory

   Unlocks all neccessary data.
---------------------------------------------------------------------   DPMI_Unlock( MV_VolumeTable );   DPMI_Unlock( MV_HarshClipTable );---------------------------------------------------------------------
   Function: MV_LockMemory

   Locks all neccessary data.
---------------------------------------------------------------------   status |= DPMI_Lock( MV_VolumeTable );   status |= DPMI_Lock( MV_HarshClipTable );