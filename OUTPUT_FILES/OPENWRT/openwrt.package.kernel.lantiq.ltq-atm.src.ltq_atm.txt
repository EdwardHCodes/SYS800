*****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  *****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  *****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  *****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  *****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  *****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  *****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  *****************************************************************************
**
** FILE NAME    : ifxmips_atm_core.c
** PROJECT      : UEIP
** MODULES      : ATM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : ATM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
**
** Copyright 2017 Alexander Couzens <lynxis@fe80.eu>
******************************************************************************!
  \brief QSB cell delay variation due to concurrency
   QSB cell delay variation due to concurrency     !
  \brief QSB scheduler burst length
   QSB scheduler burst length                      !
  \brief QSB time step, all legal values are 1, 2, 4
   QSB time step, all legal values are 1, 2, 4     !
  \brief Write descriptor delay
   Write descriptor delay                          !
  \brief AAL5 padding byte ('~')
   AAL5 padding byte ('~')                         !
  \brief Max frame size for RX
   Max frame size for RX                           !
  \brief Min frame size for RX
   Min frame size for RX                           !
  \brief Max frame size for TX
   Max frame size for TX                           !
  \brief Min frame size for TX
   Min frame size for TX                           !
  \brief Drop error packet in RX path
   Drop error packet in RX path                    !
  \brief Number of descriptors per DMA RX channel
   Number of descriptors per DMA RX channel        !
  \brief Number of descriptors per DMA TX channel
   Number of descriptors per DMA TX channel        !
  \brief PPE core clock cycles between descriptor write and effectiveness in external RAM
 @}
 * ####################################
 *              Definition
 * ####################################
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Network Operations
 
 *  ADSL LED
 
 *  64-bit operation used by MIB calculation
 
 *  buffer manage functions
 
 *  mailbox handler and signal function
 
 *  QSB & HTU setting functions
 
 *  look up for connection ID
 
 *  Init & clean-up functions
 
 *  Exteranl Function
   cell level  MIB   These MIB should be read at ARC side, now put zero only.      AAL5 MIB      VCC related MIB   no timer support      check bandwidth   check existing vpi,vci    check whether it need to enable irq   allocate connection   reserve bandwidth     set qsb   update atm_vcc structure      enable irq    set port      set htu entry     get connection id     clear htu     release connection    disable irq   release bandwidth    wait for incoming packets to be processed by upper layers  the len of the data without offset and header   setup inband trailer      setup cell header     setup descriptor      update descriptor send pointer    write discriptor to memory and write back cache  operation and maintainance   update descriptor send pointer    write discriptor to memory and write back cache 
*  Description:
*    Add a 32-bit value to 64-bit value, and put result in a 64-bit variable.
*  Input:
*    opt1 --- ppe_u64_t, first operand, a 64-bit unsigned integer value
*    opt2 --- unsigned int, second operand, a 32-bit unsigned integer value
*    ret  --- ppe_u64_t, pointer to a variable to hold result
*  Output:
*    none
  must be burst length alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache   invalidate cache      allocate memory including header and padding      must be burst length alignment   only get valid queues   keep test OWN and C bit until data is ready  keep test OWN and C bit until data is ready any valid tx irqs  TX queue 
	 *  Peak Cell Rate (PCR) Limiter
	   disable PCR limiter   peak cell rate would be slightly lower than requested [maximum_rate / pcr = (qsb_clock / 8) * (time_step / 4) / pcr]   check if overflow takes place     A funny issue. Create two PVCs, one UBR and one UBR with max_pcr.  Send packets to these two PVCs at same time, it trigger strange behavior.  In A1, RAM from 0x80000000 to 0x0x8007FFFF was corrupted with fixed pattern 0x00000000 0x40000000.  In A4, PPE firmware keep emiting unknown cell and do not respond to driver.  To work around, create UBR always with max_pcr.  If user want to create UBR without max_pcr, we give a default one larger than line-rate.
	 *  Weighted Fair Queueing Factor (WFQF)
	   real time queue gets weighted fair queueing bypass    WFQF calculation here is based on virtual cell rates, to reduce granularity for high rates    WFQF is maximum cell rate / garenteed cell rate                                               wfqf = qsb_minimum_cell_rate * QSB_WFQ_NONUBR_MAX / requested_minimum_peak_cell_rate        
	 *  Sustained Cell Rate (SCR) Leaky Bucket Shaper VBR.0/VBR.1
	   disable shaper    Cell Loss Priority  (CLP)     CLP1      CLP0      Rate Shaper Parameter (TS) and Burst Tolerance Parameter for SCR (tauS)   Queue Parameter Table (QPT)   Queue VBR Paramter Table (QVPT) 
	 *  set SCT and SPT per port
	   integer value of Tsb      fractional part of Tsb    carry over to integer part (?)    1. set mask                                   2. write value to data transfer register      3. start the tranfer                          SCT (FracRate)    SPT (SBV + PN + IntRage)      0xx, user data  Please refer to Amazon spec 15.4 for setting these values.    There is a delay between PPE write descriptor and descriptor is         really stored in memory. Host also has this delay when writing          descriptor. So PPE will use this value to determine if the write        operation makes effect.                                                 Because of the limitation of length field in descriptors, the packet    size could not be larger than 64K minus overhead size.                  clear atm private data structure  allocate memory for RX (AAL) descriptors  allocate memory for RX (OAM) descriptors  allocate memory for RX (OAM) buffer  allocate memory for TX descriptors  allocate memory for TX skb pointers  setup RX (AAL) descriptors  setup RX (OAM) descriptors  setup TX descriptors and skb pointers  descriptor initialized
	 *  General Registers
	 
	 *  WRX Queue Configuration Table
	 
	 *  WRX DMA Channel Configuration Table
	 
	 *  HTU Tables
	   OAM HTU Entry   
	 *  General Registers
	 
	 *  WTX Port Configuration Table
	 
	 *  WTX Queue Configuration Table
	 
	 *  WTX DMA Channel Configuration Table
	   normal connection     TODO: ReTX set xdata_addr  create devices    register interrupt handler  