
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: SNDSCAPE.C

   author: James R. Dose
   date:   October 25, 1994

   Low level routines to support the Ensoniq Soundscape.

   (c) Copyright 1994 James R. Dose.  All Rights Reserved.
********************************************************************* some globals for chip type, ports, DMA, IRQs ... and stuff base address of the Ensoniq gate-array chip the AD-1848 base address the DMA channel used for PCM the PCM IRQ the MPU-401 IRQ the Ensoniq chip type SoundBlaster emulation flag CD-ROM flag the Wave IRQ index - for hardware regs Old IRQs flag to support older HW adequate stack size These declarations are necessary to use the inline assembly pragmas. This function will get the current stack selector and pointer and save them off. This function will set the stack selector and pointer to the specified values.---------------------------------------------------------------------
   Function: SOUNDSCAPE_ErrorString

   Returns a pointer to the error message associated with an error
   number.  A -1 returns a pointer the current error.
---------------------------------------------------------------------*********************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: SOUNDSCAPE_EnableInterrupt

   Enables the triggering of the sound card interrupt.
--------------------------------------------------------------------- Unmask system interrupt---------------------------------------------------------------------
   Function: SOUNDSCAPE_DisableInterrupt

   Disables the triggering of the sound card interrupt.
--------------------------------------------------------------------- Restore interrupt mask---------------------------------------------------------------------
   Function: SOUNDSCAPE_ServiceInterrupt

   Handles interrupt generated by sound card at the end of a voice
   transfer.  Calls the user supplied callback function.
--------------------------------------------------------------------- save stack set our stack restore stack Wasn't our interrupt.  Call the old one. clear the AD-1848 interrupt Keep track of current buffer Call the caller's callback function restore stack send EOI to Interrupt Controller---------------------------------------------------------------------
   Function: ga_read

   Reads Ensoniq indirect registers.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ga_write

   Writes to Ensoniq indirect registers.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ad_read

   Reads the AD-1848 indirect registers.  This function should not be
   used while the AD-1848 mode change is enabled
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ad_write

   Writes to the AD-1848 indirect registers.  This function should
   not be used while the AD-1848 mode change is enabled.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: tdelay

   Delay function - 250ms - for AD-1848 re-synch and autocalibration.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: pcm_format

   Sets the PCM data format.
--------------------------------------------------------------------- build the register value based on format Set it to 11025 hz set other format bits and format globals enable mode change, point to format reg write the format delay for internal re-synch exit mode change state delay for autocalibration---------------------------------------------------------------------
   Function: SOUNDSCAPE_SetPlaybackRate

   Sets the rate at which the digitized sound will be played in
   hertz.
--------------------------------------------------------------------- Set the rate---------------------------------------------------------------------
   Function: SOUNDSCAPE_GetPlaybackRate

   Returns the rate at which the digitized sound will be played in
   hertz.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_SetMixMode

   Sets the sound card to play samples in mono or stereo.
--------------------------------------------------------------------- Set the mixmode---------------------------------------------------------------------
   Function: SOUNDSCAPE_StopPlayback

   Ends the DMA transfer of digitized sound to the sound card.
--------------------------------------------------------------------- Don't allow anymore interrupts stop the AD-1848  let it finish it's cycles  Disable the DMA channel---------------------------------------------------------------------
   Function: SOUNDSCAPE_SetupDMABuffer

   Programs the DMAC for sound transfer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_GetCurrentPos

   Returns the offset within the current sound being played.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_BeginPlayback

   Starts playback of digitized sound.
--------------------------------------------------------------------- setup the AD-1848 interrupt count set the interrupt count value based on the format. count will decrement every sample period and generate an interrupt when in rolls over. we want this always to be at every 1/2 buffer, regardless of the data format, so the count must be adjusted accordingly. unmask the host DMA controller  start the AD-1848 ---------------------------------------------------------------------
   Function: SOUNDSCAPE_BeginBufferedPlayback

   Begins multibuffered playback of digitized sound on the sound card.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_GetCardInfo

   Returns the maximum number of bits that can represent a sample
   (8 or 16) and the number of channels (1 for mono, 2 for stereo).
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_SetCallBack

   Specifies the user function to call at the end of a sound transfer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_UnlockMemory

   Unlocks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_LockMemory

   Locks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: allocateTimerStack

   Allocate a block of memory from conventional (low) memory and return
   the selector (which can go directly into a segment register) of the
   memory block or 0 if an error occured.
--------------------------------------------------------------------- clear all registers DPMI allocate conventional memory size in paragraphs DPMI call returns selector in dx (ax contains real mode segment which is ignored here) Couldn't allocate memory.---------------------------------------------------------------------
   Function: deallocateTimerStack

   Deallocate a block of conventional (low) memory given a selector to
   it.  Assumes the block was allocated with DPMI function 0x100.
--------------------------------------------------------------------- clear all registers---------------------------------------------------------------------
   Function: parse

   Parses for the right hand string of an .INI file equate.
--------------------------------------------------------------------- get a new string parse up to the '=' see if it's the one we want copy the right hand value to the destination string---------------------------------------------------------------------
   Function: SOUNDSCAPE_FindCard

   Determines if a SoundScape is present and where it is located.
--------------------------------------------------------------------- do a hardware test formulate the chip ID parse for the AD-1848 address if necessary otherwise, the base address is fixed we're done with the file if it's an ODIE board, note CD-ROM decode enable build the Wave IRQ index value---------------------------------------------------------------------
   Function: SOUNDSCAPE_Setup

   Setup the Soundscape card for native mode PCM.
--------------------------------------------------------------------- if necessary, clear any pending SB ints make sure the AD-1848 is not running if necessary, do some signal re-routing get the gate-array off of the DMA channel set HostIRQ to MIDIIRQ for now now, route the AD-1848 stuff ... set the AD-1848 chip decode setup the DMA polarity init the CD-ROM (AD-1848) config register enable mode change, point to config reg set interf cnfg reg for DMA mode, single chan, autocal on exit mode change state delay for autocalibration Install our interrupt handler max left and right volumes clear any pending interrupt condition enable the interrupt pin---------------------------------------------------------------------
   Function: SOUNDSCAPE_GetMIDIPort

   Gets the address of the SoundScape MIDI port.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_Init

   Initializes the sound card and prepares the module to play
   digitized sounds.
--------------------------------------------------------------------- Save the interrupt masks Leave a little room at top of stack just for the hell of it...	printf("Testing DMA and IRQ ...\n");	if( test_dma_irq() )      {      printf("\t\007Hardware Not Responding\n\n");      close_soundscape();      return( SOUNDSCAPE_Error );      }---------------------------------------------------------------------
   Function: SOUNDSCAPE_Shutdown

   Ends transfer of sound data to the sound card and restores the
   system resources used by the card.
--------------------------------------------------------------------- Halt the DMA transfer disable the AD-1848 interrupt pin if necessary, do some signal re-routing re-init the CD-ROM (AD-1848) config register as needed. this will disable the AD-1848 interface. if necessary, reset the SoundBlaster IRQ re-assign the gate-array DMA channel Restore the original interrupt
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: SNDSCAPE.C

   author: James R. Dose
   date:   October 25, 1994

   Low level routines to support the Ensoniq Soundscape.

   (c) Copyright 1994 James R. Dose.  All Rights Reserved.
********************************************************************* some globals for chip type, ports, DMA, IRQs ... and stuff base address of the Ensoniq gate-array chip the AD-1848 base address the DMA channel used for PCM the PCM IRQ the MPU-401 IRQ the Ensoniq chip type SoundBlaster emulation flag CD-ROM flag the Wave IRQ index - for hardware regs Old IRQs flag to support older HW adequate stack size These declarations are necessary to use the inline assembly pragmas. This function will get the current stack selector and pointer and save them off. This function will set the stack selector and pointer to the specified values.---------------------------------------------------------------------
   Function: SOUNDSCAPE_ErrorString

   Returns a pointer to the error message associated with an error
   number.  A -1 returns a pointer the current error.
---------------------------------------------------------------------*********************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: SOUNDSCAPE_EnableInterrupt

   Enables the triggering of the sound card interrupt.
--------------------------------------------------------------------- Unmask system interrupt---------------------------------------------------------------------
   Function: SOUNDSCAPE_DisableInterrupt

   Disables the triggering of the sound card interrupt.
--------------------------------------------------------------------- Restore interrupt mask---------------------------------------------------------------------
   Function: SOUNDSCAPE_ServiceInterrupt

   Handles interrupt generated by sound card at the end of a voice
   transfer.  Calls the user supplied callback function.
--------------------------------------------------------------------- save stack set our stack restore stack Wasn't our interrupt.  Call the old one. clear the AD-1848 interrupt Keep track of current buffer Call the caller's callback function restore stack send EOI to Interrupt Controller---------------------------------------------------------------------
   Function: ga_read

   Reads Ensoniq indirect registers.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ga_write

   Writes to Ensoniq indirect registers.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ad_read

   Reads the AD-1848 indirect registers.  This function should not be
   used while the AD-1848 mode change is enabled
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ad_write

   Writes to the AD-1848 indirect registers.  This function should
   not be used while the AD-1848 mode change is enabled.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: tdelay

   Delay function - 250ms - for AD-1848 re-synch and autocalibration.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: pcm_format

   Sets the PCM data format.
--------------------------------------------------------------------- build the register value based on format Set it to 11025 hz set other format bits and format globals enable mode change, point to format reg write the format delay for internal re-synch exit mode change state delay for autocalibration---------------------------------------------------------------------
   Function: SOUNDSCAPE_SetPlaybackRate

   Sets the rate at which the digitized sound will be played in
   hertz.
--------------------------------------------------------------------- Set the rate---------------------------------------------------------------------
   Function: SOUNDSCAPE_GetPlaybackRate

   Returns the rate at which the digitized sound will be played in
   hertz.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_SetMixMode

   Sets the sound card to play samples in mono or stereo.
--------------------------------------------------------------------- Set the mixmode---------------------------------------------------------------------
   Function: SOUNDSCAPE_StopPlayback

   Ends the DMA transfer of digitized sound to the sound card.
--------------------------------------------------------------------- Don't allow anymore interrupts stop the AD-1848  let it finish it's cycles  Disable the DMA channel---------------------------------------------------------------------
   Function: SOUNDSCAPE_SetupDMABuffer

   Programs the DMAC for sound transfer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_GetCurrentPos

   Returns the offset within the current sound being played.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_BeginPlayback

   Starts playback of digitized sound.
--------------------------------------------------------------------- setup the AD-1848 interrupt count set the interrupt count value based on the format. count will decrement every sample period and generate an interrupt when in rolls over. we want this always to be at every 1/2 buffer, regardless of the data format, so the count must be adjusted accordingly. unmask the host DMA controller  start the AD-1848 ---------------------------------------------------------------------
   Function: SOUNDSCAPE_BeginBufferedPlayback

   Begins multibuffered playback of digitized sound on the sound card.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_GetCardInfo

   Returns the maximum number of bits that can represent a sample
   (8 or 16) and the number of channels (1 for mono, 2 for stereo).
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_SetCallBack

   Specifies the user function to call at the end of a sound transfer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_UnlockMemory

   Unlocks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_LockMemory

   Locks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: allocateTimerStack

   Allocate a block of memory from conventional (low) memory and return
   the selector (which can go directly into a segment register) of the
   memory block or 0 if an error occured.
--------------------------------------------------------------------- clear all registers DPMI allocate conventional memory size in paragraphs DPMI call returns selector in dx (ax contains real mode segment which is ignored here) Couldn't allocate memory.---------------------------------------------------------------------
   Function: deallocateTimerStack

   Deallocate a block of conventional (low) memory given a selector to
   it.  Assumes the block was allocated with DPMI function 0x100.
--------------------------------------------------------------------- clear all registers---------------------------------------------------------------------
   Function: parse

   Parses for the right hand string of an .INI file equate.
--------------------------------------------------------------------- get a new string parse up to the '=' see if it's the one we want copy the right hand value to the destination string---------------------------------------------------------------------
   Function: SOUNDSCAPE_FindCard

   Determines if a SoundScape is present and where it is located.
--------------------------------------------------------------------- do a hardware test formulate the chip ID parse for the AD-1848 address if necessary otherwise, the base address is fixed we're done with the file if it's an ODIE board, note CD-ROM decode enable build the Wave IRQ index value---------------------------------------------------------------------
   Function: SOUNDSCAPE_Setup

   Setup the Soundscape card for native mode PCM.
--------------------------------------------------------------------- if necessary, clear any pending SB ints make sure the AD-1848 is not running if necessary, do some signal re-routing get the gate-array off of the DMA channel set HostIRQ to MIDIIRQ for now now, route the AD-1848 stuff ... set the AD-1848 chip decode setup the DMA polarity init the CD-ROM (AD-1848) config register enable mode change, point to config reg set interf cnfg reg for DMA mode, single chan, autocal on exit mode change state delay for autocalibration Install our interrupt handler max left and right volumes clear any pending interrupt condition enable the interrupt pin---------------------------------------------------------------------
   Function: SOUNDSCAPE_GetMIDIPort

   Gets the address of the SoundScape MIDI port.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_Init

   Initializes the sound card and prepares the module to play
   digitized sounds.
--------------------------------------------------------------------- Save the interrupt masks Leave a little room at top of stack just for the hell of it...	printf("Testing DMA and IRQ ...\n");	if( test_dma_irq() )      {      printf("\t\007Hardware Not Responding\n\n");      close_soundscape();      return( SOUNDSCAPE_Error );      }---------------------------------------------------------------------
   Function: SOUNDSCAPE_Shutdown

   Ends transfer of sound data to the sound card and restores the
   system resources used by the card.
--------------------------------------------------------------------- Halt the DMA transfer disable the AD-1848 interrupt pin if necessary, do some signal re-routing re-init the CD-ROM (AD-1848) config register as needed. this will disable the AD-1848 interface. if necessary, reset the SoundBlaster IRQ re-assign the gate-array DMA channel Restore the original interrupt
Copyright (C) 1994-1995 Apogee Software, Ltd.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*********************************************************************
   module: SNDSCAPE.C

   author: James R. Dose
   date:   October 25, 1994

   Low level routines to support the Ensoniq Soundscape.

   (c) Copyright 1994 James R. Dose.  All Rights Reserved.
********************************************************************* some globals for chip type, ports, DMA, IRQs ... and stuff base address of the Ensoniq gate-array chip the AD-1848 base address the DMA channel used for PCM the PCM IRQ the MPU-401 IRQ the Ensoniq chip type SoundBlaster emulation flag CD-ROM flag the Wave IRQ index - for hardware regs Old IRQs flag to support older HW adequate stack size These declarations are necessary to use the inline assembly pragmas. This function will get the current stack selector and pointer and save them off. This function will set the stack selector and pointer to the specified values.---------------------------------------------------------------------
   Function: SOUNDSCAPE_ErrorString

   Returns a pointer to the error message associated with an error
   number.  A -1 returns a pointer the current error.
---------------------------------------------------------------------*********************************************************************

   Memory locked functions:

*********************************************************************---------------------------------------------------------------------
   Function: SOUNDSCAPE_EnableInterrupt

   Enables the triggering of the sound card interrupt.
--------------------------------------------------------------------- Unmask system interrupt---------------------------------------------------------------------
   Function: SOUNDSCAPE_DisableInterrupt

   Disables the triggering of the sound card interrupt.
--------------------------------------------------------------------- Restore interrupt mask---------------------------------------------------------------------
   Function: SOUNDSCAPE_ServiceInterrupt

   Handles interrupt generated by sound card at the end of a voice
   transfer.  Calls the user supplied callback function.
--------------------------------------------------------------------- save stack set our stack restore stack Wasn't our interrupt.  Call the old one. clear the AD-1848 interrupt Keep track of current buffer Call the caller's callback function restore stack send EOI to Interrupt Controller---------------------------------------------------------------------
   Function: ga_read

   Reads Ensoniq indirect registers.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ga_write

   Writes to Ensoniq indirect registers.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ad_read

   Reads the AD-1848 indirect registers.  This function should not be
   used while the AD-1848 mode change is enabled
------------------------------------------------------------------------------------------------------------------------------------------
   Function: ad_write

   Writes to the AD-1848 indirect registers.  This function should
   not be used while the AD-1848 mode change is enabled.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: tdelay

   Delay function - 250ms - for AD-1848 re-synch and autocalibration.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: pcm_format

   Sets the PCM data format.
--------------------------------------------------------------------- build the register value based on format Set it to 11025 hz set other format bits and format globals enable mode change, point to format reg write the format delay for internal re-synch exit mode change state delay for autocalibration---------------------------------------------------------------------
   Function: SOUNDSCAPE_SetPlaybackRate

   Sets the rate at which the digitized sound will be played in
   hertz.
--------------------------------------------------------------------- Set the rate---------------------------------------------------------------------
   Function: SOUNDSCAPE_GetPlaybackRate

   Returns the rate at which the digitized sound will be played in
   hertz.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_SetMixMode

   Sets the sound card to play samples in mono or stereo.
--------------------------------------------------------------------- Set the mixmode---------------------------------------------------------------------
   Function: SOUNDSCAPE_StopPlayback

   Ends the DMA transfer of digitized sound to the sound card.
--------------------------------------------------------------------- Don't allow anymore interrupts stop the AD-1848  let it finish it's cycles  Disable the DMA channel---------------------------------------------------------------------
   Function: SOUNDSCAPE_SetupDMABuffer

   Programs the DMAC for sound transfer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_GetCurrentPos

   Returns the offset within the current sound being played.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_BeginPlayback

   Starts playback of digitized sound.
--------------------------------------------------------------------- setup the AD-1848 interrupt count set the interrupt count value based on the format. count will decrement every sample period and generate an interrupt when in rolls over. we want this always to be at every 1/2 buffer, regardless of the data format, so the count must be adjusted accordingly. unmask the host DMA controller  start the AD-1848 ---------------------------------------------------------------------
   Function: SOUNDSCAPE_BeginBufferedPlayback

   Begins multibuffered playback of digitized sound on the sound card.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_GetCardInfo

   Returns the maximum number of bits that can represent a sample
   (8 or 16) and the number of channels (1 for mono, 2 for stereo).
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_SetCallBack

   Specifies the user function to call at the end of a sound transfer.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_LockEnd

   Used for determining the length of the functions to lock in memory.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_UnlockMemory

   Unlocks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_LockMemory

   Locks all neccessary data.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: allocateTimerStack

   Allocate a block of memory from conventional (low) memory and return
   the selector (which can go directly into a segment register) of the
   memory block or 0 if an error occured.
--------------------------------------------------------------------- clear all registers DPMI allocate conventional memory size in paragraphs DPMI call returns selector in dx (ax contains real mode segment which is ignored here) Couldn't allocate memory.---------------------------------------------------------------------
   Function: deallocateTimerStack

   Deallocate a block of conventional (low) memory given a selector to
   it.  Assumes the block was allocated with DPMI function 0x100.
--------------------------------------------------------------------- clear all registers---------------------------------------------------------------------
   Function: parse

   Parses for the right hand string of an .INI file equate.
--------------------------------------------------------------------- get a new string parse up to the '=' see if it's the one we want copy the right hand value to the destination string---------------------------------------------------------------------
   Function: SOUNDSCAPE_FindCard

   Determines if a SoundScape is present and where it is located.
--------------------------------------------------------------------- do a hardware test formulate the chip ID parse for the AD-1848 address if necessary otherwise, the base address is fixed we're done with the file if it's an ODIE board, note CD-ROM decode enable build the Wave IRQ index value---------------------------------------------------------------------
   Function: SOUNDSCAPE_Setup

   Setup the Soundscape card for native mode PCM.
--------------------------------------------------------------------- if necessary, clear any pending SB ints make sure the AD-1848 is not running if necessary, do some signal re-routing get the gate-array off of the DMA channel set HostIRQ to MIDIIRQ for now now, route the AD-1848 stuff ... set the AD-1848 chip decode setup the DMA polarity init the CD-ROM (AD-1848) config register enable mode change, point to config reg set interf cnfg reg for DMA mode, single chan, autocal on exit mode change state delay for autocalibration Install our interrupt handler max left and right volumes clear any pending interrupt condition enable the interrupt pin---------------------------------------------------------------------
   Function: SOUNDSCAPE_GetMIDIPort

   Gets the address of the SoundScape MIDI port.
------------------------------------------------------------------------------------------------------------------------------------------
   Function: SOUNDSCAPE_Init

   Initializes the sound card and prepares the module to play
   digitized sounds.
--------------------------------------------------------------------- Save the interrupt masks Leave a little room at top of stack just for the hell of it...	printf("Testing DMA and IRQ ...\n");	if( test_dma_irq() )      {      printf("\t\007Hardware Not Responding\n\n");      close_soundscape();      return( SOUNDSCAPE_Error );      }---------------------------------------------------------------------
   Function: SOUNDSCAPE_Shutdown

   Ends transfer of sound data to the sound card and restores the
   system resources used by the card.
--------------------------------------------------------------------- Halt the DMA transfer disable the AD-1848 interrupt pin if necessary, do some signal re-routing re-init the CD-ROM (AD-1848) config register as needed. this will disable the AD-1848 interface. if necessary, reset the SoundBlaster IRQ re-assign the gate-array DMA channel Restore the original interrupt