 Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.    sig~ and line~ control-to-signal converters;
    snapshot~ signal-to-control converter.
 -------------------------- sig~ ------------------------------  -------------------------- line~ ------------------------------  -------------------------- vline~ ------------------------------  has starttime elapsed?  If so update value and increment  if zero-length segment bash output value  negative delay input means stop and jump immediately to new value  check if we supplant the first item in the list.  We supplant
	an item by having an earlier starttime, or an equal starttime unless
	the equal one was instantaneous and the new one isn't (in which case
	we'll do a jump-and-slide starting at that time.)  -------------------------- snapshot~ ------------------------------  -------------------------- vsnapshot~ ------------------------------  ---------------- env~ - simple envelope follower. -----------------  header  a "float" outlet  a "clock" object  a Hanning window  number of points since last output  requested period of output  period rounded up to vecsize multiple  analysis window size in samples  result to output  summing buffer  callback function for the clock  cleanup on free  --------------------- threshold~ -----------------------------  bang out for high thresh  bang out for low thresh  wakeup for message output  scalar inlet  1 = high, 0 = low  value of high threshold  value of low threshold  msec remaining in dead period  msec per DSP tick  hi dead time in msec  lo dead time in msec  low state  no dead time  "set" message to specify thresholds and dead times  number in inlet sets state -- note incompatible with JMAX which used
    "int" message for this, impossible here because of auto signal conversion  we're high; look for low sample  we're low; look for high sample  ------------------------ global setup routine -------------------------  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.    sig~ and line~ control-to-signal converters;
    snapshot~ signal-to-control converter.
 -------------------------- sig~ ------------------------------  -------------------------- line~ ------------------------------  -------------------------- vline~ ------------------------------  has starttime elapsed?  If so update value and increment  if zero-length segment bash output value  negative delay input means stop and jump immediately to new value  check if we supplant the first item in the list.  We supplant
	an item by having an earlier starttime, or an equal starttime unless
	the equal one was instantaneous and the new one isn't (in which case
	we'll do a jump-and-slide starting at that time.)  -------------------------- snapshot~ ------------------------------  -------------------------- vsnapshot~ ------------------------------  ---------------- env~ - simple envelope follower. -----------------  header  a "float" outlet  a "clock" object  a Hanning window  number of points since last output  requested period of output  period rounded up to vecsize multiple  analysis window size in samples  result to output  summing buffer  callback function for the clock  cleanup on free  --------------------- threshold~ -----------------------------  bang out for high thresh  bang out for low thresh  wakeup for message output  scalar inlet  1 = high, 0 = low  value of high threshold  value of low threshold  msec remaining in dead period  msec per DSP tick  hi dead time in msec  lo dead time in msec  low state  no dead time  "set" message to specify thresholds and dead times  number in inlet sets state -- note incompatible with JMAX which used
    "int" message for this, impossible here because of auto signal conversion  we're high; look for low sample  we're low; look for high sample  ------------------------ global setup routine -------------------------  Copyright (c) 1997-1999 Miller Puckette.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.    sig~ and line~ control-to-signal converters;
    snapshot~ signal-to-control converter.
 -------------------------- sig~ ------------------------------  -------------------------- line~ ------------------------------  -------------------------- vline~ ------------------------------  has starttime elapsed?  If so update value and increment  if zero-length segment bash output value  negative delay input means stop and jump immediately to new value  check if we supplant the first item in the list.  We supplant
	an item by having an earlier starttime, or an equal starttime unless
	the equal one was instantaneous and the new one isn't (in which case
	we'll do a jump-and-slide starting at that time.)  -------------------------- snapshot~ ------------------------------  -------------------------- vsnapshot~ ------------------------------  ---------------- env~ - simple envelope follower. -----------------  header  a "float" outlet  a "clock" object  a Hanning window  number of points since last output  requested period of output  period rounded up to vecsize multiple  analysis window size in samples  result to output  summing buffer  callback function for the clock  cleanup on free  --------------------- threshold~ -----------------------------  bang out for high thresh  bang out for low thresh  wakeup for message output  scalar inlet  1 = high, 0 = low  value of high threshold  value of low threshold  msec remaining in dead period  msec per DSP tick  hi dead time in msec  lo dead time in msec  low state  no dead time  "set" message to specify thresholds and dead times  number in inlet sets state -- note incompatible with JMAX which used
    "int" message for this, impossible here because of auto signal conversion  we're high; look for low sample  we're low; look for high sample  ------------------------ global setup routine ------------------------- 