**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2012 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** slightly modified version from crc32.c in rockbox  polynomial 0x04c10db7  lookup table for 4 bits at a time is affordable  get one byte of data  upper nibble of our data  extract the 4 most significant bits  XOR in 4 bits of data into the extracted bits  shift the CRC register left 4 bits  do the table lookup and XOR the result  lower nibble of our data  extract the 4 most significant bits  XOR in 4 bits of data into the extracted bits  shift the CRC register left 4 bits  do the table lookup and XOR the result  length of the RKW header + binary length + 4 bytes of CRC  Clear the buffer to zero  Build the RKW header  magic  header size  base address  load address  end address  points to some unknown struct  reserved (we abuse the format
                                                * to store modelnum here
                                                 reserved  entry point  flags  header CRC  Copy the binary  calc binary CRC and put at the end **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2012 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** slightly modified version from crc32.c in rockbox  polynomial 0x04c10db7  lookup table for 4 bits at a time is affordable  get one byte of data  upper nibble of our data  extract the 4 most significant bits  XOR in 4 bits of data into the extracted bits  shift the CRC register left 4 bits  do the table lookup and XOR the result  lower nibble of our data  extract the 4 most significant bits  XOR in 4 bits of data into the extracted bits  shift the CRC register left 4 bits  do the table lookup and XOR the result  length of the RKW header + binary length + 4 bytes of CRC  Clear the buffer to zero  Build the RKW header  magic  header size  base address  load address  end address  points to some unknown struct  reserved (we abuse the format
                                                * to store modelnum here
                                                 reserved  entry point  flags  header CRC  Copy the binary  calc binary CRC and put at the end **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2012 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** slightly modified version from crc32.c in rockbox  polynomial 0x04c10db7  lookup table for 4 bits at a time is affordable  get one byte of data  upper nibble of our data  extract the 4 most significant bits  XOR in 4 bits of data into the extracted bits  shift the CRC register left 4 bits  do the table lookup and XOR the result  lower nibble of our data  extract the 4 most significant bits  XOR in 4 bits of data into the extracted bits  shift the CRC register left 4 bits  do the table lookup and XOR the result  length of the RKW header + binary length + 4 bytes of CRC  Clear the buffer to zero  Build the RKW header  magic  header size  base address  load address  end address  points to some unknown struct  reserved (we abuse the format
                                                * to store modelnum here
                                                 reserved  entry point  flags  header CRC  Copy the binary  calc binary CRC and put at the end 