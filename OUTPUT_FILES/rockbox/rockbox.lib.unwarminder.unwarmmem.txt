**************************************************************************
 * ARM Stack Unwinder, Michael.McTernan.2001@cs.bris.ac.uk
 *
 * This program is PUBLIC DOMAIN.
 * This means that there is no copyright and anyone is able to take a copy
 * for free and use it as they wish, with or without modifications, and in
 * any context, commerically or otherwise. The only limitation is that I
 * don't guarantee that the software is fit for any purpose or accept any
 * liablity for it's use or misuse - this software is without warranty.
 ***************************************************************************
 * File Description: Implementation of the memory tracking sub-system.
 ***************************************************************************************************************************************************
 * Include Files
 ***************************************************************************************************************************************************
 * Manifest Constants
 ***************************************************************************************************************************************************
 * Type Definitions
 ***************************************************************************************************************************************************
 * Variables
 ***************************************************************************************************************************************************
 * Macros
 ***************************************************************************************************************************************************
 * Local Functions
 ************************************************************************** Search the memory hash to see if an entry is stored in the hash already.
 * This will search the hash and either return the index where the item is
 * stored, or -1 if the item was not found.
  Check if the element is occupied  Check if it is occupied with the sought data  Item is free, this is where the item should be stored  Search the next entry  Search failed, hash is full and the address not stored **************************************************************************
 * Global Functions
 ************************************************************************* Address not found in the hash  Hash full  Store the item  END OF FILE **************************************************************************
 * ARM Stack Unwinder, Michael.McTernan.2001@cs.bris.ac.uk
 *
 * This program is PUBLIC DOMAIN.
 * This means that there is no copyright and anyone is able to take a copy
 * for free and use it as they wish, with or without modifications, and in
 * any context, commerically or otherwise. The only limitation is that I
 * don't guarantee that the software is fit for any purpose or accept any
 * liablity for it's use or misuse - this software is without warranty.
 ***************************************************************************
 * File Description: Implementation of the memory tracking sub-system.
 ***************************************************************************************************************************************************
 * Include Files
 ***************************************************************************************************************************************************
 * Manifest Constants
 ***************************************************************************************************************************************************
 * Type Definitions
 ***************************************************************************************************************************************************
 * Variables
 ***************************************************************************************************************************************************
 * Macros
 ***************************************************************************************************************************************************
 * Local Functions
 ************************************************************************** Search the memory hash to see if an entry is stored in the hash already.
 * This will search the hash and either return the index where the item is
 * stored, or -1 if the item was not found.
  Check if the element is occupied  Check if it is occupied with the sought data  Item is free, this is where the item should be stored  Search the next entry  Search failed, hash is full and the address not stored **************************************************************************
 * Global Functions
 ************************************************************************* Address not found in the hash  Hash full  Store the item  END OF FILE **************************************************************************
 * ARM Stack Unwinder, Michael.McTernan.2001@cs.bris.ac.uk
 *
 * This program is PUBLIC DOMAIN.
 * This means that there is no copyright and anyone is able to take a copy
 * for free and use it as they wish, with or without modifications, and in
 * any context, commerically or otherwise. The only limitation is that I
 * don't guarantee that the software is fit for any purpose or accept any
 * liablity for it's use or misuse - this software is without warranty.
 ***************************************************************************
 * File Description: Implementation of the memory tracking sub-system.
 ***************************************************************************************************************************************************
 * Include Files
 ***************************************************************************************************************************************************
 * Manifest Constants
 ***************************************************************************************************************************************************
 * Type Definitions
 ***************************************************************************************************************************************************
 * Variables
 ***************************************************************************************************************************************************
 * Macros
 ***************************************************************************************************************************************************
 * Local Functions
 ************************************************************************** Search the memory hash to see if an entry is stored in the hash already.
 * This will search the hash and either return the index where the item is
 * stored, or -1 if the item was not found.
  Check if the element is occupied  Check if it is occupied with the sought data  Item is free, this is where the item should be stored  Search the next entry  Search failed, hash is full and the address not stored **************************************************************************
 * Global Functions
 ************************************************************************* Address not found in the hash  Hash full  Store the item  END OF FILE 