**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Linus Nielsen Feltzing
 * Copyright (C) 2007 by Christian Gmeiner
 * Copyright (C) 2013 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Indicate it's the sound.c file which affects compilation of audiohw.h  sound_current  HAVE_SW_VOLUME_CONTROL  Define sound_setting_entries table  Implements sound_val2phys  Returns current sound settings from global_settings  setting valid but not in table? WRONG -- these need to index the hw_eq_bands[AUDIOHW_EQ_BAND_NUM] struct Hardware EQ tone controls  AUDIOHW_HAVE_EQ_BAND2  AUDIOHW_HAVE_EQ_BAND3  AUDIOHW_HAVE_EQ_BAND4  AUDIOHW_HAVE_EQ_BAND5  AUDIOHW_HAVE_EQ IF 0ndef BOOTLOADER switch(setting)   sound_current 
 * The prescaler compensates for any kind of boosts, to prevent clipping.
 *
 * It's basically just a measure to make sure that audio does not clip during
 * tone controls processing, like if i want to boost bass 12 dB, i can decrease
 * the audio amplitude by -12 dB before processing, then increase master gain
 * by 12 dB after processing.
  Return the sound value scaled to centibels (tenth-decibels)  tenth dB  percent   tenth dB  tenth dB  tenth dB  Note: Having Tone + EQ isn't prohibited  no need to prescale if we don't boost
                          bass, treble or eq band  Gain up the analog volume to compensate the prescale gain reduction,
     * but if this would push the volume over the top, reduce prescaling
     * instead (might cause clipping).  Make sure the audio gets muted  At the moment, such targets have lousy volume resolution and so minute
       boost won't work how we'd like  TONE_PRESCALER  Stereo volume  Balance the channels scaled by the current volume and min volume  percent  AUDIOHW_HAVE_MONO_VOLUME  For now, lineout stays at unity  AUDIOHW_HAVE_LINEOUT  AUDIOIHW_HAVE_CLIPPING  AUDIOHW_HAVE_BASS  AUDIOHW_HAVE_TREBLE  AUDIOHW_HAVE_BASS_CUTOFF  AUDIOHW_HAVE_TREBLE_CUTOFF  AUDIOHW_HAVE_DEPTH_3D  AUDIOHW_HAVE_EQ_FREQUENCY  AUDIOHW_HAVE_EQ_WIDTH  AUDIOHW_HAVE_CLIPPING  AUDIOHW_HAVE_EQ  HAVE_PITCHCONTROL **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Linus Nielsen Feltzing
 * Copyright (C) 2007 by Christian Gmeiner
 * Copyright (C) 2013 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Indicate it's the sound.c file which affects compilation of audiohw.h  sound_current  HAVE_SW_VOLUME_CONTROL  Define sound_setting_entries table  Implements sound_val2phys  Returns current sound settings from global_settings  setting valid but not in table? WRONG -- these need to index the hw_eq_bands[AUDIOHW_EQ_BAND_NUM] struct Hardware EQ tone controls  AUDIOHW_HAVE_EQ_BAND2  AUDIOHW_HAVE_EQ_BAND3  AUDIOHW_HAVE_EQ_BAND4  AUDIOHW_HAVE_EQ_BAND5  AUDIOHW_HAVE_EQ IF 0ndef BOOTLOADER switch(setting)   sound_current 
 * The prescaler compensates for any kind of boosts, to prevent clipping.
 *
 * It's basically just a measure to make sure that audio does not clip during
 * tone controls processing, like if i want to boost bass 12 dB, i can decrease
 * the audio amplitude by -12 dB before processing, then increase master gain
 * by 12 dB after processing.
  Return the sound value scaled to centibels (tenth-decibels)  tenth dB  percent   tenth dB  tenth dB  tenth dB  Note: Having Tone + EQ isn't prohibited  no need to prescale if we don't boost
                          bass, treble or eq band  Gain up the analog volume to compensate the prescale gain reduction,
     * but if this would push the volume over the top, reduce prescaling
     * instead (might cause clipping).  Make sure the audio gets muted  At the moment, such targets have lousy volume resolution and so minute
       boost won't work how we'd like  TONE_PRESCALER  Stereo volume  Balance the channels scaled by the current volume and min volume  percent  AUDIOHW_HAVE_MONO_VOLUME  For now, lineout stays at unity  AUDIOHW_HAVE_LINEOUT  AUDIOIHW_HAVE_CLIPPING  AUDIOHW_HAVE_BASS  AUDIOHW_HAVE_TREBLE  AUDIOHW_HAVE_BASS_CUTOFF  AUDIOHW_HAVE_TREBLE_CUTOFF  AUDIOHW_HAVE_DEPTH_3D  AUDIOHW_HAVE_EQ_FREQUENCY  AUDIOHW_HAVE_EQ_WIDTH  AUDIOHW_HAVE_CLIPPING  AUDIOHW_HAVE_EQ  HAVE_PITCHCONTROL **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Linus Nielsen Feltzing
 * Copyright (C) 2007 by Christian Gmeiner
 * Copyright (C) 2013 by Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Indicate it's the sound.c file which affects compilation of audiohw.h  sound_current  HAVE_SW_VOLUME_CONTROL  Define sound_setting_entries table  Implements sound_val2phys  Returns current sound settings from global_settings  setting valid but not in table? WRONG -- these need to index the hw_eq_bands[AUDIOHW_EQ_BAND_NUM] struct Hardware EQ tone controls  AUDIOHW_HAVE_EQ_BAND2  AUDIOHW_HAVE_EQ_BAND3  AUDIOHW_HAVE_EQ_BAND4  AUDIOHW_HAVE_EQ_BAND5  AUDIOHW_HAVE_EQ IF 0ndef BOOTLOADER switch(setting)   sound_current 
 * The prescaler compensates for any kind of boosts, to prevent clipping.
 *
 * It's basically just a measure to make sure that audio does not clip during
 * tone controls processing, like if i want to boost bass 12 dB, i can decrease
 * the audio amplitude by -12 dB before processing, then increase master gain
 * by 12 dB after processing.
  Return the sound value scaled to centibels (tenth-decibels)  tenth dB  percent   tenth dB  tenth dB  tenth dB  Note: Having Tone + EQ isn't prohibited  no need to prescale if we don't boost
                          bass, treble or eq band  Gain up the analog volume to compensate the prescale gain reduction,
     * but if this would push the volume over the top, reduce prescaling
     * instead (might cause clipping).  Make sure the audio gets muted  At the moment, such targets have lousy volume resolution and so minute
       boost won't work how we'd like  TONE_PRESCALER  Stereo volume  Balance the channels scaled by the current volume and min volume  percent  AUDIOHW_HAVE_MONO_VOLUME  For now, lineout stays at unity  AUDIOHW_HAVE_LINEOUT  AUDIOIHW_HAVE_CLIPPING  AUDIOHW_HAVE_BASS  AUDIOHW_HAVE_TREBLE  AUDIOHW_HAVE_BASS_CUTOFF  AUDIOHW_HAVE_TREBLE_CUTOFF  AUDIOHW_HAVE_DEPTH_3D  AUDIOHW_HAVE_EQ_FREQUENCY  AUDIOHW_HAVE_EQ_WIDTH  AUDIOHW_HAVE_CLIPPING  AUDIOHW_HAVE_EQ  HAVE_PITCHCONTROL 