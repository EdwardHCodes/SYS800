    private final ObservableList<Series<String, Number>> bell;    private final Series<String, Number> bellSeries;final ObservableList<Series<String, Number>> bell,        this.bell = bell;        this.bellSeries = new XYChart.Series<String,Number>();        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = low; i <= high; i++) {            bellSeries.getData().add(new XYChart.Data<String,Number>(""+i, 0));        }        bell.clear();        bell.add(bellSeries);        double basis = 0.0;        int count = 0;        double max = 0.0;        double sumsigma = 0.0;            v.getStats().getValues()            basis += v.getStats().getMean() * v.getStats().getN();            count += v.getStats().getN();            sumsigma += v.getStats().getVariance() / v.getStats().getN();            max = Math.max(max, v.getStats().getMax()); excess kurtosis        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = 0; i < bellSeries.getData().size(); i++) {            int value = low + i;            bellSeries.getData().get(i).setYValue(max * normal.density(value));            log.info("AT " + value + " density " + (max * normal.density(value)));        }    private final ObservableList<Series<String, Number>> bell;    private final Series<String, Number> bellSeries;final ObservableList<Series<String, Number>> bell,        this.bell = bell;        this.bellSeries = new XYChart.Series<String,Number>();        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = low; i <= high; i++) {            bellSeries.getData().add(new XYChart.Data<String,Number>(""+i, 0));        }        bell.clear();        bell.add(bellSeries);        double basis = 0.0;        int count = 0;        double max = 0.0;        double sumsigma = 0.0;            v.getStats().getValues()            basis += v.getStats().getMean() * v.getStats().getN();            count += v.getStats().getN();            sumsigma += v.getStats().getVariance() / v.getStats().getN();            max = Math.max(max, v.getStats().getMax()); excess kurtosis        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = 0; i < bellSeries.getData().size(); i++) {            int value = low + i;            bellSeries.getData().get(i).setYValue(max * normal.density(value));            log.info("AT " + value + " density " + (max * normal.density(value)));        }    private final ObservableList<Series<String, Number>> bell;    private final Series<String, Number> bellSeries;final ObservableList<Series<String, Number>> bell,        this.bell = bell;        this.bellSeries = new XYChart.Series<String,Number>();        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = low; i <= high; i++) {            bellSeries.getData().add(new XYChart.Data<String,Number>(""+i, 0));        }        bell.clear();        bell.add(bellSeries);        double basis = 0.0;        int count = 0;        double max = 0.0;        double sumsigma = 0.0;            v.getStats().getValues()            basis += v.getStats().getMean() * v.getStats().getN();            count += v.getStats().getN();            sumsigma += v.getStats().getVariance() / v.getStats().getN();            max = Math.max(max, v.getStats().getMax()); excess kurtosis        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = 0; i < bellSeries.getData().size(); i++) {            int value = low + i;            bellSeries.getData().get(i).setYValue(max * normal.density(value));            log.info("AT " + value + " density " + (max * normal.density(value)));        }    private final ObservableList<Series<String, Number>> bell;    private final Series<String, Number> bellSeries;final ObservableList<Series<String, Number>> bell,        this.bell = bell;        this.bellSeries = new XYChart.Series<String,Number>();        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = low; i <= high; i++) {            bellSeries.getData().add(new XYChart.Data<String,Number>(""+i, 0));        }        bell.clear();        bell.add(bellSeries);        double basis = 0.0;        int count = 0;        double max = 0.0;        double sumsigma = 0.0;            v.getStats().getValues()            basis += v.getStats().getMean() * v.getStats().getN();            count += v.getStats().getN();            sumsigma += v.getStats().getVariance() / v.getStats().getN();            max = Math.max(max, v.getStats().getMax()); excess kurtosis        int low = (int) (vital.getCriticalLow()==null?vital.getMinimum():vital.getCriticalLow());        int high = (int) (vital.getCriticalHigh()==null?vital.getMaximum():vital.getCriticalHigh());        for(int i = 0; i < bellSeries.getData().size(); i++) {            int value = low + i;            bellSeries.getData().get(i).setYValue(max * normal.density(value));            log.info("AT " + value + " density " + (max * normal.density(value)));        }