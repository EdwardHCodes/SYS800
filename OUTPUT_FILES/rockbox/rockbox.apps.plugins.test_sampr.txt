**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** This plugin generates a 1kHz tone + noise in order to quickly verify
 * hardware samplerate setup is operating correctly.
 *
 * While switching to different frequencies, the pitch of the tone should
 * remain constant whereas the upper harmonics of the noise should vary
 * with sample rate.
  fsin shamelessly stolen from signal_gen.c by Thom Johansen (preglow)  Good quality sine calculated by linearly interpolating
 * a 128 sample sine table. First harmonic has amplitude of about -84 dB.
 * phase has range from 0 to 0xffffffff, representing 0 and
 * 2*pi respectively.
 * Return value is a signed value from LONG_MIN to LONG_MAX, representing
 * -1 and 1 respectively. 
  128 sixteen bit sine samples + guard point  ISR handler to get next block of data  Free previous buffer  Keep repeating previous if source runs low  Called to switch samplerate on the fly  HAVE_VOLUME_IN_LIST  Select playback  Recordable targets can play back from other sources  HAVE_VOLUME_IN_LIST  restore default - user of apis is responsible for restoring
       default state - normally playback at 44100Hz  Tests hardware sample rate switching  TODO: needs a volume control  HAVE_VOLUME_IN_LIST  HAVE_VOLUME_IN_LIST  Disable all talking before initializing IRAM  HAVE_VOLUME_IN_LIST **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** This plugin generates a 1kHz tone + noise in order to quickly verify
 * hardware samplerate setup is operating correctly.
 *
 * While switching to different frequencies, the pitch of the tone should
 * remain constant whereas the upper harmonics of the noise should vary
 * with sample rate.
  fsin shamelessly stolen from signal_gen.c by Thom Johansen (preglow)  Good quality sine calculated by linearly interpolating
 * a 128 sample sine table. First harmonic has amplitude of about -84 dB.
 * phase has range from 0 to 0xffffffff, representing 0 and
 * 2*pi respectively.
 * Return value is a signed value from LONG_MIN to LONG_MAX, representing
 * -1 and 1 respectively. 
  128 sixteen bit sine samples + guard point  ISR handler to get next block of data  Free previous buffer  Keep repeating previous if source runs low  Called to switch samplerate on the fly  HAVE_VOLUME_IN_LIST  Select playback  Recordable targets can play back from other sources  HAVE_VOLUME_IN_LIST  restore default - user of apis is responsible for restoring
       default state - normally playback at 44100Hz  Tests hardware sample rate switching  TODO: needs a volume control  HAVE_VOLUME_IN_LIST  HAVE_VOLUME_IN_LIST  Disable all talking before initializing IRAM  HAVE_VOLUME_IN_LIST **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** This plugin generates a 1kHz tone + noise in order to quickly verify
 * hardware samplerate setup is operating correctly.
 *
 * While switching to different frequencies, the pitch of the tone should
 * remain constant whereas the upper harmonics of the noise should vary
 * with sample rate.
  fsin shamelessly stolen from signal_gen.c by Thom Johansen (preglow)  Good quality sine calculated by linearly interpolating
 * a 128 sample sine table. First harmonic has amplitude of about -84 dB.
 * phase has range from 0 to 0xffffffff, representing 0 and
 * 2*pi respectively.
 * Return value is a signed value from LONG_MIN to LONG_MAX, representing
 * -1 and 1 respectively. 
  128 sixteen bit sine samples + guard point  ISR handler to get next block of data  Free previous buffer  Keep repeating previous if source runs low  Called to switch samplerate on the fly  HAVE_VOLUME_IN_LIST  Select playback  Recordable targets can play back from other sources  HAVE_VOLUME_IN_LIST  restore default - user of apis is responsible for restoring
       default state - normally playback at 44100Hz  Tests hardware sample rate switching  TODO: needs a volume control  HAVE_VOLUME_IN_LIST  HAVE_VOLUME_IN_LIST  Disable all talking before initializing IRAM  HAVE_VOLUME_IN_LIST 