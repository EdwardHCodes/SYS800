*******************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE Ogg CONTAINER SOURCE CODE.              *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
 * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
 * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2010             *
 * by the Xiph.Org Foundation http://www.xiph.org/                  *
 *                                                                  *
 ********************************************************************

  function: packing variable sized words into an octet stream
  last mod: $Id$

 ******************************************************************* We're 'LSb' endian; if we write a word but read individual bits,
   then we'll read the lsb first  Takes only up to 32 bits.  Takes only up to 32 bits.  unaligned copy.  Do it the hard way.  aligned block copy  Read in bits without advancing the bitptr; bits <= 32  moved to ogg.h for inlining  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  Read in bits without advancing the bitptr; bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  moved to ogg.h for inlining
void oggpack_adv(oggpack_buffer *b,int bits){
  bits+=b->endbit;

  if(b->endbyte > b->storage-((bits+7)>>3)) goto overflow;

  b->ptr+=bits/8;
  b->endbyte+=bits/8;
  b->endbit=bits&7;
  return;

 overflow:
  b->ptr=NULL;
  b->endbyte=b->storage;
  b->endbit=1;
}
 bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  moved to ogg.h for inlining
long oggpack_bytes(oggpack_buffer *b){
  return(b->endbyte+(b->endbit+7)/8);
}
 Self test of the bitwise routines; everything else is based on
   them, so they damned well better be solid.  Test read/write together  Later we test against pregenerated bitstreams ********* lazy, cut-n-paste retest with MSb packing ********** Test read/write together  Later we test against pregenerated bitstreams  _V_SELFTEST *******************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE Ogg CONTAINER SOURCE CODE.              *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
 * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
 * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2010             *
 * by the Xiph.Org Foundation http://www.xiph.org/                  *
 *                                                                  *
 ********************************************************************

  function: packing variable sized words into an octet stream
  last mod: $Id$

 ******************************************************************* We're 'LSb' endian; if we write a word but read individual bits,
   then we'll read the lsb first  Takes only up to 32 bits.  Takes only up to 32 bits.  unaligned copy.  Do it the hard way.  aligned block copy  Read in bits without advancing the bitptr; bits <= 32  moved to ogg.h for inlining  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  Read in bits without advancing the bitptr; bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  moved to ogg.h for inlining
void oggpack_adv(oggpack_buffer *b,int bits){
  bits+=b->endbit;

  if(b->endbyte > b->storage-((bits+7)>>3)) goto overflow;

  b->ptr+=bits/8;
  b->endbyte+=bits/8;
  b->endbit=bits&7;
  return;

 overflow:
  b->ptr=NULL;
  b->endbyte=b->storage;
  b->endbit=1;
}
 bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  moved to ogg.h for inlining
long oggpack_bytes(oggpack_buffer *b){
  return(b->endbyte+(b->endbit+7)/8);
}
 Self test of the bitwise routines; everything else is based on
   them, so they damned well better be solid.  Test read/write together  Later we test against pregenerated bitstreams ********* lazy, cut-n-paste retest with MSb packing ********** Test read/write together  Later we test against pregenerated bitstreams  _V_SELFTEST *******************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE Ogg CONTAINER SOURCE CODE.              *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
 * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
 * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2010             *
 * by the Xiph.Org Foundation http://www.xiph.org/                  *
 *                                                                  *
 ********************************************************************

  function: packing variable sized words into an octet stream
  last mod: $Id$

 ******************************************************************* We're 'LSb' endian; if we write a word but read individual bits,
   then we'll read the lsb first  Takes only up to 32 bits.  Takes only up to 32 bits.  unaligned copy.  Do it the hard way.  aligned block copy  Read in bits without advancing the bitptr; bits <= 32  moved to ogg.h for inlining  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  Read in bits without advancing the bitptr; bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  moved to ogg.h for inlining
void oggpack_adv(oggpack_buffer *b,int bits){
  bits+=b->endbit;

  if(b->endbyte > b->storage-((bits+7)>>3)) goto overflow;

  b->ptr+=bits/8;
  b->endbyte+=bits/8;
  b->endbit=bits&7;
  return;

 overflow:
  b->ptr=NULL;
  b->endbyte=b->storage;
  b->endbit=1;
}
 bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  bits <= 32  not the main path  special case to avoid reading b->ptr[0], which might be past the end of
        the buffer; also skips some useless accounting  moved to ogg.h for inlining
long oggpack_bytes(oggpack_buffer *b){
  return(b->endbyte+(b->endbit+7)/8);
}
 Self test of the bitwise routines; everything else is based on
   them, so they damned well better be solid.  Test read/write together  Later we test against pregenerated bitstreams ********* lazy, cut-n-paste retest with MSb packing ********** Test read/write together  Later we test against pregenerated bitstreams  _V_SELFTEST 