**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Button Code Definitions for Iaudio[67] target  {Action Code,    Button code,    Prereq button code } 
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code }
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping
     { ACTION_STD_QUICKSCREEN,   BUTTON_REC|BUTTON_PLAY,       BUTTON_NONE   }, button_context_standard  button_context_wps     { ACTION_SETTINGS_RESET,    BUTTON_PLAY,                  BUTTON_NONE }, button_context_settings  button_context_list     { ACTION_TREE_WPS,          BUTTON_REC|BUTTON_VOLUP,               BUTTON_REC },    { ACTION_TREE_STOP,         BUTTON_REC|BUTTON_VOLUP|BUTTON_REPEAT, BUTTON_REC|BUTTON_VOLUP },    { ACTION_TREE_HOTKEY,       BUTTON_NONE,                           BUTTON_NONE }, button_context_tree  button_context_listtree_scroll_without_combo     { ACTION_TREE_PGLEFT,       BUTTON_REC|BUTTON_LEFT,               BUTTON_NONE },    { ACTION_TREE_ROOT_INIT,    BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT, BUTTON_REC|BUTTON_LEFT },    { ACTION_TREE_PGLEFT,       BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT, BUTTON_NONE },    { ACTION_TREE_PGRIGHT,      BUTTON_REC|BUTTON_RIGHT,              BUTTON_NONE },    { ACTION_TREE_PGRIGHT,      BUTTON_REC|BUTTON_RIGHT|BUTTON_REPEAT,BUTTON_NONE }, button_context_listtree_scroll_with_combo     { ACTION_YESNO_ACCEPT,      BUTTON_PLAY,                  BUTTON_NONE }, button_context_settings_yesno  button_context_quickscreen  button_context_settings_right_is_inc  button_context_pitchscreen * Recording Screen *    { ACTION_REC_NEWFILE,       BUTTON_REC|BUTTON_REL,          BUTTON_REC    }, button_context_recscreen * FM Radio Screen * button_context_radio     { ACTION_KBD_CURSOR_LEFT,  BUTTON_REC|BUTTON_LEFT,              BUTTON_NONE },    { ACTION_KBD_CURSOR_LEFT,  BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_CURSOR_RIGHT, BUTTON_REC|BUTTON_RIGHT,              BUTTON_NONE },    { ACTION_KBD_CURSOR_RIGHT, BUTTON_REC|BUTTON_RIGHT|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_BACKSPACE,    BUTTON_REC|BUTTON_VOLDOWN,          BUTTON_NONE },    { ACTION_KBD_BACKSPACE,    BUTTON_REC|BUTTON_VOLDOWN|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_PAGE_FLIP,    BUTTON_REC|BUTTON_PLAY,        BUTTON_REC }, button_context_keyboard     { ACTION_BMS_DELETE,       BUTTON_REC,                       BUTTON_NONE }, button_context_bmark  get_context_mapping returns a pointer to one of the above defined arrays depending on the context **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Button Code Definitions for Iaudio[67] target  {Action Code,    Button code,    Prereq button code } 
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code }
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping
     { ACTION_STD_QUICKSCREEN,   BUTTON_REC|BUTTON_PLAY,       BUTTON_NONE   }, button_context_standard  button_context_wps     { ACTION_SETTINGS_RESET,    BUTTON_PLAY,                  BUTTON_NONE }, button_context_settings  button_context_list     { ACTION_TREE_WPS,          BUTTON_REC|BUTTON_VOLUP,               BUTTON_REC },    { ACTION_TREE_STOP,         BUTTON_REC|BUTTON_VOLUP|BUTTON_REPEAT, BUTTON_REC|BUTTON_VOLUP },    { ACTION_TREE_HOTKEY,       BUTTON_NONE,                           BUTTON_NONE }, button_context_tree  button_context_listtree_scroll_without_combo     { ACTION_TREE_PGLEFT,       BUTTON_REC|BUTTON_LEFT,               BUTTON_NONE },    { ACTION_TREE_ROOT_INIT,    BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT, BUTTON_REC|BUTTON_LEFT },    { ACTION_TREE_PGLEFT,       BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT, BUTTON_NONE },    { ACTION_TREE_PGRIGHT,      BUTTON_REC|BUTTON_RIGHT,              BUTTON_NONE },    { ACTION_TREE_PGRIGHT,      BUTTON_REC|BUTTON_RIGHT|BUTTON_REPEAT,BUTTON_NONE }, button_context_listtree_scroll_with_combo     { ACTION_YESNO_ACCEPT,      BUTTON_PLAY,                  BUTTON_NONE }, button_context_settings_yesno  button_context_quickscreen  button_context_settings_right_is_inc  button_context_pitchscreen * Recording Screen *    { ACTION_REC_NEWFILE,       BUTTON_REC|BUTTON_REL,          BUTTON_REC    }, button_context_recscreen * FM Radio Screen * button_context_radio     { ACTION_KBD_CURSOR_LEFT,  BUTTON_REC|BUTTON_LEFT,              BUTTON_NONE },    { ACTION_KBD_CURSOR_LEFT,  BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_CURSOR_RIGHT, BUTTON_REC|BUTTON_RIGHT,              BUTTON_NONE },    { ACTION_KBD_CURSOR_RIGHT, BUTTON_REC|BUTTON_RIGHT|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_BACKSPACE,    BUTTON_REC|BUTTON_VOLDOWN,          BUTTON_NONE },    { ACTION_KBD_BACKSPACE,    BUTTON_REC|BUTTON_VOLDOWN|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_PAGE_FLIP,    BUTTON_REC|BUTTON_PLAY,        BUTTON_REC }, button_context_keyboard     { ACTION_BMS_DELETE,       BUTTON_REC,                       BUTTON_NONE }, button_context_bmark  get_context_mapping returns a pointer to one of the above defined arrays depending on the context **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Button Code Definitions for Iaudio[67] target  {Action Code,    Button code,    Prereq button code } 
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code }
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping
     { ACTION_STD_QUICKSCREEN,   BUTTON_REC|BUTTON_PLAY,       BUTTON_NONE   }, button_context_standard  button_context_wps     { ACTION_SETTINGS_RESET,    BUTTON_PLAY,                  BUTTON_NONE }, button_context_settings  button_context_list     { ACTION_TREE_WPS,          BUTTON_REC|BUTTON_VOLUP,               BUTTON_REC },    { ACTION_TREE_STOP,         BUTTON_REC|BUTTON_VOLUP|BUTTON_REPEAT, BUTTON_REC|BUTTON_VOLUP },    { ACTION_TREE_HOTKEY,       BUTTON_NONE,                           BUTTON_NONE }, button_context_tree  button_context_listtree_scroll_without_combo     { ACTION_TREE_PGLEFT,       BUTTON_REC|BUTTON_LEFT,               BUTTON_NONE },    { ACTION_TREE_ROOT_INIT,    BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT, BUTTON_REC|BUTTON_LEFT },    { ACTION_TREE_PGLEFT,       BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT, BUTTON_NONE },    { ACTION_TREE_PGRIGHT,      BUTTON_REC|BUTTON_RIGHT,              BUTTON_NONE },    { ACTION_TREE_PGRIGHT,      BUTTON_REC|BUTTON_RIGHT|BUTTON_REPEAT,BUTTON_NONE }, button_context_listtree_scroll_with_combo     { ACTION_YESNO_ACCEPT,      BUTTON_PLAY,                  BUTTON_NONE }, button_context_settings_yesno  button_context_quickscreen  button_context_settings_right_is_inc  button_context_pitchscreen * Recording Screen *    { ACTION_REC_NEWFILE,       BUTTON_REC|BUTTON_REL,          BUTTON_REC    }, button_context_recscreen * FM Radio Screen * button_context_radio     { ACTION_KBD_CURSOR_LEFT,  BUTTON_REC|BUTTON_LEFT,              BUTTON_NONE },    { ACTION_KBD_CURSOR_LEFT,  BUTTON_REC|BUTTON_LEFT|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_CURSOR_RIGHT, BUTTON_REC|BUTTON_RIGHT,              BUTTON_NONE },    { ACTION_KBD_CURSOR_RIGHT, BUTTON_REC|BUTTON_RIGHT|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_BACKSPACE,    BUTTON_REC|BUTTON_VOLDOWN,          BUTTON_NONE },    { ACTION_KBD_BACKSPACE,    BUTTON_REC|BUTTON_VOLDOWN|BUTTON_REPEAT,BUTTON_NONE },    { ACTION_KBD_PAGE_FLIP,    BUTTON_REC|BUTTON_PLAY,        BUTTON_REC }, button_context_keyboard     { ACTION_BMS_DELETE,       BUTTON_REC,                       BUTTON_NONE }, button_context_bmark  get_context_mapping returns a pointer to one of the above defined arrays depending on the context 