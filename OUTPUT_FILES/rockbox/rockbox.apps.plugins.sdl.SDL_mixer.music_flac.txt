
  SDL_mixer:  An audio mixer library based on the SDL library
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  This file is used to support SDL_LoadMUS playback of FLAC files.
  	~ Austen Dicken (admin@cvpcs.org)
 This is the format of the audio mixer data  Initialize the FLAC player, with the given mixer settings
   This function returns 0, or -1 if there was an error.
  Set the volume for an FLAC stream  make sure there is something to be reading error in read no data was read (EOF) data was read, continue there was an error attempting to return the stream to the original
		 * position, or the length was invalid.  was the original position equal to the end (a.k.a. the seek didn't move)? must be EOF not EOF, return to the original position make sure we still have at least two bytes that can be read (one for each channel) does the data block exist? create it we need to set this so that the read halts from the FLAC_getsome function. we need to write to the overflow make it big enough for the rest of the block print an SDL error based on the error status Load an FLAC stream from an SDL_RWops object  Initialize the music structure  stage 1! stage 2! stage 3! Start playback of a given FLAC stream  Return non-zero if a stream is currently playing  Read some FLAC stream data and convert it for output  GET AUDIO WAVE DATA  set the max number of characters to read we have data to read first check if there is data in the overflow from before Play some of a stream previously started with FLAC_play()  Stop playback of a stream previously started with FLAC_play()  Close the given FLAC_music object  Jump (seek) to a given position (time is in seconds)  clear data if it has data clear overflow if it has data FLAC_MUSIC 
  SDL_mixer:  An audio mixer library based on the SDL library
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  This file is used to support SDL_LoadMUS playback of FLAC files.
  	~ Austen Dicken (admin@cvpcs.org)
 This is the format of the audio mixer data  Initialize the FLAC player, with the given mixer settings
   This function returns 0, or -1 if there was an error.
  Set the volume for an FLAC stream  make sure there is something to be reading error in read no data was read (EOF) data was read, continue there was an error attempting to return the stream to the original
		 * position, or the length was invalid.  was the original position equal to the end (a.k.a. the seek didn't move)? must be EOF not EOF, return to the original position make sure we still have at least two bytes that can be read (one for each channel) does the data block exist? create it we need to set this so that the read halts from the FLAC_getsome function. we need to write to the overflow make it big enough for the rest of the block print an SDL error based on the error status Load an FLAC stream from an SDL_RWops object  Initialize the music structure  stage 1! stage 2! stage 3! Start playback of a given FLAC stream  Return non-zero if a stream is currently playing  Read some FLAC stream data and convert it for output  GET AUDIO WAVE DATA  set the max number of characters to read we have data to read first check if there is data in the overflow from before Play some of a stream previously started with FLAC_play()  Stop playback of a stream previously started with FLAC_play()  Close the given FLAC_music object  Jump (seek) to a given position (time is in seconds)  clear data if it has data clear overflow if it has data FLAC_MUSIC 
  SDL_mixer:  An audio mixer library based on the SDL library
  Copyright (C) 1997-2012 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.

  This file is used to support SDL_LoadMUS playback of FLAC files.
  	~ Austen Dicken (admin@cvpcs.org)
 This is the format of the audio mixer data  Initialize the FLAC player, with the given mixer settings
   This function returns 0, or -1 if there was an error.
  Set the volume for an FLAC stream  make sure there is something to be reading error in read no data was read (EOF) data was read, continue there was an error attempting to return the stream to the original
		 * position, or the length was invalid.  was the original position equal to the end (a.k.a. the seek didn't move)? must be EOF not EOF, return to the original position make sure we still have at least two bytes that can be read (one for each channel) does the data block exist? create it we need to set this so that the read halts from the FLAC_getsome function. we need to write to the overflow make it big enough for the rest of the block print an SDL error based on the error status Load an FLAC stream from an SDL_RWops object  Initialize the music structure  stage 1! stage 2! stage 3! Start playback of a given FLAC stream  Return non-zero if a stream is currently playing  Read some FLAC stream data and convert it for output  GET AUDIO WAVE DATA  set the max number of characters to read we have data to read first check if there is data in the overflow from before Play some of a stream previously started with FLAC_play()  Stop playback of a stream previously started with FLAC_play()  Close the given FLAC_music object  Jump (seek) to a given position (time is in seconds)  clear data if it has data clear overflow if it has data FLAC_MUSIC 