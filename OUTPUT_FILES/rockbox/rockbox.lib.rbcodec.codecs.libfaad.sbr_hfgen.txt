
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* High Frequency generation  static function declarations  calculate the prediction coefficients  actual HF generation  find the low and high band for patching x < sbr->patchNoSubbands[i]-1 do the patching  with or without filtering  Within auto_correlation(...) a pre-shift of >>ACDET_EXP is needed to avoid 
 * overflow when multiply-adding the FRACT-variables -- FRACT part is 31 bits. 
 * After the calculation has been finished the result 'ac->det' needs to be 
 * post-shifted by <<(4*ACDET_EXP). This pre-/post-shifting is needed for 
 * FIXED_POINT only.  1 / (1 + 1e-6f); 1 / (1 + 1e-6f); Save these because they are needed after loop calculate linear prediction coefficients using the covariance method  reflection coefficient  FIXED POINT: bwArray = COEF  LOW  NONE  MID  HIGH  NONE  LOW  FIXED POINT: bwArray = COEF  (uint8_t)(2.048e6/sbr->sample_rate + 0.5); 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* High Frequency generation  static function declarations  calculate the prediction coefficients  actual HF generation  find the low and high band for patching x < sbr->patchNoSubbands[i]-1 do the patching  with or without filtering  Within auto_correlation(...) a pre-shift of >>ACDET_EXP is needed to avoid 
 * overflow when multiply-adding the FRACT-variables -- FRACT part is 31 bits. 
 * After the calculation has been finished the result 'ac->det' needs to be 
 * post-shifted by <<(4*ACDET_EXP). This pre-/post-shifting is needed for 
 * FIXED_POINT only.  1 / (1 + 1e-6f); 1 / (1 + 1e-6f); Save these because they are needed after loop calculate linear prediction coefficients using the covariance method  reflection coefficient  FIXED POINT: bwArray = COEF  LOW  NONE  MID  HIGH  NONE  LOW  FIXED POINT: bwArray = COEF  (uint8_t)(2.048e6/sbr->sample_rate + 0.5); 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* High Frequency generation  static function declarations  calculate the prediction coefficients  actual HF generation  find the low and high band for patching x < sbr->patchNoSubbands[i]-1 do the patching  with or without filtering  Within auto_correlation(...) a pre-shift of >>ACDET_EXP is needed to avoid 
 * overflow when multiply-adding the FRACT-variables -- FRACT part is 31 bits. 
 * After the calculation has been finished the result 'ac->det' needs to be 
 * post-shifted by <<(4*ACDET_EXP). This pre-/post-shifting is needed for 
 * FIXED_POINT only.  1 / (1 + 1e-6f); 1 / (1 + 1e-6f); Save these because they are needed after loop calculate linear prediction coefficients using the covariance method  reflection coefficient  FIXED POINT: bwArray = COEF  LOW  NONE  MID  HIGH  NONE  LOW  FIXED POINT: bwArray = COEF  (uint8_t)(2.048e6/sbr->sample_rate + 0.5); 