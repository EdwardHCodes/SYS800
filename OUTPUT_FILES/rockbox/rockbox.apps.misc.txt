**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Daniel Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** is_lang_rtl()  !__PCTOOL__  units used with output_dyn_value  units used with format_time_auto, option_select.c->option_get_valuestring()  Format a large-range value for output, using the appropriate unit so that
 * the displayed value is in the range 1 <= display < 1000 (1024 for "binary"
 * units) if possible, and 3 significant digits are shown. If a buffer is
 * given, the result is snprintf()'d into that buffer, otherwise the result is
 * voiced. preserve sign  Ask the user if they really want to erase the current dynamic playlist
 * returns true if the playlist should be replaced  Performance optimized version of the read_line() (see below) function.  parse a line from a configuration file. the line format is:

   name: value

   Any whitespace before setting name or value (after ':') is ignored.
   A # as first non-whitespace character discards the whole line.
   Function sets pointers to null-terminated setting name and value.
   Returns false if no valid config entry was found.
doesnt work on usb and shutdown from ata thread  do not save on critical battery  wait for stop to complete  audio_stop_recording == audio_stop for HWCODEC  Stop the music if it is playing  bookmarking can make a refresh necessary  screen is dirty, caller needs to refresh  CONFIG_CHARGING 
             * Just got plugged in, delay & resume if we were playing
              delay resume a bit while the engine is cranking 
             * Just got unplugged, pause if playing
              update speaker status  gets initial size  simple sanity: assume rockbox is on the first hotswappable
             * driver, abort out if that one isn't inserted  state gotten in main.c:init()  stop playback if we receive a call  resume playback if needed  kludge: since this events go to the button_queue,
             * event data is available in the last button data  multimedia keys on keyboards, headsets  not supported yet, needs to be done in the WPS  display the logo in the blue area of the screen (bottom 48 pixels) 
    memorize/compare details about the BOOTFILE
    we don't use dircache because it may not be up to date after
    USB disconnect (scanning in the background)
 1. open BOOTDIR and find the BOOTFILE dir entry  do we want an error splash?  loop all files in BOOTDIR  found the bootfile  Empty the keyboard buffer  check range, set volume and save settings 
 * removes the extension of filename (if it doesn't start with a .)
 * puts the result in buffer
  Make room for end nil  Play a standard sound  Produce keyclick based upon button and global settings  Settings filters  Button filters  Return the ReplayGain mode adjusted by other relevant settings  Return the ReplayGain mode adjusted for display purposes  Update DSP's replaygain from global settings  format a sound value like: -1.05 dB  !defined(__PCTOOL__)  Read (up to) a line of text from fd into buffer and return number of bytes
 * read (which may be larger than the number of bytes stored in buffer). If
 * an error occurs, -1 is returned (and buffer contains whatever could be
 * read). A line is terminated by a LF char. Neither LF nor CR chars are
 * stored in buffer.
  "put back" what wasn't read from the buffer   time_split_units()
    split time values depending on base unit
    unit_idx: UNIT_HOUR, UNIT_MIN, UNIT_SEC, UNIT_MS
    abs_value: absolute time value
    units_in: array of unsigned ints with UNIT_IDX_TIME_COUNT fields
Mask off upper bits fallthrough and calculate the rest of the units  fallthrough and calculate the rest of the units  fallthrough and calculate the rest of the units  format_time_auto - return an auto ranged time string;
   buffer:  needs to be at least 25 characters for full range

   unit_idx: specifies lowest or base index of the value
   add | UNIT_LOCK_ to keep place holder of units that would normally be
   discarded.. For instance, UNIT_LOCK_HR would keep the hours place, ex: string
   00:10:10 (0 HRS 10 MINS 10 SECONDS) normally it would return as 10:10
   add | UNIT_TRIM_ZERO to supress leading zero on the largest unit

   value: should be passed in the same form as unit_idx

   supress_unit: may be set to true and in this case the
   hr, min, sec, ms identifiers will be left off the resulting string but
   since right to left languages are handled it is advisable to leave units
   as an indication of the text direction
 -2147483648:00:00.00\0  hr is variable length  {0,2,2,3}; Field Widths  ?:59:59.999 Std offsets    0?:+1:+4.+7 need calculated  999.59:59:0  RTL offsets     0  .4 :7 :10 won't change    {10,7,4,0}; Offsets  unitlock  units  unused  value is 0  calculate offsets of the other fields based on length of previous  trim leading zero on the max_idx RTL Languages trim leading zero on the max_idx  unused  Format time into buf.
 *
 * buf      - buffer to format to.
 * buf_size - size of buffer.
 * t        - time to format, in milliseconds.
  !defined(CHECKWPS) && !defined(DBTOOL)*
 * Splits str at each occurence of split_char and puts the substrings into vector,
 * but at most vector_lenght items. Empty substrings are ignored.
 *
 * Modifies str by replacing each split_char following a substring with nul
 *
 * Returns the number of substrings found, i.e. the number of valid strings
 * in vector
  skip leading splitters  *p in the condition takes care of trailing splitters  skip successive splitters * Open a UTF-8 file and set file descriptor to first byte after BOM.
 *  If no BOM is present this behaves like open().
 *  If the file is opened for writing and O_TRUNC is set, write a BOM to
 *  the opened file and leave the file pointer set after the BOM.
  check for BOM  read or write failure, do not continue 
 * Helper function to convert a string of 6 hex digits to a native colour
  HAVE_LCD_COLOR  '0'-'3' are ASCII 0x30 to 0x33  silence warnings on mono bitmap  !defined(__PCTOOL__) || defined(CHECKWPS)  only used in USB HID and set_time screen **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Daniel Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** is_lang_rtl()  !__PCTOOL__  units used with output_dyn_value  units used with format_time_auto, option_select.c->option_get_valuestring()  Format a large-range value for output, using the appropriate unit so that
 * the displayed value is in the range 1 <= display < 1000 (1024 for "binary"
 * units) if possible, and 3 significant digits are shown. If a buffer is
 * given, the result is snprintf()'d into that buffer, otherwise the result is
 * voiced. preserve sign  Ask the user if they really want to erase the current dynamic playlist
 * returns true if the playlist should be replaced  Performance optimized version of the read_line() (see below) function.  parse a line from a configuration file. the line format is:

   name: value

   Any whitespace before setting name or value (after ':') is ignored.
   A # as first non-whitespace character discards the whole line.
   Function sets pointers to null-terminated setting name and value.
   Returns false if no valid config entry was found.
doesnt work on usb and shutdown from ata thread  do not save on critical battery  wait for stop to complete  audio_stop_recording == audio_stop for HWCODEC  Stop the music if it is playing  bookmarking can make a refresh necessary  screen is dirty, caller needs to refresh  CONFIG_CHARGING 
             * Just got plugged in, delay & resume if we were playing
              delay resume a bit while the engine is cranking 
             * Just got unplugged, pause if playing
              update speaker status  gets initial size  simple sanity: assume rockbox is on the first hotswappable
             * driver, abort out if that one isn't inserted  state gotten in main.c:init()  stop playback if we receive a call  resume playback if needed  kludge: since this events go to the button_queue,
             * event data is available in the last button data  multimedia keys on keyboards, headsets  not supported yet, needs to be done in the WPS  display the logo in the blue area of the screen (bottom 48 pixels) 
    memorize/compare details about the BOOTFILE
    we don't use dircache because it may not be up to date after
    USB disconnect (scanning in the background)
 1. open BOOTDIR and find the BOOTFILE dir entry  do we want an error splash?  loop all files in BOOTDIR  found the bootfile  Empty the keyboard buffer  check range, set volume and save settings 
 * removes the extension of filename (if it doesn't start with a .)
 * puts the result in buffer
  Make room for end nil  Play a standard sound  Produce keyclick based upon button and global settings  Settings filters  Button filters  Return the ReplayGain mode adjusted by other relevant settings  Return the ReplayGain mode adjusted for display purposes  Update DSP's replaygain from global settings  format a sound value like: -1.05 dB  !defined(__PCTOOL__)  Read (up to) a line of text from fd into buffer and return number of bytes
 * read (which may be larger than the number of bytes stored in buffer). If
 * an error occurs, -1 is returned (and buffer contains whatever could be
 * read). A line is terminated by a LF char. Neither LF nor CR chars are
 * stored in buffer.
  "put back" what wasn't read from the buffer   time_split_units()
    split time values depending on base unit
    unit_idx: UNIT_HOUR, UNIT_MIN, UNIT_SEC, UNIT_MS
    abs_value: absolute time value
    units_in: array of unsigned ints with UNIT_IDX_TIME_COUNT fields
Mask off upper bits fallthrough and calculate the rest of the units  fallthrough and calculate the rest of the units  fallthrough and calculate the rest of the units  format_time_auto - return an auto ranged time string;
   buffer:  needs to be at least 25 characters for full range

   unit_idx: specifies lowest or base index of the value
   add | UNIT_LOCK_ to keep place holder of units that would normally be
   discarded.. For instance, UNIT_LOCK_HR would keep the hours place, ex: string
   00:10:10 (0 HRS 10 MINS 10 SECONDS) normally it would return as 10:10
   add | UNIT_TRIM_ZERO to supress leading zero on the largest unit

   value: should be passed in the same form as unit_idx

   supress_unit: may be set to true and in this case the
   hr, min, sec, ms identifiers will be left off the resulting string but
   since right to left languages are handled it is advisable to leave units
   as an indication of the text direction
 -2147483648:00:00.00\0  hr is variable length  {0,2,2,3}; Field Widths  ?:59:59.999 Std offsets    0?:+1:+4.+7 need calculated  999.59:59:0  RTL offsets     0  .4 :7 :10 won't change    {10,7,4,0}; Offsets  unitlock  units  unused  value is 0  calculate offsets of the other fields based on length of previous  trim leading zero on the max_idx RTL Languages trim leading zero on the max_idx  unused  Format time into buf.
 *
 * buf      - buffer to format to.
 * buf_size - size of buffer.
 * t        - time to format, in milliseconds.
  !defined(CHECKWPS) && !defined(DBTOOL)*
 * Splits str at each occurence of split_char and puts the substrings into vector,
 * but at most vector_lenght items. Empty substrings are ignored.
 *
 * Modifies str by replacing each split_char following a substring with nul
 *
 * Returns the number of substrings found, i.e. the number of valid strings
 * in vector
  skip leading splitters  *p in the condition takes care of trailing splitters  skip successive splitters * Open a UTF-8 file and set file descriptor to first byte after BOM.
 *  If no BOM is present this behaves like open().
 *  If the file is opened for writing and O_TRUNC is set, write a BOM to
 *  the opened file and leave the file pointer set after the BOM.
  check for BOM  read or write failure, do not continue 
 * Helper function to convert a string of 6 hex digits to a native colour
  HAVE_LCD_COLOR  '0'-'3' are ASCII 0x30 to 0x33  silence warnings on mono bitmap  !defined(__PCTOOL__) || defined(CHECKWPS)  only used in USB HID and set_time screen **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Daniel Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** is_lang_rtl()  !__PCTOOL__  units used with output_dyn_value  units used with format_time_auto, option_select.c->option_get_valuestring()  Format a large-range value for output, using the appropriate unit so that
 * the displayed value is in the range 1 <= display < 1000 (1024 for "binary"
 * units) if possible, and 3 significant digits are shown. If a buffer is
 * given, the result is snprintf()'d into that buffer, otherwise the result is
 * voiced. preserve sign  Ask the user if they really want to erase the current dynamic playlist
 * returns true if the playlist should be replaced  Performance optimized version of the read_line() (see below) function.  parse a line from a configuration file. the line format is:

   name: value

   Any whitespace before setting name or value (after ':') is ignored.
   A # as first non-whitespace character discards the whole line.
   Function sets pointers to null-terminated setting name and value.
   Returns false if no valid config entry was found.
doesnt work on usb and shutdown from ata thread  do not save on critical battery  wait for stop to complete  audio_stop_recording == audio_stop for HWCODEC  Stop the music if it is playing  bookmarking can make a refresh necessary  screen is dirty, caller needs to refresh  CONFIG_CHARGING 
             * Just got plugged in, delay & resume if we were playing
              delay resume a bit while the engine is cranking 
             * Just got unplugged, pause if playing
              update speaker status  gets initial size  simple sanity: assume rockbox is on the first hotswappable
             * driver, abort out if that one isn't inserted  state gotten in main.c:init()  stop playback if we receive a call  resume playback if needed  kludge: since this events go to the button_queue,
             * event data is available in the last button data  multimedia keys on keyboards, headsets  not supported yet, needs to be done in the WPS  display the logo in the blue area of the screen (bottom 48 pixels) 
    memorize/compare details about the BOOTFILE
    we don't use dircache because it may not be up to date after
    USB disconnect (scanning in the background)
 1. open BOOTDIR and find the BOOTFILE dir entry  do we want an error splash?  loop all files in BOOTDIR  found the bootfile  Empty the keyboard buffer  check range, set volume and save settings 
 * removes the extension of filename (if it doesn't start with a .)
 * puts the result in buffer
  Make room for end nil  Play a standard sound  Produce keyclick based upon button and global settings  Settings filters  Button filters  Return the ReplayGain mode adjusted by other relevant settings  Return the ReplayGain mode adjusted for display purposes  Update DSP's replaygain from global settings  format a sound value like: -1.05 dB  !defined(__PCTOOL__)  Read (up to) a line of text from fd into buffer and return number of bytes
 * read (which may be larger than the number of bytes stored in buffer). If
 * an error occurs, -1 is returned (and buffer contains whatever could be
 * read). A line is terminated by a LF char. Neither LF nor CR chars are
 * stored in buffer.
  "put back" what wasn't read from the buffer   time_split_units()
    split time values depending on base unit
    unit_idx: UNIT_HOUR, UNIT_MIN, UNIT_SEC, UNIT_MS
    abs_value: absolute time value
    units_in: array of unsigned ints with UNIT_IDX_TIME_COUNT fields
Mask off upper bits fallthrough and calculate the rest of the units  fallthrough and calculate the rest of the units  fallthrough and calculate the rest of the units  format_time_auto - return an auto ranged time string;
   buffer:  needs to be at least 25 characters for full range

   unit_idx: specifies lowest or base index of the value
   add | UNIT_LOCK_ to keep place holder of units that would normally be
   discarded.. For instance, UNIT_LOCK_HR would keep the hours place, ex: string
   00:10:10 (0 HRS 10 MINS 10 SECONDS) normally it would return as 10:10
   add | UNIT_TRIM_ZERO to supress leading zero on the largest unit

   value: should be passed in the same form as unit_idx

   supress_unit: may be set to true and in this case the
   hr, min, sec, ms identifiers will be left off the resulting string but
   since right to left languages are handled it is advisable to leave units
   as an indication of the text direction
 -2147483648:00:00.00\0  hr is variable length  {0,2,2,3}; Field Widths  ?:59:59.999 Std offsets    0?:+1:+4.+7 need calculated  999.59:59:0  RTL offsets     0  .4 :7 :10 won't change    {10,7,4,0}; Offsets  unitlock  units  unused  value is 0  calculate offsets of the other fields based on length of previous  trim leading zero on the max_idx RTL Languages trim leading zero on the max_idx  unused  Format time into buf.
 *
 * buf      - buffer to format to.
 * buf_size - size of buffer.
 * t        - time to format, in milliseconds.
  !defined(CHECKWPS) && !defined(DBTOOL)*
 * Splits str at each occurence of split_char and puts the substrings into vector,
 * but at most vector_lenght items. Empty substrings are ignored.
 *
 * Modifies str by replacing each split_char following a substring with nul
 *
 * Returns the number of substrings found, i.e. the number of valid strings
 * in vector
  skip leading splitters  *p in the condition takes care of trailing splitters  skip successive splitters * Open a UTF-8 file and set file descriptor to first byte after BOM.
 *  If no BOM is present this behaves like open().
 *  If the file is opened for writing and O_TRUNC is set, write a BOM to
 *  the opened file and leave the file pointer set after the BOM.
  check for BOM  read or write failure, do not continue 
 * Helper function to convert a string of 6 hex digits to a native colour
  HAVE_LCD_COLOR  '0'-'3' are ASCII 0x30 to 0x33  silence warnings on mono bitmap  !defined(__PCTOOL__) || defined(CHECKWPS)  only used in USB HID and set_time screen 