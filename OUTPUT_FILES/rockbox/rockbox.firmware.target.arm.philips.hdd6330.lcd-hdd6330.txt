**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 by Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** register defines for Philips LCD 220x176x16 - model: LPH9165-2  whether the lcd is currently enabled or not  Display status  Value used for flipping. Must be remembered when display is turned off.  Used for flip offset correction  Inverse value. Must be remembered when display is turned off.  wait for LCD  send LCD data  send LCD command  enable / disable lcd  lcd_display_on()  100ms  Probably out of sync and we don't wanna pepper the code with
           lcd_update() calls for this.  lcd_display_off()  HAVE_LCD_ENABLE ** hardware configuration ** turn the display upside down (call lcd_update() afterwards)    YUV- > RGB565 conversion
 *   |R|   |1.000000 -0.000001  1.402000| |Y'|
 *   |G| = |1.000000 -0.334136 -0.714136| |Pb|
 *   |B|   |1.000000  1.772000  0.000000| |Pr|
 *   Scaled, normalized, rounded and tweaked to yield RGB 565:
 *   |R|   |74   0 101| |Y' -  16| >> 9
 *   |G| = |74 -24 -51| |Cb - 128| >> 8
 *   |B|   |74 128   0| |Cr - 128| >> 9
 Performance function to blit a YUV bitmap directly to the LCD  upsampling, YUV->RGB conversion and reduction to RGB565 in one go  calculate how much we can do in one go  Update the display.
   This must be called after all other LCD functions that change the display.  Update a fraction of the display.  Ensure x and width are both even - so we can read 32-bit aligned
       data from lcd_framebuffer  Nothing left to do.  calculate how much we can do in one go  for each row  for each column  output 2 pixels **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 by Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** register defines for Philips LCD 220x176x16 - model: LPH9165-2  whether the lcd is currently enabled or not  Display status  Value used for flipping. Must be remembered when display is turned off.  Used for flip offset correction  Inverse value. Must be remembered when display is turned off.  wait for LCD  send LCD data  send LCD command  enable / disable lcd  lcd_display_on()  100ms  Probably out of sync and we don't wanna pepper the code with
           lcd_update() calls for this.  lcd_display_off()  HAVE_LCD_ENABLE ** hardware configuration ** turn the display upside down (call lcd_update() afterwards)    YUV- > RGB565 conversion
 *   |R|   |1.000000 -0.000001  1.402000| |Y'|
 *   |G| = |1.000000 -0.334136 -0.714136| |Pb|
 *   |B|   |1.000000  1.772000  0.000000| |Pr|
 *   Scaled, normalized, rounded and tweaked to yield RGB 565:
 *   |R|   |74   0 101| |Y' -  16| >> 9
 *   |G| = |74 -24 -51| |Cb - 128| >> 8
 *   |B|   |74 128   0| |Cr - 128| >> 9
 Performance function to blit a YUV bitmap directly to the LCD  upsampling, YUV->RGB conversion and reduction to RGB565 in one go  calculate how much we can do in one go  Update the display.
   This must be called after all other LCD functions that change the display.  Update a fraction of the display.  Ensure x and width are both even - so we can read 32-bit aligned
       data from lcd_framebuffer  Nothing left to do.  calculate how much we can do in one go  for each row  for each column  output 2 pixels **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 by Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** register defines for Philips LCD 220x176x16 - model: LPH9165-2  whether the lcd is currently enabled or not  Display status  Value used for flipping. Must be remembered when display is turned off.  Used for flip offset correction  Inverse value. Must be remembered when display is turned off.  wait for LCD  send LCD data  send LCD command  enable / disable lcd  lcd_display_on()  100ms  Probably out of sync and we don't wanna pepper the code with
           lcd_update() calls for this.  lcd_display_off()  HAVE_LCD_ENABLE ** hardware configuration ** turn the display upside down (call lcd_update() afterwards)    YUV- > RGB565 conversion
 *   |R|   |1.000000 -0.000001  1.402000| |Y'|
 *   |G| = |1.000000 -0.334136 -0.714136| |Pb|
 *   |B|   |1.000000  1.772000  0.000000| |Pr|
 *   Scaled, normalized, rounded and tweaked to yield RGB 565:
 *   |R|   |74   0 101| |Y' -  16| >> 9
 *   |G| = |74 -24 -51| |Cb - 128| >> 8
 *   |B|   |74 128   0| |Cr - 128| >> 9
 Performance function to blit a YUV bitmap directly to the LCD  upsampling, YUV->RGB conversion and reduction to RGB565 in one go  calculate how much we can do in one go  Update the display.
   This must be called after all other LCD functions that change the display.  Update a fraction of the display.  Ensure x and width are both even - so we can read 32-bit aligned
       data from lcd_framebuffer  Nothing left to do.  calculate how much we can do in one go  for each row  for each column  output 2 pixels 