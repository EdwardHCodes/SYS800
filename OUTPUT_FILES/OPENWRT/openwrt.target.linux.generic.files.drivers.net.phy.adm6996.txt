
 * ADM6996 switch driver
 *
 * swconfig interface based on ar8216.c
 *
 * Copyright (c) 2008 Felix Fietkau <nbd@nbd.name>
 * VLAN support Copyright (c) 2010, 2011 Peter Lebbing <peter@digitalbrains.com>
 * Copyright (c) 2013 Hauke Mehrtens <hauke@hauke-m.de>
 * Copyright (c) 2014 Matti Laakso <malaakso@elisanet.fi>
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of the GNU General Public License v2 as published by the
 * Free Software Foundation
 #define DEBUG 1 Current hardware state  Debugging: register address to operate on  Primary VLAN ID  bitmap, 1 = port is member  bitmap, 1 = tagged member  use abstraction for regops, we want to add gpio support in the future  Minimum timing constants  3us - max(adm 2.5us, 93c 1us)  1us - max(adm 10ns, 93c 400ns)  1us - max(adm no, 93c 200ns)  Byte assemble from MSB to LSB  Bit bang from MSB to LSB  Clock low  Output on rising edge  Clock high  Clock low  Byte assemble from MSB to LSB  Bit bang from MSB to LSB  Clock low  Input on rising edge  Clock high  Clock low  Advance clock(s)  Clock high  Clock low  cmd: 01 10 T DD R RRRRRR  Enable GPIO outputs with all pins to 0  Extra clock(s) required per datasheet  Disable GPIO outputs  EEPROM has 16-bit registers, but pumps out two registers in one request  Write chip configuration register  Follow 93c66 timing and chip's min EEPROM timing requirement  cmd(27bits): sb(1) + opc(01) + addr(bbbbbbbb) + data(bbbbbbbbbbbbbbbb)  Enable GPIO outputs with all pins to 0  Write cmd. Total 27 bits  Extra clock(s) required per datasheet  Disable GPIO outputs  def DEBUG 
 * Precondition: reg_mutex must be held
 
 * Disable VLANs
 *
 * Sets VLAN mapping for port-based VLAN with all ports connected to
 * eachother (this is also the power-on default).
 *
 * Precondition: reg_mutex must be held
 
 * Disable VLANs
 *
 * Sets VLAN mapping for port-based VLAN with all ports connected to
 * eachother (this is also the power-on default).
 *
 * Precondition: reg_mutex must be held
 
 * Precondition: reg_mutex must be held
 
 * Precondition: reg_mutex must be held
  Disable VLAN entry  Disable VLAN entry 
 * Reset the switch
 *
 * The ADM6996 can't do a software-initiated reset, so we just initialise the
 * registers we support in this driver.
 *
 * Precondition: reg_mutex must be held
  initialize port and vlan settings  reset all PHY ports  Clear VLAN priority map so prio's are unused  Clear VLAN priority map so prio's are unused  Bits 0, 1, 3 and 4.  def DEBUG  Detect type of chip  
			 * Bit 12 of this register is read-only. 
			 * This is the FC model. 
			  Bit 12 is read-write. This is the M model.  The ADM6996L connected through GPIOs does not support any switch
	   status calls 
 * Warning: phydev->priv is NULL if phydev->mdio.addr != 0
 
 * Warning: phydev->priv is NULL if phydev->mdio.addr != 0
  Our custom registers are at PHY addresses 0-10. Claim those.  look for the switch on the bus  we don't need an extra reset 
 * ADM6996 switch driver
 *
 * swconfig interface based on ar8216.c
 *
 * Copyright (c) 2008 Felix Fietkau <nbd@nbd.name>
 * VLAN support Copyright (c) 2010, 2011 Peter Lebbing <peter@digitalbrains.com>
 * Copyright (c) 2013 Hauke Mehrtens <hauke@hauke-m.de>
 * Copyright (c) 2014 Matti Laakso <malaakso@elisanet.fi>
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of the GNU General Public License v2 as published by the
 * Free Software Foundation
 #define DEBUG 1 Current hardware state  Debugging: register address to operate on  Primary VLAN ID  bitmap, 1 = port is member  bitmap, 1 = tagged member  use abstraction for regops, we want to add gpio support in the future  Minimum timing constants  3us - max(adm 2.5us, 93c 1us)  1us - max(adm 10ns, 93c 400ns)  1us - max(adm no, 93c 200ns)  Byte assemble from MSB to LSB  Bit bang from MSB to LSB  Clock low  Output on rising edge  Clock high  Clock low  Byte assemble from MSB to LSB  Bit bang from MSB to LSB  Clock low  Input on rising edge  Clock high  Clock low  Advance clock(s)  Clock high  Clock low  cmd: 01 10 T DD R RRRRRR  Enable GPIO outputs with all pins to 0  Extra clock(s) required per datasheet  Disable GPIO outputs  EEPROM has 16-bit registers, but pumps out two registers in one request  Write chip configuration register  Follow 93c66 timing and chip's min EEPROM timing requirement  cmd(27bits): sb(1) + opc(01) + addr(bbbbbbbb) + data(bbbbbbbbbbbbbbbb)  Enable GPIO outputs with all pins to 0  Write cmd. Total 27 bits  Extra clock(s) required per datasheet  Disable GPIO outputs  def DEBUG 
 * Precondition: reg_mutex must be held
 
 * Disable VLANs
 *
 * Sets VLAN mapping for port-based VLAN with all ports connected to
 * eachother (this is also the power-on default).
 *
 * Precondition: reg_mutex must be held
 
 * Disable VLANs
 *
 * Sets VLAN mapping for port-based VLAN with all ports connected to
 * eachother (this is also the power-on default).
 *
 * Precondition: reg_mutex must be held
 
 * Precondition: reg_mutex must be held
 
 * Precondition: reg_mutex must be held
  Disable VLAN entry  Disable VLAN entry 
 * Reset the switch
 *
 * The ADM6996 can't do a software-initiated reset, so we just initialise the
 * registers we support in this driver.
 *
 * Precondition: reg_mutex must be held
  initialize port and vlan settings  reset all PHY ports  Clear VLAN priority map so prio's are unused  Clear VLAN priority map so prio's are unused  Bits 0, 1, 3 and 4.  def DEBUG  Detect type of chip  
			 * Bit 12 of this register is read-only. 
			 * This is the FC model. 
			  Bit 12 is read-write. This is the M model.  The ADM6996L connected through GPIOs does not support any switch
	   status calls 
 * Warning: phydev->priv is NULL if phydev->mdio.addr != 0
 
 * Warning: phydev->priv is NULL if phydev->mdio.addr != 0
  Our custom registers are at PHY addresses 0-10. Claim those.  look for the switch on the bus  we don't need an extra reset 
 * ADM6996 switch driver
 *
 * swconfig interface based on ar8216.c
 *
 * Copyright (c) 2008 Felix Fietkau <nbd@nbd.name>
 * VLAN support Copyright (c) 2010, 2011 Peter Lebbing <peter@digitalbrains.com>
 * Copyright (c) 2013 Hauke Mehrtens <hauke@hauke-m.de>
 * Copyright (c) 2014 Matti Laakso <malaakso@elisanet.fi>
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of the GNU General Public License v2 as published by the
 * Free Software Foundation
 #define DEBUG 1 Current hardware state  Debugging: register address to operate on  Primary VLAN ID  bitmap, 1 = port is member  bitmap, 1 = tagged member  use abstraction for regops, we want to add gpio support in the future  Minimum timing constants  3us - max(adm 2.5us, 93c 1us)  1us - max(adm 10ns, 93c 400ns)  1us - max(adm no, 93c 200ns)  Byte assemble from MSB to LSB  Bit bang from MSB to LSB  Clock low  Output on rising edge  Clock high  Clock low  Byte assemble from MSB to LSB  Bit bang from MSB to LSB  Clock low  Input on rising edge  Clock high  Clock low  Advance clock(s)  Clock high  Clock low  cmd: 01 10 T DD R RRRRRR  Enable GPIO outputs with all pins to 0  Extra clock(s) required per datasheet  Disable GPIO outputs  EEPROM has 16-bit registers, but pumps out two registers in one request  Write chip configuration register  Follow 93c66 timing and chip's min EEPROM timing requirement  cmd(27bits): sb(1) + opc(01) + addr(bbbbbbbb) + data(bbbbbbbbbbbbbbbb)  Enable GPIO outputs with all pins to 0  Write cmd. Total 27 bits  Extra clock(s) required per datasheet  Disable GPIO outputs  def DEBUG 
 * Precondition: reg_mutex must be held
 
 * Disable VLANs
 *
 * Sets VLAN mapping for port-based VLAN with all ports connected to
 * eachother (this is also the power-on default).
 *
 * Precondition: reg_mutex must be held
 
 * Disable VLANs
 *
 * Sets VLAN mapping for port-based VLAN with all ports connected to
 * eachother (this is also the power-on default).
 *
 * Precondition: reg_mutex must be held
 
 * Precondition: reg_mutex must be held
 
 * Precondition: reg_mutex must be held
  Disable VLAN entry  Disable VLAN entry 
 * Reset the switch
 *
 * The ADM6996 can't do a software-initiated reset, so we just initialise the
 * registers we support in this driver.
 *
 * Precondition: reg_mutex must be held
  initialize port and vlan settings  reset all PHY ports  Clear VLAN priority map so prio's are unused  Clear VLAN priority map so prio's are unused  Bits 0, 1, 3 and 4.  def DEBUG  Detect type of chip  
			 * Bit 12 of this register is read-only. 
			 * This is the FC model. 
			  Bit 12 is read-write. This is the M model.  The ADM6996L connected through GPIOs does not support any switch
	   status calls 
 * Warning: phydev->priv is NULL if phydev->mdio.addr != 0
 
 * Warning: phydev->priv is NULL if phydev->mdio.addr != 0
  Our custom registers are at PHY addresses 0-10. Claim those.  look for the switch on the bus  we don't need an extra reset 