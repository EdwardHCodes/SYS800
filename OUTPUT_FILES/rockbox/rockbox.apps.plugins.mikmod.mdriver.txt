	MikMod sound library
	(c) 1998-2014 Miodrag Vallat and others - see file AUTHORS
	for a complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  These routines are used to access the available soundcard drivers.

============================================================================== modfile being played  EXPORTED GLOBALS  Initial global settings  autodetect  128 == 100% (full left/right)  no reverb  global sound volume (0-128)  volume of song  volume of sound effects  INTERNAL GLOBALS  tempo  Do not modify the numchn variables yourself!  use MikMod_SetNumVoices()  PRIVATE VARS  Previous driver in use  Limits the number of hardware voices to the specified amount.
   This function should only be used by the low-level drivers.  Limits the number of hardware voices to the specified amount.
   This function should only be used by the low-level drivers.  Note: 'type' indicates whether the returned value should be for music or for
   sound effects.  compute size of buffer  list all registered device drivers :  don't register a MISSING() driver  if we try to register an invalid driver, or an already registered driver,
	   ignore this attempt  Allow only driver ordinals > 0  range checks  repend can't be bigger than size  It is a sound effects channel, so flag the voice as non-critical!  if md_device==0, try to find a device number  if n>0, use that driver  arguments here might be necessary for the presence check to succeed  Reset the driver using the new global variable settings.
   If the driver has not been initialized, it will be now.  md_driver->Reset was NULL, or md_device was changed, so do a full
		   reset of the driver.  If either parameter is -1, the current set value will be retained.  make sure the player doesn't start with garbage  Plays a sound effects sample.  Picks a voice from the number of voices
   allocated for use as sound effects (loops through voices, skipping all active
   criticals).

   Returns the voice that the sound is being played on.  for cases where all channels are critical  check the first location after sfxpool ========== MT-safe stuff ========== Parameter extraction helper ========== Posix helper functions  Check if the file is a regular or nonexistant file (or a link to a such a
   file), and that, should the calling program be setuid, the access rights are
   reasonable. Returns 1 if it is safe to rewrite the file, 0 otherwise.
   The goal is to prevent a setuid root libmikmod application from overriding
   files like /etc/passwd with digital sound...  not a regular file ?  more than one hard link to the file ?  check access rights with the real user and group id  Drop all root privileges we might have  we are setuid root -> drop setuid to become the real user  we are run as root -> drop all and become user 'nobody'  no such user ?  user 'nobody' has root privileges ? weird...  ex:set ts=8: 	MikMod sound library
	(c) 1998-2014 Miodrag Vallat and others - see file AUTHORS
	for a complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  These routines are used to access the available soundcard drivers.

============================================================================== modfile being played  EXPORTED GLOBALS  Initial global settings  autodetect  128 == 100% (full left/right)  no reverb  global sound volume (0-128)  volume of song  volume of sound effects  INTERNAL GLOBALS  tempo  Do not modify the numchn variables yourself!  use MikMod_SetNumVoices()  PRIVATE VARS  Previous driver in use  Limits the number of hardware voices to the specified amount.
   This function should only be used by the low-level drivers.  Limits the number of hardware voices to the specified amount.
   This function should only be used by the low-level drivers.  Note: 'type' indicates whether the returned value should be for music or for
   sound effects.  compute size of buffer  list all registered device drivers :  don't register a MISSING() driver  if we try to register an invalid driver, or an already registered driver,
	   ignore this attempt  Allow only driver ordinals > 0  range checks  repend can't be bigger than size  It is a sound effects channel, so flag the voice as non-critical!  if md_device==0, try to find a device number  if n>0, use that driver  arguments here might be necessary for the presence check to succeed  Reset the driver using the new global variable settings.
   If the driver has not been initialized, it will be now.  md_driver->Reset was NULL, or md_device was changed, so do a full
		   reset of the driver.  If either parameter is -1, the current set value will be retained.  make sure the player doesn't start with garbage  Plays a sound effects sample.  Picks a voice from the number of voices
   allocated for use as sound effects (loops through voices, skipping all active
   criticals).

   Returns the voice that the sound is being played on.  for cases where all channels are critical  check the first location after sfxpool ========== MT-safe stuff ========== Parameter extraction helper ========== Posix helper functions  Check if the file is a regular or nonexistant file (or a link to a such a
   file), and that, should the calling program be setuid, the access rights are
   reasonable. Returns 1 if it is safe to rewrite the file, 0 otherwise.
   The goal is to prevent a setuid root libmikmod application from overriding
   files like /etc/passwd with digital sound...  not a regular file ?  more than one hard link to the file ?  check access rights with the real user and group id  Drop all root privileges we might have  we are setuid root -> drop setuid to become the real user  we are run as root -> drop all and become user 'nobody'  no such user ?  user 'nobody' has root privileges ? weird...  ex:set ts=8: 	MikMod sound library
	(c) 1998-2014 Miodrag Vallat and others - see file AUTHORS
	for a complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  These routines are used to access the available soundcard drivers.

============================================================================== modfile being played  EXPORTED GLOBALS  Initial global settings  autodetect  128 == 100% (full left/right)  no reverb  global sound volume (0-128)  volume of song  volume of sound effects  INTERNAL GLOBALS  tempo  Do not modify the numchn variables yourself!  use MikMod_SetNumVoices()  PRIVATE VARS  Previous driver in use  Limits the number of hardware voices to the specified amount.
   This function should only be used by the low-level drivers.  Limits the number of hardware voices to the specified amount.
   This function should only be used by the low-level drivers.  Note: 'type' indicates whether the returned value should be for music or for
   sound effects.  compute size of buffer  list all registered device drivers :  don't register a MISSING() driver  if we try to register an invalid driver, or an already registered driver,
	   ignore this attempt  Allow only driver ordinals > 0  range checks  repend can't be bigger than size  It is a sound effects channel, so flag the voice as non-critical!  if md_device==0, try to find a device number  if n>0, use that driver  arguments here might be necessary for the presence check to succeed  Reset the driver using the new global variable settings.
   If the driver has not been initialized, it will be now.  md_driver->Reset was NULL, or md_device was changed, so do a full
		   reset of the driver.  If either parameter is -1, the current set value will be retained.  make sure the player doesn't start with garbage  Plays a sound effects sample.  Picks a voice from the number of voices
   allocated for use as sound effects (loops through voices, skipping all active
   criticals).

   Returns the voice that the sound is being played on.  for cases where all channels are critical  check the first location after sfxpool ========== MT-safe stuff ========== Parameter extraction helper ========== Posix helper functions  Check if the file is a regular or nonexistant file (or a link to a such a
   file), and that, should the calling program be setuid, the access rights are
   reasonable. Returns 1 if it is safe to rewrite the file, 0 otherwise.
   The goal is to prevent a setuid root libmikmod application from overriding
   files like /etc/passwd with digital sound...  not a regular file ?  more than one hard link to the file ?  check access rights with the real user and group id  Drop all root privileges we might have  we are setuid root -> drop setuid to become the real user  we are run as root -> drop all and become user 'nobody'  no such user ?  user 'nobody' has root privileges ? weird...  ex:set ts=8: 