**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 *
 * Copyright (C) 2016 by Amaury Pouly
 *               2018 by Marcin Bukat
 *               2018 by Roman Stolyarov
 *
 * Based on Rockbox iriver bootloader by Linus Nielsen Feltzing
 * and the ipodlinux bootloader by Daniel Palffy and Bernard Leach
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Basic configuration  images  don't issue an error when parsing the file for dependencies  return icon y position (x is always centered)  Important Note: this bootloader is carefully written so that in case of
 * error, the OF is run. This seems like the safest option since the OF is
 * always there and might do magic things.  special  power down/suspend  get timeout before taking action if the user doesn't touch the device  Inactivity timeout when on hold  Inactivity timeout when not on hold  return action on idle timeout  power down/suspend  return last choice  we store the boot mode in a file in /tmp so we can reload it between 'boots'
 * (since the mostly suspends instead of powering down)  load previous mode, or start with rockbox if none  wait for user action  on usb detect, return to usb
         * FIXME this is a hack, we need proper usb detection  save last choice  inactivity detection  save last choice  redraw  display top text  display icon  display bottom description  display arrows  wait for a key   record action, changing HOLD counts as action  ignore release, allow repeat  play -> stop loop and return mode  left/right/up/down: change mode  save mode  make sure choice is visible  display top text  wait for a key   ignore release, allow repeat  play -> stop loop and return mode  left/right/up/down: change mode  wait a small time  ignore event  wait for any key or timeout  run service menu  open log file  open regular log file  get its size  on error, don't do anything  if file is too large, rename it and start a new log file  move file  re-open the file, truncate in case the move was unsuccessful  redirect stdout and stderr to have error messages logged somewhere on the
     * user partition  print version     /* try to load the extra font we install on the device */    int font_id = font_load("/usr/local/share/rockbox/bootloader.fnt");    if(font_id >= 0)        lcd_setfont(font_id); run all tools menu  for now the only way we have to trigger USB mode it to run the OF  boot OF  fallback to OF in case of failure             nwz_power_suspend(); if we reach this point, everything failed, so return an error so that
     * sysmgrd knows something is wrong **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 *
 * Copyright (C) 2016 by Amaury Pouly
 *               2018 by Marcin Bukat
 *               2018 by Roman Stolyarov
 *
 * Based on Rockbox iriver bootloader by Linus Nielsen Feltzing
 * and the ipodlinux bootloader by Daniel Palffy and Bernard Leach
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Basic configuration  images  don't issue an error when parsing the file for dependencies  return icon y position (x is always centered)  Important Note: this bootloader is carefully written so that in case of
 * error, the OF is run. This seems like the safest option since the OF is
 * always there and might do magic things.  special  power down/suspend  get timeout before taking action if the user doesn't touch the device  Inactivity timeout when on hold  Inactivity timeout when not on hold  return action on idle timeout  power down/suspend  return last choice  we store the boot mode in a file in /tmp so we can reload it between 'boots'
 * (since the mostly suspends instead of powering down)  load previous mode, or start with rockbox if none  wait for user action  on usb detect, return to usb
         * FIXME this is a hack, we need proper usb detection  save last choice  inactivity detection  save last choice  redraw  display top text  display icon  display bottom description  display arrows  wait for a key   record action, changing HOLD counts as action  ignore release, allow repeat  play -> stop loop and return mode  left/right/up/down: change mode  save mode  make sure choice is visible  display top text  wait for a key   ignore release, allow repeat  play -> stop loop and return mode  left/right/up/down: change mode  wait a small time  ignore event  wait for any key or timeout  run service menu  open log file  open regular log file  get its size  on error, don't do anything  if file is too large, rename it and start a new log file  move file  re-open the file, truncate in case the move was unsuccessful  redirect stdout and stderr to have error messages logged somewhere on the
     * user partition  print version     /* try to load the extra font we install on the device */    int font_id = font_load("/usr/local/share/rockbox/bootloader.fnt");    if(font_id >= 0)        lcd_setfont(font_id); run all tools menu  for now the only way we have to trigger USB mode it to run the OF  boot OF  fallback to OF in case of failure             nwz_power_suspend(); if we reach this point, everything failed, so return an error so that
     * sysmgrd knows something is wrong **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 *
 * Copyright (C) 2016 by Amaury Pouly
 *               2018 by Marcin Bukat
 *               2018 by Roman Stolyarov
 *
 * Based on Rockbox iriver bootloader by Linus Nielsen Feltzing
 * and the ipodlinux bootloader by Daniel Palffy and Bernard Leach
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Basic configuration  images  don't issue an error when parsing the file for dependencies  return icon y position (x is always centered)  Important Note: this bootloader is carefully written so that in case of
 * error, the OF is run. This seems like the safest option since the OF is
 * always there and might do magic things.  special  power down/suspend  get timeout before taking action if the user doesn't touch the device  Inactivity timeout when on hold  Inactivity timeout when not on hold  return action on idle timeout  power down/suspend  return last choice  we store the boot mode in a file in /tmp so we can reload it between 'boots'
 * (since the mostly suspends instead of powering down)  load previous mode, or start with rockbox if none  wait for user action  on usb detect, return to usb
         * FIXME this is a hack, we need proper usb detection  save last choice  inactivity detection  save last choice  redraw  display top text  display icon  display bottom description  display arrows  wait for a key   record action, changing HOLD counts as action  ignore release, allow repeat  play -> stop loop and return mode  left/right/up/down: change mode  save mode  make sure choice is visible  display top text  wait for a key   ignore release, allow repeat  play -> stop loop and return mode  left/right/up/down: change mode  wait a small time  ignore event  wait for any key or timeout  run service menu  open log file  open regular log file  get its size  on error, don't do anything  if file is too large, rename it and start a new log file  move file  re-open the file, truncate in case the move was unsuccessful  redirect stdout and stderr to have error messages logged somewhere on the
     * user partition  print version     /* try to load the extra font we install on the device */    int font_id = font_load("/usr/local/share/rockbox/bootloader.fnt");    if(font_id >= 0)        lcd_setfont(font_id); run all tools menu  for now the only way we have to trigger USB mode it to run the OF  boot OF  fallback to OF in case of failure             nwz_power_suspend(); if we reach this point, everything failed, so return an error so that
     * sysmgrd knows something is wrong 