**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Stepan Moskovchenko
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Default, not quite full blast..  Center                           Ac Gr Piano                      .. not .. bent ?                 Default bend value is 2  No offset  Center.. no bend  Set to pitch bend depth  Set to pitch bend depth  Filename is the name of the config file               The MIDI file should have been loaded at this point  
     * Always load the piano.
     * Some files will assume its loaded without specifically
     * issuing a Patch command... then we wonder why we can't hear anything
      Scan the file to see what needs to be loaded  Initialize the whole drum set  Scan our config file and load the right patches as needed            midi_debug("\nLOADING: <%s> ", fn);  There was an error loading it  Scan our config file and load the drum data   Error loading patch  Drums, no ADSR  Some blatant Timidity code for rate conversion... 
     * Okay. This is the rate shift. Timidity defaults to 9, and sets
     * it to 10 if you use the fast decay option. Slow decay sounds better
     * on some files, except on some other files... you get chords that aren't
     * done decaying yet.. and they dont harmonize with the next chord and it
     * sounds like utter crap. Yes, even Timitidy does that. So I'm going to
     * default this to 10, and maybe later have an option to set it to 9
     * for longer decays.
     
     * Do this here because the patches assume a 44100 sampling rate
     * We've halved our sampling rate, ergo the ADSR code will be
     * called half the time. Ergo, double the rate to keep stuff
     * sounding right.
     *
     * Or just move the 1 up one line to optimize a tiny bit.
      so->curRate = so->curRate << 1;  Is voice being ramped?  Ramp has been started  OK to advance voice  LOOP_REVERSE|LOOP_PINGPONG  = 24   At this point cp_temp is wrong. We need to take a step  Have we overrun?  stop voice  Better, working, linear interpolation     stop voice           so->isUsed = false; Stupid ADSR code... and don't do ADSR for drums  stop voice  stop voice  Scaling by channel volume and note volume is done in sequencer.c  That saves us some multiplication and pointer operations          need to set ramp beginning  stupid junk..  store these again  synth num_samples samples and write them to the  buffer pointed to by buf_ptr                     TODO: Automatic Gain Control, anyone?  Or, should this be implemented on the DSP's output volume instead?  No more ghetto lowpass filter. Linear interpolation works well. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Stepan Moskovchenko
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Default, not quite full blast..  Center                           Ac Gr Piano                      .. not .. bent ?                 Default bend value is 2  No offset  Center.. no bend  Set to pitch bend depth  Set to pitch bend depth  Filename is the name of the config file               The MIDI file should have been loaded at this point  
     * Always load the piano.
     * Some files will assume its loaded without specifically
     * issuing a Patch command... then we wonder why we can't hear anything
      Scan the file to see what needs to be loaded  Initialize the whole drum set  Scan our config file and load the right patches as needed            midi_debug("\nLOADING: <%s> ", fn);  There was an error loading it  Scan our config file and load the drum data   Error loading patch  Drums, no ADSR  Some blatant Timidity code for rate conversion... 
     * Okay. This is the rate shift. Timidity defaults to 9, and sets
     * it to 10 if you use the fast decay option. Slow decay sounds better
     * on some files, except on some other files... you get chords that aren't
     * done decaying yet.. and they dont harmonize with the next chord and it
     * sounds like utter crap. Yes, even Timitidy does that. So I'm going to
     * default this to 10, and maybe later have an option to set it to 9
     * for longer decays.
     
     * Do this here because the patches assume a 44100 sampling rate
     * We've halved our sampling rate, ergo the ADSR code will be
     * called half the time. Ergo, double the rate to keep stuff
     * sounding right.
     *
     * Or just move the 1 up one line to optimize a tiny bit.
      so->curRate = so->curRate << 1;  Is voice being ramped?  Ramp has been started  OK to advance voice  LOOP_REVERSE|LOOP_PINGPONG  = 24   At this point cp_temp is wrong. We need to take a step  Have we overrun?  stop voice  Better, working, linear interpolation     stop voice           so->isUsed = false; Stupid ADSR code... and don't do ADSR for drums  stop voice  stop voice  Scaling by channel volume and note volume is done in sequencer.c  That saves us some multiplication and pointer operations          need to set ramp beginning  stupid junk..  store these again  synth num_samples samples and write them to the  buffer pointed to by buf_ptr                     TODO: Automatic Gain Control, anyone?  Or, should this be implemented on the DSP's output volume instead?  No more ghetto lowpass filter. Linear interpolation works well. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Stepan Moskovchenko
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Default, not quite full blast..  Center                           Ac Gr Piano                      .. not .. bent ?                 Default bend value is 2  No offset  Center.. no bend  Set to pitch bend depth  Set to pitch bend depth  Filename is the name of the config file               The MIDI file should have been loaded at this point  
     * Always load the piano.
     * Some files will assume its loaded without specifically
     * issuing a Patch command... then we wonder why we can't hear anything
      Scan the file to see what needs to be loaded  Initialize the whole drum set  Scan our config file and load the right patches as needed            midi_debug("\nLOADING: <%s> ", fn);  There was an error loading it  Scan our config file and load the drum data   Error loading patch  Drums, no ADSR  Some blatant Timidity code for rate conversion... 
     * Okay. This is the rate shift. Timidity defaults to 9, and sets
     * it to 10 if you use the fast decay option. Slow decay sounds better
     * on some files, except on some other files... you get chords that aren't
     * done decaying yet.. and they dont harmonize with the next chord and it
     * sounds like utter crap. Yes, even Timitidy does that. So I'm going to
     * default this to 10, and maybe later have an option to set it to 9
     * for longer decays.
     
     * Do this here because the patches assume a 44100 sampling rate
     * We've halved our sampling rate, ergo the ADSR code will be
     * called half the time. Ergo, double the rate to keep stuff
     * sounding right.
     *
     * Or just move the 1 up one line to optimize a tiny bit.
      so->curRate = so->curRate << 1;  Is voice being ramped?  Ramp has been started  OK to advance voice  LOOP_REVERSE|LOOP_PINGPONG  = 24   At this point cp_temp is wrong. We need to take a step  Have we overrun?  stop voice  Better, working, linear interpolation     stop voice           so->isUsed = false; Stupid ADSR code... and don't do ADSR for drums  stop voice  stop voice  Scaling by channel volume and note volume is done in sequencer.c  That saves us some multiplication and pointer operations          need to set ramp beginning  stupid junk..  store these again  synth num_samples samples and write them to the  buffer pointed to by buf_ptr                     TODO: Automatic Gain Control, anyone?  Or, should this be implemented on the DSP's output volume instead?  No more ghetto lowpass filter. Linear interpolation works well. 