 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Generalized linedef type handlers
 *  Floors, Ceilings, Doors, Locked Doors, Lifts, Stairs, Crushers
 *
 *-----------------------------------------------------------------------------jff 6/19/98 for demo_compatibility//////////////////////////////////////////////////////// Generalized Linedef Type handlers//////////////////////////////////////////////////////// EV_DoGenFloor() Handle generalized floor types Passed the line activating the generalized floor function Returns true if a thinker is created jff 02/04/98 Added this routine (and file) to handle generalized floor movers using bit fields in the line special type. parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if floor already moving new floor thinkerjff 3/14/98 transfer old special field too set the speed of motion set the destination heightjff 3/13/98 prevent overflow wraparound in floor height set texture/type change properties if a texture change is indicated if a numeric model changejff 5/23/98 find model with ceiling at target height if targetis a ceiling type zero typejff 3/14/98 change old field too copy typejff 3/14/98 change old field too leave type be else if a trigger model change zero typejff 3/14/98 change old field too copy typejff 3/14/98 change old field too leave type be EV_DoGenCeiling() Handle generalized ceiling types Passed the linedef activating the ceiling function Returns true if a thinker created jff 02/04/98 Added this routine (and file) to handle generalized floor movers using bit fields in the line special type. parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new ceiling thinkerjff 2/22/98jff 3/14/98 change old field too set speed of motion set destination target heightjff 3/13/98 prevent overflow wraparound in ceiling height set texture/type change properties if a texture change is indicated if a numeric model changejff 5/23/98 find model with floor at target height if targetis a floor type type is zeroedjff 3/14/98 change old field too type is copiedjff 3/14/98 change old field too type is left alone else if a trigger model change type is zeroedjff 3/14/98 change old field too type is copiedjff 3/14/98 change old field too type is left alone add this ceiling to the active list EV_DoGenLift() Handle generalized lift types Passed the linedef activating the lift Returns true if a thinker is created parse the bit fields in the line's special type Activate all <type> plats that are in_stasis check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if floor already moving Setup the plat thinker setup the target destination height setup the speed of motion setup the delay time before the floor returns add this plat to the list of active plats EV_DoGenStairs() Handle generalized stair building Passed the linedef activating the stairs Returns true if a thinker is createdjff 3/4/98 preserve loop index parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the lineDo not start another function if floor already movingjff 2/26/98 add special lockout condition to wait for entirestaircase to build before retriggering new floor thinker setup speed of stair building setup stepsize for stairs jff 3/31/98 do not leave uninited jff 2/26/98 set up lock on current sectorjff 3/4/98 preserve loop index Find next sector to raise 1.     Find 2-sided line with same sector side[0] 2.     Other side is the next sector to raise jff 6/19/98 prevent double stepsize jff 2/26/98 special lockout condition for retriggering jff 6/19/98 increase height AFTER continue  jff 2/26/98 link the stair chain in both directions lock the stair sector until building complete link step to next link next back set next forward link as end lock the step jff 3/31/98 do not leave uninitedjff 3/4/98 restore old loop index retriggerable generalized stairs build up or down alternately alternate dir on succ activations EV_DoGenCrusher() Handle generalized crusher types Passed the linedef activating the crusher Returns true if a thinker created parse the bit fields in the line's special typejff 2/22/98  Reactivate in-stasis ceilings...for certain types.jff 4/5/98 return if activated check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new ceiling thinkerjff 2/22/98 setup ceiling motion speed add to list of active ceilings EV_DoGenLockedDoor() Handle generalized locked door types Passed the linedef activating the generalized locked door Returns true if a thinker created parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new door thinkerjff 2/22/98 killough 10/98: implement gradual lighting  setup speed of door motion killough 4/15/98: fix generalized door opening sounds (previously they always had the blazing door close sound) killough 4/15/98 EV_DoGenDoor() Handle generalized door types Passed the linedef activating the generalized door Returns true if a thinker created parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new door thinkerjff 2/22/98 setup delay for door remaining open/closed setup speed of door motion jff 1/31/98 remember line that triggered us killough 10/98: implement gradual lighting  set kind of door, whether it opens then close, opens, closes etc. assign target heights accordingly Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Generalized linedef type handlers
 *  Floors, Ceilings, Doors, Locked Doors, Lifts, Stairs, Crushers
 *
 *-----------------------------------------------------------------------------jff 6/19/98 for demo_compatibility//////////////////////////////////////////////////////// Generalized Linedef Type handlers//////////////////////////////////////////////////////// EV_DoGenFloor() Handle generalized floor types Passed the line activating the generalized floor function Returns true if a thinker is created jff 02/04/98 Added this routine (and file) to handle generalized floor movers using bit fields in the line special type. parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if floor already moving new floor thinkerjff 3/14/98 transfer old special field too set the speed of motion set the destination heightjff 3/13/98 prevent overflow wraparound in floor height set texture/type change properties if a texture change is indicated if a numeric model changejff 5/23/98 find model with ceiling at target height if targetis a ceiling type zero typejff 3/14/98 change old field too copy typejff 3/14/98 change old field too leave type be else if a trigger model change zero typejff 3/14/98 change old field too copy typejff 3/14/98 change old field too leave type be EV_DoGenCeiling() Handle generalized ceiling types Passed the linedef activating the ceiling function Returns true if a thinker created jff 02/04/98 Added this routine (and file) to handle generalized floor movers using bit fields in the line special type. parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new ceiling thinkerjff 2/22/98jff 3/14/98 change old field too set speed of motion set destination target heightjff 3/13/98 prevent overflow wraparound in ceiling height set texture/type change properties if a texture change is indicated if a numeric model changejff 5/23/98 find model with floor at target height if targetis a floor type type is zeroedjff 3/14/98 change old field too type is copiedjff 3/14/98 change old field too type is left alone else if a trigger model change type is zeroedjff 3/14/98 change old field too type is copiedjff 3/14/98 change old field too type is left alone add this ceiling to the active list EV_DoGenLift() Handle generalized lift types Passed the linedef activating the lift Returns true if a thinker is created parse the bit fields in the line's special type Activate all <type> plats that are in_stasis check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if floor already moving Setup the plat thinker setup the target destination height setup the speed of motion setup the delay time before the floor returns add this plat to the list of active plats EV_DoGenStairs() Handle generalized stair building Passed the linedef activating the stairs Returns true if a thinker is createdjff 3/4/98 preserve loop index parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the lineDo not start another function if floor already movingjff 2/26/98 add special lockout condition to wait for entirestaircase to build before retriggering new floor thinker setup speed of stair building setup stepsize for stairs jff 3/31/98 do not leave uninited jff 2/26/98 set up lock on current sectorjff 3/4/98 preserve loop index Find next sector to raise 1.     Find 2-sided line with same sector side[0] 2.     Other side is the next sector to raise jff 6/19/98 prevent double stepsize jff 2/26/98 special lockout condition for retriggering jff 6/19/98 increase height AFTER continue  jff 2/26/98 link the stair chain in both directions lock the stair sector until building complete link step to next link next back set next forward link as end lock the step jff 3/31/98 do not leave uninitedjff 3/4/98 restore old loop index retriggerable generalized stairs build up or down alternately alternate dir on succ activations EV_DoGenCrusher() Handle generalized crusher types Passed the linedef activating the crusher Returns true if a thinker created parse the bit fields in the line's special typejff 2/22/98  Reactivate in-stasis ceilings...for certain types.jff 4/5/98 return if activated check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new ceiling thinkerjff 2/22/98 setup ceiling motion speed add to list of active ceilings EV_DoGenLockedDoor() Handle generalized locked door types Passed the linedef activating the generalized locked door Returns true if a thinker created parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new door thinkerjff 2/22/98 killough 10/98: implement gradual lighting  setup speed of door motion killough 4/15/98: fix generalized door opening sounds (previously they always had the blazing door close sound) killough 4/15/98 EV_DoGenDoor() Handle generalized door types Passed the linedef activating the generalized door Returns true if a thinker created parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new door thinkerjff 2/22/98 setup delay for door remaining open/closed setup speed of door motion jff 1/31/98 remember line that triggered us killough 10/98: implement gradual lighting  set kind of door, whether it opens then close, opens, closes etc. assign target heights accordingly Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Generalized linedef type handlers
 *  Floors, Ceilings, Doors, Locked Doors, Lifts, Stairs, Crushers
 *
 *-----------------------------------------------------------------------------jff 6/19/98 for demo_compatibility//////////////////////////////////////////////////////// Generalized Linedef Type handlers//////////////////////////////////////////////////////// EV_DoGenFloor() Handle generalized floor types Passed the line activating the generalized floor function Returns true if a thinker is created jff 02/04/98 Added this routine (and file) to handle generalized floor movers using bit fields in the line special type. parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if floor already moving new floor thinkerjff 3/14/98 transfer old special field too set the speed of motion set the destination heightjff 3/13/98 prevent overflow wraparound in floor height set texture/type change properties if a texture change is indicated if a numeric model changejff 5/23/98 find model with ceiling at target height if targetis a ceiling type zero typejff 3/14/98 change old field too copy typejff 3/14/98 change old field too leave type be else if a trigger model change zero typejff 3/14/98 change old field too copy typejff 3/14/98 change old field too leave type be EV_DoGenCeiling() Handle generalized ceiling types Passed the linedef activating the ceiling function Returns true if a thinker created jff 02/04/98 Added this routine (and file) to handle generalized floor movers using bit fields in the line special type. parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new ceiling thinkerjff 2/22/98jff 3/14/98 change old field too set speed of motion set destination target heightjff 3/13/98 prevent overflow wraparound in ceiling height set texture/type change properties if a texture change is indicated if a numeric model changejff 5/23/98 find model with floor at target height if targetis a floor type type is zeroedjff 3/14/98 change old field too type is copiedjff 3/14/98 change old field too type is left alone else if a trigger model change type is zeroedjff 3/14/98 change old field too type is copiedjff 3/14/98 change old field too type is left alone add this ceiling to the active list EV_DoGenLift() Handle generalized lift types Passed the linedef activating the lift Returns true if a thinker is created parse the bit fields in the line's special type Activate all <type> plats that are in_stasis check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if floor already moving Setup the plat thinker setup the target destination height setup the speed of motion setup the delay time before the floor returns add this plat to the list of active plats EV_DoGenStairs() Handle generalized stair building Passed the linedef activating the stairs Returns true if a thinker is createdjff 3/4/98 preserve loop index parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the lineDo not start another function if floor already movingjff 2/26/98 add special lockout condition to wait for entirestaircase to build before retriggering new floor thinker setup speed of stair building setup stepsize for stairs jff 3/31/98 do not leave uninited jff 2/26/98 set up lock on current sectorjff 3/4/98 preserve loop index Find next sector to raise 1.     Find 2-sided line with same sector side[0] 2.     Other side is the next sector to raise jff 6/19/98 prevent double stepsize jff 2/26/98 special lockout condition for retriggering jff 6/19/98 increase height AFTER continue  jff 2/26/98 link the stair chain in both directions lock the stair sector until building complete link step to next link next back set next forward link as end lock the step jff 3/31/98 do not leave uninitedjff 3/4/98 restore old loop index retriggerable generalized stairs build up or down alternately alternate dir on succ activations EV_DoGenCrusher() Handle generalized crusher types Passed the linedef activating the crusher Returns true if a thinker created parse the bit fields in the line's special typejff 2/22/98  Reactivate in-stasis ceilings...for certain types.jff 4/5/98 return if activated check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new ceiling thinkerjff 2/22/98 setup ceiling motion speed add to list of active ceilings EV_DoGenLockedDoor() Handle generalized locked door types Passed the linedef activating the generalized locked door Returns true if a thinker created parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new door thinkerjff 2/22/98 killough 10/98: implement gradual lighting  setup speed of door motion killough 4/15/98: fix generalized door opening sounds (previously they always had the blazing door close sound) killough 4/15/98 EV_DoGenDoor() Handle generalized door types Passed the linedef activating the generalized door Returns true if a thinker created parse the bit fields in the line's special type check if a manual trigger, if so do just the sector on the backside if not manual do all sectors tagged the same as the line Do not start another function if ceiling already movingjff 2/22/98 new door thinkerjff 2/22/98 setup delay for door remaining open/closed setup speed of door motion jff 1/31/98 remember line that triggered us killough 10/98: implement gradual lighting  set kind of door, whether it opens then close, opens, closes etc. assign target heights accordingly