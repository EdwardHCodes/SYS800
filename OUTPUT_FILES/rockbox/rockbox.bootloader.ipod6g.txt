**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Safety measure - maximum allowed firmware image size.
   The largest known current (October 2009) firmware is about 6.2MB so
   we set this to 8MB.
 The code will ask for the maximum possible value  Wait until USB is plugged  Hit  Cable pulled  Wait for threads to connect or cable is pulled  Got the message - wait for disconnect  Ack the SYS_USB_CONNECTED polled from the button queue  We don't want the HDD to spin up if the USB is attached again  HAVE_BOOTLOADER_USB_MODE  System font is 6 pixels wide  Immediately spindown the disk.   Two reasons to use this threshold (may require adjustments):
         *  - when USB (or wall adaptor) is plugged/unplugged, Vbat readings
         *    differ as much as more than 200 mV when charge current is at
         *    maximum (~340 mA).
         *  - RB uses some sort of average/compensation for battery voltage
         *    measurements, battery icon blinks at battery_level_dangerous,
         *    when the HDD is used heavily (large database) the level drops
         *    to battery_level_shutoff quickly.
          Wait for the user to insert a charger  Raise Vsysok (hyst=0.02*Vsysok) to avoid PMU
                       standby<->active looping 3200mV SPI clock = PClk/(clkdiv+1)  Actually IRAM1_ORIG contains current RB bootloader IM3 header,
       it will be replaced by ONB IM3 header, so this function must
       be called once!!!  Loads ONB in IRAM0, exception vector table is destroyed !!!  Restore exception vector table  Disable all external interrupts  Branch to start of IRAM  Launch OF when kernel mode is running  54/4 = 13.5 MHz.  OF sets GPIO3 to low when SDRAM is hibernated   The boot sequence is executed on power-on or reset. After power-up
 *  the device could come from a state of hibernation, OF hibernates
 *  the iPod after an inactive period of ~30 minutes (FW 1.1.2), on
 *  this state the SDRAM is in self-refresh mode.
 *
 *  t0 = 0
 *     S5L8702 BOOTROM loads an IM3 image located at NOR:
 *     - IM3 header (first 0x800 bytes) is loaded at IRAM1_ORIG
 *     - IM3 body (decrypted RB bootloader) is loaded at IRAM0_ORIG
 *     The time needed to load the RB bootloader (~90 Kb) is estimated
 *     on 200~250 ms. Once executed, RB booloader moves itself from
 *     IRAM0_ORIG to IRAM1_ORIG+0x800, preserving current IM3 header
 *     that contains the NOR offset where the ONB (original NOR boot),
 *     is located (see dualboot.c for details).
 *
 *  t1 = ~250 ms.
 *     If the PMU is hibernated, decrypted ONB (size 128Kb) is loaded
 *       and executed, it takes ~120 ms. Then the ONB restores the
 *       iPod to the state prior to hibernation.
 *     If not, initialize system and RB kernel, wait for t2.
 *
 *  t2 = ~650 ms.
 *     Check user button selection.
 *     If OF, diagmode, or diskmode is selected then launch ONB.
 *     If not, wait for LCD initialization.
 *
 *  t3 = ~700,~900 ms. (lcd_type_01,lcd_type_23)
 *     LCD is initialized, baclight ON.
 *     Wait for HDD spin-up.
 *
 *  t4 = ~2600,~2800 ms.
 *     HDD is ready.
 *     If hold switch is locked, then load and launch ONB.
 *     If not, load rockbox.ipod file from HDD.
 *
 *  t5 = ~2800,~3000 ms.
 *     rockbox.ipod is executed.
  Configure I2C0  27/2 = 13.5 MHz. 
     * XXX: BSS is initialized here, do not use .bss before this line
      User button selection timeout  This prevents HDD spin-up when the user enters DFU  Enter OF, diagmode and diskmode using ONB  Turns on the backlight  Wait until there is enought power to spin-up HDD  We wait until HDD spins up to check for hold button  Enter USB mode if SELECT+RIGHT are pressed  If we get here, we have a new firmware image at 0x08000000, run it  End stop - should not get here **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Safety measure - maximum allowed firmware image size.
   The largest known current (October 2009) firmware is about 6.2MB so
   we set this to 8MB.
 The code will ask for the maximum possible value  Wait until USB is plugged  Hit  Cable pulled  Wait for threads to connect or cable is pulled  Got the message - wait for disconnect  Ack the SYS_USB_CONNECTED polled from the button queue  We don't want the HDD to spin up if the USB is attached again  HAVE_BOOTLOADER_USB_MODE  System font is 6 pixels wide  Immediately spindown the disk.   Two reasons to use this threshold (may require adjustments):
         *  - when USB (or wall adaptor) is plugged/unplugged, Vbat readings
         *    differ as much as more than 200 mV when charge current is at
         *    maximum (~340 mA).
         *  - RB uses some sort of average/compensation for battery voltage
         *    measurements, battery icon blinks at battery_level_dangerous,
         *    when the HDD is used heavily (large database) the level drops
         *    to battery_level_shutoff quickly.
          Wait for the user to insert a charger  Raise Vsysok (hyst=0.02*Vsysok) to avoid PMU
                       standby<->active looping 3200mV SPI clock = PClk/(clkdiv+1)  Actually IRAM1_ORIG contains current RB bootloader IM3 header,
       it will be replaced by ONB IM3 header, so this function must
       be called once!!!  Loads ONB in IRAM0, exception vector table is destroyed !!!  Restore exception vector table  Disable all external interrupts  Branch to start of IRAM  Launch OF when kernel mode is running  54/4 = 13.5 MHz.  OF sets GPIO3 to low when SDRAM is hibernated   The boot sequence is executed on power-on or reset. After power-up
 *  the device could come from a state of hibernation, OF hibernates
 *  the iPod after an inactive period of ~30 minutes (FW 1.1.2), on
 *  this state the SDRAM is in self-refresh mode.
 *
 *  t0 = 0
 *     S5L8702 BOOTROM loads an IM3 image located at NOR:
 *     - IM3 header (first 0x800 bytes) is loaded at IRAM1_ORIG
 *     - IM3 body (decrypted RB bootloader) is loaded at IRAM0_ORIG
 *     The time needed to load the RB bootloader (~90 Kb) is estimated
 *     on 200~250 ms. Once executed, RB booloader moves itself from
 *     IRAM0_ORIG to IRAM1_ORIG+0x800, preserving current IM3 header
 *     that contains the NOR offset where the ONB (original NOR boot),
 *     is located (see dualboot.c for details).
 *
 *  t1 = ~250 ms.
 *     If the PMU is hibernated, decrypted ONB (size 128Kb) is loaded
 *       and executed, it takes ~120 ms. Then the ONB restores the
 *       iPod to the state prior to hibernation.
 *     If not, initialize system and RB kernel, wait for t2.
 *
 *  t2 = ~650 ms.
 *     Check user button selection.
 *     If OF, diagmode, or diskmode is selected then launch ONB.
 *     If not, wait for LCD initialization.
 *
 *  t3 = ~700,~900 ms. (lcd_type_01,lcd_type_23)
 *     LCD is initialized, baclight ON.
 *     Wait for HDD spin-up.
 *
 *  t4 = ~2600,~2800 ms.
 *     HDD is ready.
 *     If hold switch is locked, then load and launch ONB.
 *     If not, load rockbox.ipod file from HDD.
 *
 *  t5 = ~2800,~3000 ms.
 *     rockbox.ipod is executed.
  Configure I2C0  27/2 = 13.5 MHz. 
     * XXX: BSS is initialized here, do not use .bss before this line
      User button selection timeout  This prevents HDD spin-up when the user enters DFU  Enter OF, diagmode and diskmode using ONB  Turns on the backlight  Wait until there is enought power to spin-up HDD  We wait until HDD spins up to check for hold button  Enter USB mode if SELECT+RIGHT are pressed  If we get here, we have a new firmware image at 0x08000000, run it  End stop - should not get here **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Safety measure - maximum allowed firmware image size.
   The largest known current (October 2009) firmware is about 6.2MB so
   we set this to 8MB.
 The code will ask for the maximum possible value  Wait until USB is plugged  Hit  Cable pulled  Wait for threads to connect or cable is pulled  Got the message - wait for disconnect  Ack the SYS_USB_CONNECTED polled from the button queue  We don't want the HDD to spin up if the USB is attached again  HAVE_BOOTLOADER_USB_MODE  System font is 6 pixels wide  Immediately spindown the disk.   Two reasons to use this threshold (may require adjustments):
         *  - when USB (or wall adaptor) is plugged/unplugged, Vbat readings
         *    differ as much as more than 200 mV when charge current is at
         *    maximum (~340 mA).
         *  - RB uses some sort of average/compensation for battery voltage
         *    measurements, battery icon blinks at battery_level_dangerous,
         *    when the HDD is used heavily (large database) the level drops
         *    to battery_level_shutoff quickly.
          Wait for the user to insert a charger  Raise Vsysok (hyst=0.02*Vsysok) to avoid PMU
                       standby<->active looping 3200mV SPI clock = PClk/(clkdiv+1)  Actually IRAM1_ORIG contains current RB bootloader IM3 header,
       it will be replaced by ONB IM3 header, so this function must
       be called once!!!  Loads ONB in IRAM0, exception vector table is destroyed !!!  Restore exception vector table  Disable all external interrupts  Branch to start of IRAM  Launch OF when kernel mode is running  54/4 = 13.5 MHz.  OF sets GPIO3 to low when SDRAM is hibernated   The boot sequence is executed on power-on or reset. After power-up
 *  the device could come from a state of hibernation, OF hibernates
 *  the iPod after an inactive period of ~30 minutes (FW 1.1.2), on
 *  this state the SDRAM is in self-refresh mode.
 *
 *  t0 = 0
 *     S5L8702 BOOTROM loads an IM3 image located at NOR:
 *     - IM3 header (first 0x800 bytes) is loaded at IRAM1_ORIG
 *     - IM3 body (decrypted RB bootloader) is loaded at IRAM0_ORIG
 *     The time needed to load the RB bootloader (~90 Kb) is estimated
 *     on 200~250 ms. Once executed, RB booloader moves itself from
 *     IRAM0_ORIG to IRAM1_ORIG+0x800, preserving current IM3 header
 *     that contains the NOR offset where the ONB (original NOR boot),
 *     is located (see dualboot.c for details).
 *
 *  t1 = ~250 ms.
 *     If the PMU is hibernated, decrypted ONB (size 128Kb) is loaded
 *       and executed, it takes ~120 ms. Then the ONB restores the
 *       iPod to the state prior to hibernation.
 *     If not, initialize system and RB kernel, wait for t2.
 *
 *  t2 = ~650 ms.
 *     Check user button selection.
 *     If OF, diagmode, or diskmode is selected then launch ONB.
 *     If not, wait for LCD initialization.
 *
 *  t3 = ~700,~900 ms. (lcd_type_01,lcd_type_23)
 *     LCD is initialized, baclight ON.
 *     Wait for HDD spin-up.
 *
 *  t4 = ~2600,~2800 ms.
 *     HDD is ready.
 *     If hold switch is locked, then load and launch ONB.
 *     If not, load rockbox.ipod file from HDD.
 *
 *  t5 = ~2800,~3000 ms.
 *     rockbox.ipod is executed.
  Configure I2C0  27/2 = 13.5 MHz. 
     * XXX: BSS is initialized here, do not use .bss before this line
      User button selection timeout  This prevents HDD spin-up when the user enters DFU  Enter OF, diagmode and diskmode using ONB  Turns on the backlight  Wait until there is enought power to spin-up HDD  We wait until HDD spins up to check for hold button  Enter USB mode if SELECT+RIGHT are pressed  If we get here, we have a new firmware image at 0x08000000, run it  End stop - should not get here 