 minigzip.c -- simulate gzip using the zlib compression library
 * Copyright (C) 1995-2005 Jean-loup Gailly.
 * For conditions of distribution and use, see copyright notice in zlib.h
 
 * minigzip is a minimal implementation of the gzip utility. This is
 * only an example of using zlib and isn't meant to replace the
 * full-featured gzip. No attempt is made to deal with file systems
 * limiting names to 14 or 8+3 characters, etc... Error checking is
 * very limited. So use minigzip only for testing; use gzip for the
 * real thing. On MSDOS, use only on file names without extension
 * or in pipe mode.
  @(#) $Id$  for fileno  unlink already in stdio.h for WIN32  Needed for systems with limitation on stack size.  ===========================================================================
 * Display error message and exit
  ===========================================================================
 * Compress input to output then close both files.
  Try first compressing with mmap. If mmap fails (minigzip used in a
     * pipe), use the normal fread loop.
      MMAP version, Miguel Albrecht <malbrech@eso.org>  Try compressing the input file at once using mmap. Return Z_OK if
 * if success, Z_ERRNO otherwise.
  mmap'ed buffer for the entire input file  length of the input file  Determine the size of the file, needed for mmap:  Now do the actual mmap:  Compress the whole file at once:  USE_MMAP  ===========================================================================
 * Uncompress input to output then close both files.
  ===========================================================================
 * Compress the given file: create a corresponding .gz file and remove the
 * original.
  ===========================================================================
 * Uncompress the given file and remove the original.
  ===========================================================================
 * Usage:  minigzip [-d] [-f] [-h] [-r] [-1 to -9] [files...]
 *   -d : decompress
 *   -f : compress with Z_FILTERED
 *   -h : compress with Z_HUFFMAN_ONLY
 *   -r : compress with Z_RLE
 *   -1 to -9 : compression level
  minigzip.c -- simulate gzip using the zlib compression library
 * Copyright (C) 1995-2005 Jean-loup Gailly.
 * For conditions of distribution and use, see copyright notice in zlib.h
 
 * minigzip is a minimal implementation of the gzip utility. This is
 * only an example of using zlib and isn't meant to replace the
 * full-featured gzip. No attempt is made to deal with file systems
 * limiting names to 14 or 8+3 characters, etc... Error checking is
 * very limited. So use minigzip only for testing; use gzip for the
 * real thing. On MSDOS, use only on file names without extension
 * or in pipe mode.
  @(#) $Id$  for fileno  unlink already in stdio.h for WIN32  Needed for systems with limitation on stack size.  ===========================================================================
 * Display error message and exit
  ===========================================================================
 * Compress input to output then close both files.
  Try first compressing with mmap. If mmap fails (minigzip used in a
     * pipe), use the normal fread loop.
      MMAP version, Miguel Albrecht <malbrech@eso.org>  Try compressing the input file at once using mmap. Return Z_OK if
 * if success, Z_ERRNO otherwise.
  mmap'ed buffer for the entire input file  length of the input file  Determine the size of the file, needed for mmap:  Now do the actual mmap:  Compress the whole file at once:  USE_MMAP  ===========================================================================
 * Uncompress input to output then close both files.
  ===========================================================================
 * Compress the given file: create a corresponding .gz file and remove the
 * original.
  ===========================================================================
 * Uncompress the given file and remove the original.
  ===========================================================================
 * Usage:  minigzip [-d] [-f] [-h] [-r] [-1 to -9] [files...]
 *   -d : decompress
 *   -f : compress with Z_FILTERED
 *   -h : compress with Z_HUFFMAN_ONLY
 *   -r : compress with Z_RLE
 *   -1 to -9 : compression level
  minigzip.c -- simulate gzip using the zlib compression library
 * Copyright (C) 1995-2005 Jean-loup Gailly.
 * For conditions of distribution and use, see copyright notice in zlib.h
 
 * minigzip is a minimal implementation of the gzip utility. This is
 * only an example of using zlib and isn't meant to replace the
 * full-featured gzip. No attempt is made to deal with file systems
 * limiting names to 14 or 8+3 characters, etc... Error checking is
 * very limited. So use minigzip only for testing; use gzip for the
 * real thing. On MSDOS, use only on file names without extension
 * or in pipe mode.
  @(#) $Id$  for fileno  unlink already in stdio.h for WIN32  Needed for systems with limitation on stack size.  ===========================================================================
 * Display error message and exit
  ===========================================================================
 * Compress input to output then close both files.
  Try first compressing with mmap. If mmap fails (minigzip used in a
     * pipe), use the normal fread loop.
      MMAP version, Miguel Albrecht <malbrech@eso.org>  Try compressing the input file at once using mmap. Return Z_OK if
 * if success, Z_ERRNO otherwise.
  mmap'ed buffer for the entire input file  length of the input file  Determine the size of the file, needed for mmap:  Now do the actual mmap:  Compress the whole file at once:  USE_MMAP  ===========================================================================
 * Uncompress input to output then close both files.
  ===========================================================================
 * Compress the given file: create a corresponding .gz file and remove the
 * original.
  ===========================================================================
 * Uncompress the given file and remove the original.
  ===========================================================================
 * Usage:  minigzip [-d] [-f] [-h] [-r] [-1 to -9] [files...]
 *   -d : decompress
 *   -f : compress with Z_FILTERED
 *   -h : compress with Z_HUFFMAN_ONLY
 *   -r : compress with Z_RLE
 *   -1 to -9 : compression level
 