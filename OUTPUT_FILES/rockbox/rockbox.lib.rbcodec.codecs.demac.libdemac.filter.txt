

libdemac - A Monkey's Audio decoder

$Id$

Copyright (C) Dave Chapman 2007

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA

 FILTER_BITS == 16  Assume all our ARMv5 targets are ARMv5te(j)  FILTER_BITS  ORDER entries  We store all the filter delays in a single buffer  We name the functions according to the ORDER and FRACBITS
   pre-processor symbols and build multiple .o files from this .c file
   - this increases code-size but gives the compiler more scope for
   optimising the individual functions, as well as replacing a lot of
   variables with constants.
 Some macros to handle the fixed-point stuff  Convert from (32-FRACBITS).FRACBITS fixed-point format to an
   integer (rounding to nearest).  0.5 in fixed-point format.  round(x)  ARM_ARCH < 6  Keeping the asr #31 outside of the asm allows loads to be scheduled between
   it and the rest of the block on ARM9E, with the load's result latency filled
   by the other calculations.  ARM_ARCH  CPU_ARM  Apply the filter with state f to count entries in data[]  Update the output history  Version 3.98 and later files  Update the adaption coefficients  Have we filled the history buffer?  Convert res from (32-FRACBITS).FRACBITS fixed-point format to an
           integer (rounding to nearest) and add the input value to
           it  Update the output history  Version ??? to < 3.98 files (untested)  Have we filled the history buffer?  Init pointers  Zero coefficients and history buffer  Zero the running average 

libdemac - A Monkey's Audio decoder

$Id$

Copyright (C) Dave Chapman 2007

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA

 FILTER_BITS == 16  Assume all our ARMv5 targets are ARMv5te(j)  FILTER_BITS  ORDER entries  We store all the filter delays in a single buffer  We name the functions according to the ORDER and FRACBITS
   pre-processor symbols and build multiple .o files from this .c file
   - this increases code-size but gives the compiler more scope for
   optimising the individual functions, as well as replacing a lot of
   variables with constants.
 Some macros to handle the fixed-point stuff  Convert from (32-FRACBITS).FRACBITS fixed-point format to an
   integer (rounding to nearest).  0.5 in fixed-point format.  round(x)  ARM_ARCH < 6  Keeping the asr #31 outside of the asm allows loads to be scheduled between
   it and the rest of the block on ARM9E, with the load's result latency filled
   by the other calculations.  ARM_ARCH  CPU_ARM  Apply the filter with state f to count entries in data[]  Update the output history  Version 3.98 and later files  Update the adaption coefficients  Have we filled the history buffer?  Convert res from (32-FRACBITS).FRACBITS fixed-point format to an
           integer (rounding to nearest) and add the input value to
           it  Update the output history  Version ??? to < 3.98 files (untested)  Have we filled the history buffer?  Init pointers  Zero coefficients and history buffer  Zero the running average 

libdemac - A Monkey's Audio decoder

$Id$

Copyright (C) Dave Chapman 2007

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA

 FILTER_BITS == 16  Assume all our ARMv5 targets are ARMv5te(j)  FILTER_BITS  ORDER entries  We store all the filter delays in a single buffer  We name the functions according to the ORDER and FRACBITS
   pre-processor symbols and build multiple .o files from this .c file
   - this increases code-size but gives the compiler more scope for
   optimising the individual functions, as well as replacing a lot of
   variables with constants.
 Some macros to handle the fixed-point stuff  Convert from (32-FRACBITS).FRACBITS fixed-point format to an
   integer (rounding to nearest).  0.5 in fixed-point format.  round(x)  ARM_ARCH < 6  Keeping the asr #31 outside of the asm allows loads to be scheduled between
   it and the rest of the block on ARM9E, with the load's result latency filled
   by the other calculations.  ARM_ARCH  CPU_ARM  Apply the filter with state f to count entries in data[]  Update the output history  Version 3.98 and later files  Update the adaption coefficients  Have we filled the history buffer?  Convert res from (32-FRACBITS).FRACBITS fixed-point format to an
           integer (rounding to nearest) and add the input value to
           it  Update the output history  Version ??? to < 3.98 files (untested)  Have we filled the history buffer?  Init pointers  Zero coefficients and history buffer  Zero the running average 