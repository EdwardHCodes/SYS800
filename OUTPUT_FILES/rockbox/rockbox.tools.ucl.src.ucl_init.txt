 ucl_init.c -- initialization of the UCL library

   This file is part of the UCL data compression library.

   Copyright (C) 1996-2002 Markus Franz Xaver Johannes Oberhumer
   All Rights Reserved.

   The UCL library is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
   published by the Free Software Foundation; either version 2 of
   the License, or (at your option) any later version.

   The UCL library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with the UCL library; see the file COPYING.
   If not, write to the Free Software Foundation, Inc.,
   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

   Markus F.X.J. Oberhumer
   <markus@oberhumer.com>
   http://www.oberhumer.com/opensource/ucl/
 **********************************************************************
// Runtime check of the assumptions about the size of builtin types,
// memory model, byte order and other low-level constructs.
//
// We are really paranoid here - UCL should either fail (or crash)
// at startup or not at all.
//
// Because of inlining much of these functions evaluates to nothing.
*********************************************************************** avoid inlining  avoid inlining **********************************************************************
// The next two functions should get completely optimized out of existance.
// Some assertions are redundant - but included for clarity.
*********************************************************************** paranoia  assert the signedness of our integral types  assert the signedness of our integral types **********************************************************************
//
*********************************************************************** Avoid a compiler warning on architectures that
     * do not allow unaligned access.  sanity check of the memory model  check BZERO8_PTR and that NULL == 0  check that the pointer constructs work as expected  now check that aligned memory access doesn't core dump  Avoid compiler warnings on architectures that
             * do not allow unaligned access. **********************************************************************
//
*********************************************************************** paranoia - the following is guaranteed by definition anyway  check if the compiler correctly casts signed to unsigned  check UCL_BYTE_ORDER  check that unaligned memory access works as expected  check the ucl_adler32() function  check for the gcc schedule-insns optimization bug  check for the gcc strength-reduce optimization bug  now for the low-level pointer checks  for some reason checker complains about uninitialized memory access **********************************************************************
//
***********************************************************************
vi:ts=4:et
 ucl_init.c -- initialization of the UCL library

   This file is part of the UCL data compression library.

   Copyright (C) 1996-2002 Markus Franz Xaver Johannes Oberhumer
   All Rights Reserved.

   The UCL library is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
   published by the Free Software Foundation; either version 2 of
   the License, or (at your option) any later version.

   The UCL library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with the UCL library; see the file COPYING.
   If not, write to the Free Software Foundation, Inc.,
   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

   Markus F.X.J. Oberhumer
   <markus@oberhumer.com>
   http://www.oberhumer.com/opensource/ucl/
 **********************************************************************
// Runtime check of the assumptions about the size of builtin types,
// memory model, byte order and other low-level constructs.
//
// We are really paranoid here - UCL should either fail (or crash)
// at startup or not at all.
//
// Because of inlining much of these functions evaluates to nothing.
*********************************************************************** avoid inlining  avoid inlining **********************************************************************
// The next two functions should get completely optimized out of existance.
// Some assertions are redundant - but included for clarity.
*********************************************************************** paranoia  assert the signedness of our integral types  assert the signedness of our integral types **********************************************************************
//
*********************************************************************** Avoid a compiler warning on architectures that
     * do not allow unaligned access.  sanity check of the memory model  check BZERO8_PTR and that NULL == 0  check that the pointer constructs work as expected  now check that aligned memory access doesn't core dump  Avoid compiler warnings on architectures that
             * do not allow unaligned access. **********************************************************************
//
*********************************************************************** paranoia - the following is guaranteed by definition anyway  check if the compiler correctly casts signed to unsigned  check UCL_BYTE_ORDER  check that unaligned memory access works as expected  check the ucl_adler32() function  check for the gcc schedule-insns optimization bug  check for the gcc strength-reduce optimization bug  now for the low-level pointer checks  for some reason checker complains about uninitialized memory access **********************************************************************
//
***********************************************************************
vi:ts=4:et
 ucl_init.c -- initialization of the UCL library

   This file is part of the UCL data compression library.

   Copyright (C) 1996-2002 Markus Franz Xaver Johannes Oberhumer
   All Rights Reserved.

   The UCL library is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
   published by the Free Software Foundation; either version 2 of
   the License, or (at your option) any later version.

   The UCL library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with the UCL library; see the file COPYING.
   If not, write to the Free Software Foundation, Inc.,
   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

   Markus F.X.J. Oberhumer
   <markus@oberhumer.com>
   http://www.oberhumer.com/opensource/ucl/
 **********************************************************************
// Runtime check of the assumptions about the size of builtin types,
// memory model, byte order and other low-level constructs.
//
// We are really paranoid here - UCL should either fail (or crash)
// at startup or not at all.
//
// Because of inlining much of these functions evaluates to nothing.
*********************************************************************** avoid inlining  avoid inlining **********************************************************************
// The next two functions should get completely optimized out of existance.
// Some assertions are redundant - but included for clarity.
*********************************************************************** paranoia  assert the signedness of our integral types  assert the signedness of our integral types **********************************************************************
//
*********************************************************************** Avoid a compiler warning on architectures that
     * do not allow unaligned access.  sanity check of the memory model  check BZERO8_PTR and that NULL == 0  check that the pointer constructs work as expected  now check that aligned memory access doesn't core dump  Avoid compiler warnings on architectures that
             * do not allow unaligned access. **********************************************************************
//
*********************************************************************** paranoia - the following is guaranteed by definition anyway  check if the compiler correctly casts signed to unsigned  check UCL_BYTE_ORDER  check that unaligned memory access works as expected  check the ucl_adler32() function  check for the gcc schedule-insns optimization bug  check for the gcc strength-reduce optimization bug  now for the low-level pointer checks  for some reason checker complains about uninitialized memory access **********************************************************************
//
***********************************************************************
vi:ts=4:et
