
 *  NETGEAR WNR2200 board support
 *
 *  Copyright (C) 2013 Aidan Kissane <aidankissane at googlemail.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  needed to disable switch LEDs  needed to disable switch LEDs  WNR2200 - connected through AR7241  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR2200 - connected through AR9287  msecs  wireless MAC is inside ART 
 * For WNR2200 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * OpenWrt's original fix was to copy eth1 address to WLAN interface.
 * New solution does not duplicate hardware addresses and is taken from
 * WNR2000v3 code. It assigns permanent WLAN MAC equal to ethN's MAC
 * plus 1, so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs. Disable CLKs.
	 * Allow OS to control all link LEDs.
	  All 3 buttons are connected to wireless chip  enable power for the USB port 
 *  NETGEAR WNR2200 board support
 *
 *  Copyright (C) 2013 Aidan Kissane <aidankissane at googlemail.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  needed to disable switch LEDs  needed to disable switch LEDs  WNR2200 - connected through AR7241  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR2200 - connected through AR9287  msecs  wireless MAC is inside ART 
 * For WNR2200 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * OpenWrt's original fix was to copy eth1 address to WLAN interface.
 * New solution does not duplicate hardware addresses and is taken from
 * WNR2000v3 code. It assigns permanent WLAN MAC equal to ethN's MAC
 * plus 1, so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs. Disable CLKs.
	 * Allow OS to control all link LEDs.
	  All 3 buttons are connected to wireless chip  enable power for the USB port 
 *  NETGEAR WNR2200 board support
 *
 *  Copyright (C) 2013 Aidan Kissane <aidankissane at googlemail.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  needed to disable switch LEDs  needed to disable switch LEDs  WNR2200 - connected through AR7241  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR2200 - connected through AR9287  msecs  wireless MAC is inside ART 
 * For WNR2200 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * OpenWrt's original fix was to copy eth1 address to WLAN interface.
 * New solution does not duplicate hardware addresses and is taken from
 * WNR2000v3 code. It assigns permanent WLAN MAC equal to ethN's MAC
 * plus 1, so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs. Disable CLKs.
	 * Allow OS to control all link LEDs.
	  All 3 buttons are connected to wireless chip  enable power for the USB port 
 *  NETGEAR WNR2200 board support
 *
 *  Copyright (C) 2013 Aidan Kissane <aidankissane at googlemail.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  for max() macro  needed to disable switch LEDs  needed to disable switch LEDs  WNR2200 - connected through AR7241  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_GPIO_FUNC_JTAG_DISABLE  AR724X_..._ETH_SWITCH_LED0  AR724X_..._ETH_SWITCH_LED1  AR724X_..._ETH_SWITCH_LED2  AR724X_..._ETH_SWITCH_LED3  AR724X_..._ETH_SWITCH_LED4  WNR2200 - connected through AR9287  msecs  wireless MAC is inside ART 
 * For WNR2200 ART flash area used for WLAN MAC is usually empty (0xff)
 * so ath9k driver uses random MAC instead each time module is loaded.
 * OpenWrt's original fix was to copy eth1 address to WLAN interface.
 * New solution does not duplicate hardware addresses and is taken from
 * WNR2000v3 code. It assigns permanent WLAN MAC equal to ethN's MAC
 * plus 1, so network interfaces get sequential addresses.
 * If ART wireless MAC address field has been filled by user, use it.
  only 0xff if all bits are set - address is invalid, empty area  Avoid potential conflict in case max(0xff,0x00)+1==0x00 
	 * Disable JTAG to use all AR724X GPIO LEDs. Disable CLKs.
	 * Allow OS to control all link LEDs.
	  All 3 buttons are connected to wireless chip  enable power for the USB port 