
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 cl.input.c  -- builds an intended movement command to send to the server Quake is a trademark of Id Software, Inc., (c) 1996 Id Software, Inc. All rights reserved.
===============================================================================

KEY BUTTONS

Continuous button event tracking is complicated by the fact that two different
input sources (say, mouse button 1 and the control key) can both press the
same button, but the button should only be released when both of the
pressing key have been released.

When a key event issues a button command (+forward, +attack, etc), it appends
its key number as a parameter to the command so it can be matched up with
the release.

state bit 0 is the current state of the key
state bit 1 is edge triggered on the up to down transition
state bit 2 is edge triggered on the down to up transition

===============================================================================
 typed manually at the console for continuous down repeating key still down down + impulse down typed manually at the console, assume for unsticking, so clear all impulse up key up without coresponding down (menu pass through) some other key is still holding it down still up (this should not happen) now up impulse up
===============
CL_KeyState

Returns 0.25 if a key was pressed and released during the frame,
0.5 if it was pressed and held
0 if held then released, and
1.0 if held for the entire time
===============
 pressed and held this frame	I_Error ();	I_Error (); released this frame held the entire frame up the entire frame released and re-pressed this frame pressed and released this frame clear impulses==========================================================================
================
CL_AdjustAngles

Moves the local angle positions
================

================
CL_BaseMove

Send the intended movement message to the server
================
 adjust for speed key
==============
CL_SendMove
==============
 send the movement message so server can get ping times send button bits light level deliver the message allways dump the first two message, because it may contain leftover inputs from the last level
============
CL_InitInput
============

Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 cl.input.c  -- builds an intended movement command to send to the server Quake is a trademark of Id Software, Inc., (c) 1996 Id Software, Inc. All rights reserved.
===============================================================================

KEY BUTTONS

Continuous button event tracking is complicated by the fact that two different
input sources (say, mouse button 1 and the control key) can both press the
same button, but the button should only be released when both of the
pressing key have been released.

When a key event issues a button command (+forward, +attack, etc), it appends
its key number as a parameter to the command so it can be matched up with
the release.

state bit 0 is the current state of the key
state bit 1 is edge triggered on the up to down transition
state bit 2 is edge triggered on the down to up transition

===============================================================================
 typed manually at the console for continuous down repeating key still down down + impulse down typed manually at the console, assume for unsticking, so clear all impulse up key up without coresponding down (menu pass through) some other key is still holding it down still up (this should not happen) now up impulse up
===============
CL_KeyState

Returns 0.25 if a key was pressed and released during the frame,
0.5 if it was pressed and held
0 if held then released, and
1.0 if held for the entire time
===============
 pressed and held this frame	I_Error ();	I_Error (); released this frame held the entire frame up the entire frame released and re-pressed this frame pressed and released this frame clear impulses==========================================================================
================
CL_AdjustAngles

Moves the local angle positions
================

================
CL_BaseMove

Send the intended movement message to the server
================
 adjust for speed key
==============
CL_SendMove
==============
 send the movement message so server can get ping times send button bits light level deliver the message allways dump the first two message, because it may contain leftover inputs from the last level
============
CL_InitInput
============

Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 cl.input.c  -- builds an intended movement command to send to the server Quake is a trademark of Id Software, Inc., (c) 1996 Id Software, Inc. All rights reserved.
===============================================================================

KEY BUTTONS

Continuous button event tracking is complicated by the fact that two different
input sources (say, mouse button 1 and the control key) can both press the
same button, but the button should only be released when both of the
pressing key have been released.

When a key event issues a button command (+forward, +attack, etc), it appends
its key number as a parameter to the command so it can be matched up with
the release.

state bit 0 is the current state of the key
state bit 1 is edge triggered on the up to down transition
state bit 2 is edge triggered on the down to up transition

===============================================================================
 typed manually at the console for continuous down repeating key still down down + impulse down typed manually at the console, assume for unsticking, so clear all impulse up key up without coresponding down (menu pass through) some other key is still holding it down still up (this should not happen) now up impulse up
===============
CL_KeyState

Returns 0.25 if a key was pressed and released during the frame,
0.5 if it was pressed and held
0 if held then released, and
1.0 if held for the entire time
===============
 pressed and held this frame	I_Error ();	I_Error (); released this frame held the entire frame up the entire frame released and re-pressed this frame pressed and released this frame clear impulses==========================================================================
================
CL_AdjustAngles

Moves the local angle positions
================

================
CL_BaseMove

Send the intended movement message to the server
================
 adjust for speed key
==============
CL_SendMove
==============
 send the movement message so server can get ping times send button bits light level deliver the message allways dump the first two message, because it may contain leftover inputs from the last level
============
CL_InitInput
============
