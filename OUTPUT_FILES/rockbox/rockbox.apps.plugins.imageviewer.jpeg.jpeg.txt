**************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* JPEG image viewer
* (This is a real mess if it has to be coded in one single C file)
*
* File scrolling addition (C) 2005 Alexander Spyridakis
* Copyright (C) 2004 Jörg Hohensohn aka [IDC]Dragon
* Heavily borrowed from the IJG implementation (C) Thomas G. Lane
* Small & fast downscaling IDCT (C) 2002 by Guido Vollbeding  JPEGclub.org
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
****************************************************************************************** begin Application ******************************************* Types ************************** Y, Cr, Cb  Y only ************************ Globals ************************** decompressed image in the possible sizes (1,2,4,8), wasting the other  my memory pool (from the mp3 buffer)  use a common snprintf() buffer  the root of the images, hereafter are decompresed ones  up to here currently used by image(s)  too large for stack ************************ Implementation ************************** colour, add requirements for chroma  compressed JPEG image  allocate JPEG buffer  we can start the decompressed images behind it  running slideshow and time is long enough: power down disk  process markers, unstuffing  bad format or minimum components not contained  if no Huffman table present:  use default  derive Huffman and other lookup-tables  used to center output  decompressed image size  measured ticks  short cut  we still have it  assign image buffer  physical size needed for decoding  have to discard the current  invalidate all bitmaps  start again from the beginning of the buffer  colour jpeg  size may be less when decoded (if height is not block aligned)  update image properties  use physical size for stride  the actual decoding  centered in progress bar **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* JPEG image viewer
* (This is a real mess if it has to be coded in one single C file)
*
* File scrolling addition (C) 2005 Alexander Spyridakis
* Copyright (C) 2004 Jörg Hohensohn aka [IDC]Dragon
* Heavily borrowed from the IJG implementation (C) Thomas G. Lane
* Small & fast downscaling IDCT (C) 2002 by Guido Vollbeding  JPEGclub.org
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
****************************************************************************************** begin Application ******************************************* Types ************************** Y, Cr, Cb  Y only ************************ Globals ************************** decompressed image in the possible sizes (1,2,4,8), wasting the other  my memory pool (from the mp3 buffer)  use a common snprintf() buffer  the root of the images, hereafter are decompresed ones  up to here currently used by image(s)  too large for stack ************************ Implementation ************************** colour, add requirements for chroma  compressed JPEG image  allocate JPEG buffer  we can start the decompressed images behind it  running slideshow and time is long enough: power down disk  process markers, unstuffing  bad format or minimum components not contained  if no Huffman table present:  use default  derive Huffman and other lookup-tables  used to center output  decompressed image size  measured ticks  short cut  we still have it  assign image buffer  physical size needed for decoding  have to discard the current  invalidate all bitmaps  start again from the beginning of the buffer  colour jpeg  size may be less when decoded (if height is not block aligned)  update image properties  use physical size for stride  the actual decoding  centered in progress bar **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* JPEG image viewer
* (This is a real mess if it has to be coded in one single C file)
*
* File scrolling addition (C) 2005 Alexander Spyridakis
* Copyright (C) 2004 Jörg Hohensohn aka [IDC]Dragon
* Heavily borrowed from the IJG implementation (C) Thomas G. Lane
* Small & fast downscaling IDCT (C) 2002 by Guido Vollbeding  JPEGclub.org
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
****************************************************************************************** begin Application ******************************************* Types ************************** Y, Cr, Cb  Y only ************************ Globals ************************** decompressed image in the possible sizes (1,2,4,8), wasting the other  my memory pool (from the mp3 buffer)  use a common snprintf() buffer  the root of the images, hereafter are decompresed ones  up to here currently used by image(s)  too large for stack ************************ Implementation ************************** colour, add requirements for chroma  compressed JPEG image  allocate JPEG buffer  we can start the decompressed images behind it  running slideshow and time is long enough: power down disk  process markers, unstuffing  bad format or minimum components not contained  if no Huffman table present:  use default  derive Huffman and other lookup-tables  used to center output  decompressed image size  measured ticks  short cut  we still have it  assign image buffer  physical size needed for decoding  have to discard the current  invalidate all bitmaps  start again from the beginning of the buffer  colour jpeg  size may be less when decoded (if height is not block aligned)  update image properties  use physical size for stride  the actual decoding  centered in progress bar 