---------------------------------------------------------------- Library top-level functions.                          ------                                               bzlib.c ---------------------------------------------------------------- ------------------------------------------------------------------
   This file is part of bzip2/libbzip2, a program and library for
   lossless, block-sorting data compression.

   bzip2/libbzip2 version 1.0.6 of 6 September 2010
   Copyright (C) 1996-2010 Julian Seward <jseward@bzip.org>

   Please read the WARNING, DISCLAIMER and PATENTS sections in the 
   README file.

   This program is released under the terms of the license contained
   in the file LICENSE.
   ------------------------------------------------------------------  CHANGES
   0.9.0    -- original version.
   0.9.0a/b -- no changes in this file.
   0.9.0c   -- made zero-length BZ_FLUSH work correctly in bzCompress().
     fixed bzWrite/bzRead to ignore zero-length requests.
     fixed bzread to correctly handle read requests after EOF.
     wrong parameter order in call to bzDecompressInit in
     bzBuffToBuffDecompress.  Fixed.
------------------------------------------------------ Compression stufffast track the common case ---- general, uncommon cases ------------------------------------------------------- fast track the common case ---- block full? ---- no input? ---- general, uncommon case ---- block full? ---- no input? ---- flush/finish end? ------------------------------------------------------- no output space? ---- block done? ----------------------------------------------------------------------------------------------------------not reached----------------------------------------------------------------------------------------------------------- Decompression stuff                         ------------------------------------------------------------------------------------------------------------------------------------------------------------ Return  True iff data corruption is discovered.
   Returns False if there is no problem.
 try to finish existing run  can a new run be started?  Only caused by corrupt data stream?  restore  end restore  try to finish existing run  Only caused by corrupt data stream?  can a new run be started?  save  end save ------------------------------------------------------------------------------------------------------ Return  True iff data corruption is discovered.
   Returns False if there is no problem.
 try to finish existing run  can a new run be started?  Only caused by corrupt data stream?  try to finish existing run  can a new run be started?  Only caused by corrupt data stream? ---------------------------------------------------NOTREACHED--------------------------------------------------------------------------------------------------------- File I/O stuff                              ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------not reached--------------------------------------------------------------------------------------------------------- Misc convenience stuff                      --------------------------------------------------------------------------------------------------------- normal termination --------------------------------------------------- normal termination -----------------------------------------------------
   Code contributed by Yoshioka Tsuneo (tsuneo@rr.iij4u.or.jp)
   to support better zlib compatibility.
   This code is not _officially_ part of libbzip2 (yet);
   I haven't tested it, documented it, or considered the
   threading-safeness of it.
   If this code breaks, please contact both Yoshioka and me.
----------------------------------------------------------------------------------------------------------
   return version like "0.9.5d, 4-Sept-1999".
----------------------------------------------------- no use when bzdopen  no use when bzdopen  bzopen: 0, bzdopen:1  binary mode  Guard against total chaos and anarchy -- JRS -----------------------------------------------------
   open file for read or write.
      ex) bzopen("file","w9")
      case path="" or NULL => use stdin or stdout.
--bzopen---------------------------------------------------bzdopen--------------------------------------------------------------------------------------------------------------------------------------------------------- do nothing now... --------------------------------------------------------------------------------------------------------
   return last error code 
-- for future  for future  for future  for future  for future  for future ---------------------------------------------------------------- end                                           bzlib.c -------------------------------------------------------------------------------------------------------------------------------- Library top-level functions.                          ------                                               bzlib.c ---------------------------------------------------------------- ------------------------------------------------------------------
   This file is part of bzip2/libbzip2, a program and library for
   lossless, block-sorting data compression.

   bzip2/libbzip2 version 1.0.6 of 6 September 2010
   Copyright (C) 1996-2010 Julian Seward <jseward@bzip.org>

   Please read the WARNING, DISCLAIMER and PATENTS sections in the 
   README file.

   This program is released under the terms of the license contained
   in the file LICENSE.
   ------------------------------------------------------------------  CHANGES
   0.9.0    -- original version.
   0.9.0a/b -- no changes in this file.
   0.9.0c   -- made zero-length BZ_FLUSH work correctly in bzCompress().
     fixed bzWrite/bzRead to ignore zero-length requests.
     fixed bzread to correctly handle read requests after EOF.
     wrong parameter order in call to bzDecompressInit in
     bzBuffToBuffDecompress.  Fixed.
------------------------------------------------------ Compression stufffast track the common case ---- general, uncommon cases ------------------------------------------------------- fast track the common case ---- block full? ---- no input? ---- general, uncommon case ---- block full? ---- no input? ---- flush/finish end? ------------------------------------------------------- no output space? ---- block done? ----------------------------------------------------------------------------------------------------------not reached----------------------------------------------------------------------------------------------------------- Decompression stuff                         ------------------------------------------------------------------------------------------------------------------------------------------------------------ Return  True iff data corruption is discovered.
   Returns False if there is no problem.
 try to finish existing run  can a new run be started?  Only caused by corrupt data stream?  restore  end restore  try to finish existing run  Only caused by corrupt data stream?  can a new run be started?  save  end save ------------------------------------------------------------------------------------------------------ Return  True iff data corruption is discovered.
   Returns False if there is no problem.
 try to finish existing run  can a new run be started?  Only caused by corrupt data stream?  try to finish existing run  can a new run be started?  Only caused by corrupt data stream? ---------------------------------------------------NOTREACHED--------------------------------------------------------------------------------------------------------- File I/O stuff                              ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------not reached--------------------------------------------------------------------------------------------------------- Misc convenience stuff                      --------------------------------------------------------------------------------------------------------- normal termination --------------------------------------------------- normal termination -----------------------------------------------------
   Code contributed by Yoshioka Tsuneo (tsuneo@rr.iij4u.or.jp)
   to support better zlib compatibility.
   This code is not _officially_ part of libbzip2 (yet);
   I haven't tested it, documented it, or considered the
   threading-safeness of it.
   If this code breaks, please contact both Yoshioka and me.
----------------------------------------------------------------------------------------------------------
   return version like "0.9.5d, 4-Sept-1999".
----------------------------------------------------- no use when bzdopen  no use when bzdopen  bzopen: 0, bzdopen:1  binary mode  Guard against total chaos and anarchy -- JRS -----------------------------------------------------
   open file for read or write.
      ex) bzopen("file","w9")
      case path="" or NULL => use stdin or stdout.
--bzopen---------------------------------------------------bzdopen--------------------------------------------------------------------------------------------------------------------------------------------------------- do nothing now... --------------------------------------------------------------------------------------------------------
   return last error code 
-- for future  for future  for future  for future  for future  for future ---------------------------------------------------------------- end                                           bzlib.c -------------------------------------------------------------------------------------------------------------------------------- Library top-level functions.                          ------                                               bzlib.c ---------------------------------------------------------------- ------------------------------------------------------------------
   This file is part of bzip2/libbzip2, a program and library for
   lossless, block-sorting data compression.

   bzip2/libbzip2 version 1.0.6 of 6 September 2010
   Copyright (C) 1996-2010 Julian Seward <jseward@bzip.org>

   Please read the WARNING, DISCLAIMER and PATENTS sections in the 
   README file.

   This program is released under the terms of the license contained
   in the file LICENSE.
   ------------------------------------------------------------------  CHANGES
   0.9.0    -- original version.
   0.9.0a/b -- no changes in this file.
   0.9.0c   -- made zero-length BZ_FLUSH work correctly in bzCompress().
     fixed bzWrite/bzRead to ignore zero-length requests.
     fixed bzread to correctly handle read requests after EOF.
     wrong parameter order in call to bzDecompressInit in
     bzBuffToBuffDecompress.  Fixed.
------------------------------------------------------ Compression stuff                           ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- fast track the common case ---- general, uncommon cases ------------------------------------------------------- fast track the common case ---- block full? ---- no input? ---- general, uncommon case ---- block full? ---- no input? ---- flush/finish end? ------------------------------------------------------- no output space? ---- block done? ----------------------------------------------------------------------------------------------------------not reached----------------------------------------------------------------------------------------------------------- Decompression stuff                         ------------------------------------------------------------------------------------------------------------------------------------------------------------ Return  True iff data corruption is discovered.
   Returns False if there is no problem.
 try to finish existing run  can a new run be started?  Only caused by corrupt data stream?  restore  end restore  try to finish existing run  Only caused by corrupt data stream?  can a new run be started?  save  end save ------------------------------------------------------------------------------------------------------ Return  True iff data corruption is discovered.
   Returns False if there is no problem.
 try to finish existing run  can a new run be started?  Only caused by corrupt data stream?  try to finish existing run  can a new run be started?  Only caused by corrupt data stream? ---------------------------------------------------NOTREACHED--------------------------------------------------------------------------------------------------------- File I/O stuff                              ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------not reached--------------------------------------------------------------------------------------------------------- Misc convenience stuff                      --------------------------------------------------------------------------------------------------------- normal termination --------------------------------------------------- normal termination -----------------------------------------------------
   Code contributed by Yoshioka Tsuneo (tsuneo@rr.iij4u.or.jp)
   to support better zlib compatibility.
   This code is not _officially_ part of libbzip2 (yet);
   I haven't tested it, documented it, or considered the
   threading-safeness of it.
   If this code breaks, please contact both Yoshioka and me.
----------------------------------------------------------------------------------------------------------
   return version like "0.9.5d, 4-Sept-1999".
----------------------------------------------------- no use when bzdopen  no use when bzdopen  bzopen: 0, bzdopen:1  binary mode  Guard against total chaos and anarchy -- JRS -----------------------------------------------------
   open file for read or write.
      ex) bzopen("file","w9")
      case path="" or NULL => use stdin or stdout.
--bzopen---------------------------------------------------bzdopen--------------------------------------------------------------------------------------------------------------------------------------------------------- do nothing now... --------------------------------------------------------------------------------------------------------
   return last error code 
-- for future  for future  for future  for future  for future  for future ---------------------------------------------------------------- end                                           bzlib.c ----------------------------------------------------------------