**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Antoine Cellerier <dionoea -at- videolan -dot- org>
 * Based on parts of rockpaint 0.45, Copyright (C) 2005 Eli Sherer
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
 * TODO:
 *  - implement 2 layers with alpha colors
 *  - take brush width into account when drawing shapes
 *  - handle bigger than screen bitmaps
 **********************************************************************
 * Buttons
 ********************************************************************************************************************************************
 * Palette Default Colors
 ********************************************************************************************************************************************
 * Program Colors
 ***********************************************************************
 * Toolbar positioning stuff ... don't read this unless you really need to
 *
 * TB Toolbar
 * SP Separator
 * SC Selected Color
 * PL Palette
 * TL Tools
  Separator sizes  Selected color sizes  Palette sizes  Tools sizes  Menu button size ... gruik  Selected colors position  Palette position  Tools position  Menu button position **********************************************************************
 * Global variables
 ********************************************************************** Current color (in palette)  Current background color (in palette)  gruik ugly hack alert  Is preview mode on ?  TODO: clean this up  cursor position  previous saved cursor position  brush size  brush speed  Regular brush  Fill a shape with current color  Pick a color  Draw a line between two points  THIS IS UNUSED ...  Draw a rectangle  Draw an oval  initial state  Maximum string size allowed for the text tool  Used by fill and gradient algorithms  Used by bezier curve algorithms  We have 4.5 times more data per struct
                                * than coord ... so we divide to take
                                * less memory.  Used to cut/copy/paste data  Used for text mode  fonts from cache_first to cache_last are stored.  save these so that cache can be re-used next time.  Current filename **********************************************************************
 * Offscreen buffer/Text/Fonts handling
 *
 * Parts of code taken from firmware/drivers/lcd-16bit.c
 ********************************************************************** this function only draws the foreground part of the bitmap  nothing to draw?  clipping  move starting point  FIXME ?  draw alpha bitmap for anti-alias font  Blend the given two colors  nothing to draw?  initialize blending  clipping  get proportional width and glyph bits **********************************************************************
 * Menu handling
 ********************************************************************** Main menu  Select action menu  Text menu **********************************************************************
 * File browser
 ********************************************************************** used by file and font browsers  used by file and font browsers  only displayes directories and .bmp files **********************************************************************
 * Font browser
 *
 * FIXME: This still needs some work ... it currently only works fine
 * on the simulators, disk spins too much on real targets -> rendered
 * font buffer needed.
 **********************************************************************
 * cache font preview handling assumes:
 * - fvi doesn't decrease by more than 1.
 *   In other words, cache_first-1 must be cached before cache_first-2 is cached.
 * - there is enough space to store all preview currently displayed.
  to avoid calculating size each time.  first visible item  last visible item  selected item  last item  next visible item height  Do we need to redraw ?  current position  selected position  font height, width  we don't need to redraw ... but we need to unselect
             * the previously selected item  get first font preview to be displayed.  insert font preview to the top.  i > cache_last  add font preview to the bottom.  create preview cache.  clear with background.  fixme   rb->font_load(NULL, bbuf_s ); fall through **********************************************************************
 * HSVRGB Color chooser
 ********************************************************************** temp variables  hue  the others **********************************************************************
 * Misc routines
 ********************************************************************** This is a preview mode only function  This needs to be optimised ... but i'm lazy ATM  no preview mode handling atm ... do we need it ? (one if) if( update ) direction: -1 = left, 1 = right  clipping  This is an implementation of Bresenham's line algorithm.
 * See http://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm.
  more vertical  to leave off the last pixel of the line, leave off the "+ 1"  more horizontal     if( preview ) We only have 3 of the points
     * This will currently only be used in preview mode  de Casteljau's algorithm (see wikipedia)  check that the stack's 'i' doesn't overflow  We have the 4 points  de Casteljau's algorithm (see wikipedia)  check that the stack's 'i' doesn't overflow  GRUIK  TODO: simplify :)  For preview purposes only  use same algorithm as draw_line() to draw line.  to leave off the last pixel of the line, leave off the "+ 1"  yerr >= xerr  macros used by linear_gradient() and radial_gradient().  radius^2  We only propagate the gradient to neighboring pixels with the same
     * color as ( x1, y1 )  to mark pixel that the pixel is already in LIFO.  "mark" that pixel was checked. correct color later.  correct color.  radius^2  We only propagate the gradient to neighboring pixels with the same
     * color as ( x1, y1 )  to mark pixel that the pixel is already in LIFO.  "mark" that pixel was checked. correct color later.  correct color.  click on the foreground color  click on the background color  click on the palette  click on the tools  menu button  went out of region. exit toolbar.  cross painting  end switch  end while  reset state  always preview color picker  brush tool  fill tool  select rectangle tool  we are defining the selection  we are pasting the selected data  color picker tool  curve tool  text tool  tools which take 2 point  3 point bezier curve  steal from audiobuffer if plugin buffer is too small **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Antoine Cellerier <dionoea -at- videolan -dot- org>
 * Based on parts of rockpaint 0.45, Copyright (C) 2005 Eli Sherer
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
 * TODO:
 *  - implement 2 layers with alpha colors
 *  - take brush width into account when drawing shapes
 *  - handle bigger than screen bitmaps
 **********************************************************************
 * Buttons
 ********************************************************************************************************************************************
 * Palette Default Colors
 ********************************************************************************************************************************************
 * Program Colors
 ***********************************************************************
 * Toolbar positioning stuff ... don't read this unless you really need to
 *
 * TB Toolbar
 * SP Separator
 * SC Selected Color
 * PL Palette
 * TL Tools
  Separator sizes  Selected color sizes  Palette sizes  Tools sizes  Menu button size ... gruik  Selected colors position  Palette position  Tools position  Menu button position **********************************************************************
 * Global variables
 ********************************************************************** Current color (in palette)  Current background color (in palette)  gruik ugly hack alert  Is preview mode on ?  TODO: clean this up  cursor position  previous saved cursor position  brush size  brush speed  Regular brush  Fill a shape with current color  Pick a color  Draw a line between two points  THIS IS UNUSED ...  Draw a rectangle  Draw an oval  initial state  Maximum string size allowed for the text tool  Used by fill and gradient algorithms  Used by bezier curve algorithms  We have 4.5 times more data per struct
                                * than coord ... so we divide to take
                                * less memory.  Used to cut/copy/paste data  Used for text mode  fonts from cache_first to cache_last are stored.  save these so that cache can be re-used next time.  Current filename **********************************************************************
 * Offscreen buffer/Text/Fonts handling
 *
 * Parts of code taken from firmware/drivers/lcd-16bit.c
 ********************************************************************** this function only draws the foreground part of the bitmap  nothing to draw?  clipping  move starting point  FIXME ?  draw alpha bitmap for anti-alias font  Blend the given two colors  nothing to draw?  initialize blending  clipping  get proportional width and glyph bits **********************************************************************
 * Menu handling
 ********************************************************************** Main menu  Select action menu  Text menu **********************************************************************
 * File browser
 ********************************************************************** used by file and font browsers  used by file and font browsers  only displayes directories and .bmp files **********************************************************************
 * Font browser
 *
 * FIXME: This still needs some work ... it currently only works fine
 * on the simulators, disk spins too much on real targets -> rendered
 * font buffer needed.
 **********************************************************************
 * cache font preview handling assumes:
 * - fvi doesn't decrease by more than 1.
 *   In other words, cache_first-1 must be cached before cache_first-2 is cached.
 * - there is enough space to store all preview currently displayed.
  to avoid calculating size each time.  first visible item  last visible item  selected item  last item  next visible item height  Do we need to redraw ?  current position  selected position  font height, width  we don't need to redraw ... but we need to unselect
             * the previously selected item  get first font preview to be displayed.  insert font preview to the top.  i > cache_last  add font preview to the bottom.  create preview cache.  clear with background.  fixme   rb->font_load(NULL, bbuf_s ); fall through **********************************************************************
 * HSVRGB Color chooser
 ********************************************************************** temp variables  hue  the others **********************************************************************
 * Misc routines
 ********************************************************************** This is a preview mode only function  This needs to be optimised ... but i'm lazy ATM  no preview mode handling atm ... do we need it ? (one if) if( update ) direction: -1 = left, 1 = right  clipping  This is an implementation of Bresenham's line algorithm.
 * See http://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm.
  more vertical  to leave off the last pixel of the line, leave off the "+ 1"  more horizontal     if( preview ) We only have 3 of the points
     * This will currently only be used in preview mode  de Casteljau's algorithm (see wikipedia)  check that the stack's 'i' doesn't overflow  We have the 4 points  de Casteljau's algorithm (see wikipedia)  check that the stack's 'i' doesn't overflow  GRUIK  TODO: simplify :)  For preview purposes only  use same algorithm as draw_line() to draw line.  to leave off the last pixel of the line, leave off the "+ 1"  yerr >= xerr  macros used by linear_gradient() and radial_gradient().  radius^2  We only propagate the gradient to neighboring pixels with the same
     * color as ( x1, y1 )  to mark pixel that the pixel is already in LIFO.  "mark" that pixel was checked. correct color later.  correct color.  radius^2  We only propagate the gradient to neighboring pixels with the same
     * color as ( x1, y1 )  to mark pixel that the pixel is already in LIFO.  "mark" that pixel was checked. correct color later.  correct color.  click on the foreground color  click on the background color  click on the palette  click on the tools  menu button  went out of region. exit toolbar.  cross painting  end switch  end while  reset state  always preview color picker  brush tool  fill tool  select rectangle tool  we are defining the selection  we are pasting the selected data  color picker tool  curve tool  text tool  tools which take 2 point  3 point bezier curve  steal from audiobuffer if plugin buffer is too small **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Antoine Cellerier <dionoea -at- videolan -dot- org>
 * Based on parts of rockpaint 0.45, Copyright (C) 2005 Eli Sherer
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
 * TODO:
 *  - implement 2 layers with alpha colors
 *  - take brush width into account when drawing shapes
 *  - handle bigger than screen bitmaps
 **********************************************************************
 * Buttons
 ********************************************************************************************************************************************
 * Palette Default Colors
 ********************************************************************************************************************************************
 * Program Colors
 ***********************************************************************
 * Toolbar positioning stuff ... don't read this unless you really need to
 *
 * TB Toolbar
 * SP Separator
 * SC Selected Color
 * PL Palette
 * TL Tools
  Separator sizes  Selected color sizes  Palette sizes  Tools sizes  Menu button size ... gruik  Selected colors position  Palette position  Tools position  Menu button position **********************************************************************
 * Global variables
 ********************************************************************** Current color (in palette)  Current background color (in palette)  gruik ugly hack alert  Is preview mode on ?  TODO: clean this up  cursor position  previous saved cursor position  brush size  brush speed  Regular brush  Fill a shape with current color  Pick a color  Draw a line between two points  THIS IS UNUSED ...  Draw a rectangle  Draw an oval  initial state  Maximum string size allowed for the text tool  Used by fill and gradient algorithms  Used by bezier curve algorithms  We have 4.5 times more data per struct
                                * than coord ... so we divide to take
                                * less memory.  Used to cut/copy/paste data  Used for text mode  fonts from cache_first to cache_last are stored.  save these so that cache can be re-used next time.  Current filename **********************************************************************
 * Offscreen buffer/Text/Fonts handling
 *
 * Parts of code taken from firmware/drivers/lcd-16bit.c
 ********************************************************************** this function only draws the foreground part of the bitmap  nothing to draw?  clipping  move starting point  FIXME ?  draw alpha bitmap for anti-alias font  Blend the given two colors  nothing to draw?  initialize blending  clipping  get proportional width and glyph bits **********************************************************************
 * Menu handling
 ********************************************************************** Main menu  Select action menu  Text menu **********************************************************************
 * File browser
 ********************************************************************** used by file and font browsers  used by file and font browsers  only displayes directories and .bmp files **********************************************************************
 * Font browser
 *
 * FIXME: This still needs some work ... it currently only works fine
 * on the simulators, disk spins too much on real targets -> rendered
 * font buffer needed.
 **********************************************************************
 * cache font preview handling assumes:
 * - fvi doesn't decrease by more than 1.
 *   In other words, cache_first-1 must be cached before cache_first-2 is cached.
 * - there is enough space to store all preview currently displayed.
  to avoid calculating size each time.  first visible item  last visible item  selected item  last item  next visible item height  Do we need to redraw ?  current position  selected position  font height, width  we don't need to redraw ... but we need to unselect
             * the previously selected item  get first font preview to be displayed.  insert font preview to the top.  i > cache_last  add font preview to the bottom.  create preview cache.  clear with background.  fixme   rb->font_load(NULL, bbuf_s ); fall through **********************************************************************
 * HSVRGB Color chooser
 ********************************************************************** temp variables  hue  the others **********************************************************************
 * Misc routines
 ********************************************************************** This is a preview mode only function  This needs to be optimised ... but i'm lazy ATM  no preview mode handling atm ... do we need it ? (one if) if( update ) direction: -1 = left, 1 = right  clipping  This is an implementation of Bresenham's line algorithm.
 * See http://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm.
  more vertical  to leave off the last pixel of the line, leave off the "+ 1"  more horizontal     if( preview ) We only have 3 of the points
     * This will currently only be used in preview mode  de Casteljau's algorithm (see wikipedia)  check that the stack's 'i' doesn't overflow  We have the 4 points  de Casteljau's algorithm (see wikipedia)  check that the stack's 'i' doesn't overflow  GRUIK  TODO: simplify :)  For preview purposes only  use same algorithm as draw_line() to draw line.  to leave off the last pixel of the line, leave off the "+ 1"  yerr >= xerr  macros used by linear_gradient() and radial_gradient().  radius^2  We only propagate the gradient to neighboring pixels with the same
     * color as ( x1, y1 )  to mark pixel that the pixel is already in LIFO.  "mark" that pixel was checked. correct color later.  correct color.  radius^2  We only propagate the gradient to neighboring pixels with the same
     * color as ( x1, y1 )  to mark pixel that the pixel is already in LIFO.  "mark" that pixel was checked. correct color later.  correct color.  click on the foreground color  click on the background color  click on the palette  click on the tools  menu button  went out of region. exit toolbar.  cross painting  end switch  end while  reset state  always preview color picker  brush tool  fill tool  select rectangle tool  we are defining the selection  we are pasting the selected data  color picker tool  curve tool  text tool  tools which take 2 point  3 point bezier curve  steal from audiobuffer if plugin buffer is too small 