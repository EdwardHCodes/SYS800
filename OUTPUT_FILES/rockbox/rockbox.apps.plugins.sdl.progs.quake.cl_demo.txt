
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


==============================================================================

DEMO CODE

When a demo is playing back, all NET_SendMessages are skipped, and
NET_GetMessages are read from the demo file.

Whenever cl.time gets past the last received message, another message is
read from the demo file.
==============================================================================

==============
CL_StopPlayback

Called when a demo file runs out, or the user starts a game
==============

====================
CL_WriteDemoMessage

Dumps the current net message, prefixed by the length and view angles
====================

====================
CL_GetMessage

Handles recording and playback of demos, on top of NET_ code
====================
 decide if it is time to grab the next message		 allways grab until fully connected allready read this frame's message if this is the second frame, grab the real td_starttime so the bogus time on the first frame doesn't count cl.time > 0 &&  don't need another message yet get the next message discard nop keepalive message
====================
CL_Stop_f

stop recording a demo
====================
 write a disconnect message to the demo file finish up
====================
CL_Record_f

record <demoname> <map> [cd track]
====================
 write the forced cd track number, or -1 start the map up open the demo file
====================
CL_PlayDemo_f

play [demoname]
====================
 disconnect from server open the demo file stop demo loop ZOID, fscanf is evilfscanf (cls.demofile, "%i\n", &cls.forcetrack);
====================
CL_FinishTimeDemo

====================
 the first frame didn't count
====================
CL_TimeDemo_f

timedemo [demoname]
====================
 cls.td_starttime will be grabbed at the second frame of the demo, so all the loading time doesn't get counted get a new message this frame
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


==============================================================================

DEMO CODE

When a demo is playing back, all NET_SendMessages are skipped, and
NET_GetMessages are read from the demo file.

Whenever cl.time gets past the last received message, another message is
read from the demo file.
==============================================================================

==============
CL_StopPlayback

Called when a demo file runs out, or the user starts a game
==============

====================
CL_WriteDemoMessage

Dumps the current net message, prefixed by the length and view angles
====================

====================
CL_GetMessage

Handles recording and playback of demos, on top of NET_ code
====================
 decide if it is time to grab the next message		 allways grab until fully connected allready read this frame's message if this is the second frame, grab the real td_starttime so the bogus time on the first frame doesn't count cl.time > 0 &&  don't need another message yet get the next message discard nop keepalive message
====================
CL_Stop_f

stop recording a demo
====================
 write a disconnect message to the demo file finish up
====================
CL_Record_f

record <demoname> <map> [cd track]
====================
 write the forced cd track number, or -1 start the map up open the demo file
====================
CL_PlayDemo_f

play [demoname]
====================
 disconnect from server open the demo file stop demo loop ZOID, fscanf is evilfscanf (cls.demofile, "%i\n", &cls.forcetrack);
====================
CL_FinishTimeDemo

====================
 the first frame didn't count
====================
CL_TimeDemo_f

timedemo [demoname]
====================
 cls.td_starttime will be grabbed at the second frame of the demo, so all the loading time doesn't get counted get a new message this frame
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


==============================================================================

DEMO CODE

When a demo is playing back, all NET_SendMessages are skipped, and
NET_GetMessages are read from the demo file.

Whenever cl.time gets past the last received message, another message is
read from the demo file.
==============================================================================

==============
CL_StopPlayback

Called when a demo file runs out, or the user starts a game
==============

====================
CL_WriteDemoMessage

Dumps the current net message, prefixed by the length and view angles
====================

====================
CL_GetMessage

Handles recording and playback of demos, on top of NET_ code
====================
 decide if it is time to grab the next message		 allways grab until fully connected allready read this frame's message if this is the second frame, grab the real td_starttime so the bogus time on the first frame doesn't count cl.time > 0 &&  don't need another message yet get the next message discard nop keepalive message
====================
CL_Stop_f

stop recording a demo
====================
 write a disconnect message to the demo file finish up
====================
CL_Record_f

record <demoname> <map> [cd track]
====================
 write the forced cd track number, or -1 start the map up open the demo file
====================
CL_PlayDemo_f

play [demoname]
====================
 disconnect from server open the demo file stop demo loop ZOID, fscanf is evilfscanf (cls.demofile, "%i\n", &cls.forcetrack);
====================
CL_FinishTimeDemo

====================
 the first frame didn't count
====================
CL_TimeDemo_f

timedemo [demoname]
====================
 cls.td_starttime will be grabbed at the second frame of the demo, so all the loading time doesn't get counted get a new message this frame