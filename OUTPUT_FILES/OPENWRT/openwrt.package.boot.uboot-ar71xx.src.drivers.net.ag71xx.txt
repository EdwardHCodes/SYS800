
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2010 Michael Kurz <michi.kurz@googlemail.com>
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
 u32 val = ar71xx_get_eth_pll(0, speed);u32 val = ar71xx_get_eth_pll(1, speed); stop RX and TX  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  stop RX engine  enable TX engine  disable TX engine  start RX engine  only fixed, without mii  start RX engine  mac soft reset device stop device start setup MAC configuration registers  setup FIFO configuration register 0  setup MII interface type  setup mdio clock divisor  setup FIFO configuration registers  flush write skip if port is configured not to use 