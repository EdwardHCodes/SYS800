 WL_DRAW.C
=============================================================================

                               LOCAL CONSTANTS

=============================================================================
 the door is the last picture before the sprites
=============================================================================

                              GLOBAL VARIABLES

=============================================================================
 math tables refresh variables the focal point wall optimization variables true for vertical ray tracing variables
============================================================================

                           3 - D  DEFINITIONS

============================================================================

========================
=
= TransformActor
=
= Takes paramaters:
=   gx,gy               : globalx/globaly of point
=
= globals:
=   viewx,viewy         : point of view
=   viewcos,viewsin     : sin/cos of viewangle
=   scale               : conversion from global value to screen value
=
= sets:
=   screenx,transx,transy,screenheight: projected edge location and size
=
========================
 transform actor translate point to view centered coordinates calculate newx fudge the shape forward a bit, because the midpoint could put parts of the shape into an adjacent wall calculate newy calculate perspective ratio too close, don't overflow the divide calculate height (heightnumerator/(nx>>8))==========================================================================
========================
=
= TransformTile
=
= Takes paramaters:
=   tx,ty               : tile the object is centered in
=
= globals:
=   viewx,viewy         : point of view
=   viewcos,viewsin     : sin/cos of viewangle
=   scale               : conversion from global value to screen value
=
= sets:
=   screenx,transx,transy,screenheight: projected edge location and size
=
= Returns true if the tile is withing getting distance
=
========================
 translate point to view centered coordinates calculate newx 0x2000 is size of object calculate newy calculate height / perspective ratio too close, don't overflow the divide see if it should be grabbed==========================================================================
====================
=
= CalcHeight
=
= Calculates the height of xintercept,yintercept from viewx,viewy
=
====================
==========================================================================
===================
=
= ScalePost
=
===================

====================
=
= HitVertWall
=
= tilehit bit 7 is 0, because it's not a door tile
= if bit 6 is 1 and the adjacent tile is a door tile, use door side pic
=
====================
 check for adjacent doors
====================
=
= HitHorizWall
=
= tilehit bit 7 is 0, because it's not a door tile
= if bit 6 is 1 and the adjacent tile is a door tile, use door side pic
=
====================
 check for adjacent doors==========================================================================
====================
=
= HitHorizDoor
=
====================
==========================================================================
====================
=
= HitVertDoor
=
====================
====================================================================================================================================================
=====================
=
= VGAClearScreen
=
=====================
==========================================================================
=====================
=
= CalcRotate
=
=====================
 this isn't exactly correct, as it should vary by a trig value, but it is close enough with only eight rotations 2 rotation pain frame pain with shooting frame bugfix low three bits are fractional too close or far away
=====================
=
= DrawScaleds
=
= Draws all objects that are visable
=
=====================
 this must be changed to uint32_t, when you you need more than 16-flags for drawing place static objects object has been deleted not visable object has been taken to close to the object don't let it overflow place active objects no shape optimize: keep in struct? could be in any of the nine surrounding tiles too close or far away special shape don't let it overflow draw from back to front no visable objects draw farthest==========================================================================
==============
=
= DrawPlayerWeapon
=
= Draw the player's hands
=
==============
==========================================================================
=====================
=
= CalcTics
=
=====================
 calculate tics since last refresh for adaptive timing if the game was paused a LONG time wait until end of current tic========================================================================== Special treatment when player is in back tile of pushwall ray hits pushwall back? ray hits pushwall back?
====================
=
= WallRefresh
=
====================
 the first pixel is on a new wall no more optimization on last post==========================================================================
========================
=
= ThreeDRefresh
=
========================
 clear out the traced array Detect all sprites over player fix follow the walls from there to the right, drawing as we go draw all the scaled images draw scaled stuff draw player's hands show screen and time last cycle don't make a big tic count WL_DRAW.C
=============================================================================

                               LOCAL CONSTANTS

=============================================================================
 the door is the last picture before the sprites
=============================================================================

                              GLOBAL VARIABLES

=============================================================================
 math tables refresh variables the focal point wall optimization variables true for vertical ray tracing variables
============================================================================

                           3 - D  DEFINITIONS

============================================================================

========================
=
= TransformActor
=
= Takes paramaters:
=   gx,gy               : globalx/globaly of point
=
= globals:
=   viewx,viewy         : point of view
=   viewcos,viewsin     : sin/cos of viewangle
=   scale               : conversion from global value to screen value
=
= sets:
=   screenx,transx,transy,screenheight: projected edge location and size
=
========================
 transform actor translate point to view centered coordinates calculate newx fudge the shape forward a bit, because the midpoint could put parts of the shape into an adjacent wall calculate newy calculate perspective ratio too close, don't overflow the divide calculate height (heightnumerator/(nx>>8))==========================================================================
========================
=
= TransformTile
=
= Takes paramaters:
=   tx,ty               : tile the object is centered in
=
= globals:
=   viewx,viewy         : point of view
=   viewcos,viewsin     : sin/cos of viewangle
=   scale               : conversion from global value to screen value
=
= sets:
=   screenx,transx,transy,screenheight: projected edge location and size
=
= Returns true if the tile is withing getting distance
=
========================
 translate point to view centered coordinates calculate newx 0x2000 is size of object calculate newy calculate height / perspective ratio too close, don't overflow the divide see if it should be grabbed==========================================================================
====================
=
= CalcHeight
=
= Calculates the height of xintercept,yintercept from viewx,viewy
=
====================
==========================================================================
===================
=
= ScalePost
=
===================

====================
=
= HitVertWall
=
= tilehit bit 7 is 0, because it's not a door tile
= if bit 6 is 1 and the adjacent tile is a door tile, use door side pic
=
====================
 check for adjacent doors
====================
=
= HitHorizWall
=
= tilehit bit 7 is 0, because it's not a door tile
= if bit 6 is 1 and the adjacent tile is a door tile, use door side pic
=
====================
 check for adjacent doors==========================================================================
====================
=
= HitHorizDoor
=
====================
==========================================================================
====================
=
= HitVertDoor
=
====================
====================================================================================================================================================
=====================
=
= VGAClearScreen
=
=====================
==========================================================================
=====================
=
= CalcRotate
=
=====================
 this isn't exactly correct, as it should vary by a trig value, but it is close enough with only eight rotations 2 rotation pain frame pain with shooting frame bugfix low three bits are fractional too close or far away
=====================
=
= DrawScaleds
=
= Draws all objects that are visable
=
=====================
 this must be changed to uint32_t, when you you need more than 16-flags for drawing place static objects object has been deleted not visable object has been taken to close to the object don't let it overflow place active objects no shape optimize: keep in struct? could be in any of the nine surrounding tiles too close or far away special shape don't let it overflow draw from back to front no visable objects draw farthest==========================================================================
==============
=
= DrawPlayerWeapon
=
= Draw the player's hands
=
==============
==========================================================================
=====================
=
= CalcTics
=
=====================
 calculate tics since last refresh for adaptive timing if the game was paused a LONG time wait until end of current tic========================================================================== Special treatment when player is in back tile of pushwall ray hits pushwall back? ray hits pushwall back?
====================
=
= WallRefresh
=
====================
 the first pixel is on a new wall no more optimization on last post==========================================================================
========================
=
= ThreeDRefresh
=
========================
 clear out the traced array Detect all sprites over player fix follow the walls from there to the right, drawing as we go draw all the scaled images draw scaled stuff draw player's hands show screen and time last cycle don't make a big tic count WL_DRAW.C
=============================================================================

                               LOCAL CONSTANTS

=============================================================================
 the door is the last picture before the sprites
=============================================================================

                              GLOBAL VARIABLES

=============================================================================
 math tables refresh variables the focal point wall optimization variables true for vertical ray tracing variables
============================================================================

                           3 - D  DEFINITIONS

============================================================================

========================
=
= TransformActor
=
= Takes paramaters:
=   gx,gy               : globalx/globaly of point
=
= globals:
=   viewx,viewy         : point of view
=   viewcos,viewsin     : sin/cos of viewangle
=   scale               : conversion from global value to screen value
=
= sets:
=   screenx,transx,transy,screenheight: projected edge location and size
=
========================
 transform actor translate point to view centered coordinates calculate newx fudge the shape forward a bit, because the midpoint could put parts of the shape into an adjacent wall calculate newy calculate perspective ratio too close, don't overflow the divide calculate height (heightnumerator/(nx>>8))==========================================================================
========================
=
= TransformTile
=
= Takes paramaters:
=   tx,ty               : tile the object is centered in
=
= globals:
=   viewx,viewy         : point of view
=   viewcos,viewsin     : sin/cos of viewangle
=   scale               : conversion from global value to screen value
=
= sets:
=   screenx,transx,transy,screenheight: projected edge location and size
=
= Returns true if the tile is withing getting distance
=
========================
 translate point to view centered coordinates calculate newx 0x2000 is size of object calculate newy calculate height / perspective ratio too close, don't overflow the divide see if it should be grabbed==========================================================================
====================
=
= CalcHeight
=
= Calculates the height of xintercept,yintercept from viewx,viewy
=
====================
==========================================================================
===================
=
= ScalePost
=
===================

====================
=
= HitVertWall
=
= tilehit bit 7 is 0, because it's not a door tile
= if bit 6 is 1 and the adjacent tile is a door tile, use door side pic
=
====================
 check for adjacent doors
====================
=
= HitHorizWall
=
= tilehit bit 7 is 0, because it's not a door tile
= if bit 6 is 1 and the adjacent tile is a door tile, use door side pic
=
====================
 check for adjacent doors==========================================================================
====================
=
= HitHorizDoor
=
====================
==========================================================================
====================
=
= HitVertDoor
=
====================
====================================================================================================================================================
=====================
=
= VGAClearScreen
=
=====================
==========================================================================
=====================
=
= CalcRotate
=
=====================
 this isn't exactly correct, as it should vary by a trig value, but it is close enough with only eight rotations 2 rotation pain frame pain with shooting frame bugfix low three bits are fractional too close or far away
=====================
=
= DrawScaleds
=
= Draws all objects that are visable
=
=====================
 this must be changed to uint32_t, when you you need more than 16-flags for drawing place static objects object has been deleted not visable object has been taken to close to the object don't let it overflow place active objects no shape optimize: keep in struct? could be in any of the nine surrounding tiles too close or far away special shape don't let it overflow draw from back to front no visable objects draw farthest==========================================================================
==============
=
= DrawPlayerWeapon
=
= Draw the player's hands
=
==============
==========================================================================
=====================
=
= CalcTics
=
=====================
 calculate tics since last refresh for adaptive timing if the game was paused a LONG time wait until end of current tic========================================================================== Special treatment when player is in back tile of pushwall ray hits pushwall back? ray hits pushwall back?
====================
=
= WallRefresh
=
====================
 the first pixel is on a new wall no more optimization on last post==========================================================================
========================
=
= ThreeDRefresh
=
========================
 clear out the traced array Detect all sprites over player fix follow the walls from there to the right, drawing as we go draw all the scaled images draw scaled stuff draw player's hands show screen and time last cycle don't make a big tic count