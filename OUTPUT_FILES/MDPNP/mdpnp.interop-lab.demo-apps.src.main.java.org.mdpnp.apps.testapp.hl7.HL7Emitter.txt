 Observes changes to source_timestamp and queues the NumericFx for emission We'll make it ok to start with no external connection just to demo the ability to compose HL7 messages TODO is there an active connection to disconnect? Now, let's encode the message and look at the output ORU is an observation Event R01 is an unsolicited observation message "T" for Test, "P" for Production, etc. Populate the MSH Segment Populate the PID Segment Populate the first OBX obx.getSetIDOBX().setValue("1"); The first OBX has a value type of CE. So first, we populate OBX-2 with "CE"... "NM" is Numeric        obs.addIdentifier().setSystem("urn:info.openice").setValue(uuidFromSequence(sampleInfo.publication_sequence_number).toString()); Must not detach what we did not attach Observes changes to source_timestamp and queues the NumericFx for emission We'll make it ok to start with no external connection just to demo the ability to compose HL7 messages TODO is there an active connection to disconnect? Now, let's encode the message and look at the output ORU is an observation Event R01 is an unsolicited observation message "T" for Test, "P" for Production, etc. Populate the MSH Segment Populate the PID Segment Populate the first OBX obx.getSetIDOBX().setValue("1"); The first OBX has a value type of CE. So first, we populate OBX-2 with "CE"... "NM" is Numeric        obs.addIdentifier().setSystem("urn:info.openice").setValue(uuidFromSequence(sampleInfo.publication_sequence_number).toString()); Must not detach what we did not attach Observes changes to source_timestamp and queues the NumericFx for emission We'll make it ok to start with no external connection just to demo the ability to compose HL7 messages TODO is there an active connection to disconnect? Now, let's encode the message and look at the output ORU is an observation Event R01 is an unsolicited observation message "T" for Test, "P" for Production, etc. Populate the MSH Segment Populate the PID Segment Populate the first OBX obx.getSetIDOBX().setValue("1"); The first OBX has a value type of CE. So first, we populate OBX-2 with "CE"... "NM" is Numeric        obs.addIdentifier().setSystem("urn:info.openice").setValue(uuidFromSequence(sampleInfo.publication_sequence_number).toString()); Must not detach what we did not attach Observes changes to source_timestamp and queues the NumericFx for emission We'll make it ok to start with no external connection just to demo the ability to compose HL7 messages TODO is there an active connection to disconnect? Now, let's encode the message and look at the output ORU is an observation Event R01 is an unsolicited observation message "T" for Test, "P" for Production, etc. Populate the MSH Segment Populate the PID Segment Populate the first OBX obx.getSetIDOBX().setValue("1"); The first OBX has a value type of CE. So first, we populate OBX-2 with "CE"... "NM" is Numeric        obs.addIdentifier().setSystem("urn:info.openice").setValue(uuidFromSequence(sampleInfo.publication_sequence_number).toString()); Must not detach what we did not attach