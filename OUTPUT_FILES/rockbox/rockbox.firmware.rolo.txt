**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Randy D. Wood
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************mi4-loader.crb-loader.c FIX: this doesn't work on iFP  Handle the COP properly - it needs to jump to a function outside SDRAM while
 * the new firmware is being loaded, and then jump to the start of SDRAM
 * TODO: Use the mailboxes built into the PP processor for this
  There should be free thread slots aplenty  Invalidate cache  Disable cache  Tell the main core that we're ready to reload  Wait while RoLo loads the image into SDRAM  TODO: Accept checksum failure gracefully  Acknowledge the CPU and then reload  NUM_CORES > 1  CPU_PP  this is in firmware/target/arm/imx31/rolo_restart.c for IMX31  this is in firmware/target/arm/rk27xx/rolo_restart.c for rk27xx  explicitly put this code in iram, ICODE_ATTR is defined to be null for some
   targets that are low on iram, like the gigabeat F/X  This is the equivalent of a call to memcpy() but this must be done from
       iram to avoid overwriting itself and we don't want to depend on memcpy()
       always being in iram  Flush cache  Disable cache  Reset the memory mapping registers to zero  Tell the COP it's safe to continue rebooting  Wait for the COP to tell us it is rebooting  Flush and invalidate caches  This is assigned in the linker control file **************************************************************************
 *
 * Name: rolo_load(const char *filename)
 * Filename must be a fully defined filename including the path and extension
 *
 ************************************************************************** get the system buffer. release only in case of error, otherwise
     * we don't return anyway  write the bootdata as if rolo were the bootloader  rb-loader.c  Wait for COP to be in safe code  X3 adc hangs on ROLO  Set CVDD1 power supply to default It is necessary for proper detection AMSv2 variant 1.
     * We should restore initial state of GPIOB_PIN(5) as it used for
     * variant detection, but can be changed if we switch SD card.  We're not finished yet  Should do these together since some ARM version should never have
     * FIQ disabled and not IRQ (imx31 errata).  Some targets have a higher disable level than HIGEST_IRQ_LEVEL  CONFIG_CPU == IMX31L  never reached  CPU_COLDFIRE | CPU_ARM | CPU_MIPS   !defined(IRIVER_IFP7XX_SERIES)  dummy  !defined(IRIVER_IFP7XX_SERIES) **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Randy D. Wood
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************mi4-loader.crb-loader.c FIX: this doesn't work on iFP  Handle the COP properly - it needs to jump to a function outside SDRAM while
 * the new firmware is being loaded, and then jump to the start of SDRAM
 * TODO: Use the mailboxes built into the PP processor for this
  There should be free thread slots aplenty  Invalidate cache  Disable cache  Tell the main core that we're ready to reload  Wait while RoLo loads the image into SDRAM  TODO: Accept checksum failure gracefully  Acknowledge the CPU and then reload  NUM_CORES > 1  CPU_PP  this is in firmware/target/arm/imx31/rolo_restart.c for IMX31  this is in firmware/target/arm/rk27xx/rolo_restart.c for rk27xx  explicitly put this code in iram, ICODE_ATTR is defined to be null for some
   targets that are low on iram, like the gigabeat F/X  This is the equivalent of a call to memcpy() but this must be done from
       iram to avoid overwriting itself and we don't want to depend on memcpy()
       always being in iram  Flush cache  Disable cache  Reset the memory mapping registers to zero  Tell the COP it's safe to continue rebooting  Wait for the COP to tell us it is rebooting  Flush and invalidate caches  This is assigned in the linker control file **************************************************************************
 *
 * Name: rolo_load(const char *filename)
 * Filename must be a fully defined filename including the path and extension
 *
 ************************************************************************** get the system buffer. release only in case of error, otherwise
     * we don't return anyway  write the bootdata as if rolo were the bootloader  rb-loader.c  Wait for COP to be in safe code  X3 adc hangs on ROLO  Set CVDD1 power supply to default It is necessary for proper detection AMSv2 variant 1.
     * We should restore initial state of GPIOB_PIN(5) as it used for
     * variant detection, but can be changed if we switch SD card.  We're not finished yet  Should do these together since some ARM version should never have
     * FIQ disabled and not IRQ (imx31 errata).  Some targets have a higher disable level than HIGEST_IRQ_LEVEL  CONFIG_CPU == IMX31L  never reached  CPU_COLDFIRE | CPU_ARM | CPU_MIPS   !defined(IRIVER_IFP7XX_SERIES)  dummy  !defined(IRIVER_IFP7XX_SERIES) **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Randy D. Wood
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************mi4-loader.crb-loader.c FIX: this doesn't work on iFP  Handle the COP properly - it needs to jump to a function outside SDRAM while
 * the new firmware is being loaded, and then jump to the start of SDRAM
 * TODO: Use the mailboxes built into the PP processor for this
  There should be free thread slots aplenty  Invalidate cache  Disable cache  Tell the main core that we're ready to reload  Wait while RoLo loads the image into SDRAM  TODO: Accept checksum failure gracefully  Acknowledge the CPU and then reload  NUM_CORES > 1  CPU_PP  this is in firmware/target/arm/imx31/rolo_restart.c for IMX31  this is in firmware/target/arm/rk27xx/rolo_restart.c for rk27xx  explicitly put this code in iram, ICODE_ATTR is defined to be null for some
   targets that are low on iram, like the gigabeat F/X  This is the equivalent of a call to memcpy() but this must be done from
       iram to avoid overwriting itself and we don't want to depend on memcpy()
       always being in iram  Flush cache  Disable cache  Reset the memory mapping registers to zero  Tell the COP it's safe to continue rebooting  Wait for the COP to tell us it is rebooting  Flush and invalidate caches  This is assigned in the linker control file **************************************************************************
 *
 * Name: rolo_load(const char *filename)
 * Filename must be a fully defined filename including the path and extension
 *
 ************************************************************************** get the system buffer. release only in case of error, otherwise
     * we don't return anyway  write the bootdata as if rolo were the bootloader  rb-loader.c  Wait for COP to be in safe code  X3 adc hangs on ROLO  Set CVDD1 power supply to default It is necessary for proper detection AMSv2 variant 1.
     * We should restore initial state of GPIOB_PIN(5) as it used for
     * variant detection, but can be changed if we switch SD card.  We're not finished yet  Should do these together since some ARM version should never have
     * FIQ disabled and not IRQ (imx31 errata).  Some targets have a higher disable level than HIGEST_IRQ_LEVEL  CONFIG_CPU == IMX31L  never reached  CPU_COLDFIRE | CPU_ARM | CPU_MIPS   !defined(IRIVER_IFP7XX_SERIES)  dummy  !defined(IRIVER_IFP7XX_SERIES) 