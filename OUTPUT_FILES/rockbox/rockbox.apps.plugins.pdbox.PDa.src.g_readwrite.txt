 Copyright (c) 1997-2002 Miller Puckette and others.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   this file reads and writes the "data" portions of a canvas to a file.
See also canvas_saveto(), etc., in g_editor.c.  The data portion is a
collection of "scalar" objects.  Routines here can save collections of
scalars into a file and reload them; also, support is included here for
 ROCKBOX  ROCKBOX  the following routines read "scalars" from a file into a canvas.  fill in the contents of the scalar into the vector w.  empty line terminates array  temporarily lie about vis flag while this is built  reset vis flag as before  check for file type  read in templates and check for consistency  read text from a "properties" window, called from a gfxstub set
    up in scalar_properties().  We try to restore the object; if successful
    we delete the scalar and put the new thing in its place on the list.  take the new object off the list  ----------- routines to write data to a binbuf -----------  write the atoms (floats and symbols)  array elements have to have at least something  ------------ routines to write out templates for data -------  write all "scalars" in a glist to a binbuf.  drop "pd-" prefix from template symbol to print it:  now write out the objects themselves  ------ routines to save and restore canvases (patches) recursively. ---- save to a binbuf, called recursively; cf. canvas_savetofile() which
    saves the document, and is only called on root canvases.  subpatch  root or abstraction  unless everything is the default (as in ordinary subpatches)
	print out a "coords" message to set up the coordinate systems  call this recursively to collect all the template names for
    a canvas or for the selection.  save the templates needed by a canvas to a binbuf.  drop "pd-" prefix from template symbol to print  save a "root" canvas to a file; cf. canvas_saveto() which saves the
    body (and which is called recursively.)  if not an abstraction, reset title bar and directory  ROCKBOX  ROCKBOX  ------------------ from the menu -------------------------  Copyright (c) 1997-2002 Miller Puckette and others.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   this file reads and writes the "data" portions of a canvas to a file.
See also canvas_saveto(), etc., in g_editor.c.  The data portion is a
collection of "scalar" objects.  Routines here can save collections of
scalars into a file and reload them; also, support is included here for
 ROCKBOX  ROCKBOX  the following routines read "scalars" from a file into a canvas.  fill in the contents of the scalar into the vector w.  empty line terminates array  temporarily lie about vis flag while this is built  reset vis flag as before  check for file type  read in templates and check for consistency  read text from a "properties" window, called from a gfxstub set
    up in scalar_properties().  We try to restore the object; if successful
    we delete the scalar and put the new thing in its place on the list.  take the new object off the list  ----------- routines to write data to a binbuf -----------  write the atoms (floats and symbols)  array elements have to have at least something  ------------ routines to write out templates for data -------  write all "scalars" in a glist to a binbuf.  drop "pd-" prefix from template symbol to print it:  now write out the objects themselves  ------ routines to save and restore canvases (patches) recursively. ---- save to a binbuf, called recursively; cf. canvas_savetofile() which
    saves the document, and is only called on root canvases.  subpatch  root or abstraction  unless everything is the default (as in ordinary subpatches)
	print out a "coords" message to set up the coordinate systems  call this recursively to collect all the template names for
    a canvas or for the selection.  save the templates needed by a canvas to a binbuf.  drop "pd-" prefix from template symbol to print  save a "root" canvas to a file; cf. canvas_saveto() which saves the
    body (and which is called recursively.)  if not an abstraction, reset title bar and directory  ROCKBOX  ROCKBOX  ------------------ from the menu -------------------------  Copyright (c) 1997-2002 Miller Puckette and others.
* For information on usage and redistribution, and for a DISCLAIMER OF ALL
* WARRANTIES, see the file, "LICENSE.txt," in this distribution.   this file reads and writes the "data" portions of a canvas to a file.
See also canvas_saveto(), etc., in g_editor.c.  The data portion is a
collection of "scalar" objects.  Routines here can save collections of
scalars into a file and reload them; also, support is included here for
 ROCKBOX  ROCKBOX  the following routines read "scalars" from a file into a canvas.  fill in the contents of the scalar into the vector w.  empty line terminates array  temporarily lie about vis flag while this is built  reset vis flag as before  check for file type  read in templates and check for consistency  read text from a "properties" window, called from a gfxstub set
    up in scalar_properties().  We try to restore the object; if successful
    we delete the scalar and put the new thing in its place on the list.  take the new object off the list  ----------- routines to write data to a binbuf -----------  write the atoms (floats and symbols)  array elements have to have at least something  ------------ routines to write out templates for data -------  write all "scalars" in a glist to a binbuf.  drop "pd-" prefix from template symbol to print it:  now write out the objects themselves  ------ routines to save and restore canvases (patches) recursively. ---- save to a binbuf, called recursively; cf. canvas_savetofile() which
    saves the document, and is only called on root canvases.  subpatch  root or abstraction  unless everything is the default (as in ordinary subpatches)
	print out a "coords" message to set up the coordinate systems  call this recursively to collect all the template names for
    a canvas or for the selection.  save the templates needed by a canvas to a binbuf.  drop "pd-" prefix from template symbol to print  save a "root" canvas to a file; cf. canvas_saveto() which saves the
    body (and which is called recursively.)  if not an abstraction, reset title bar and directory  ROCKBOX  ROCKBOX  ------------------ from the menu ------------------------- 