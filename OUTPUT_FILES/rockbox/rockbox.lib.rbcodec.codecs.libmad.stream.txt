
 * libmad - MPEG audio decoder library
 * Copyright (C) 2000-2004 Underbit Technologies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 
 * NAME:        stream->init()
 * DESCRIPTION: initialize stream struct
  rockbox: not used
  stream->skiplen    = 0;  rockbox: comment this to avoid allocation in following code. main_data is
 * linked to an array in ../mpa.c before calling this.
  stream->main_data  = 0;

 * NAME:        stream->finish()
 * DESCRIPTION: deallocate any dynamic memory associated with stream
  rockbox: not used
void mad_stream_finish(struct mad_stream *stream)
{
  if (stream->main_data) {
    free(stream->main_data);
    stream->main_data = 0;
  }

  mad_bit_finish(&stream->anc_ptr);
  mad_bit_finish(&stream->ptr);
} 
 * NAME:        stream->buffer()
 * DESCRIPTION: set stream buffer pointers
 
 * NAME:        stream->skip()
 * DESCRIPTION: arrange to skip bytes before the next frame
  rockbox: not used
void mad_stream_skip(struct mad_stream *stream, unsigned long length)
{
  stream->skiplen += length;
} 
 * NAME:        stream->sync()
 * DESCRIPTION: locate the next stream sync word
 
 * NAME:        stream->errorstr()
 * DESCRIPTION: return a string description of the current error condition
 
 * libmad - MPEG audio decoder library
 * Copyright (C) 2000-2004 Underbit Technologies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 
 * NAME:        stream->init()
 * DESCRIPTION: initialize stream struct
  rockbox: not used
  stream->skiplen    = 0;  rockbox: comment this to avoid allocation in following code. main_data is
 * linked to an array in ../mpa.c before calling this.
  stream->main_data  = 0;

 * NAME:        stream->finish()
 * DESCRIPTION: deallocate any dynamic memory associated with stream
  rockbox: not used
void mad_stream_finish(struct mad_stream *stream)
{
  if (stream->main_data) {
    free(stream->main_data);
    stream->main_data = 0;
  }

  mad_bit_finish(&stream->anc_ptr);
  mad_bit_finish(&stream->ptr);
} 
 * NAME:        stream->buffer()
 * DESCRIPTION: set stream buffer pointers
 
 * NAME:        stream->skip()
 * DESCRIPTION: arrange to skip bytes before the next frame
  rockbox: not used
void mad_stream_skip(struct mad_stream *stream, unsigned long length)
{
  stream->skiplen += length;
} 
 * NAME:        stream->sync()
 * DESCRIPTION: locate the next stream sync word
 
 * NAME:        stream->errorstr()
 * DESCRIPTION: return a string description of the current error condition
 
 * libmad - MPEG audio decoder library
 * Copyright (C) 2000-2004 Underbit Technologies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 
 * NAME:        stream->init()
 * DESCRIPTION: initialize stream struct
  rockbox: not used
  stream->skiplen    = 0;  rockbox: comment this to avoid allocation in following code. main_data is
 * linked to an array in ../mpa.c before calling this.
  stream->main_data  = 0;

 * NAME:        stream->finish()
 * DESCRIPTION: deallocate any dynamic memory associated with stream
  rockbox: not used
void mad_stream_finish(struct mad_stream *stream)
{
  if (stream->main_data) {
    free(stream->main_data);
    stream->main_data = 0;
  }

  mad_bit_finish(&stream->anc_ptr);
  mad_bit_finish(&stream->ptr);
} 
 * NAME:        stream->buffer()
 * DESCRIPTION: set stream buffer pointers
 
 * NAME:        stream->skip()
 * DESCRIPTION: arrange to skip bytes before the next frame
  rockbox: not used
void mad_stream_skip(struct mad_stream *stream, unsigned long length)
{
  stream->skiplen += length;
} 
 * NAME:        stream->sync()
 * DESCRIPTION: locate the next stream sync word
 
 * NAME:        stream->errorstr()
 * DESCRIPTION: return a string description of the current error condition
 