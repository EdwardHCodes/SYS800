**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  LCD driver for the Meizu M6 SP using the CLCD controller in the S5L8700

    The Meizu M6 SP can have two different LCDs, the S6D0139 and another
    (yet unknown) type, the exact type is detected at run-time.

    Open issues:
    * LCD is currently in portrait mode instead of landscape mode
    * This LCD driver accesses the Rockbox framebuffer directly, so any changes
      to the framebuffer as shown directly even before lcd_update is called.
    * Sometimes part of the top of the screen appears at the bottom
    * The Meizu seems to hang after LCD initialisation
    * The driver for the S6D0139 LCD has not been tested yet
      
  LCD SPI connections  on PDAT7  on PDAT3  on PDAT3  on PDAT3  LCD SPI communication definitions  id for LCD type S6D0139  simple and crude delay  write 'data_out' of length 'bits' over SPI and return received data  SSn active  send and receive data  CLK low  set MOSI  delay  sample MISO  CLK high  delay  SSn inactive  initialize the lcd SPI port interface  configure SSn (P7.1) as output  configure MISO (P3.2) input, MOSI (P3.6) output, SCLK (P3.7) output  set all outputs high  read LCD identification word over SPI  write LCD register over SPI  enable/disable clock signals towards the lcd  lcd init configuration for lcd type 1  display control  power control 3  power control 2  power control 4  power control 1  power control 3  power control 3  power control 3  driver output control  lcd driving waveform control  entry mode  blank period control 1  frame cycle control  external interface control  gamma control 1  gamma control 2  gamma control 3  gamma control 4  gamma control 5  gamma control 6  gamma control 7  gamma control 8  gamma control 9  gamma control 10  gate scan position  vertical scroll control  1st screen driving position (end)  1st screen driving position (start)  2nd screen driving position (end)  2nd screen driving position (start)  horizontal window address  vertical window address (end)  vertical window address (start)  display control  display control  RAM address set (low part)  RAM address set (high part)  write data to GRAM  lcd init configuration for lcd type 2  gamma?  lcd enable for lcd type 1  start oscillation  power control 1  power control 2  power control 4  power control 1  display control  RAM address set (low part)  RAM address set (high part)  write data to GRAM  display control  display control  power control 1  lcd enable for lcd type 2  turn both the lcd controller and the lcd itself on or off  enable controller clock  call type specific power function  disable controller clock  initialise the lcd controller inside the s5l8700  BURSTLEN  DIVEN  CLKVAL  CLKDIR, 1=divided clock  CLKSEL, 0=HCLK, 1=PLL  BPPMODEF, 5=rgb565, 7=raw24  BPPMODEB, 5=rgb565, 7=raw24  ENVID  PALFRM, 2=rgb565 palette  IVCLK  IHSYNC  IVSYNC  IVDEN  configure LCD SPI pins  identify display through SPI  display specific init sequence  init LCD controller  set framebuffer addresses  configure LCD pins  not implemented yet, LCD controller accesses framebuffer directly  TODO: not implemented yet **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  LCD driver for the Meizu M6 SP using the CLCD controller in the S5L8700

    The Meizu M6 SP can have two different LCDs, the S6D0139 and another
    (yet unknown) type, the exact type is detected at run-time.

    Open issues:
    * LCD is currently in portrait mode instead of landscape mode
    * This LCD driver accesses the Rockbox framebuffer directly, so any changes
      to the framebuffer as shown directly even before lcd_update is called.
    * Sometimes part of the top of the screen appears at the bottom
    * The Meizu seems to hang after LCD initialisation
    * The driver for the S6D0139 LCD has not been tested yet
      
  LCD SPI connections  on PDAT7  on PDAT3  on PDAT3  on PDAT3  LCD SPI communication definitions  id for LCD type S6D0139  simple and crude delay  write 'data_out' of length 'bits' over SPI and return received data  SSn active  send and receive data  CLK low  set MOSI  delay  sample MISO  CLK high  delay  SSn inactive  initialize the lcd SPI port interface  configure SSn (P7.1) as output  configure MISO (P3.2) input, MOSI (P3.6) output, SCLK (P3.7) output  set all outputs high  read LCD identification word over SPI  write LCD register over SPI  enable/disable clock signals towards the lcd  lcd init configuration for lcd type 1  display control  power control 3  power control 2  power control 4  power control 1  power control 3  power control 3  power control 3  driver output control  lcd driving waveform control  entry mode  blank period control 1  frame cycle control  external interface control  gamma control 1  gamma control 2  gamma control 3  gamma control 4  gamma control 5  gamma control 6  gamma control 7  gamma control 8  gamma control 9  gamma control 10  gate scan position  vertical scroll control  1st screen driving position (end)  1st screen driving position (start)  2nd screen driving position (end)  2nd screen driving position (start)  horizontal window address  vertical window address (end)  vertical window address (start)  display control  display control  RAM address set (low part)  RAM address set (high part)  write data to GRAM  lcd init configuration for lcd type 2  gamma?  lcd enable for lcd type 1  start oscillation  power control 1  power control 2  power control 4  power control 1  display control  RAM address set (low part)  RAM address set (high part)  write data to GRAM  display control  display control  power control 1  lcd enable for lcd type 2  turn both the lcd controller and the lcd itself on or off  enable controller clock  call type specific power function  disable controller clock  initialise the lcd controller inside the s5l8700  BURSTLEN  DIVEN  CLKVAL  CLKDIR, 1=divided clock  CLKSEL, 0=HCLK, 1=PLL  BPPMODEF, 5=rgb565, 7=raw24  BPPMODEB, 5=rgb565, 7=raw24  ENVID  PALFRM, 2=rgb565 palette  IVCLK  IHSYNC  IVSYNC  IVDEN  configure LCD SPI pins  identify display through SPI  display specific init sequence  init LCD controller  set framebuffer addresses  configure LCD pins  not implemented yet, LCD controller accesses framebuffer directly  TODO: not implemented yet **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Bertrik Sikken
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************  LCD driver for the Meizu M6 SP using the CLCD controller in the S5L8700

    The Meizu M6 SP can have two different LCDs, the S6D0139 and another
    (yet unknown) type, the exact type is detected at run-time.

    Open issues:
    * LCD is currently in portrait mode instead of landscape mode
    * This LCD driver accesses the Rockbox framebuffer directly, so any changes
      to the framebuffer as shown directly even before lcd_update is called.
    * Sometimes part of the top of the screen appears at the bottom
    * The Meizu seems to hang after LCD initialisation
    * The driver for the S6D0139 LCD has not been tested yet
      
  LCD SPI connections  on PDAT7  on PDAT3  on PDAT3  on PDAT3  LCD SPI communication definitions  id for LCD type S6D0139  simple and crude delay  write 'data_out' of length 'bits' over SPI and return received data  SSn active  send and receive data  CLK low  set MOSI  delay  sample MISO  CLK high  delay  SSn inactive  initialize the lcd SPI port interface  configure SSn (P7.1) as output  configure MISO (P3.2) input, MOSI (P3.6) output, SCLK (P3.7) output  set all outputs high  read LCD identification word over SPI  write LCD register over SPI  enable/disable clock signals towards the lcd  lcd init configuration for lcd type 1  display control  power control 3  power control 2  power control 4  power control 1  power control 3  power control 3  power control 3  driver output control  lcd driving waveform control  entry mode  blank period control 1  frame cycle control  external interface control  gamma control 1  gamma control 2  gamma control 3  gamma control 4  gamma control 5  gamma control 6  gamma control 7  gamma control 8  gamma control 9  gamma control 10  gate scan position  vertical scroll control  1st screen driving position (end)  1st screen driving position (start)  2nd screen driving position (end)  2nd screen driving position (start)  horizontal window address  vertical window address (end)  vertical window address (start)  display control  display control  RAM address set (low part)  RAM address set (high part)  write data to GRAM  lcd init configuration for lcd type 2  gamma?  lcd enable for lcd type 1  start oscillation  power control 1  power control 2  power control 4  power control 1  display control  RAM address set (low part)  RAM address set (high part)  write data to GRAM  display control  display control  power control 1  lcd enable for lcd type 2  turn both the lcd controller and the lcd itself on or off  enable controller clock  call type specific power function  disable controller clock  initialise the lcd controller inside the s5l8700  BURSTLEN  DIVEN  CLKVAL  CLKDIR, 1=divided clock  CLKSEL, 0=HCLK, 1=PLL  BPPMODEF, 5=rgb565, 7=raw24  BPPMODEB, 5=rgb565, 7=raw24  ENVID  PALFRM, 2=rgb565 palette  IVCLK  IHSYNC  IVSYNC  IVDEN  configure LCD SPI pins  identify display through SPI  display specific init sequence  init LCD controller  set framebuffer addresses  configure LCD pins  not implemented yet, LCD controller accesses framebuffer directly  TODO: not implemented yet 