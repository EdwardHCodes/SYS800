*
	 * The default interval, in seconds.
	 *
	 * The currently selected time interval between attempts to send to OpenEMR, in seconds.
	 *
	 * The last time we successfully transmitted data to the server.
	 *
	 * The next time we need to try and transmit data to the server.
	 *
	 * Session id for transferring data
	 *
	 * The time at which this process was created - effectively the process start time.
	 * The assumption is that no device/patient association can occur before this, and
	 * so this time is used to select device/patient associations that occurred after this
	 * time. Knowing that, we can select numerics and samples produced by devices that are
	 * associated with the current patient, where the association occurred after this time
	 * and where the associated has not been ended.  That gives us devices, that we can then
	 * match to the numerics or samples produced by those devices.
	 We don't know when we last transferred.There is nothing to do.TODO: give some indication that the app is not running.This is our first pass.  We set t_last to "now".We set this to allow time for sendData to execute without us missing any metrics that happen during that execution time.TODO: Exit somehow...We successfully sent data.  Update t_last. This assumes that sendData can miss some metrics produced after the query executes.When we later get multiple result sets from sendData, will we need multiple t_last?  Maybe not.
		            	 * The patient has definitely changed - even if the selected patient is "Unassigned",
		            	 * then that "Patient" has an ID
		            	 Nothing else to do.Patient has changedWe have a result setUDIMETRIC_IDVALUET_SECWe have a result setUDIMETRIC_IDVALUET_SEC*
	 * Used to retrieve a session id from OpenEMR.
	 Fallback value - and potentially a confusing one. the dot character is not legal in the dispatch handler for OpenEMR, so hostnames must be trimmed down.