**********************************************************************
Copyright (c) 2006-2011, Skype Limited. All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
- Neither the name of Internet Society, IETF or IETF Trust, nor the
names of specific contributors, may be used to endorse or promote
products derived from this software without specific prior written
permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
**********************************************************************
 * Matrix of resampling methods used:
 *                                 Fs_out (kHz)
 *                        8      12     16     24     48
 *
 *               8        C      UF     U      UF     UF
 *              12        AF     C      UF     U      UF
 * Fs_in (kHz)  16        D      AF     C      UF     UF
 *              24        AF     D      AF     C      U
 *              48        AF     AF     AF     D      C
 *
 * C   -> Copy (no resampling)
 * D   -> Allpass-based 2x downsampling
 * U   -> Allpass-based 2x upsampling
 * UF  -> Allpass-based 2x upsampling followed by FIR interpolation
 * AF  -> AR2 filter followed by FIR interpolation
  Tables with delay compensation values to equalize total delay for different modes  in  \ out  8  12  16   8  12  16  24  48  in  \ out  8  12  16  24  48   8  12  16  Simple way to make [8000, 12000, 16000, 24000, 48000] to [0, 1, 2, 3, 4]  Initialize/reset the resampler state for a given pair of input/output sampling rates  I/O  Resampler state                                              I    Input sampling rate (Hz)                                     I    Output sampling rate (Hz)                                    I    If 1: encoder; if 0: decoder                                 Clear state  Input checking  Number of samples processed per batch  Find resampler with the right sampling ratio  Upsample  Fs_out : Fs_in = 2 : 1  Special case: directly use 2x upsampler  Default resampler  Downsample  Fs_out : Fs_in = 3 : 4  Fs_out : Fs_in = 2 : 3  Fs_out : Fs_in = 1 : 2  Fs_out : Fs_in = 1 : 3  Fs_out : Fs_in = 1 : 4  Fs_out : Fs_in = 1 : 6  None available  Input and output sampling rates are equal: copy  Ratio of input/output samples  Make sure the ratio is rounded up  Resampler: convert from one sampling rate to another  Input and output sampling rate are at most 48000 Hz   I/O  Resampler state                                              O    Output signal                                                I    Input signal                                                 I    Number of input samples                                      Need at least 1 ms of input data  Delay can't exceed the 1 ms of buffering  Copy to delay buffer  Copy to delay buffer **********************************************************************
Copyright (c) 2006-2011, Skype Limited. All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
- Neither the name of Internet Society, IETF or IETF Trust, nor the
names of specific contributors, may be used to endorse or promote
products derived from this software without specific prior written
permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
**********************************************************************
 * Matrix of resampling methods used:
 *                                 Fs_out (kHz)
 *                        8      12     16     24     48
 *
 *               8        C      UF     U      UF     UF
 *              12        AF     C      UF     U      UF
 * Fs_in (kHz)  16        D      AF     C      UF     UF
 *              24        AF     D      AF     C      U
 *              48        AF     AF     AF     D      C
 *
 * C   -> Copy (no resampling)
 * D   -> Allpass-based 2x downsampling
 * U   -> Allpass-based 2x upsampling
 * UF  -> Allpass-based 2x upsampling followed by FIR interpolation
 * AF  -> AR2 filter followed by FIR interpolation
  Tables with delay compensation values to equalize total delay for different modes  in  \ out  8  12  16   8  12  16  24  48  in  \ out  8  12  16  24  48   8  12  16  Simple way to make [8000, 12000, 16000, 24000, 48000] to [0, 1, 2, 3, 4]  Initialize/reset the resampler state for a given pair of input/output sampling rates  I/O  Resampler state                                              I    Input sampling rate (Hz)                                     I    Output sampling rate (Hz)                                    I    If 1: encoder; if 0: decoder                                 Clear state  Input checking  Number of samples processed per batch  Find resampler with the right sampling ratio  Upsample  Fs_out : Fs_in = 2 : 1  Special case: directly use 2x upsampler  Default resampler  Downsample  Fs_out : Fs_in = 3 : 4  Fs_out : Fs_in = 2 : 3  Fs_out : Fs_in = 1 : 2  Fs_out : Fs_in = 1 : 3  Fs_out : Fs_in = 1 : 4  Fs_out : Fs_in = 1 : 6  None available  Input and output sampling rates are equal: copy  Ratio of input/output samples  Make sure the ratio is rounded up  Resampler: convert from one sampling rate to another  Input and output sampling rate are at most 48000 Hz   I/O  Resampler state                                              O    Output signal                                                I    Input signal                                                 I    Number of input samples                                      Need at least 1 ms of input data  Delay can't exceed the 1 ms of buffering  Copy to delay buffer  Copy to delay buffer **********************************************************************
Copyright (c) 2006-2011, Skype Limited. All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
- Neither the name of Internet Society, IETF or IETF Trust, nor the
names of specific contributors, may be used to endorse or promote
products derived from this software without specific prior written
permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
**********************************************************************
 * Matrix of resampling methods used:
 *                                 Fs_out (kHz)
 *                        8      12     16     24     48
 *
 *               8        C      UF     U      UF     UF
 *              12        AF     C      UF     U      UF
 * Fs_in (kHz)  16        D      AF     C      UF     UF
 *              24        AF     D      AF     C      U
 *              48        AF     AF     AF     D      C
 *
 * C   -> Copy (no resampling)
 * D   -> Allpass-based 2x downsampling
 * U   -> Allpass-based 2x upsampling
 * UF  -> Allpass-based 2x upsampling followed by FIR interpolation
 * AF  -> AR2 filter followed by FIR interpolation
  Tables with delay compensation values to equalize total delay for different modes  in  \ out  8  12  16   8  12  16  24  48  in  \ out  8  12  16  24  48   8  12  16  Simple way to make [8000, 12000, 16000, 24000, 48000] to [0, 1, 2, 3, 4]  Initialize/reset the resampler state for a given pair of input/output sampling rates  I/O  Resampler state                                              I    Input sampling rate (Hz)                                     I    Output sampling rate (Hz)                                    I    If 1: encoder; if 0: decoder                                 Clear state  Input checking  Number of samples processed per batch  Find resampler with the right sampling ratio  Upsample  Fs_out : Fs_in = 2 : 1  Special case: directly use 2x upsampler  Default resampler  Downsample  Fs_out : Fs_in = 3 : 4  Fs_out : Fs_in = 2 : 3  Fs_out : Fs_in = 1 : 2  Fs_out : Fs_in = 1 : 3  Fs_out : Fs_in = 1 : 4  Fs_out : Fs_in = 1 : 6  None available  Input and output sampling rates are equal: copy  Ratio of input/output samples  Make sure the ratio is rounded up  Resampler: convert from one sampling rate to another  Input and output sampling rate are at most 48000 Hz   I/O  Resampler state                                              O    Output signal                                                I    Input signal                                                 I    Number of input samples                                      Need at least 1 ms of input data  Delay can't exceed the 1 ms of buffering  Copy to delay buffer  Copy to delay buffer 