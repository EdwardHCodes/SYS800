**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2004 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** The controller is unknown, but some registers appear to be the same as the
   HD66789R  is the display turned on?  register defines  Flip Flag  Reverse Flag  short count: 16 | output data width: 16 | readstrobe line  short count: 16|enable write|output data width: 16|read strobe line  TODO: The OF calls some other functions here, but maybe not important  Write register  Wait for fifo to empty  Fuze OF has this loop and it seems to help us now also ** hardware configuration ** turn the display upside down   Initialisation the display the same way as the original firmware  Start Oscilation  220 lines, GS=0, SS=1  B/C = 1: n-line inversion form
     * EOR = 1: polarity inversion occurs by applying an EOR to odd/even
     *          frame select signal and an n-line inversion signal.
     * FLD = 01b: 1 field interlaced scan, external display iface  Address counter updated in horizontal direction; left to right;
     * vertical increment horizontal increment.
     * data format for 8bit transfer or spi = 65k (5,6,5)  Replace data on writing to GRAM  GON = 0, DTE = 0, D1-0 = 00b  Front porch lines: 2; Back porch lines: 2;  Scan cycle = 0 frames  16 clocks  18-bit RGB interface (one transfer/pixel)
     * internal clock operation;
     * System interface/VSYNC interface  zero everything STB = 0, SLP = 0  initialise power supply  DC12-10 = 000b: Step-up1 = clock/8,
     * DC02-00 = 000b: Step-up2 = clock/16,
     * VC2-0   = 010b: VciOUT = 0.87 * VciLVL  VRH3-0 = 1000b: Vreg1OUT = REGP * 1.90  VCOMG = 0  This register is unknown  must be done before calling lcd_update() ** update functions ** Line write helper function for lcd_yuv_blit. Write two lines of yuv420.  To align dither pattern  Performance function to blit a YUV bitmap directly to the LCD
 * src_x, src_y, width and height should be even
 * x, y, width and height have to be within LCD bounds
  Sorry, but width and height must be >= 2 or else  Skip down two luma lines  Skip down one chroma line  Skip down two luma lines  Skip down one chroma line  Update the display.
   This must be called after all other LCD functions that change the display.  Set start position and window  Update a fraction of the display.  nothing to draw?  clip left  clip top  clip right  clip bottom  we need to make x and width even to enable 32bit transfers **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2004 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** The controller is unknown, but some registers appear to be the same as the
   HD66789R  is the display turned on?  register defines  Flip Flag  Reverse Flag  short count: 16 | output data width: 16 | readstrobe line  short count: 16|enable write|output data width: 16|read strobe line  TODO: The OF calls some other functions here, but maybe not important  Write register  Wait for fifo to empty  Fuze OF has this loop and it seems to help us now also ** hardware configuration ** turn the display upside down   Initialisation the display the same way as the original firmware  Start Oscilation  220 lines, GS=0, SS=1  B/C = 1: n-line inversion form
     * EOR = 1: polarity inversion occurs by applying an EOR to odd/even
     *          frame select signal and an n-line inversion signal.
     * FLD = 01b: 1 field interlaced scan, external display iface  Address counter updated in horizontal direction; left to right;
     * vertical increment horizontal increment.
     * data format for 8bit transfer or spi = 65k (5,6,5)  Replace data on writing to GRAM  GON = 0, DTE = 0, D1-0 = 00b  Front porch lines: 2; Back porch lines: 2;  Scan cycle = 0 frames  16 clocks  18-bit RGB interface (one transfer/pixel)
     * internal clock operation;
     * System interface/VSYNC interface  zero everything STB = 0, SLP = 0  initialise power supply  DC12-10 = 000b: Step-up1 = clock/8,
     * DC02-00 = 000b: Step-up2 = clock/16,
     * VC2-0   = 010b: VciOUT = 0.87 * VciLVL  VRH3-0 = 1000b: Vreg1OUT = REGP * 1.90  VCOMG = 0  This register is unknown  must be done before calling lcd_update() ** update functions ** Line write helper function for lcd_yuv_blit. Write two lines of yuv420.  To align dither pattern  Performance function to blit a YUV bitmap directly to the LCD
 * src_x, src_y, width and height should be even
 * x, y, width and height have to be within LCD bounds
  Sorry, but width and height must be >= 2 or else  Skip down two luma lines  Skip down one chroma line  Skip down two luma lines  Skip down one chroma line  Update the display.
   This must be called after all other LCD functions that change the display.  Set start position and window  Update a fraction of the display.  nothing to draw?  clip left  clip top  clip right  clip bottom  we need to make x and width even to enable 32bit transfers **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2004 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** The controller is unknown, but some registers appear to be the same as the
   HD66789R  is the display turned on?  register defines  Flip Flag  Reverse Flag  short count: 16 | output data width: 16 | readstrobe line  short count: 16|enable write|output data width: 16|read strobe line  TODO: The OF calls some other functions here, but maybe not important  Write register  Wait for fifo to empty  Fuze OF has this loop and it seems to help us now also ** hardware configuration ** turn the display upside down   Initialisation the display the same way as the original firmware  Start Oscilation  220 lines, GS=0, SS=1  B/C = 1: n-line inversion form
     * EOR = 1: polarity inversion occurs by applying an EOR to odd/even
     *          frame select signal and an n-line inversion signal.
     * FLD = 01b: 1 field interlaced scan, external display iface  Address counter updated in horizontal direction; left to right;
     * vertical increment horizontal increment.
     * data format for 8bit transfer or spi = 65k (5,6,5)  Replace data on writing to GRAM  GON = 0, DTE = 0, D1-0 = 00b  Front porch lines: 2; Back porch lines: 2;  Scan cycle = 0 frames  16 clocks  18-bit RGB interface (one transfer/pixel)
     * internal clock operation;
     * System interface/VSYNC interface  zero everything STB = 0, SLP = 0  initialise power supply  DC12-10 = 000b: Step-up1 = clock/8,
     * DC02-00 = 000b: Step-up2 = clock/16,
     * VC2-0   = 010b: VciOUT = 0.87 * VciLVL  VRH3-0 = 1000b: Vreg1OUT = REGP * 1.90  VCOMG = 0  This register is unknown  must be done before calling lcd_update() ** update functions ** Line write helper function for lcd_yuv_blit. Write two lines of yuv420.  To align dither pattern  Performance function to blit a YUV bitmap directly to the LCD
 * src_x, src_y, width and height should be even
 * x, y, width and height have to be within LCD bounds
  Sorry, but width and height must be >= 2 or else  Skip down two luma lines  Skip down one chroma line  Skip down two luma lines  Skip down one chroma line  Update the display.
   This must be called after all other LCD functions that change the display.  Set start position and window  Update a fraction of the display.  nothing to draw?  clip left  clip top  clip right  clip bottom  we need to make x and width even to enable 32bit transfers 