**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Functions for IMA ADPCM and IMA ADPCM series format
 *
 * References
 * [1] The IMA Digital Audio Focus and Technical Working Groups,
 *     Recommended Practices for Enhancing Digital Audio Compatibility
 *     in Multimedia Systems Revision 3.00, 1992
 * [2] Microsoft Corporation, New Multimedia Data Types and Data Techniques,
 *     Revision:3.0, 1994
 * [3] ffmpeg source code, libavcodec/adpcm.c
  step table  step index tables  adpcm data size is 2  adpcm data size is 3  adpcm data size is 4  adpcm data size is 5 
 * Before first decoding, this function must be executed.
 *
 * params
 *     bit: adpcm data size (2 <= bit <= 5).
 *     index_table: step index table
 *                  if index_table is null, then step index table
 *                  is used index_tables[bit-2].
 
 * When starting decoding for each block, this function must be executed.
 *
 * params
 *     channels: channel count
 *     init_pcmdata: array of init pcmdata
 *     init_index:   array of init step indexes
 
 * convert ADPCM to PCM for any adpcm data size.
 *
 * If adpcm_data_size is 4, then you use create_pcmdata_size4()
 * in place of this functon.
 
 * convert ADPCM to PCM when adpcm data size is 4.
 **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Functions for IMA ADPCM and IMA ADPCM series format
 *
 * References
 * [1] The IMA Digital Audio Focus and Technical Working Groups,
 *     Recommended Practices for Enhancing Digital Audio Compatibility
 *     in Multimedia Systems Revision 3.00, 1992
 * [2] Microsoft Corporation, New Multimedia Data Types and Data Techniques,
 *     Revision:3.0, 1994
 * [3] ffmpeg source code, libavcodec/adpcm.c
  step table  step index tables  adpcm data size is 2  adpcm data size is 3  adpcm data size is 4  adpcm data size is 5 
 * Before first decoding, this function must be executed.
 *
 * params
 *     bit: adpcm data size (2 <= bit <= 5).
 *     index_table: step index table
 *                  if index_table is null, then step index table
 *                  is used index_tables[bit-2].
 
 * When starting decoding for each block, this function must be executed.
 *
 * params
 *     channels: channel count
 *     init_pcmdata: array of init pcmdata
 *     init_index:   array of init step indexes
 
 * convert ADPCM to PCM for any adpcm data size.
 *
 * If adpcm_data_size is 4, then you use create_pcmdata_size4()
 * in place of this functon.
 
 * convert ADPCM to PCM when adpcm data size is 4.
 **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Functions for IMA ADPCM and IMA ADPCM series format
 *
 * References
 * [1] The IMA Digital Audio Focus and Technical Working Groups,
 *     Recommended Practices for Enhancing Digital Audio Compatibility
 *     in Multimedia Systems Revision 3.00, 1992
 * [2] Microsoft Corporation, New Multimedia Data Types and Data Techniques,
 *     Revision:3.0, 1994
 * [3] ffmpeg source code, libavcodec/adpcm.c
  step table  step index tables  adpcm data size is 2  adpcm data size is 3  adpcm data size is 4  adpcm data size is 5 
 * Before first decoding, this function must be executed.
 *
 * params
 *     bit: adpcm data size (2 <= bit <= 5).
 *     index_table: step index table
 *                  if index_table is null, then step index table
 *                  is used index_tables[bit-2].
 
 * When starting decoding for each block, this function must be executed.
 *
 * params
 *     channels: channel count
 *     init_pcmdata: array of init pcmdata
 *     init_index:   array of init step indexes
 
 * convert ADPCM to PCM for any adpcm data size.
 *
 * If adpcm_data_size is 4, then you use create_pcmdata_size4()
 * in place of this functon.
 
 * convert ADPCM to PCM when adpcm data size is 4.
 