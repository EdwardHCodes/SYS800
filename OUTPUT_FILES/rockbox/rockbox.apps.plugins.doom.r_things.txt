 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Refresh of things, i.e. objects represented by sprites.
 *
 *-----------------------------------------------------------------------------#include "lprintf.h" Sprite rotation 0 is facing the viewer,  rotation 1 is one angle turn CLOCKWISE around the axis. This is not the same as the angle,  which increases counter clockwise (protractor). There was a lot of stuff grabbed wrong, so I changed it... proff 11/06/98: Added for high-res constant arrays  used for psprite clipping and initializing clipping INITIALIZATION FUNCTIONS variables used to look up and range check thing_t sprites patches Macroized -- killough 1/25/98  R_InstallSpriteLump Local function for R_InitSprites. the lump should be used for all rotationsjff 4/24/98 if any subbed, rotless the lump is only used for one rotationjff 4/24/98 only change if rot used R_InitSpriteDefs Pass a null terminated list of sprite names (4 chars exactly) to be used. Builds the sprite rotation matrixes to account for horizontally flipped sprites. Will report an error if the lumps are inconsistent. Only called at startup. Sprite lump names are 4 characters for the actor,  a letter for the frame, and a number for the rotation. A sprite that is flippable will have an additional  letter/number appended. The rotation character can be 0 to signify no rotations. 1/25/98, 1/31/98 killough : Rewritten for performance Empirically verified to have excellent hash properties across standard Doom sprites: count the number of sprite names Create hash table based on just the first four letters of each sprite killough 1/31/98 allocate hash table initialize hash table as empty Prepend each sprite to hash chain prepend so that later ones win scan all the lump names for each of the names,  noting the highest frame letter. Fast portable comparison -- killough (using int pointer cast is nonportable): check the frames that were found for completeness killough 1/31/98 no rotations were found for that frame at all only the first rotation is needed must have all 8 frames allocate space for the frames present and copy sprtemp to it free hash table GAME FUNCTIONS killough R_InitSprites Called at program start. killough R_NewVisSprite killough R_DrawMaskedColumn Used for sprites and masked mid textures. Masked means: partly transparent, i.e. stored  in posts/runs of opaque pixels. killough 11/98 calculate unclipped screen coordinates for post killough 3/2/98, 3/27/98: Failsafe against overflow/crash: Drawn by either R_DrawColumn  or (SHADOW) R_DrawFuzzColumn. R_DrawVisSprite  mfloorclip and mceilingclip should also be set. CPhipps - new wad lump handling, *'s to const*'s killough 4/11/98: rearrange and handle translucent sprites mixed with translucent/non-translucenct 2s normals NULL colormap = shadow draw killough 3/14/98 phares killough 4/11/98 killough 3/14/98, 4/11/98 proff 11/06/98: Changed for high-res killough 3/14/98 cph - release lump R_ProjectSprite Generates a vissprite for a thing if it might be visible. killough 3/27/98 killough 3/27/98 transform the origin point thing is behind view plane? too far off the side? decide which patch to use for sprite relative to player choose a different rotation based on player view use single rotation for all views calculate edges of the shape
    * cph 2003/08/1 - fraggle points out that this offset must be flipped if the
    * sprite is flipped; e.g. FreeDoom imp is messed up by this.  off the right side? off the left side killough 4/9/98: clip things which are out of view due to height killough 3/27/98: exclude things totally separated from the viewer, by either water or fake ceilings killough 4/11/98: improve sprite clipping for underwater/fake ceilings only clip things which are in special sectors store information in a vissprite killough 3/27/98: save sector for special clipping later proff 11/06/98: Changed for high-res killough 3/27/98 get light level shadow draw fixed map full bright  // killough 3/20/98 diminished light R_AddSprites During BSP traversal, this adds sprites by sector. killough 9/18/98: add lightlevel as parameter, fixing underwater lighting BSP is traversed by subsector. A sector might have been split into several  subsectors during BSP building. Thus we check whether its already added. Well, now it will be done. Handle all things in sector. R_DrawPSprite decide which patch to use calculate edges of the shape off the right side off the left side store information in a vissprite killough 12/98: fix psprite positioning problem +  FRACUNIT/2  proff 11/06/98: Added for high-res shadow draw fixed color full bright // killough 3/20/98 local light R_DrawPlayerSprites get light level clip to screen bounds add all active psprites R_SortVisSprites Rewritten by Lee Killough to avoid using unnecessary linked lists, and to use faster sorting algorithm. killough 9/2/98: merge sort If we need to allocate more pointers for the vissprites, allocate as many as were allocated for sprites -- killough killough 9/22/98: allocate twice as many better than realloc -- no preserving needed killough 9/22/98: replace qsort with merge sort, since the keys are roughly in order to begin with, due to BSP rendering. R_DrawSprite killough 2/8/98: change to MAX_* Scan drawsegs from end to start for obscuring segs. The first drawseg that has a greater scale is the clip seg. Modified by Lee Killough: (pointer check was originally nonportable and buggy, by going past LEFT end of array):    for (ds=ds_p-1 ; ds >= drawsegs ; ds--)    old buggy code new -- killough determine if the drawseg obscures the sprite does not cover sprite masked mid texture? seg is behind sprite clip this piece of the sprite killough 3/27/98: optimized and made much shorterbottom sil top sil killough 3/27/98: Clip the sprite against deep water and/or fake ceilings. killough 4/9/98: optimize by adding mh killough 4/11/98: improve sprite clipping for underwater/fake ceilings killough 11/98: fix disappearing sprites only things in specially marked sectors clip bottom clip top killough 11/98 clip bottom clip top killough 3/27/98: end special clipping for deep water / fake ceilings all clipping has been performed, so draw the sprite check for unclipped columns R_DrawMasked draw all vissprites back to front   rendered_vissprites = num_vissprite; killough render any remaining masked mid textures Modified by Lee Killough: (pointer check was originally nonportable and buggy, by going past LEFT end of array):    for (ds=ds_p-1 ; ds >= drawsegs ; ds--)    old buggy code new -- killough draw the psprites on top of everything  but does not draw on side views Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Refresh of things, i.e. objects represented by sprites.
 *
 *-----------------------------------------------------------------------------#include "lprintf.h" Sprite rotation 0 is facing the viewer,  rotation 1 is one angle turn CLOCKWISE around the axis. This is not the same as the angle,  which increases counter clockwise (protractor). There was a lot of stuff grabbed wrong, so I changed it... proff 11/06/98: Added for high-res constant arrays  used for psprite clipping and initializing clipping INITIALIZATION FUNCTIONS variables used to look up and range check thing_t sprites patches Macroized -- killough 1/25/98  R_InstallSpriteLump Local function for R_InitSprites. the lump should be used for all rotationsjff 4/24/98 if any subbed, rotless the lump is only used for one rotationjff 4/24/98 only change if rot used R_InitSpriteDefs Pass a null terminated list of sprite names (4 chars exactly) to be used. Builds the sprite rotation matrixes to account for horizontally flipped sprites. Will report an error if the lumps are inconsistent. Only called at startup. Sprite lump names are 4 characters for the actor,  a letter for the frame, and a number for the rotation. A sprite that is flippable will have an additional  letter/number appended. The rotation character can be 0 to signify no rotations. 1/25/98, 1/31/98 killough : Rewritten for performance Empirically verified to have excellent hash properties across standard Doom sprites: count the number of sprite names Create hash table based on just the first four letters of each sprite killough 1/31/98 allocate hash table initialize hash table as empty Prepend each sprite to hash chain prepend so that later ones win scan all the lump names for each of the names,  noting the highest frame letter. Fast portable comparison -- killough (using int pointer cast is nonportable): check the frames that were found for completeness killough 1/31/98 no rotations were found for that frame at all only the first rotation is needed must have all 8 frames allocate space for the frames present and copy sprtemp to it free hash table GAME FUNCTIONS killough R_InitSprites Called at program start. killough R_NewVisSprite killough R_DrawMaskedColumn Used for sprites and masked mid textures. Masked means: partly transparent, i.e. stored  in posts/runs of opaque pixels. killough 11/98 calculate unclipped screen coordinates for post killough 3/2/98, 3/27/98: Failsafe against overflow/crash: Drawn by either R_DrawColumn  or (SHADOW) R_DrawFuzzColumn. R_DrawVisSprite  mfloorclip and mceilingclip should also be set. CPhipps - new wad lump handling, *'s to const*'s killough 4/11/98: rearrange and handle translucent sprites mixed with translucent/non-translucenct 2s normals NULL colormap = shadow draw killough 3/14/98 phares killough 4/11/98 killough 3/14/98, 4/11/98 proff 11/06/98: Changed for high-res killough 3/14/98 cph - release lump R_ProjectSprite Generates a vissprite for a thing if it might be visible. killough 3/27/98 killough 3/27/98 transform the origin point thing is behind view plane? too far off the side? decide which patch to use for sprite relative to player choose a different rotation based on player view use single rotation for all views calculate edges of the shape
    * cph 2003/08/1 - fraggle points out that this offset must be flipped if the
    * sprite is flipped; e.g. FreeDoom imp is messed up by this.  off the right side? off the left side killough 4/9/98: clip things which are out of view due to height killough 3/27/98: exclude things totally separated from the viewer, by either water or fake ceilings killough 4/11/98: improve sprite clipping for underwater/fake ceilings only clip things which are in special sectors store information in a vissprite killough 3/27/98: save sector for special clipping later proff 11/06/98: Changed for high-res killough 3/27/98 get light level shadow draw fixed map full bright  // killough 3/20/98 diminished light R_AddSprites During BSP traversal, this adds sprites by sector. killough 9/18/98: add lightlevel as parameter, fixing underwater lighting BSP is traversed by subsector. A sector might have been split into several  subsectors during BSP building. Thus we check whether its already added. Well, now it will be done. Handle all things in sector. R_DrawPSprite decide which patch to use calculate edges of the shape off the right side off the left side store information in a vissprite killough 12/98: fix psprite positioning problem +  FRACUNIT/2  proff 11/06/98: Added for high-res shadow draw fixed color full bright // killough 3/20/98 local light R_DrawPlayerSprites get light level clip to screen bounds add all active psprites R_SortVisSprites Rewritten by Lee Killough to avoid using unnecessary linked lists, and to use faster sorting algorithm. killough 9/2/98: merge sort If we need to allocate more pointers for the vissprites, allocate as many as were allocated for sprites -- killough killough 9/22/98: allocate twice as many better than realloc -- no preserving needed killough 9/22/98: replace qsort with merge sort, since the keys are roughly in order to begin with, due to BSP rendering. R_DrawSprite killough 2/8/98: change to MAX_* Scan drawsegs from end to start for obscuring segs. The first drawseg that has a greater scale is the clip seg. Modified by Lee Killough: (pointer check was originally nonportable and buggy, by going past LEFT end of array):    for (ds=ds_p-1 ; ds >= drawsegs ; ds--)    old buggy code new -- killough determine if the drawseg obscures the sprite does not cover sprite masked mid texture? seg is behind sprite clip this piece of the sprite killough 3/27/98: optimized and made much shorterbottom sil top sil killough 3/27/98: Clip the sprite against deep water and/or fake ceilings. killough 4/9/98: optimize by adding mh killough 4/11/98: improve sprite clipping for underwater/fake ceilings killough 11/98: fix disappearing sprites only things in specially marked sectors clip bottom clip top killough 11/98 clip bottom clip top killough 3/27/98: end special clipping for deep water / fake ceilings all clipping has been performed, so draw the sprite check for unclipped columns R_DrawMasked draw all vissprites back to front   rendered_vissprites = num_vissprite; killough render any remaining masked mid textures Modified by Lee Killough: (pointer check was originally nonportable and buggy, by going past LEFT end of array):    for (ds=ds_p-1 ; ds >= drawsegs ; ds--)    old buggy code new -- killough draw the psprites on top of everything  but does not draw on side views Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  Refresh of things, i.e. objects represented by sprites.
 *
 *-----------------------------------------------------------------------------#include "lprintf.h" Sprite rotation 0 is facing the viewer,  rotation 1 is one angle turn CLOCKWISE around the axis. This is not the same as the angle,  which increases counter clockwise (protractor). There was a lot of stuff grabbed wrong, so I changed it... proff 11/06/98: Added for high-res constant arrays  used for psprite clipping and initializing clipping INITIALIZATION FUNCTIONS variables used to look up and range check thing_t sprites patches Macroized -- killough 1/25/98  R_InstallSpriteLump Local function for R_InitSprites. the lump should be used for all rotationsjff 4/24/98 if any subbed, rotless the lump is only used for one rotationjff 4/24/98 only change if rot used R_InitSpriteDefs Pass a null terminated list of sprite names (4 chars exactly) to be used. Builds the sprite rotation matrixes to account for horizontally flipped sprites. Will report an error if the lumps are inconsistent. Only called at startup. Sprite lump names are 4 characters for the actor,  a letter for the frame, and a number for the rotation. A sprite that is flippable will have an additional  letter/number appended. The rotation character can be 0 to signify no rotations. 1/25/98, 1/31/98 killough : Rewritten for performance Empirically verified to have excellent hash properties across standard Doom sprites: count the number of sprite names Create hash table based on just the first four letters of each sprite killough 1/31/98 allocate hash table initialize hash table as empty Prepend each sprite to hash chain prepend so that later ones win scan all the lump names for each of the names,  noting the highest frame letter. Fast portable comparison -- killough (using int pointer cast is nonportable): check the frames that were found for completeness killough 1/31/98 no rotations were found for that frame at all only the first rotation is needed must have all 8 frames allocate space for the frames present and copy sprtemp to it free hash table GAME FUNCTIONS killough R_InitSprites Called at program start. killough R_NewVisSprite killough R_DrawMaskedColumn Used for sprites and masked mid textures. Masked means: partly transparent, i.e. stored  in posts/runs of opaque pixels. killough 11/98 calculate unclipped screen coordinates for post killough 3/2/98, 3/27/98: Failsafe against overflow/crash: Drawn by either R_DrawColumn  or (SHADOW) R_DrawFuzzColumn. R_DrawVisSprite  mfloorclip and mceilingclip should also be set. CPhipps - new wad lump handling, *'s to const*'s killough 4/11/98: rearrange and handle translucent sprites mixed with translucent/non-translucenct 2s normals NULL colormap = shadow draw killough 3/14/98 phares killough 4/11/98 killough 3/14/98, 4/11/98 proff 11/06/98: Changed for high-res killough 3/14/98 cph - release lump R_ProjectSprite Generates a vissprite for a thing if it might be visible. killough 3/27/98 killough 3/27/98 transform the origin point thing is behind view plane? too far off the side? decide which patch to use for sprite relative to player choose a different rotation based on player view use single rotation for all views calculate edges of the shape
    * cph 2003/08/1 - fraggle points out that this offset must be flipped if the
    * sprite is flipped; e.g. FreeDoom imp is messed up by this.  off the right side? off the left side killough 4/9/98: clip things which are out of view due to height killough 3/27/98: exclude things totally separated from the viewer, by either water or fake ceilings killough 4/11/98: improve sprite clipping for underwater/fake ceilings only clip things which are in special sectors store information in a vissprite killough 3/27/98: save sector for special clipping later proff 11/06/98: Changed for high-res killough 3/27/98 get light level shadow draw fixed map full bright  // killough 3/20/98 diminished light R_AddSprites During BSP traversal, this adds sprites by sector. killough 9/18/98: add lightlevel as parameter, fixing underwater lighting BSP is traversed by subsector. A sector might have been split into several  subsectors during BSP building. Thus we check whether its already added. Well, now it will be done. Handle all things in sector. R_DrawPSprite decide which patch to use calculate edges of the shape off the right side off the left side store information in a vissprite killough 12/98: fix psprite positioning problem +  FRACUNIT/2  proff 11/06/98: Added for high-res shadow draw fixed color full bright // killough 3/20/98 local light R_DrawPlayerSprites get light level clip to screen bounds add all active psprites R_SortVisSprites Rewritten by Lee Killough to avoid using unnecessary linked lists, and to use faster sorting algorithm. killough 9/2/98: merge sort If we need to allocate more pointers for the vissprites, allocate as many as were allocated for sprites -- killough killough 9/22/98: allocate twice as many better than realloc -- no preserving needed killough 9/22/98: replace qsort with merge sort, since the keys are roughly in order to begin with, due to BSP rendering. R_DrawSprite killough 2/8/98: change to MAX_* Scan drawsegs from end to start for obscuring segs. The first drawseg that has a greater scale is the clip seg. Modified by Lee Killough: (pointer check was originally nonportable and buggy, by going past LEFT end of array):    for (ds=ds_p-1 ; ds >= drawsegs ; ds--)    old buggy code new -- killough determine if the drawseg obscures the sprite does not cover sprite masked mid texture? seg is behind sprite clip this piece of the sprite killough 3/27/98: optimized and made much shorterbottom sil top sil killough 3/27/98: Clip the sprite against deep water and/or fake ceilings. killough 4/9/98: optimize by adding mh killough 4/11/98: improve sprite clipping for underwater/fake ceilings killough 11/98: fix disappearing sprites only things in specially marked sectors clip bottom clip top killough 11/98 clip bottom clip top killough 3/27/98: end special clipping for deep water / fake ceilings all clipping has been performed, so draw the sprite check for unclipped columns R_DrawMasked draw all vissprites back to front   rendered_vissprites = num_vissprite; killough render any remaining masked mid textures Modified by Lee Killough: (pointer check was originally nonportable and buggy, by going past LEFT end of array):    for (ds=ds_p-1 ; ds >= drawsegs ; ds--)    old buggy code new -- killough draw the psprites on top of everything  but does not draw on side views