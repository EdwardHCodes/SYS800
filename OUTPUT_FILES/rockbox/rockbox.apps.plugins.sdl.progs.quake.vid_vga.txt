
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 vid_vga.c: VGA-specific DOS video stuff TODO: proper handling of page-swap failure
================
VGA_BeginDirectRect
================
 select the correct plane for reading and writing
================
VGA_EndDirectRect
================
 select the correct plane for writing
================
VGA_Init
================
 link together all the VGA modes add the VGA modes at the start of the mode list
================
VGA_WaitVsync
================

================
VGA_ClearVideoMem
================
 enable all planes for writing
================
VGA_FreeAndAllocVidbuffer
================
 alloc an extra line in case we want to wrap, and allocate the z-buffer just allocate the z-buffer see if there's enough memory, allowing for the normal mode 0x13 pixel, z, and surface buffers so no further accesses to the buffer are  attempted, particularly when clearing not enough memory for mode
================
VGA_CheckAdequateMem
================
 alloc an extra line in case we want to wrap, and allocate the z-buffer see if there's enough memory, allowing for the normal mode 0x13 pixel, z, and surface buffers not enough memory for mode
================
VGA_InitMode
================
 memory alloc failed mode 0x13 is the base for all the Mode X-class mode sets set additional registers as needed
================
VGA_SetPalette
================

================
VGA_SwapBuffersCopy
================
 TODO: can write a dword at a time TODO: put in ASM TODO: copy only specified rectangles TODO: copy only specified rectangles
================
VGA_SwapBuffers
================

Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 vid_vga.c: VGA-specific DOS video stuff TODO: proper handling of page-swap failure
================
VGA_BeginDirectRect
================
 select the correct plane for reading and writing
================
VGA_EndDirectRect
================
 select the correct plane for writing
================
VGA_Init
================
 link together all the VGA modes add the VGA modes at the start of the mode list
================
VGA_WaitVsync
================

================
VGA_ClearVideoMem
================
 enable all planes for writing
================
VGA_FreeAndAllocVidbuffer
================
 alloc an extra line in case we want to wrap, and allocate the z-buffer just allocate the z-buffer see if there's enough memory, allowing for the normal mode 0x13 pixel, z, and surface buffers so no further accesses to the buffer are  attempted, particularly when clearing not enough memory for mode
================
VGA_CheckAdequateMem
================
 alloc an extra line in case we want to wrap, and allocate the z-buffer see if there's enough memory, allowing for the normal mode 0x13 pixel, z, and surface buffers not enough memory for mode
================
VGA_InitMode
================
 memory alloc failed mode 0x13 is the base for all the Mode X-class mode sets set additional registers as needed
================
VGA_SetPalette
================

================
VGA_SwapBuffersCopy
================
 TODO: can write a dword at a time TODO: put in ASM TODO: copy only specified rectangles TODO: copy only specified rectangles
================
VGA_SwapBuffers
================

Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 vid_vga.c: VGA-specific DOS video stuff TODO: proper handling of page-swap failure
================
VGA_BeginDirectRect
================
 select the correct plane for reading and writing
================
VGA_EndDirectRect
================
 select the correct plane for writing
================
VGA_Init
================
 link together all the VGA modes add the VGA modes at the start of the mode list
================
VGA_WaitVsync
================

================
VGA_ClearVideoMem
================
 enable all planes for writing
================
VGA_FreeAndAllocVidbuffer
================
 alloc an extra line in case we want to wrap, and allocate the z-buffer just allocate the z-buffer see if there's enough memory, allowing for the normal mode 0x13 pixel, z, and surface buffers so no further accesses to the buffer are  attempted, particularly when clearing not enough memory for mode
================
VGA_CheckAdequateMem
================
 alloc an extra line in case we want to wrap, and allocate the z-buffer see if there's enough memory, allowing for the normal mode 0x13 pixel, z, and surface buffers not enough memory for mode
================
VGA_InitMode
================
 memory alloc failed mode 0x13 is the base for all the Mode X-class mode sets set additional registers as needed
================
VGA_SetPalette
================

================
VGA_SwapBuffersCopy
================
 TODO: can write a dword at a time TODO: put in ASM TODO: copy only specified rectangles TODO: copy only specified rectangles
================
VGA_SwapBuffers
================
