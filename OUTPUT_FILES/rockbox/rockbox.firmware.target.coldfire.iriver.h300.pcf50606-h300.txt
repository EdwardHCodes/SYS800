**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Used by the bootloader to find out what caused the device to start  These voltages were determined by measuring the output of the PCF50606
   on a running H300, and verified by disassembling the original firmware  IOREGC  = 2.9V, ON in all states   D1REGC  = 2.4V, ON in all states   D2REGC  = 3.3V, OFF in all states  D3REGC  = 2.5V, ON in all states   LPREGC1 = 2.4V, ON in all states   inital data is interrupt masks  unmask ACDREM, ACDINS   make sure GPI6 interrupt is off before unmasking anything  INT38 - Priority 0 (Off)  unmask the PMU interrupts we want to service  clear INT1-3 as these are left set after standby  Set to read pcf50606 INT but keep GPI6 off until init completes  GPI6 H-L  clear pending GPI6 interrupts first or it may miss the first
       H-L transition  INT38 - Priority 3  enables/disables USB charging
 * ATTENTION: make sure to set the irq level
 *   to highest before calling this function!  USB charging is controlled by GPOOD0:
       High-Z: Charge enable
       Pulled down: Charge disable
     TODO: read the state of the GPOOD2 register...  initialize pmu interrupts but don't service them yet  Wake on USB and charger insertion  USB and ON key debounce: 14ms  Disable the unused MBC module  Disable USB charging atm.  Backlight PWM = 512Hz 50/50  PWM output on GPOOD1  Accessory detect: ACDAPE=1, THRSHLD=2.20V  allow GPI6 interrupts from PMU now  PMU interrupt  0 = INT1, 1 = INT2, 2 = INT3  Clear pending GPI6 interrupts  clear pending interrupts from pcf50606  ACDINS/ACDREM  Check if the button driver should actually scan main buttons or not
           - bias towards "yes" out of paranoia. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Used by the bootloader to find out what caused the device to start  These voltages were determined by measuring the output of the PCF50606
   on a running H300, and verified by disassembling the original firmware  IOREGC  = 2.9V, ON in all states   D1REGC  = 2.4V, ON in all states   D2REGC  = 3.3V, OFF in all states  D3REGC  = 2.5V, ON in all states   LPREGC1 = 2.4V, ON in all states   inital data is interrupt masks  unmask ACDREM, ACDINS   make sure GPI6 interrupt is off before unmasking anything  INT38 - Priority 0 (Off)  unmask the PMU interrupts we want to service  clear INT1-3 as these are left set after standby  Set to read pcf50606 INT but keep GPI6 off until init completes  GPI6 H-L  clear pending GPI6 interrupts first or it may miss the first
       H-L transition  INT38 - Priority 3  enables/disables USB charging
 * ATTENTION: make sure to set the irq level
 *   to highest before calling this function!  USB charging is controlled by GPOOD0:
       High-Z: Charge enable
       Pulled down: Charge disable
     TODO: read the state of the GPOOD2 register...  initialize pmu interrupts but don't service them yet  Wake on USB and charger insertion  USB and ON key debounce: 14ms  Disable the unused MBC module  Disable USB charging atm.  Backlight PWM = 512Hz 50/50  PWM output on GPOOD1  Accessory detect: ACDAPE=1, THRSHLD=2.20V  allow GPI6 interrupts from PMU now  PMU interrupt  0 = INT1, 1 = INT2, 2 = INT3  Clear pending GPI6 interrupts  clear pending interrupts from pcf50606  ACDINS/ACDREM  Check if the button driver should actually scan main buttons or not
           - bias towards "yes" out of paranoia. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Used by the bootloader to find out what caused the device to start  These voltages were determined by measuring the output of the PCF50606
   on a running H300, and verified by disassembling the original firmware  IOREGC  = 2.9V, ON in all states   D1REGC  = 2.4V, ON in all states   D2REGC  = 3.3V, OFF in all states  D3REGC  = 2.5V, ON in all states   LPREGC1 = 2.4V, ON in all states   inital data is interrupt masks  unmask ACDREM, ACDINS   make sure GPI6 interrupt is off before unmasking anything  INT38 - Priority 0 (Off)  unmask the PMU interrupts we want to service  clear INT1-3 as these are left set after standby  Set to read pcf50606 INT but keep GPI6 off until init completes  GPI6 H-L  clear pending GPI6 interrupts first or it may miss the first
       H-L transition  INT38 - Priority 3  enables/disables USB charging
 * ATTENTION: make sure to set the irq level
 *   to highest before calling this function!  USB charging is controlled by GPOOD0:
       High-Z: Charge enable
       Pulled down: Charge disable
     TODO: read the state of the GPOOD2 register...  initialize pmu interrupts but don't service them yet  Wake on USB and charger insertion  USB and ON key debounce: 14ms  Disable the unused MBC module  Disable USB charging atm.  Backlight PWM = 512Hz 50/50  PWM output on GPOOD1  Accessory detect: ACDAPE=1, THRSHLD=2.20V  allow GPI6 interrupts from PMU now  PMU interrupt  0 = INT1, 1 = INT2, 2 = INT3  Clear pending GPI6 interrupts  clear pending interrupts from pcf50606  ACDINS/ACDREM  Check if the button driver should actually scan main buttons or not
           - bias towards "yes" out of paranoia. 