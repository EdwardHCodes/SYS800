**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Maximum allowed firmware image size. 10MB is more than enough  From common.c  return true if charger is present  returns true if end of charge condition is reached  returns true if startup is due to RTC alarm  Reset the cookie for the crt0 crash check  if AC power do nothing  We need to gracefully spin down the disk to prevent clicks.  Make sure ATA has been initialized.  And put the disk into sleep immediately.  Backlight OFF  Print the battery voltage (and a warning message).  This function initializes ATA driver, mounts partitions,
 * loads rockbox image from disk to ram and finally
 * jumps to entry point in ram
  boost to speedup rb image loading  This function prints small bootmenu where
 * you can choose to boot OF, rockbox or just shutdown
  backbone of menu  run the loader  skip lines  content of menu and keys handling  Draw the menu.  move below header  timeout  messages  helper variable for messages  hold status variables
     * this two must have different
     * values in the begining
      this is default mode after power_init()  setup GPIOs related to power functions  run at 45MHz  IRQs are needed by button driver  setup font system  buttons reading init  lowlevel init only  Handle wakeup event. Possibilities are:
     * RTC alarm (HD300)
     * ON button (PLAY or RC_PLAY on HD200)
     * USB insert
     * AC charger plug
      check hold status  backlight handling
         * change only on hold toggle  read buttons  start regardles of buttons state  hold is handled in button driver  AC plug in  reset charging circuit  USB unplug  end of charge condition  put LTC1733 into shutdown mode  switch to low current mode  reset charging circuit  AC plug in while in USB mode  reset charger circuit  USB plug in  init USB  display blinking USB indicator  USB unplug  disable USB  spurious wakeup ? These functions are present in the firmware library, but we reimplement
   them here because the originals do a lot more than we want **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Maximum allowed firmware image size. 10MB is more than enough  From common.c  return true if charger is present  returns true if end of charge condition is reached  returns true if startup is due to RTC alarm  Reset the cookie for the crt0 crash check  if AC power do nothing  We need to gracefully spin down the disk to prevent clicks.  Make sure ATA has been initialized.  And put the disk into sleep immediately.  Backlight OFF  Print the battery voltage (and a warning message).  This function initializes ATA driver, mounts partitions,
 * loads rockbox image from disk to ram and finally
 * jumps to entry point in ram
  boost to speedup rb image loading  This function prints small bootmenu where
 * you can choose to boot OF, rockbox or just shutdown
  backbone of menu  run the loader  skip lines  content of menu and keys handling  Draw the menu.  move below header  timeout  messages  helper variable for messages  hold status variables
     * this two must have different
     * values in the begining
      this is default mode after power_init()  setup GPIOs related to power functions  run at 45MHz  IRQs are needed by button driver  setup font system  buttons reading init  lowlevel init only  Handle wakeup event. Possibilities are:
     * RTC alarm (HD300)
     * ON button (PLAY or RC_PLAY on HD200)
     * USB insert
     * AC charger plug
      check hold status  backlight handling
         * change only on hold toggle  read buttons  start regardles of buttons state  hold is handled in button driver  AC plug in  reset charging circuit  USB unplug  end of charge condition  put LTC1733 into shutdown mode  switch to low current mode  reset charging circuit  AC plug in while in USB mode  reset charger circuit  USB plug in  init USB  display blinking USB indicator  USB unplug  disable USB  spurious wakeup ? These functions are present in the firmware library, but we reimplement
   them here because the originals do a lot more than we want **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Maximum allowed firmware image size. 10MB is more than enough  From common.c  return true if charger is present  returns true if end of charge condition is reached  returns true if startup is due to RTC alarm  Reset the cookie for the crt0 crash check  if AC power do nothing  We need to gracefully spin down the disk to prevent clicks.  Make sure ATA has been initialized.  And put the disk into sleep immediately.  Backlight OFF  Print the battery voltage (and a warning message).  This function initializes ATA driver, mounts partitions,
 * loads rockbox image from disk to ram and finally
 * jumps to entry point in ram
  boost to speedup rb image loading  This function prints small bootmenu where
 * you can choose to boot OF, rockbox or just shutdown
  backbone of menu  run the loader  skip lines  content of menu and keys handling  Draw the menu.  move below header  timeout  messages  helper variable for messages  hold status variables
     * this two must have different
     * values in the begining
      this is default mode after power_init()  setup GPIOs related to power functions  run at 45MHz  IRQs are needed by button driver  setup font system  buttons reading init  lowlevel init only  Handle wakeup event. Possibilities are:
     * RTC alarm (HD300)
     * ON button (PLAY or RC_PLAY on HD200)
     * USB insert
     * AC charger plug
      check hold status  backlight handling
         * change only on hold toggle  read buttons  start regardles of buttons state  hold is handled in button driver  AC plug in  reset charging circuit  USB unplug  end of charge condition  put LTC1733 into shutdown mode  switch to low current mode  reset charging circuit  AC plug in while in USB mode  reset charger circuit  USB plug in  init USB  display blinking USB indicator  USB unplug  disable USB  spurious wakeup ? These functions are present in the firmware library, but we reimplement
   them here because the originals do a lot more than we want 