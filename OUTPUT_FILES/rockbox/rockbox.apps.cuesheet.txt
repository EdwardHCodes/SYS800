**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Nicolas Pennequin, Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** overflow  DEBUGF("look for cue file\n");  parse cuesheet "cue_file" and store the information in "cue"  Look for a Unicode BOM  Initialization  terminate the string at the newline  chomp the trailing 0 after the newline  TITLE  PERFORMER  SONGWRITER  FILE  If just a filename, add path information from cuesheet path  If some songs don't have performer info, we copy the cuesheet performer  takes care of seeking to a track in a playlist
 * returns false if audio  isn't playing  returns the index of the track currently being played
   and updates the information about the current track.  callback that gives list item titles for the cuesheet browser  give indication of truncation  check that this cue is the same one that would be found by
                   a search from playback  if embedded  ACTION_STD_OK  skips backwards or forward in the current cuesheet
 * the return value indicates whether we're still in a cusheet after skipping
 * it also returns false if we weren't in a cuesheet.
 * direction should be 1 or -1.
  we want to get out of the cuesheet  If skipping forward, skip to next cuesheet segment. If skipping
            backward before DEFAULT_SKIP_TRESH milliseconds have elapsed, skip
            to previous cuesheet segment. If skipping backward after
            DEFAULT_SKIP_TRESH seconds have elapsed, skip to the start of the
            current cuesheet segment  draw the cuesheet markers for a track of length "tracklen",
   between (x,y) and (x+w,y)  duration in seconds  Convert seconds prior to multiplication to avoid overflow. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Nicolas Pennequin, Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** overflow  DEBUGF("look for cue file\n");  parse cuesheet "cue_file" and store the information in "cue"  Look for a Unicode BOM  Initialization  terminate the string at the newline  chomp the trailing 0 after the newline  TITLE  PERFORMER  SONGWRITER  FILE  If just a filename, add path information from cuesheet path  If some songs don't have performer info, we copy the cuesheet performer  takes care of seeking to a track in a playlist
 * returns false if audio  isn't playing  returns the index of the track currently being played
   and updates the information about the current track.  callback that gives list item titles for the cuesheet browser  give indication of truncation  check that this cue is the same one that would be found by
                   a search from playback  if embedded  ACTION_STD_OK  skips backwards or forward in the current cuesheet
 * the return value indicates whether we're still in a cusheet after skipping
 * it also returns false if we weren't in a cuesheet.
 * direction should be 1 or -1.
  we want to get out of the cuesheet  If skipping forward, skip to next cuesheet segment. If skipping
            backward before DEFAULT_SKIP_TRESH milliseconds have elapsed, skip
            to previous cuesheet segment. If skipping backward after
            DEFAULT_SKIP_TRESH seconds have elapsed, skip to the start of the
            current cuesheet segment  draw the cuesheet markers for a track of length "tracklen",
   between (x,y) and (x+w,y)  duration in seconds  Convert seconds prior to multiplication to avoid overflow. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Nicolas Pennequin, Jonathan Gordon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** overflow  DEBUGF("look for cue file\n");  parse cuesheet "cue_file" and store the information in "cue"  Look for a Unicode BOM  Initialization  terminate the string at the newline  chomp the trailing 0 after the newline  TITLE  PERFORMER  SONGWRITER  FILE  If just a filename, add path information from cuesheet path  If some songs don't have performer info, we copy the cuesheet performer  takes care of seeking to a track in a playlist
 * returns false if audio  isn't playing  returns the index of the track currently being played
   and updates the information about the current track.  callback that gives list item titles for the cuesheet browser  give indication of truncation  check that this cue is the same one that would be found by
                   a search from playback  if embedded  ACTION_STD_OK  skips backwards or forward in the current cuesheet
 * the return value indicates whether we're still in a cusheet after skipping
 * it also returns false if we weren't in a cuesheet.
 * direction should be 1 or -1.
  we want to get out of the cuesheet  If skipping forward, skip to next cuesheet segment. If skipping
            backward before DEFAULT_SKIP_TRESH milliseconds have elapsed, skip
            to previous cuesheet segment. If skipping backward after
            DEFAULT_SKIP_TRESH seconds have elapsed, skip to the start of the
            current cuesheet segment  draw the cuesheet markers for a track of length "tracklen",
   between (x,y) and (x+w,y)  duration in seconds  Convert seconds prior to multiplication to avoid overflow. 