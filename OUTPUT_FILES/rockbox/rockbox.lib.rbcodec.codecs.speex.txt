*************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2006 Frederik M.J. Vestre
 * Based on vorbis.c codec interface:
 * Copyright (C) 2002 Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ************************************************************************** Room for one stereo frame of max size, 2*640 2kb The read/seek functions track absolute position within the stream  skipped n bytes  send more paramedics  got a page.  Return the offset at the page beginning,
                   advance the internal offset past the page end  too early wanted offset found Yeay!LOGF("GnPagefound:%d,%d,%d,%d\n",ret,
                           lastgranule,wantedpos,avgpagelen);too late, seek moreif (spx_ogg_page_granulepos(&og)<wantedpos)too earlythis should not be possibleLOGF("Seek:get_earlier_page:Offset:not_cached by granule:"\"%d,%d,%d,%d,%d\n",*curoffset,end,begin,wantedpos,curpos); TODO: Someone may want to try to implement seek to packet, 
             instead of just to page (should be more accurate, not be any 
             faster)  if seeking for more that 10sec,
           headersize is known & more than 10kb is played,
           try to guess a place to seek from the number of
           bytes playe for this position, this works best when 
           the bitrate is relativly constant.
         spx_int64_t toffset=curoffset; could not find new page,use old offset stream_lengthstream_length which way do we want to seek?  backwards  forwards wanted offset found Yeay! this is the codec entry point  Nothing to do  this is called for each file to process  rockbox: comment 'set but unused' variables
    int page_nb_packets;
     Ogg handling still uses mallocs, so reset the malloc buffer per track seek (seeks to the page before the position) Get the ogg buffer for writingread error Loop for all complete pages we got (most likely only one)  Add page to the bitstream  page_nb_packets = spx_ogg_page_packets(&og);  Extract all available packets  If first packet, process as Speex header  Speex header in its own page, add the whole page
                       headersize  add packet to headersize  Ignore extra headers  End of stream condition  Set Speex bitstream to point to Ogg packet  Decode frame  2 bytes/sample  Clean things up for the next track *************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2006 Frederik M.J. Vestre
 * Based on vorbis.c codec interface:
 * Copyright (C) 2002 Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ************************************************************************** Room for one stereo frame of max size, 2*640 2kb The read/seek functions track absolute position within the stream  skipped n bytes  send more paramedics  got a page.  Return the offset at the page beginning,
                   advance the internal offset past the page end  too early wanted offset found Yeay!LOGF("GnPagefound:%d,%d,%d,%d\n",ret,
                           lastgranule,wantedpos,avgpagelen);too late, seek moreif (spx_ogg_page_granulepos(&og)<wantedpos)too earlythis should not be possibleLOGF("Seek:get_earlier_page:Offset:not_cached by granule:"\"%d,%d,%d,%d,%d\n",*curoffset,end,begin,wantedpos,curpos); TODO: Someone may want to try to implement seek to packet, 
             instead of just to page (should be more accurate, not be any 
             faster)  if seeking for more that 10sec,
           headersize is known & more than 10kb is played,
           try to guess a place to seek from the number of
           bytes playe for this position, this works best when 
           the bitrate is relativly constant.
         spx_int64_t toffset=curoffset; could not find new page,use old offset stream_lengthstream_length which way do we want to seek?  backwards  forwards wanted offset found Yeay! this is the codec entry point  Nothing to do  this is called for each file to process  rockbox: comment 'set but unused' variables
    int page_nb_packets;
     Ogg handling still uses mallocs, so reset the malloc buffer per track seek (seeks to the page before the position) Get the ogg buffer for writingread error Loop for all complete pages we got (most likely only one)  Add page to the bitstream  page_nb_packets = spx_ogg_page_packets(&og);  Extract all available packets  If first packet, process as Speex header  Speex header in its own page, add the whole page
                       headersize  add packet to headersize  Ignore extra headers  End of stream condition  Set Speex bitstream to point to Ogg packet  Decode frame  2 bytes/sample  Clean things up for the next track *************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2006 Frederik M.J. Vestre
 * Based on vorbis.c codec interface:
 * Copyright (C) 2002 Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ************************************************************************** Room for one stereo frame of max size, 2*640 2kb The read/seek functions track absolute position within the stream  skipped n bytes  send more paramedics  got a page.  Return the offset at the page beginning,
                   advance the internal offset past the page end  too early wanted offset found Yeay!LOGF("GnPagefound:%d,%d,%d,%d\n",ret,
                           lastgranule,wantedpos,avgpagelen);too late, seek moreif (spx_ogg_page_granulepos(&og)<wantedpos)too earlythis should not be possibleLOGF("Seek:get_earlier_page:Offset:not_cached by granule:"\"%d,%d,%d,%d,%d\n",*curoffset,end,begin,wantedpos,curpos); TODO: Someone may want to try to implement seek to packet, 
             instead of just to page (should be more accurate, not be any 
             faster)  if seeking for more that 10sec,
           headersize is known & more than 10kb is played,
           try to guess a place to seek from the number of
           bytes playe for this position, this works best when 
           the bitrate is relativly constant.
         spx_int64_t toffset=curoffset; could not find new page,use old offset stream_lengthstream_length which way do we want to seek?  backwards  forwards wanted offset found Yeay! this is the codec entry point  Nothing to do  this is called for each file to process  rockbox: comment 'set but unused' variables
    int page_nb_packets;
     Ogg handling still uses mallocs, so reset the malloc buffer per track seek (seeks to the page before the position) Get the ogg buffer for writingread error Loop for all complete pages we got (most likely only one)  Add page to the bitstream  page_nb_packets = spx_ogg_page_packets(&og);  Extract all available packets  If first packet, process as Speex header  Speex header in its own page, add the whole page
                       headersize  add packet to headersize  Ignore extra headers  End of stream condition  Set Speex bitstream to point to Ogg packet  Decode frame  2 bytes/sample  Clean things up for the next track 