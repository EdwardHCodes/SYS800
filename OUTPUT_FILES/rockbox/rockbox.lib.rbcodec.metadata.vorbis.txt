**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Define LOGF_ENABLE to enable logf output in this file #define LOGF_ENABLE Read an Ogg page header. file->packet_remaining is set to the size of the
 * first packet on the page; file->packet_ended is set to true if the packet
 * ended on the current page. Returns true if the page header was
 * successfully read.
  Size of page header without segment table  Skip pattern (4), version (1), flags (1), granule position (8),
     * serial (4), pageno (4), checksum (4)
      Read segment table for the first packet  Skip remainder of the table  Read (up to) buffer_size of data from the file. If buffer is NULL, just
 * skip ahead buffer_size bytes (like lseek). Returns number of bytes read,
 * 0 if there is no more data to read (in the packet or the file), < 0 if a
 * read error occurred.
  Read an int32 from file. Returns false if a read error occurred.
  Read a string from the file. Read up to buffer_size bytes, or, if eos
 * != -1, until the eos character is found (eos is not stored in buf,
 * unless it is nil). Writes up to buffer_size chars to buf, always
 * terminating with a nil. Returns number of chars read or < 0 if a read
 * error occurred.
 *
 * Unfortunately this is a slightly modified copy of read_string() in
 * metadata_common.c...
  No point in reading any more, skip remaining data  Init struct file for reading from fd. type is the AFMT_* codec type of
 * the file, and determines if Ogg pages are to be read. remaining is the
 * max amount to read if codec type is FLAC; it is ignored otherwise.
 * Returns true if the file was successfully initialized.
  Read packet header (type and id string)  The first byte of a packet is the packet type; comment packets
         * are type 3.
          Read comment header  Should be equal to "OpusTags"  Read the items in a Vorbis comment packet. For Ogg files, the file must
 * be located on a page start, for other files, the beginning of the comment
 * data (i.e., the vendor string length). Returns total size of the
 * comments, or 0 if there was a read error.
  Skip vendor string  Is it an embedded cuesheet?  Skip to the end of the block (needed by FLAC) **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Define LOGF_ENABLE to enable logf output in this file #define LOGF_ENABLE Read an Ogg page header. file->packet_remaining is set to the size of the
 * first packet on the page; file->packet_ended is set to true if the packet
 * ended on the current page. Returns true if the page header was
 * successfully read.
  Size of page header without segment table  Skip pattern (4), version (1), flags (1), granule position (8),
     * serial (4), pageno (4), checksum (4)
      Read segment table for the first packet  Skip remainder of the table  Read (up to) buffer_size of data from the file. If buffer is NULL, just
 * skip ahead buffer_size bytes (like lseek). Returns number of bytes read,
 * 0 if there is no more data to read (in the packet or the file), < 0 if a
 * read error occurred.
  Read an int32 from file. Returns false if a read error occurred.
  Read a string from the file. Read up to buffer_size bytes, or, if eos
 * != -1, until the eos character is found (eos is not stored in buf,
 * unless it is nil). Writes up to buffer_size chars to buf, always
 * terminating with a nil. Returns number of chars read or < 0 if a read
 * error occurred.
 *
 * Unfortunately this is a slightly modified copy of read_string() in
 * metadata_common.c...
  No point in reading any more, skip remaining data  Init struct file for reading from fd. type is the AFMT_* codec type of
 * the file, and determines if Ogg pages are to be read. remaining is the
 * max amount to read if codec type is FLAC; it is ignored otherwise.
 * Returns true if the file was successfully initialized.
  Read packet header (type and id string)  The first byte of a packet is the packet type; comment packets
         * are type 3.
          Read comment header  Should be equal to "OpusTags"  Read the items in a Vorbis comment packet. For Ogg files, the file must
 * be located on a page start, for other files, the beginning of the comment
 * data (i.e., the vendor string length). Returns total size of the
 * comments, or 0 if there was a read error.
  Skip vendor string  Is it an embedded cuesheet?  Skip to the end of the block (needed by FLAC) **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Define LOGF_ENABLE to enable logf output in this file #define LOGF_ENABLE Read an Ogg page header. file->packet_remaining is set to the size of the
 * first packet on the page; file->packet_ended is set to true if the packet
 * ended on the current page. Returns true if the page header was
 * successfully read.
  Size of page header without segment table  Skip pattern (4), version (1), flags (1), granule position (8),
     * serial (4), pageno (4), checksum (4)
      Read segment table for the first packet  Skip remainder of the table  Read (up to) buffer_size of data from the file. If buffer is NULL, just
 * skip ahead buffer_size bytes (like lseek). Returns number of bytes read,
 * 0 if there is no more data to read (in the packet or the file), < 0 if a
 * read error occurred.
  Read an int32 from file. Returns false if a read error occurred.
  Read a string from the file. Read up to buffer_size bytes, or, if eos
 * != -1, until the eos character is found (eos is not stored in buf,
 * unless it is nil). Writes up to buffer_size chars to buf, always
 * terminating with a nil. Returns number of chars read or < 0 if a read
 * error occurred.
 *
 * Unfortunately this is a slightly modified copy of read_string() in
 * metadata_common.c...
  No point in reading any more, skip remaining data  Init struct file for reading from fd. type is the AFMT_* codec type of
 * the file, and determines if Ogg pages are to be read. remaining is the
 * max amount to read if codec type is FLAC; it is ignored otherwise.
 * Returns true if the file was successfully initialized.
  Read packet header (type and id string)  The first byte of a packet is the packet type; comment packets
         * are type 3.
          Read comment header  Should be equal to "OpusTags"  Read the items in a Vorbis comment packet. For Ogg files, the file must
 * be located on a page start, for other files, the beginning of the comment
 * data (i.e., the vendor string length). Returns total size of the
 * comments, or 0 if there was a read error.
  Skip vendor string  Is it an embedded cuesheet?  Skip to the end of the block (needed by FLAC) 