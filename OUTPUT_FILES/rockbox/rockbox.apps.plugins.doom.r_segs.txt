 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      All the clipping: columns, horizontal spans, sky columns.
 *
 *----------------------------------------------------------------------------- 4/25/98, 5/2/98 killough: reformatted, beautified#include "lprintf.h" OPTIMIZE: closed two sided lines as single sided killough 1/6/98: replaced globals with statics where appropriate True if any of the segs textures might be visible. False if the back side is the same plane. cph angle to line origin regular wall R_ScaleFromGlobalAngle Returns the texture mapping scale  for the current line (horizontal span)  at the given angle. rw_distance must be calculated first. killough 5/2/98: reformatted, cleaned up CPhipps - moved here from r_main.c proff 11/06/98: Changed for high-res R_RenderMaskedSegRange killough 4/13/98 Calculate light table. Use different light tables   for horizontal / vertical / diagonal. Diagonal? OPTIMIZE: get rid of LIGHTSEGSHIFT globally killough 4/11/98: draw translucent 2s normal textures killough 4/11/98: end translucent 2s normal code killough 4/13/98: get correct lightlevel for 2s normal textures cph - ...what is this for? adding contrast to rooms?
    * It looks crap in outdoor areas  find positioning draw the columns calculate lighting killough 3/2/98: This calculation used to overflow and cause crashes in Doom: sprtopscreen = centeryfrac - FixedMul(dc_texturemid, spryscale); This code fixes it, by using double-precision intermediate arithmetic and by skipping the drawing of 2s normals whose mapping to screen coordinates is totally out of range: skip if the texture is out of screen's range killough 1/25/98: here's where Medusa came in, because it implicitly assumed that the column was all one patch. Originally, Doom did not construct complete columns for multipatched textures, so there were no header or trailer bytes in the column referred to below, which explains the Medusa effect. The fix is to construct true columns when forming multipatched textures (see r_data.c). draw the texture Except for main_tranmap, mark others purgable at this point cph - unlock it R_RenderSegLoop Draws zero, one, or two textures (and possibly a masked texture) for walls. Can draw or mark the starting pixel of floor and ceiling textures. CALLED: CORE LOOPING ROUTINE. True if at least one column was marked solid  shut up compiler warning mark floor / ceiling areas no space above wall?      yh = bottomfrac>>HEIGHTBITS; texturecolumn and lighting are independent of wall tiers calculate texture offset calculate lighting draw the wall tiers single sided line two sided line top wall no top wall bottom wall no space above wall? no bottom wall cph - if we completely blocked further sight through this column, add this info to the solid columns array for r_bsp.c save texturecol for backdrawing of masked mid texture killough 5/2/98: move from r_main.c, made static, simplified R_StoreWallRange A wall segment will be drawn  between start and stop pixels (inclusive). killough 1/98 -- fix 2s line HOM jff 8/9/98 fix from ZDOOM1.14a killough jff 8/9/98 fix from ZDOOM1.14a figgi -- skip minisegs mark the segment as visible for auto map calculate rw_distance for scale calculation killough 1/6/98, 2/1/98: remove limit on openingsjff 8/9/98 needed for fix from ZDoom jff 8/9/98 borrowed fix for openings from ZDOOM1.14 [RH] We also need to adjust the openings pointers that    were already stored in drawsegs. killough: end of code to remove limits on openings calculate scale at both ends and step calculate texture boundaries  and decide if floor / ceiling marks are needed single sided line a single sided line is terminal, so it must mark ends bottom of texture at bottom top of texture at top two sided line cph - closed 2S line e.g. door  cph - killough's (outdated) comment follows - this deals with both "automap fixes", his and mine killough 1/17/98: this test is required if the fix for the automap bug (r_bsp.c) is used, or else some sprites will be displayed behind closed doors. That fix prevents lines behind closed doors with dropoffs from being displayed on the automap. not solid - old code  hack to allow height changes in outdoor areas killough 3/7/98: Add checks for (x,y) offsets killough 4/15/98: prevent 2s normals from bleeding through deep water killough 4/17/98: draw floors if different light levels killough 3/7/98: Add checks for (x,y) offsets killough 4/15/98: prevent 2s normals from bleeding through fake ceilings killough 4/17/98: draw ceilings if different light levels closed door top texture bottom texture allocate space for masked texture tables masked midtexture calculate rw_offset (only needed for textured lines) calculate light table  use different light tables  for horizontal / vertical / diagonal OPTIMIZE: get rid of LIGHTSEGSHIFT globally cph - ...what is this for? adding contrast to rooms?
          * It looks crap in outdoor areas  if a floor / ceiling plane is on the wrong side of the view plane, it is definitely invisible and doesn't need to be marked. killough 3/7/98: add deep water check above view plane below view plane calculate incremental stepping values for texture edges render it killough 4/11/98: add NULL ptr checks killough 4/11/98: add NULL ptr checks cph 2003/04/18  - ceilingplane and floorplane might be the same
          * visplane (e.g. if both skies); R_CheckPlane doesn't know about
          * modifications to the plane that might happen in parallel with the check
          * being made, so we have to override it and split them anyway if that is
          * a possibility, otherwise the floor marking would overwrite the ceiling
          * marking, resulting in HOM.  cph - if a column was made solid by this wall, we _must_ save full clipping info  save sprite clipping info Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      All the clipping: columns, horizontal spans, sky columns.
 *
 *----------------------------------------------------------------------------- 4/25/98, 5/2/98 killough: reformatted, beautified#include "lprintf.h" OPTIMIZE: closed two sided lines as single sided killough 1/6/98: replaced globals with statics where appropriate True if any of the segs textures might be visible. False if the back side is the same plane. cph angle to line origin regular wall R_ScaleFromGlobalAngle Returns the texture mapping scale  for the current line (horizontal span)  at the given angle. rw_distance must be calculated first. killough 5/2/98: reformatted, cleaned up CPhipps - moved here from r_main.c proff 11/06/98: Changed for high-res R_RenderMaskedSegRange killough 4/13/98 Calculate light table. Use different light tables   for horizontal / vertical / diagonal. Diagonal? OPTIMIZE: get rid of LIGHTSEGSHIFT globally killough 4/11/98: draw translucent 2s normal textures killough 4/11/98: end translucent 2s normal code killough 4/13/98: get correct lightlevel for 2s normal textures cph - ...what is this for? adding contrast to rooms?
    * It looks crap in outdoor areas  find positioning draw the columns calculate lighting killough 3/2/98: This calculation used to overflow and cause crashes in Doom: sprtopscreen = centeryfrac - FixedMul(dc_texturemid, spryscale); This code fixes it, by using double-precision intermediate arithmetic and by skipping the drawing of 2s normals whose mapping to screen coordinates is totally out of range: skip if the texture is out of screen's range killough 1/25/98: here's where Medusa came in, because it implicitly assumed that the column was all one patch. Originally, Doom did not construct complete columns for multipatched textures, so there were no header or trailer bytes in the column referred to below, which explains the Medusa effect. The fix is to construct true columns when forming multipatched textures (see r_data.c). draw the texture Except for main_tranmap, mark others purgable at this point cph - unlock it R_RenderSegLoop Draws zero, one, or two textures (and possibly a masked texture) for walls. Can draw or mark the starting pixel of floor and ceiling textures. CALLED: CORE LOOPING ROUTINE. True if at least one column was marked solid  shut up compiler warning mark floor / ceiling areas no space above wall?      yh = bottomfrac>>HEIGHTBITS; texturecolumn and lighting are independent of wall tiers calculate texture offset calculate lighting draw the wall tiers single sided line two sided line top wall no top wall bottom wall no space above wall? no bottom wall cph - if we completely blocked further sight through this column, add this info to the solid columns array for r_bsp.c save texturecol for backdrawing of masked mid texture killough 5/2/98: move from r_main.c, made static, simplified R_StoreWallRange A wall segment will be drawn  between start and stop pixels (inclusive). killough 1/98 -- fix 2s line HOM jff 8/9/98 fix from ZDOOM1.14a killough jff 8/9/98 fix from ZDOOM1.14a figgi -- skip minisegs mark the segment as visible for auto map calculate rw_distance for scale calculation killough 1/6/98, 2/1/98: remove limit on openingsjff 8/9/98 needed for fix from ZDoom jff 8/9/98 borrowed fix for openings from ZDOOM1.14 [RH] We also need to adjust the openings pointers that    were already stored in drawsegs. killough: end of code to remove limits on openings calculate scale at both ends and step calculate texture boundaries  and decide if floor / ceiling marks are needed single sided line a single sided line is terminal, so it must mark ends bottom of texture at bottom top of texture at top two sided line cph - closed 2S line e.g. door  cph - killough's (outdated) comment follows - this deals with both "automap fixes", his and mine killough 1/17/98: this test is required if the fix for the automap bug (r_bsp.c) is used, or else some sprites will be displayed behind closed doors. That fix prevents lines behind closed doors with dropoffs from being displayed on the automap. not solid - old code  hack to allow height changes in outdoor areas killough 3/7/98: Add checks for (x,y) offsets killough 4/15/98: prevent 2s normals from bleeding through deep water killough 4/17/98: draw floors if different light levels killough 3/7/98: Add checks for (x,y) offsets killough 4/15/98: prevent 2s normals from bleeding through fake ceilings killough 4/17/98: draw ceilings if different light levels closed door top texture bottom texture allocate space for masked texture tables masked midtexture calculate rw_offset (only needed for textured lines) calculate light table  use different light tables  for horizontal / vertical / diagonal OPTIMIZE: get rid of LIGHTSEGSHIFT globally cph - ...what is this for? adding contrast to rooms?
          * It looks crap in outdoor areas  if a floor / ceiling plane is on the wrong side of the view plane, it is definitely invisible and doesn't need to be marked. killough 3/7/98: add deep water check above view plane below view plane calculate incremental stepping values for texture edges render it killough 4/11/98: add NULL ptr checks killough 4/11/98: add NULL ptr checks cph 2003/04/18  - ceilingplane and floorplane might be the same
          * visplane (e.g. if both skies); R_CheckPlane doesn't know about
          * modifications to the plane that might happen in parallel with the check
          * being made, so we have to override it and split them anyway if that is
          * a possibility, otherwise the floor marking would overwrite the ceiling
          * marking, resulting in HOM.  cph - if a column was made solid by this wall, we _must_ save full clipping info  save sprite clipping info Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      All the clipping: columns, horizontal spans, sky columns.
 *
 *----------------------------------------------------------------------------- 4/25/98, 5/2/98 killough: reformatted, beautified#include "lprintf.h" OPTIMIZE: closed two sided lines as single sided killough 1/6/98: replaced globals with statics where appropriate True if any of the segs textures might be visible. False if the back side is the same plane. cph angle to line origin regular wall R_ScaleFromGlobalAngle Returns the texture mapping scale  for the current line (horizontal span)  at the given angle. rw_distance must be calculated first. killough 5/2/98: reformatted, cleaned up CPhipps - moved here from r_main.c proff 11/06/98: Changed for high-res R_RenderMaskedSegRange killough 4/13/98 Calculate light table. Use different light tables   for horizontal / vertical / diagonal. Diagonal? OPTIMIZE: get rid of LIGHTSEGSHIFT globally killough 4/11/98: draw translucent 2s normal textures killough 4/11/98: end translucent 2s normal code killough 4/13/98: get correct lightlevel for 2s normal textures cph - ...what is this for? adding contrast to rooms?
    * It looks crap in outdoor areas  find positioning draw the columns calculate lighting killough 3/2/98: This calculation used to overflow and cause crashes in Doom: sprtopscreen = centeryfrac - FixedMul(dc_texturemid, spryscale); This code fixes it, by using double-precision intermediate arithmetic and by skipping the drawing of 2s normals whose mapping to screen coordinates is totally out of range: skip if the texture is out of screen's range killough 1/25/98: here's where Medusa came in, because it implicitly assumed that the column was all one patch. Originally, Doom did not construct complete columns for multipatched textures, so there were no header or trailer bytes in the column referred to below, which explains the Medusa effect. The fix is to construct true columns when forming multipatched textures (see r_data.c). draw the texture Except for main_tranmap, mark others purgable at this point cph - unlock it R_RenderSegLoop Draws zero, one, or two textures (and possibly a masked texture) for walls. Can draw or mark the starting pixel of floor and ceiling textures. CALLED: CORE LOOPING ROUTINE. True if at least one column was marked solid  shut up compiler warning mark floor / ceiling areas no space above wall?      yh = bottomfrac>>HEIGHTBITS; texturecolumn and lighting are independent of wall tiers calculate texture offset calculate lighting draw the wall tiers single sided line two sided line top wall no top wall bottom wall no space above wall? no bottom wall cph - if we completely blocked further sight through this column, add this info to the solid columns array for r_bsp.c save texturecol for backdrawing of masked mid texture killough 5/2/98: move from r_main.c, made static, simplified R_StoreWallRange A wall segment will be drawn  between start and stop pixels (inclusive). killough 1/98 -- fix 2s line HOM jff 8/9/98 fix from ZDOOM1.14a killough jff 8/9/98 fix from ZDOOM1.14a figgi -- skip minisegs mark the segment as visible for auto map calculate rw_distance for scale calculation killough 1/6/98, 2/1/98: remove limit on openingsjff 8/9/98 needed for fix from ZDoom jff 8/9/98 borrowed fix for openings from ZDOOM1.14 [RH] We also need to adjust the openings pointers that    were already stored in drawsegs. killough: end of code to remove limits on openings calculate scale at both ends and step calculate texture boundaries  and decide if floor / ceiling marks are needed single sided line a single sided line is terminal, so it must mark ends bottom of texture at bottom top of texture at top two sided line cph - closed 2S line e.g. door  cph - killough's (outdated) comment follows - this deals with both "automap fixes", his and mine killough 1/17/98: this test is required if the fix for the automap bug (r_bsp.c) is used, or else some sprites will be displayed behind closed doors. That fix prevents lines behind closed doors with dropoffs from being displayed on the automap. not solid - old code  hack to allow height changes in outdoor areas killough 3/7/98: Add checks for (x,y) offsets killough 4/15/98: prevent 2s normals from bleeding through deep water killough 4/17/98: draw floors if different light levels killough 3/7/98: Add checks for (x,y) offsets killough 4/15/98: prevent 2s normals from bleeding through fake ceilings killough 4/17/98: draw ceilings if different light levels closed door top texture bottom texture allocate space for masked texture tables masked midtexture calculate rw_offset (only needed for textured lines) calculate light table  use different light tables  for horizontal / vertical / diagonal OPTIMIZE: get rid of LIGHTSEGSHIFT globally cph - ...what is this for? adding contrast to rooms?
          * It looks crap in outdoor areas  if a floor / ceiling plane is on the wrong side of the view plane, it is definitely invisible and doesn't need to be marked. killough 3/7/98: add deep water check above view plane below view plane calculate incremental stepping values for texture edges render it killough 4/11/98: add NULL ptr checks killough 4/11/98: add NULL ptr checks cph 2003/04/18  - ceilingplane and floorplane might be the same
          * visplane (e.g. if both skies); R_CheckPlane doesn't know about
          * modifications to the plane that might happen in parallel with the check
          * being made, so we have to override it and split them anyway if that is
          * a possibility, otherwise the floor marking would overwrite the ceiling
          * marking, resulting in HOM.  cph - if a column was made solid by this wall, we _must_ save full clipping info  save sprite clipping info