
FUNCTION
        <<strcpy>>---copy string

INDEX
        strcpy

ANSI_SYNOPSIS
        #include <string.h>
        char *strcpy(char *<[dst]>, const char *<[src]>);

TRAD_SYNOPSIS
        #include <string.h>
        char *strcpy(<[dst]>, <[src]>)
        char *<[dst]>;
        char *<[src]>;

DESCRIPTION
        <<strcpy>> copies the string pointed to by <[src]>
        (including the terminating null character) to the array
        pointed to by <[dst]>.

RETURNS
        This function returns the initial value of <[dst]>.

PORTABILITY
<<strcpy>> is ANSI C.

<<strcpy>> requires no supporting OS subroutines.

QUICKREF
        strcpy ansi pure
 for _DEFUN SUPPRESS 560SUPPRESS 530 Nonzero if either X or Y is not aligned on a "long" boundary.   Nonzero if X (a long int) contains a NULL byte.  If SRC or DEST is unaligned, then copy bytes.   SRC and DEST are both "long int" aligned, try to do "long int"
         sized copies.   not PREFER_SIZE_OVER_SPEED 
FUNCTION
        <<strcpy>>---copy string

INDEX
        strcpy

ANSI_SYNOPSIS
        #include <string.h>
        char *strcpy(char *<[dst]>, const char *<[src]>);

TRAD_SYNOPSIS
        #include <string.h>
        char *strcpy(<[dst]>, <[src]>)
        char *<[dst]>;
        char *<[src]>;

DESCRIPTION
        <<strcpy>> copies the string pointed to by <[src]>
        (including the terminating null character) to the array
        pointed to by <[dst]>.

RETURNS
        This function returns the initial value of <[dst]>.

PORTABILITY
<<strcpy>> is ANSI C.

<<strcpy>> requires no supporting OS subroutines.

QUICKREF
        strcpy ansi pure
 for _DEFUN SUPPRESS 560SUPPRESS 530 Nonzero if either X or Y is not aligned on a "long" boundary.   Nonzero if X (a long int) contains a NULL byte.  If SRC or DEST is unaligned, then copy bytes.   SRC and DEST are both "long int" aligned, try to do "long int"
         sized copies.   not PREFER_SIZE_OVER_SPEED 
FUNCTION
        <<strcpy>>---copy string

INDEX
        strcpy

ANSI_SYNOPSIS
        #include <string.h>
        char *strcpy(char *<[dst]>, const char *<[src]>);

TRAD_SYNOPSIS
        #include <string.h>
        char *strcpy(<[dst]>, <[src]>)
        char *<[dst]>;
        char *<[src]>;

DESCRIPTION
        <<strcpy>> copies the string pointed to by <[src]>
        (including the terminating null character) to the array
        pointed to by <[dst]>.

RETURNS
        This function returns the initial value of <[dst]>.

PORTABILITY
<<strcpy>> is ANSI C.

<<strcpy>> requires no supporting OS subroutines.

QUICKREF
        strcpy ansi pure
 for _DEFUN SUPPRESS 560SUPPRESS 530 Nonzero if either X or Y is not aligned on a "long" boundary.   Nonzero if X (a long int) contains a NULL byte.  If SRC or DEST is unaligned, then copy bytes.   SRC and DEST are both "long int" aligned, try to do "long int"
         sized copies.   not PREFER_SIZE_OVER_SPEED 