**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Settings for all possible clock frequencies (with properly working timers)
 * NOTE: Some 5249 chips don't like having PLLDIV set to 0. We must avoid that!
 *
 *                    xxx_REFRESH_TIMER below
 * system.h, CPUFREQ_xxx_MULT    |
 *              |                |
 *              V                V
 *                   PLLCR &   Rftim.         IDECONFIG1/IDECONFIG2
 * CPUCLK/Hz  MULT ~0x70400000  16MB  CSCR0   CS2Pre CS2Post CS2Wait
 * -----------------------------------------------------------------
 *  11289600    1   0x00800200    4   0x0180     1      1       0
 *  22579200    2   0x0589e025   10   0x0180     1      1       0
 *  33868800    3   0x0388e025   15   0x0180     1      1       0
 *  45158400    4   0x0589e021   21   0x0580     1      1       0
 *  56448000    5   0x0289e025   26   0x0580     2      1       0
 *  67737600    6   0x0388e021   32   0x0980     2      1       0
 *  79027200    7   0x038a6021   37   0x0980     2      1       0
 *  90316800    8   0x038be021   43   0x0d80     2      1       0
 * 101606400    9   0x01892025   48   0x0d80     2      1       0
 * 112896000   10   0x0189e025   54   0x1180     3      1       0
 * 124185600   11   0x018ae025   59   0x1180     3      1       1
  Refresh timer for bypass frequency  Bypass mode  Flash: 4 wait states  Wait until the PLL has locked.
                                            This may take up to 10ms!  Refresh timer  SBUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait  Refresh timer for bypass frequency  Bypass mode  Flash: 1 wait state  Wait until the PLL has locked.
                                            This may take up to 10ms!  Refresh timer  BUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait  Refresh timer for bypass frequency  Bypass mode  Power down PLL, but keep CRSEL and CLSEL  Flash: 0 wait states  Refresh timer  BUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Settings for all possible clock frequencies (with properly working timers)
 * NOTE: Some 5249 chips don't like having PLLDIV set to 0. We must avoid that!
 *
 *                    xxx_REFRESH_TIMER below
 * system.h, CPUFREQ_xxx_MULT    |
 *              |                |
 *              V                V
 *                   PLLCR &   Rftim.         IDECONFIG1/IDECONFIG2
 * CPUCLK/Hz  MULT ~0x70400000  16MB  CSCR0   CS2Pre CS2Post CS2Wait
 * -----------------------------------------------------------------
 *  11289600    1   0x00800200    4   0x0180     1      1       0
 *  22579200    2   0x0589e025   10   0x0180     1      1       0
 *  33868800    3   0x0388e025   15   0x0180     1      1       0
 *  45158400    4   0x0589e021   21   0x0580     1      1       0
 *  56448000    5   0x0289e025   26   0x0580     2      1       0
 *  67737600    6   0x0388e021   32   0x0980     2      1       0
 *  79027200    7   0x038a6021   37   0x0980     2      1       0
 *  90316800    8   0x038be021   43   0x0d80     2      1       0
 * 101606400    9   0x01892025   48   0x0d80     2      1       0
 * 112896000   10   0x0189e025   54   0x1180     3      1       0
 * 124185600   11   0x018ae025   59   0x1180     3      1       1
  Refresh timer for bypass frequency  Bypass mode  Flash: 4 wait states  Wait until the PLL has locked.
                                            This may take up to 10ms!  Refresh timer  SBUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait  Refresh timer for bypass frequency  Bypass mode  Flash: 1 wait state  Wait until the PLL has locked.
                                            This may take up to 10ms!  Refresh timer  BUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait  Refresh timer for bypass frequency  Bypass mode  Power down PLL, but keep CRSEL and CLSEL  Flash: 0 wait states  Refresh timer  BUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 by Linus Nielsen Feltzing
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Settings for all possible clock frequencies (with properly working timers)
 * NOTE: Some 5249 chips don't like having PLLDIV set to 0. We must avoid that!
 *
 *                    xxx_REFRESH_TIMER below
 * system.h, CPUFREQ_xxx_MULT    |
 *              |                |
 *              V                V
 *                   PLLCR &   Rftim.         IDECONFIG1/IDECONFIG2
 * CPUCLK/Hz  MULT ~0x70400000  16MB  CSCR0   CS2Pre CS2Post CS2Wait
 * -----------------------------------------------------------------
 *  11289600    1   0x00800200    4   0x0180     1      1       0
 *  22579200    2   0x0589e025   10   0x0180     1      1       0
 *  33868800    3   0x0388e025   15   0x0180     1      1       0
 *  45158400    4   0x0589e021   21   0x0580     1      1       0
 *  56448000    5   0x0289e025   26   0x0580     2      1       0
 *  67737600    6   0x0388e021   32   0x0980     2      1       0
 *  79027200    7   0x038a6021   37   0x0980     2      1       0
 *  90316800    8   0x038be021   43   0x0d80     2      1       0
 * 101606400    9   0x01892025   48   0x0d80     2      1       0
 * 112896000   10   0x0189e025   54   0x1180     3      1       0
 * 124185600   11   0x018ae025   59   0x1180     3      1       1
  Refresh timer for bypass frequency  Bypass mode  Flash: 4 wait states  Wait until the PLL has locked.
                                            This may take up to 10ms!  Refresh timer  SBUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait  Refresh timer for bypass frequency  Bypass mode  Flash: 1 wait state  Wait until the PLL has locked.
                                            This may take up to 10ms!  Refresh timer  BUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait  Refresh timer for bypass frequency  Bypass mode  Power down PLL, but keep CRSEL and CLSEL  Flash: 0 wait states  Refresh timer  BUFEN2 enable | CS2Post | CS2Pre  TA enable + CS2wait 