**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 - 2007 by Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 32 bit checksum  rk27generic  the same as the h120  Philips HDD1630  Philips SA9200  Samsung YH-820  Samsung YH-920  Samsung YH-925  Sansa Clipv2  iPod Nano 2nd Gen  Philips HDD6330  Sansa Clip+  Packard Bell Vibe 500  Sansa Fuze v2  MPIO HD200  MPIO HD300  iPod Classic/6G  Sansa Fuze+  Sansa Clip Zip  Sansa Connect  Creative Zen X-Fi2  Creative Zen X-Fi3  Samsung YP-Z5  Creative Zen V  Creative ZEN X-Fi  Creative ZEN Mozaic Sony NWZ-E370 series  Sony NWZ-E360 series  Creative ZEN  Creative ZEN X-Fi Style  xDuoo X3  Sony NWZ-E450 series  Sony NWZ-E460 series  Sony NWZ-E580 series  Sony NWZ-E470 series  Sony NWZ-A10 series  Sony NW-A20 series  Sony NWZ-A860 series  Sony NWZ-S750 series  Sony NWZ-E350 series  we store a 4-letter model name too, for humans  to be sure we are null terminated  start checksum calcs with this  iRiver code dealt with in the iriver.c code  iRiver code dealt with in the iriver.c code  Firmware image v2  Firmware image v3  Firmware image v3  open file  Round up to nearest 4 byte boundary  zero-fill the last 4 bytes to make sure there's no rubbish there
           when we write the size-aligned file later  read file  add 8 unsigned bits but keep a 32 bit sum  dummy case just to silence picky compilers  calculate checksum  checksum, big-endian  4 bytes model name  the input buffer to output the input buffer to output the input buffer to outputshouldn't have to, but to be SURE  write file  Create an ipod firmware partition image 

   fw_ver = 2 for 3rd Gen ipods, 3 for all later ipods including 5g.

   This function doesn't yet handle the Broadcom resource image for the 5g,
   so the resulting images won't be usable.

   This has also only been tested on an ipod Photo 
 Calculate checksum for later use in header  Clear the header area to zero  APPLE STOP SIGN  VOLUME HEADER  Magic  Firmware offset relative to 0x200  Location of extended header  Firmware Directory - "osos" entry  dev and type  id  devOffset  Length of firmware  Addr  Entry Offset  Checksum  vers - 0x6012 is a guess  LoadAddr - for flash images  "rsrc" entry (if applicable)  dev and type  id  devOffset  Length of firmware  Addr  Entry Offset  Checksum  vers  LoadAddr - for flash images  Clear the tail area to 0xFF  Header **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 - 2007 by Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 32 bit checksum  rk27generic  the same as the h120  Philips HDD1630  Philips SA9200  Samsung YH-820  Samsung YH-920  Samsung YH-925  Sansa Clipv2  iPod Nano 2nd Gen  Philips HDD6330  Sansa Clip+  Packard Bell Vibe 500  Sansa Fuze v2  MPIO HD200  MPIO HD300  iPod Classic/6G  Sansa Fuze+  Sansa Clip Zip  Sansa Connect  Creative Zen X-Fi2  Creative Zen X-Fi3  Samsung YP-Z5  Creative Zen V  Creative ZEN X-Fi  Creative ZEN Mozaic Sony NWZ-E370 series  Sony NWZ-E360 series  Creative ZEN  Creative ZEN X-Fi Style  xDuoo X3  Sony NWZ-E450 series  Sony NWZ-E460 series  Sony NWZ-E580 series  Sony NWZ-E470 series  Sony NWZ-A10 series  Sony NW-A20 series  Sony NWZ-A860 series  Sony NWZ-S750 series  Sony NWZ-E350 series  we store a 4-letter model name too, for humans  to be sure we are null terminated  start checksum calcs with this  iRiver code dealt with in the iriver.c code  iRiver code dealt with in the iriver.c code  Firmware image v2  Firmware image v3  Firmware image v3  open file  Round up to nearest 4 byte boundary  zero-fill the last 4 bytes to make sure there's no rubbish there
           when we write the size-aligned file later  read file  add 8 unsigned bits but keep a 32 bit sum  dummy case just to silence picky compilers  calculate checksum  checksum, big-endian  4 bytes model name  the input buffer to output the input buffer to output the input buffer to outputshouldn't have to, but to be SURE  write file  Create an ipod firmware partition image 

   fw_ver = 2 for 3rd Gen ipods, 3 for all later ipods including 5g.

   This function doesn't yet handle the Broadcom resource image for the 5g,
   so the resulting images won't be usable.

   This has also only been tested on an ipod Photo 
 Calculate checksum for later use in header  Clear the header area to zero  APPLE STOP SIGN  VOLUME HEADER  Magic  Firmware offset relative to 0x200  Location of extended header  Firmware Directory - "osos" entry  dev and type  id  devOffset  Length of firmware  Addr  Entry Offset  Checksum  vers - 0x6012 is a guess  LoadAddr - for flash images  "rsrc" entry (if applicable)  dev and type  id  devOffset  Length of firmware  Addr  Entry Offset  Checksum  vers  LoadAddr - for flash images  Clear the tail area to 0xFF  Header **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 - 2007 by Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 32 bit checksum  rk27generic  the same as the h120  Philips HDD1630  Philips SA9200  Samsung YH-820  Samsung YH-920  Samsung YH-925  Sansa Clipv2  iPod Nano 2nd Gen  Philips HDD6330  Sansa Clip+  Packard Bell Vibe 500  Sansa Fuze v2  MPIO HD200  MPIO HD300  iPod Classic/6G  Sansa Fuze+  Sansa Clip Zip  Sansa Connect  Creative Zen X-Fi2  Creative Zen X-Fi3  Samsung YP-Z5  Creative Zen V  Creative ZEN X-Fi  Creative ZEN Mozaic Sony NWZ-E370 series  Sony NWZ-E360 series  Creative ZEN  Creative ZEN X-Fi Style  xDuoo X3  Sony NWZ-E450 series  Sony NWZ-E460 series  Sony NWZ-E580 series  Sony NWZ-E470 series  Sony NWZ-A10 series  Sony NW-A20 series  Sony NWZ-A860 series  Sony NWZ-S750 series  Sony NWZ-E350 series  we store a 4-letter model name too, for humans  to be sure we are null terminated  start checksum calcs with this  iRiver code dealt with in the iriver.c code  iRiver code dealt with in the iriver.c code  Firmware image v2  Firmware image v3  Firmware image v3  open file  Round up to nearest 4 byte boundary  zero-fill the last 4 bytes to make sure there's no rubbish there
           when we write the size-aligned file later  read file  add 8 unsigned bits but keep a 32 bit sum  dummy case just to silence picky compilers  calculate checksum  checksum, big-endian  4 bytes model name  the input buffer to output the input buffer to output the input buffer to outputshouldn't have to, but to be SURE  write file  Create an ipod firmware partition image 

   fw_ver = 2 for 3rd Gen ipods, 3 for all later ipods including 5g.

   This function doesn't yet handle the Broadcom resource image for the 5g,
   so the resulting images won't be usable.

   This has also only been tested on an ipod Photo 
 Calculate checksum for later use in header  Clear the header area to zero  APPLE STOP SIGN  VOLUME HEADER  Magic  Firmware offset relative to 0x200  Location of extended header  Firmware Directory - "osos" entry  dev and type  id  devOffset  Length of firmware  Addr  Entry Offset  Checksum  vers - 0x6012 is a guess  LoadAddr - for flash images  "rsrc" entry (if applicable)  dev and type  id  devOffset  Length of firmware  Addr  Entry Offset  Checksum  vers  LoadAddr - for flash images  Clear the tail area to 0xFF  Header 