	MikMod sound library
	(c) 2004, Raphael Assenat and others - see file AUTHORS for
	complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  ASYLUM Music Format v1.0 (.amf) loader
  adapted from load_mod.c by Raphael Assenat <raph@raphnet.net>,
  with the help of the AMF2MOD utility sourcecode,
  written to convert crusader's amf files into 8
  channels mod file in 1995 by Mr. P / Powersource
  mrp@fish.share.net, ac054@sfn.saskatoon.sk.ca


======================================================================================== Module structure  number of patterns used  which pattern to play at pos  all sampleinfo  This table is taken from AMF2MOD.C
 * written in 1995 by Mr. P / Powersource
 * mrp@fish.share.net, ac054@sfn.saskatoon.sk.ca ========== Loader variables ========== Loader code  Read the magic string  Test if the string is what we expect  convert amf note to mod period  Convert the period to a note number  if instrument does not exist, note cut  Protracker handling  if we had a note, then change instrument... ...otherwise, only adjust volume...  ...unless an effect was specified,
					 * which forces a new note to be
					 * played  Fasttracker handling  Convert pattern jump from Dec to Hex  Volume slide, up has priority  UniEffect(UNI_S3MEFFECTQ,dat) ?  return -1 to fail?  Loads all patterns of a modfile and converts them into the 3 byte format.  Allocate temporary buffer for loading and converting the patterns  patterns start here  Load the pattern into the temp buffer and convert it  no title in asylum amf files :(  skip unknown byte  read samples headers just in case  skip unknown byte  set module variables  Copy positions (orders)  SANITIY CHECK 	fprintf(stderr,"positions[%d]=%d > numpat=%d\n",t,of.positions[t],of.numpat); Finally, init the sampleinfo structures   convert the samplename  init the sampleinfo variables  fix replen if repend > length ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 2004, Raphael Assenat and others - see file AUTHORS for
	complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  ASYLUM Music Format v1.0 (.amf) loader
  adapted from load_mod.c by Raphael Assenat <raph@raphnet.net>,
  with the help of the AMF2MOD utility sourcecode,
  written to convert crusader's amf files into 8
  channels mod file in 1995 by Mr. P / Powersource
  mrp@fish.share.net, ac054@sfn.saskatoon.sk.ca


======================================================================================== Module structure  number of patterns used  which pattern to play at pos  all sampleinfo  This table is taken from AMF2MOD.C
 * written in 1995 by Mr. P / Powersource
 * mrp@fish.share.net, ac054@sfn.saskatoon.sk.ca ========== Loader variables ========== Loader code  Read the magic string  Test if the string is what we expect  convert amf note to mod period  Convert the period to a note number  if instrument does not exist, note cut  Protracker handling  if we had a note, then change instrument... ...otherwise, only adjust volume...  ...unless an effect was specified,
					 * which forces a new note to be
					 * played  Fasttracker handling  Convert pattern jump from Dec to Hex  Volume slide, up has priority  UniEffect(UNI_S3MEFFECTQ,dat) ?  return -1 to fail?  Loads all patterns of a modfile and converts them into the 3 byte format.  Allocate temporary buffer for loading and converting the patterns  patterns start here  Load the pattern into the temp buffer and convert it  no title in asylum amf files :(  skip unknown byte  read samples headers just in case  skip unknown byte  set module variables  Copy positions (orders)  SANITIY CHECK 	fprintf(stderr,"positions[%d]=%d > numpat=%d\n",t,of.positions[t],of.numpat); Finally, init the sampleinfo structures   convert the samplename  init the sampleinfo variables  fix replen if repend > length ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 2004, Raphael Assenat and others - see file AUTHORS for
	complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  ASYLUM Music Format v1.0 (.amf) loader
  adapted from load_mod.c by Raphael Assenat <raph@raphnet.net>,
  with the help of the AMF2MOD utility sourcecode,
  written to convert crusader's amf files into 8
  channels mod file in 1995 by Mr. P / Powersource
  mrp@fish.share.net, ac054@sfn.saskatoon.sk.ca


======================================================================================== Module structure  number of patterns used  which pattern to play at pos  all sampleinfo  This table is taken from AMF2MOD.C
 * written in 1995 by Mr. P / Powersource
 * mrp@fish.share.net, ac054@sfn.saskatoon.sk.ca ========== Loader variables ========== Loader code  Read the magic string  Test if the string is what we expect  convert amf note to mod period  Convert the period to a note number  if instrument does not exist, note cut  Protracker handling  if we had a note, then change instrument... ...otherwise, only adjust volume...  ...unless an effect was specified,
					 * which forces a new note to be
					 * played  Fasttracker handling  Convert pattern jump from Dec to Hex  Volume slide, up has priority  UniEffect(UNI_S3MEFFECTQ,dat) ?  return -1 to fail?  Loads all patterns of a modfile and converts them into the 3 byte format.  Allocate temporary buffer for loading and converting the patterns  patterns start here  Load the pattern into the temp buffer and convert it  no title in asylum amf files :(  skip unknown byte  read samples headers just in case  skip unknown byte  set module variables  Copy positions (orders)  SANITIY CHECK 	fprintf(stderr,"positions[%d]=%d > numpat=%d\n",t,of.positions[t],of.numpat); Finally, init the sampleinfo structures   convert the samplename  init the sampleinfo variables  fix replen if repend > length ========== Loader information  ex:set ts=4: 