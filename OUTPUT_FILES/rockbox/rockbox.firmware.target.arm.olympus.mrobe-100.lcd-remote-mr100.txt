**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Temporary defines until we sort out why the gui stuff doesn't like this size
   (I believe the status bar isn't doing sanity checks and is writing outside
   the frame buffer size).  ==================================================  Remote thread functions                               These functions are private to the remote thread  ================================================== ~ sleep(1);~ sleep(1); check opcode  verify the checksums  reception error  If the draw_now bit is set, the draw occurs directly on the LCD.
       Otherwise, the data is stored in an off-screen buffer and displayed
       the next time a draw operation is executed with this flag set.  width  x1     y1     x2     y2    ~ remote_update_icons(0xf0); /* show battery */ Error handling (most likely due to remote not present)  Power-off (thread sleeps)  Detection  ~50ms for updates  Update the remote (one per wakeup cycle)  In order of importance  =============================================  Public functions                                 These should only set the update flags that    will be executed in the remote thread.       =============================================  Return the most recent data. While the remote is plugged,
       this is updated ~50ms  dummy function...need to introduce HAVE_LCD_REMOTE_INVERT  turn the display upside down (call lcd_remote_update() afterwards)  dummy function...need to introduce HAVE_LCD_REMOTE_FLIP  should only be used to power off at shutdown  wait until the things are powered off  reset  force detection at startup  unknown  a thread is required to poll & update the remote  Update the display.
   This must be called after all other LCD functions that change the display.  Update a fraction of the display. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Temporary defines until we sort out why the gui stuff doesn't like this size
   (I believe the status bar isn't doing sanity checks and is writing outside
   the frame buffer size).  ==================================================  Remote thread functions                               These functions are private to the remote thread  ================================================== ~ sleep(1);~ sleep(1); check opcode  verify the checksums  reception error  If the draw_now bit is set, the draw occurs directly on the LCD.
       Otherwise, the data is stored in an off-screen buffer and displayed
       the next time a draw operation is executed with this flag set.  width  x1     y1     x2     y2    ~ remote_update_icons(0xf0); /* show battery */ Error handling (most likely due to remote not present)  Power-off (thread sleeps)  Detection  ~50ms for updates  Update the remote (one per wakeup cycle)  In order of importance  =============================================  Public functions                                 These should only set the update flags that    will be executed in the remote thread.       =============================================  Return the most recent data. While the remote is plugged,
       this is updated ~50ms  dummy function...need to introduce HAVE_LCD_REMOTE_INVERT  turn the display upside down (call lcd_remote_update() afterwards)  dummy function...need to introduce HAVE_LCD_REMOTE_FLIP  should only be used to power off at shutdown  wait until the things are powered off  reset  force detection at startup  unknown  a thread is required to poll & update the remote  Update the display.
   This must be called after all other LCD functions that change the display.  Update a fraction of the display. **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2009 Mark Arigo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Temporary defines until we sort out why the gui stuff doesn't like this size
   (I believe the status bar isn't doing sanity checks and is writing outside
   the frame buffer size).  ==================================================  Remote thread functions                               These functions are private to the remote thread  ================================================== ~ sleep(1);~ sleep(1); check opcode  verify the checksums  reception error  If the draw_now bit is set, the draw occurs directly on the LCD.
       Otherwise, the data is stored in an off-screen buffer and displayed
       the next time a draw operation is executed with this flag set.  width  x1     y1     x2     y2    ~ remote_update_icons(0xf0); /* show battery */ Error handling (most likely due to remote not present)  Power-off (thread sleeps)  Detection  ~50ms for updates  Update the remote (one per wakeup cycle)  In order of importance  =============================================  Public functions                                 These should only set the update flags that    will be executed in the remote thread.       =============================================  Return the most recent data. While the remote is plugged,
       this is updated ~50ms  dummy function...need to introduce HAVE_LCD_REMOTE_INVERT  turn the display upside down (call lcd_remote_update() afterwards)  dummy function...need to introduce HAVE_LCD_REMOTE_FLIP  should only be used to power off at shutdown  wait until the things are powered off  reset  force detection at startup  unknown  a thread is required to poll & update the remote  Update the display.
   This must be called after all other LCD functions that change the display.  Update a fraction of the display. 