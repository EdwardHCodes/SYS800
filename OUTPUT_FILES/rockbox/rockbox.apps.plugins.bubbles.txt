**************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2005 Adam Boot
*
* Color graphics from Frozen Bubble (http://www.frozen-bubble.org/)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** files  final game return status  play board dimension  various amounts  keyboard layouts  sansas use the wheel instead of left/right if available  these are better off shooting with up  external bitmaps  bubbles will consume height of ROW_HEIGHT*(BB_HEIGHT-1)+BUBBLE_HEIGHT*3/2  44x44 bubbles (m:robe 500)  22x22 bubbles (iPod Video)  22x22 bubbles (Gigabeat, Onda VX747)  16x16 bubbles (H300, iPod Color, HDD6330)  16x16 bubbles (Sansa E200)  custom text positioning  12x12 bubbles (iPod Nano)  12x12 bubbles (H100, H10, iAudio X5, HDD1630, iPod 3G, iPod 4G grayscale)  12x12 bubbles (GoGear SA9200)  custom text positioning  10x10 bubbles (iPod Mini)  9x9 bubbles (iAudio M3, Samsung YH-820)  8x8 bubbles (Sansa C200)  7x7 bubbles (Sansa Clip/m200)  8x7 bubbles (Archos recorder, Ondio)  7x7 bubbles (Sansa Clip Zip)   custom text positioning  shot position  collision distance squared  levels  the tile struct
 * type is the bubble number 0-7
 * fallx is the x axis movement for the falling bubble
 * fallvel is the initial upward velocity for the falling bubble
 * ingroup denotes a bubble that is part of a group to be removed
 * anchored denotes a bubble that is anchored to the ceiling
  the game context struct
 * score is the current score
 * level is the current level
 * angle is the current cannon direction
 * shots is the number of shots fired since last compression
 * compress is the height of the compressor
 * onboardcnt is the number of unique bubbles on the playing board
 * onboard is the unique bubbles on the playing board
 * nextinq is the pointer to the next bubble in the firing queue
 * queue is the circular buffer of bubbles to be fired
 * elapsedlvl is level elapsed time in 1/100s of seconds
 * elapsedshot is the shot elapsed time in 1/100s of seconds
 * startedshot is when the current shot began
 * playboard is the game playing board
  used to denote available resume info  the highest level beaten ****************************************************************************
* bubbles_init() initializes bubbles data structures.
***************************************************************************** seed the rand generator  check for resumed game ****************************************************************************
* bubbles_nextlevel() sets up the game for the next level, returns false if
*     there are no more levels.
***************************************************************************** check if there are no more levels  save highest level  set up the play board  fill first bubbles in shot queue ****************************************************************************
* bubbles_getonboard() determines which bubble types are on the play board.
*********************************************************************************************************************************************************
* bubbles_drawboard() draws the game board to the buffer but does not update
*     the lcd.
***************************************************************************** clear screen  draw background  display play board  display bubble to be shot  display next bubble to be shot  draw bounding lines  draw arrow  draw text  screen is too small for the message to be centered (Clip Zip) ****************************************************************************
* bubbles_fire() fires the current bubble, reloads the cannon, attaches
*     bubble to playboard, removes appropriate bubbles, and advances the
*     the compressor.
***************************************************************************** get current bubble  advance the queue  move the bubble across the play board  move the bubble one step  check for bounce off sides  display shot  find nearest position  odd row  even row  if nearest position is occupied attach to last position  save last position  if collision with neighbor then attach shot  if at top then attach shot to the ceiling  handle button events  framerate limiting  clear appropriate bubbles from playing board  update shots and compress amount ****************************************************************************
* bubbles_collision() determines if a fired bubble has collided with another
*     bubble.
***************************************************************************** check neighbors ****************************************************************************
* bubbles_ingroup() marks all bubbles that form the current group.
***************************************************************************** unmark group if too small ****************************************************************************
* bubbles_searchgroup() return the size of the group of bubbles of the same
*     type that the current bubble belongs to.
***************************************************************************** search initial bubble  breadth-first search neighbors ****************************************************************************
* bubbles_remove() removes all bubbles in the current group and all
*     unanchored bubbles from the play board.
***************************************************************************** determine all anchored bubbles  mark bubbles to be deleted  animate falling bubbles  remove bubbles ****************************************************************************
* bubbles_anchored() marks all bubbles that are anchored in some way to the
*     current bubble.
***************************************************************************** search initial bubble  breadth-first search neighbors ****************************************************************************
* bubbles_fall() makes removed bubbles fall from the screen.
***************************************************************************** give all falling bubbles an x axis movement  draw bubbles falling off the screen
     * follows y=x^2-8x scaled to bubble size
      draw bubble if it is still on the screen  break out if all bubbles are off the screen  handle button events  framerate limiting ****************************************************************************
* bubbles_checklevel() checks the state of the playboard for a win or loss.
***************************************************************************** check for bubbles below cut off point  check for bubbles above cut off point  level complete, record score  advance to the next level ****************************************************************************
* bubbles_recordscore() inserts a high score into the high scores list and
*     returns the high score position.
*********************************************************************************************************************************************************
* bubbles_loaddata() loads highest level beaten.
***************************************************************************** open data file  read in saved game ****************************************************************************
* bubbles_savedata() saves the current game state.
***************************************************************************** no need to save ****************************************************************************
* bubbles_loadgame() loads the saved game and returns load success.
***************************************************************************** open game file  read in saved game ****************************************************************************
* bubbles_savegame() saves the current game state.
***************************************************************************** nothing to save  write out the game state to the save file ****************************************************************************
* bubbles_setcolors() set the foreground and background colors.
*********************************************************************************************************************************************************
* bubbles_callback() is the default event handler callback which is called
*     on usb connect and shutdown.
*********************************************************************************************************************************************************
* bubbles_handlebuttons() handles button events during a game.
***************************************************************************** FIXME: Should probably check remote hold here  change angle to the left  change angle to the right  fire the shot  pause the game  end the game  no button pressed ****************************************************************************
* bubbles_menu() is the initial menu at the start of the game.
***************************************************************************** resume game  new game  choose level  High scores  Playback Control  quit but don't save  save and quit  ****************************************************************************
* bubbles() is the main game subroutine, it returns the final game status.
************************************************************************************************
    *       menu        *
    **************************************
    *       init        *
    ****************************************
    *        play         *
    ********************* refresh the board  manange idle framerate  handle button events  handle timing ****************************************************************************
* plugin entry point.
***************************************************************************** load files  start app  record high level  record high score  record high score  fall through to BB_END  fall through **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2005 Adam Boot
*
* Color graphics from Frozen Bubble (http://www.frozen-bubble.org/)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** files  final game return status  play board dimension  various amounts  keyboard layouts  sansas use the wheel instead of left/right if available  these are better off shooting with up  external bitmaps  bubbles will consume height of ROW_HEIGHT*(BB_HEIGHT-1)+BUBBLE_HEIGHT*3/2  44x44 bubbles (m:robe 500)  22x22 bubbles (iPod Video)  22x22 bubbles (Gigabeat, Onda VX747)  16x16 bubbles (H300, iPod Color, HDD6330)  16x16 bubbles (Sansa E200)  custom text positioning  12x12 bubbles (iPod Nano)  12x12 bubbles (H100, H10, iAudio X5, HDD1630, iPod 3G, iPod 4G grayscale)  12x12 bubbles (GoGear SA9200)  custom text positioning  10x10 bubbles (iPod Mini)  9x9 bubbles (iAudio M3, Samsung YH-820)  8x8 bubbles (Sansa C200)  7x7 bubbles (Sansa Clip/m200)  8x7 bubbles (Archos recorder, Ondio)  7x7 bubbles (Sansa Clip Zip)   custom text positioning  shot position  collision distance squared  levels  the tile struct
 * type is the bubble number 0-7
 * fallx is the x axis movement for the falling bubble
 * fallvel is the initial upward velocity for the falling bubble
 * ingroup denotes a bubble that is part of a group to be removed
 * anchored denotes a bubble that is anchored to the ceiling
  the game context struct
 * score is the current score
 * level is the current level
 * angle is the current cannon direction
 * shots is the number of shots fired since last compression
 * compress is the height of the compressor
 * onboardcnt is the number of unique bubbles on the playing board
 * onboard is the unique bubbles on the playing board
 * nextinq is the pointer to the next bubble in the firing queue
 * queue is the circular buffer of bubbles to be fired
 * elapsedlvl is level elapsed time in 1/100s of seconds
 * elapsedshot is the shot elapsed time in 1/100s of seconds
 * startedshot is when the current shot began
 * playboard is the game playing board
  used to denote available resume info  the highest level beaten ****************************************************************************
* bubbles_init() initializes bubbles data structures.
***************************************************************************** seed the rand generator  check for resumed game ****************************************************************************
* bubbles_nextlevel() sets up the game for the next level, returns false if
*     there are no more levels.
***************************************************************************** check if there are no more levels  save highest level  set up the play board  fill first bubbles in shot queue ****************************************************************************
* bubbles_getonboard() determines which bubble types are on the play board.
*********************************************************************************************************************************************************
* bubbles_drawboard() draws the game board to the buffer but does not update
*     the lcd.
***************************************************************************** clear screen  draw background  display play board  display bubble to be shot  display next bubble to be shot  draw bounding lines  draw arrow  draw text  screen is too small for the message to be centered (Clip Zip) ****************************************************************************
* bubbles_fire() fires the current bubble, reloads the cannon, attaches
*     bubble to playboard, removes appropriate bubbles, and advances the
*     the compressor.
***************************************************************************** get current bubble  advance the queue  move the bubble across the play board  move the bubble one step  check for bounce off sides  display shot  find nearest position  odd row  even row  if nearest position is occupied attach to last position  save last position  if collision with neighbor then attach shot  if at top then attach shot to the ceiling  handle button events  framerate limiting  clear appropriate bubbles from playing board  update shots and compress amount ****************************************************************************
* bubbles_collision() determines if a fired bubble has collided with another
*     bubble.
***************************************************************************** check neighbors ****************************************************************************
* bubbles_ingroup() marks all bubbles that form the current group.
***************************************************************************** unmark group if too small ****************************************************************************
* bubbles_searchgroup() return the size of the group of bubbles of the same
*     type that the current bubble belongs to.
***************************************************************************** search initial bubble  breadth-first search neighbors ****************************************************************************
* bubbles_remove() removes all bubbles in the current group and all
*     unanchored bubbles from the play board.
***************************************************************************** determine all anchored bubbles  mark bubbles to be deleted  animate falling bubbles  remove bubbles ****************************************************************************
* bubbles_anchored() marks all bubbles that are anchored in some way to the
*     current bubble.
***************************************************************************** search initial bubble  breadth-first search neighbors ****************************************************************************
* bubbles_fall() makes removed bubbles fall from the screen.
***************************************************************************** give all falling bubbles an x axis movement  draw bubbles falling off the screen
     * follows y=x^2-8x scaled to bubble size
      draw bubble if it is still on the screen  break out if all bubbles are off the screen  handle button events  framerate limiting ****************************************************************************
* bubbles_checklevel() checks the state of the playboard for a win or loss.
***************************************************************************** check for bubbles below cut off point  check for bubbles above cut off point  level complete, record score  advance to the next level ****************************************************************************
* bubbles_recordscore() inserts a high score into the high scores list and
*     returns the high score position.
*********************************************************************************************************************************************************
* bubbles_loaddata() loads highest level beaten.
***************************************************************************** open data file  read in saved game ****************************************************************************
* bubbles_savedata() saves the current game state.
***************************************************************************** no need to save ****************************************************************************
* bubbles_loadgame() loads the saved game and returns load success.
***************************************************************************** open game file  read in saved game ****************************************************************************
* bubbles_savegame() saves the current game state.
***************************************************************************** nothing to save  write out the game state to the save file ****************************************************************************
* bubbles_setcolors() set the foreground and background colors.
*********************************************************************************************************************************************************
* bubbles_callback() is the default event handler callback which is called
*     on usb connect and shutdown.
*********************************************************************************************************************************************************
* bubbles_handlebuttons() handles button events during a game.
***************************************************************************** FIXME: Should probably check remote hold here  change angle to the left  change angle to the right  fire the shot  pause the game  end the game  no button pressed ****************************************************************************
* bubbles_menu() is the initial menu at the start of the game.
***************************************************************************** resume game  new game  choose level  High scores  Playback Control  quit but don't save  save and quit  ****************************************************************************
* bubbles() is the main game subroutine, it returns the final game status.
************************************************************************************************
    *       menu        *
    **************************************
    *       init        *
    ****************************************
    *        play         *
    ********************* refresh the board  manange idle framerate  handle button events  handle timing ****************************************************************************
* plugin entry point.
***************************************************************************** load files  start app  record high level  record high score  record high score  fall through to BB_END  fall through **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2005 Adam Boot
*
* Color graphics from Frozen Bubble (http://www.frozen-bubble.org/)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** files  final game return status  play board dimension  various amounts  keyboard layouts  sansas use the wheel instead of left/right if available  these are better off shooting with up  external bitmaps  bubbles will consume height of ROW_HEIGHT*(BB_HEIGHT-1)+BUBBLE_HEIGHT*3/2  44x44 bubbles (m:robe 500)  22x22 bubbles (iPod Video)  22x22 bubbles (Gigabeat, Onda VX747)  16x16 bubbles (H300, iPod Color, HDD6330)  16x16 bubbles (Sansa E200)  custom text positioning  12x12 bubbles (iPod Nano)  12x12 bubbles (H100, H10, iAudio X5, HDD1630, iPod 3G, iPod 4G grayscale)  12x12 bubbles (GoGear SA9200)  custom text positioning  10x10 bubbles (iPod Mini)  9x9 bubbles (iAudio M3, Samsung YH-820)  8x8 bubbles (Sansa C200)  7x7 bubbles (Sansa Clip/m200)  8x7 bubbles (Archos recorder, Ondio)  7x7 bubbles (Sansa Clip Zip)   custom text positioning  shot position  collision distance squared  levels  the tile struct
 * type is the bubble number 0-7
 * fallx is the x axis movement for the falling bubble
 * fallvel is the initial upward velocity for the falling bubble
 * ingroup denotes a bubble that is part of a group to be removed
 * anchored denotes a bubble that is anchored to the ceiling
  the game context struct
 * score is the current score
 * level is the current level
 * angle is the current cannon direction
 * shots is the number of shots fired since last compression
 * compress is the height of the compressor
 * onboardcnt is the number of unique bubbles on the playing board
 * onboard is the unique bubbles on the playing board
 * nextinq is the pointer to the next bubble in the firing queue
 * queue is the circular buffer of bubbles to be fired
 * elapsedlvl is level elapsed time in 1/100s of seconds
 * elapsedshot is the shot elapsed time in 1/100s of seconds
 * startedshot is when the current shot began
 * playboard is the game playing board
  used to denote available resume info  the highest level beaten ****************************************************************************
* bubbles_init() initializes bubbles data structures.
***************************************************************************** seed the rand generator  check for resumed game ****************************************************************************
* bubbles_nextlevel() sets up the game for the next level, returns false if
*     there are no more levels.
***************************************************************************** check if there are no more levels  save highest level  set up the play board  fill first bubbles in shot queue ****************************************************************************
* bubbles_getonboard() determines which bubble types are on the play board.
*********************************************************************************************************************************************************
* bubbles_drawboard() draws the game board to the buffer but does not update
*     the lcd.
***************************************************************************** clear screen  draw background  display play board  display bubble to be shot  display next bubble to be shot  draw bounding lines  draw arrow  draw text  screen is too small for the message to be centered (Clip Zip) ****************************************************************************
* bubbles_fire() fires the current bubble, reloads the cannon, attaches
*     bubble to playboard, removes appropriate bubbles, and advances the
*     the compressor.
***************************************************************************** get current bubble  advance the queue  move the bubble across the play board  move the bubble one step  check for bounce off sides  display shot  find nearest position  odd row  even row  if nearest position is occupied attach to last position  save last position  if collision with neighbor then attach shot  if at top then attach shot to the ceiling  handle button events  framerate limiting  clear appropriate bubbles from playing board  update shots and compress amount ****************************************************************************
* bubbles_collision() determines if a fired bubble has collided with another
*     bubble.
***************************************************************************** check neighbors ****************************************************************************
* bubbles_ingroup() marks all bubbles that form the current group.
***************************************************************************** unmark group if too small ****************************************************************************
* bubbles_searchgroup() return the size of the group of bubbles of the same
*     type that the current bubble belongs to.
***************************************************************************** search initial bubble  breadth-first search neighbors ****************************************************************************
* bubbles_remove() removes all bubbles in the current group and all
*     unanchored bubbles from the play board.
***************************************************************************** determine all anchored bubbles  mark bubbles to be deleted  animate falling bubbles  remove bubbles ****************************************************************************
* bubbles_anchored() marks all bubbles that are anchored in some way to the
*     current bubble.
***************************************************************************** search initial bubble  breadth-first search neighbors ****************************************************************************
* bubbles_fall() makes removed bubbles fall from the screen.
***************************************************************************** give all falling bubbles an x axis movement  draw bubbles falling off the screen
     * follows y=x^2-8x scaled to bubble size
      draw bubble if it is still on the screen  break out if all bubbles are off the screen  handle button events  framerate limiting ****************************************************************************
* bubbles_checklevel() checks the state of the playboard for a win or loss.
***************************************************************************** check for bubbles below cut off point  check for bubbles above cut off point  level complete, record score  advance to the next level ****************************************************************************
* bubbles_recordscore() inserts a high score into the high scores list and
*     returns the high score position.
*********************************************************************************************************************************************************
* bubbles_loaddata() loads highest level beaten.
***************************************************************************** open data file  read in saved game ****************************************************************************
* bubbles_savedata() saves the current game state.
***************************************************************************** no need to save ****************************************************************************
* bubbles_loadgame() loads the saved game and returns load success.
***************************************************************************** open game file  read in saved game ****************************************************************************
* bubbles_savegame() saves the current game state.
***************************************************************************** nothing to save  write out the game state to the save file ****************************************************************************
* bubbles_setcolors() set the foreground and background colors.
*********************************************************************************************************************************************************
* bubbles_callback() is the default event handler callback which is called
*     on usb connect and shutdown.
*********************************************************************************************************************************************************
* bubbles_handlebuttons() handles button events during a game.
***************************************************************************** FIXME: Should probably check remote hold here  change angle to the left  change angle to the right  fire the shot  pause the game  end the game  no button pressed ****************************************************************************
* bubbles_menu() is the initial menu at the start of the game.
***************************************************************************** resume game  new game  choose level  High scores  Playback Control  quit but don't save  save and quit  ****************************************************************************
* bubbles() is the main game subroutine, it returns the final game status.
************************************************************************************************
    *       menu        *
    **************************************
    *       init        *
    ****************************************
    *        play         *
    ********************* refresh the board  manange idle framerate  handle button events  handle timing ****************************************************************************
* plugin entry point.
***************************************************************************** load files  start app  record high level  record high score  record high score  fall through to BB_END  fall through 