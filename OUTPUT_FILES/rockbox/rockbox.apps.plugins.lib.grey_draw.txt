**************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* New greyscale framework
* Drawing functions
*
* This is a generic framework to display 129 shades of grey on low-depth
* bitmap LCDs (Archos b&w, Iriver & Ipod 4-grey) within plugins.
*
* Copyright (C) 2008 Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
***************************************************************************** low-level drawing functions **** Drawing functions ** Clear the current viewport  Clear the whole display  Set a single pixel  Draw a line  include endpoints  Draw a horizontal line (optimised)  direction flip  nothing to draw?  drawmode and optimisation  clipping  DRMODE_COMPLEMENT  Draw a vertical line (optimised)  direction flip  nothing to draw?  clipping  Draw a filled triangle  sort vertices by increasing y value  y2 < y3 < y1  y3 < y1 < y2  y3 <= y2 <= y1  y2 < y1 <= y3  y1 <= y3 < y2  else already sorted  draw  first part  second part  Draw a rectangular box  Fill a rectangular area  drawmode and optimisation  clipping  DRMODE_COMPLEMENT  About Rockbox' internal monochrome bitmap format:
 *
 * A bitmap contains one bit for every pixel that defines if that pixel is
 * foreground (1) or background (0). Bits within a byte are arranged
 * vertically, LSB at top.
 * The bytes are stored in row-major order, with byte 0 being top left,
 * byte 1 2nd from left etc. The first row of bytes defines pixel rows
 * 0..7, the second row defines pixel row 8..15 etc.  Draw a partial monochrome bitmap  bit 8 == sentinel  clipping  move starting point  bit 8 == sentinel  mask out inversevid  Draw a full monochrome bitmap  Draw a partial greyscale bitmap, canonical format  clipping  move starting point  Draw a full greyscale bitmap, canonical format  Put a string at a given pixel position, skipping first ofs pixel columns  get proportional width and glyph bits  Put a string at a given pixel position ** Unbuffered drawing functions ** Clear the greyscale display (sets all pixels to white)  Assembler optimised helper function for copying a single line to the 
 * greyvalue buffer.  Draw a partial greyscale bitmap, canonical format  nothing to draw?  clipping  move starting point  vertical packing or vertical interleaved  LCD_PIXELFORMAT  Draw a full greyscale bitmap, canonical format **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* New greyscale framework
* Drawing functions
*
* This is a generic framework to display 129 shades of grey on low-depth
* bitmap LCDs (Archos b&w, Iriver & Ipod 4-grey) within plugins.
*
* Copyright (C) 2008 Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
***************************************************************************** low-level drawing functions **** Drawing functions ** Clear the current viewport  Clear the whole display  Set a single pixel  Draw a line  include endpoints  Draw a horizontal line (optimised)  direction flip  nothing to draw?  drawmode and optimisation  clipping  DRMODE_COMPLEMENT  Draw a vertical line (optimised)  direction flip  nothing to draw?  clipping  Draw a filled triangle  sort vertices by increasing y value  y2 < y3 < y1  y3 < y1 < y2  y3 <= y2 <= y1  y2 < y1 <= y3  y1 <= y3 < y2  else already sorted  draw  first part  second part  Draw a rectangular box  Fill a rectangular area  drawmode and optimisation  clipping  DRMODE_COMPLEMENT  About Rockbox' internal monochrome bitmap format:
 *
 * A bitmap contains one bit for every pixel that defines if that pixel is
 * foreground (1) or background (0). Bits within a byte are arranged
 * vertically, LSB at top.
 * The bytes are stored in row-major order, with byte 0 being top left,
 * byte 1 2nd from left etc. The first row of bytes defines pixel rows
 * 0..7, the second row defines pixel row 8..15 etc.  Draw a partial monochrome bitmap  bit 8 == sentinel  clipping  move starting point  bit 8 == sentinel  mask out inversevid  Draw a full monochrome bitmap  Draw a partial greyscale bitmap, canonical format  clipping  move starting point  Draw a full greyscale bitmap, canonical format  Put a string at a given pixel position, skipping first ofs pixel columns  get proportional width and glyph bits  Put a string at a given pixel position ** Unbuffered drawing functions ** Clear the greyscale display (sets all pixels to white)  Assembler optimised helper function for copying a single line to the 
 * greyvalue buffer.  Draw a partial greyscale bitmap, canonical format  nothing to draw?  clipping  move starting point  vertical packing or vertical interleaved  LCD_PIXELFORMAT  Draw a full greyscale bitmap, canonical format **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* New greyscale framework
* Drawing functions
*
* This is a generic framework to display 129 shades of grey on low-depth
* bitmap LCDs (Archos b&w, Iriver & Ipod 4-grey) within plugins.
*
* Copyright (C) 2008 Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
***************************************************************************** low-level drawing functions **** Drawing functions ** Clear the current viewport  Clear the whole display  Set a single pixel  Draw a line  include endpoints  Draw a horizontal line (optimised)  direction flip  nothing to draw?  drawmode and optimisation  clipping  DRMODE_COMPLEMENT  Draw a vertical line (optimised)  direction flip  nothing to draw?  clipping  Draw a filled triangle  sort vertices by increasing y value  y2 < y3 < y1  y3 < y1 < y2  y3 <= y2 <= y1  y2 < y1 <= y3  y1 <= y3 < y2  else already sorted  draw  first part  second part  Draw a rectangular box  Fill a rectangular area  drawmode and optimisation  clipping  DRMODE_COMPLEMENT  About Rockbox' internal monochrome bitmap format:
 *
 * A bitmap contains one bit for every pixel that defines if that pixel is
 * foreground (1) or background (0). Bits within a byte are arranged
 * vertically, LSB at top.
 * The bytes are stored in row-major order, with byte 0 being top left,
 * byte 1 2nd from left etc. The first row of bytes defines pixel rows
 * 0..7, the second row defines pixel row 8..15 etc.  Draw a partial monochrome bitmap  bit 8 == sentinel  clipping  move starting point  bit 8 == sentinel  mask out inversevid  Draw a full monochrome bitmap  Draw a partial greyscale bitmap, canonical format  clipping  move starting point  Draw a full greyscale bitmap, canonical format  Put a string at a given pixel position, skipping first ofs pixel columns  get proportional width and glyph bits  Put a string at a given pixel position ** Unbuffered drawing functions ** Clear the greyscale display (sets all pixels to white)  Assembler optimised helper function for copying a single line to the 
 * greyvalue buffer.  Draw a partial greyscale bitmap, canonical format  nothing to draw?  clipping  move starting point  vertical packing or vertical interleaved  LCD_PIXELFORMAT  Draw a full greyscale bitmap, canonical format 