
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 
 * mtd - simple memory technology device manipulation tool
 *
 * Copyright (C) 2005      Waldemar Brodkorb <wbx@dass-it.de>,
 * Copyright (C) 2005-2009 Felix Fietkau <nbd@nbd.name>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License v2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 * The code is based on the linux-mtd examples.
  directory name without /, empty means root dir  "HDR0"  Write TP-Link recovery flag  buffer may contain data already (from trx check or last mtd partition write attempt)  Pad block to eraseblock size  got an EOF marker - this is the place to add some jffs2 data  don't add it again  no EOF marker, make sure we figure out the last inode number
			 * before appending some data  need to erase the next block before writing data to it  Move the file pointer along over the bad block. erase the chunk  Clear TP-Link recovery flag  try regular reboot method first  if we're still alive at this point, force the kernel to reboot  check trx file before erasing or writing anything 