 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *   Door animation code (opening/closing)
 *
 *----------------------------------------------------------------------------- Ty 03/27/98 - externalized///////////////////////////////////////////////////////////// Door action routines, called once per tick///////////////////////////////////////////////////////////// T_VerticalDoor Passed a door structure containing all info about the door. See P_SPEC.H for fields. Returns nothing. jff 02/08/98 all cases with labels beginning with gen added to support generalized line type behaviors. Is the door waiting, going up, or going down? Door is waiting downcount and check time to go back down time to go back down time to go back up time to go back up Special case for sector type door that opens in 5 mins 5 minutes up? time to raise then door acts just like normal 1 DR door now Door is moving down killough 10/98: implement gradual lighting effects  handle door reaching bottom regular open and close doors are all done, remove themjff 2/22/98 unlink and free killough 4/15/98: remove double-closing sound of blazing doorsjff 2/22/98 unlink and free close then open doors start waiting jff 5/8/98 insert delay jff 1/31/98 turn lighting off in tagged sectors of manual doors
       * killough 10/98: replaced with gradual lighting code
        handle door meeting obstruction on way down Close types do not bounce, merely wait other types bounce off the obstruction Door is moving up killough 10/98: implement gradual lighting effects  handle door reaching the top regular open/close doors start waiting wait at top with delay close and close/open doors are donejff 2/22/98 unlink and free jff 1/31/98 turn lighting on in tagged sectors of manual doors
         * killough 10/98: replaced with gradual lighting code ///////////////////////////////////////////////////////////// Door linedef handlers///////////////////////////////////////////////////////////// EV_DoLockedDoor Handle opening a tagged locked door Passed the line activating the door, the type of door, and the thing that activated the line Returns true if a thinker created only players can open locked doors check type of linedef, and if key is possessed to open it Blue Lock Ty 03/27/98 - externalized killough 3/20/98 Red Lock Ty 03/27/98 - externalized killough 3/20/98 Yellow Lock Ty 03/27/98 - externalized killough 3/20/98 got the key, so open the door EV_DoDoor Handle opening a tagged door Passed the line activating the door and the type of door Returns true if a thinker created open all doors with the same tag as the activating line if the ceiling already moving, don't start the door actionjff 2/22/98 new door thinkerjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no light effects with tagged doors  setup door parameters according to type of door EV_VerticalDoor Handle opening a door manually, no tag value Passed the line activating the door and the thing activating it Returns true if a thinker created jff 2/12/98 added int return value, fixed all returns  Check for locks Blue Lock Ty 03/27/98 - externalized killough 3/20/98 Yellow Lock Ty 03/27/98 - externalized killough 3/20/98 Red Lock Ty 03/27/98 - externalized killough 3/20/98 if the wrong side of door is pushed, give oof sound killough killough 3/20/98 get the sector on the second side of activating linedef if door already has a thinker, use it
    * cph 2001/04/05 -
    * Ok, this is a disaster area. We're assuming that sec->ceilingdata
    *  is a vldoor_t! What if this door is controlled by both DR lines
    *  and by switches? I don't know how to fix that.
    * Secondly, original Doom didn't distinguish floor/lighting/ceiling
    *  actions, so we need to do the same in demo compatibility mode.
     only for "raise" doors, not "open"s go back up JDC: bad guys never close doors start going down immediately emit proper sound blazing door raise blazing door open normal door sound locked door sound new door thinkerjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: use gradual lighting changes if nonzero tag given  set the type of door from the activating linedef type blazing door raise blazing door open killough 10/98 find the top and bottom of the movement range///////////////////////////////////////////////////////////// Sector type door spawners///////////////////////////////////////////////////////////// P_SpawnDoorCloseIn30() Spawn a door that closes after 30 seconds (called at level init) Passed the sector of the door, whose type specified the door action Returns nothingjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no lighting changes  P_SpawnDoorRaiseIn5Mins() Spawn a door that opens after 5 minutes (called at level init) Passed the sector of the door, whose type specified the door action Returns nothingjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no lighting changes  Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *   Door animation code (opening/closing)
 *
 *----------------------------------------------------------------------------- Ty 03/27/98 - externalized///////////////////////////////////////////////////////////// Door action routines, called once per tick///////////////////////////////////////////////////////////// T_VerticalDoor Passed a door structure containing all info about the door. See P_SPEC.H for fields. Returns nothing. jff 02/08/98 all cases with labels beginning with gen added to support generalized line type behaviors. Is the door waiting, going up, or going down? Door is waiting downcount and check time to go back down time to go back down time to go back up time to go back up Special case for sector type door that opens in 5 mins 5 minutes up? time to raise then door acts just like normal 1 DR door now Door is moving down killough 10/98: implement gradual lighting effects  handle door reaching bottom regular open and close doors are all done, remove themjff 2/22/98 unlink and free killough 4/15/98: remove double-closing sound of blazing doorsjff 2/22/98 unlink and free close then open doors start waiting jff 5/8/98 insert delay jff 1/31/98 turn lighting off in tagged sectors of manual doors
       * killough 10/98: replaced with gradual lighting code
        handle door meeting obstruction on way down Close types do not bounce, merely wait other types bounce off the obstruction Door is moving up killough 10/98: implement gradual lighting effects  handle door reaching the top regular open/close doors start waiting wait at top with delay close and close/open doors are donejff 2/22/98 unlink and free jff 1/31/98 turn lighting on in tagged sectors of manual doors
         * killough 10/98: replaced with gradual lighting code ///////////////////////////////////////////////////////////// Door linedef handlers///////////////////////////////////////////////////////////// EV_DoLockedDoor Handle opening a tagged locked door Passed the line activating the door, the type of door, and the thing that activated the line Returns true if a thinker created only players can open locked doors check type of linedef, and if key is possessed to open it Blue Lock Ty 03/27/98 - externalized killough 3/20/98 Red Lock Ty 03/27/98 - externalized killough 3/20/98 Yellow Lock Ty 03/27/98 - externalized killough 3/20/98 got the key, so open the door EV_DoDoor Handle opening a tagged door Passed the line activating the door and the type of door Returns true if a thinker created open all doors with the same tag as the activating line if the ceiling already moving, don't start the door actionjff 2/22/98 new door thinkerjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no light effects with tagged doors  setup door parameters according to type of door EV_VerticalDoor Handle opening a door manually, no tag value Passed the line activating the door and the thing activating it Returns true if a thinker created jff 2/12/98 added int return value, fixed all returns  Check for locks Blue Lock Ty 03/27/98 - externalized killough 3/20/98 Yellow Lock Ty 03/27/98 - externalized killough 3/20/98 Red Lock Ty 03/27/98 - externalized killough 3/20/98 if the wrong side of door is pushed, give oof sound killough killough 3/20/98 get the sector on the second side of activating linedef if door already has a thinker, use it
    * cph 2001/04/05 -
    * Ok, this is a disaster area. We're assuming that sec->ceilingdata
    *  is a vldoor_t! What if this door is controlled by both DR lines
    *  and by switches? I don't know how to fix that.
    * Secondly, original Doom didn't distinguish floor/lighting/ceiling
    *  actions, so we need to do the same in demo compatibility mode.
     only for "raise" doors, not "open"s go back up JDC: bad guys never close doors start going down immediately emit proper sound blazing door raise blazing door open normal door sound locked door sound new door thinkerjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: use gradual lighting changes if nonzero tag given  set the type of door from the activating linedef type blazing door raise blazing door open killough 10/98 find the top and bottom of the movement range///////////////////////////////////////////////////////////// Sector type door spawners///////////////////////////////////////////////////////////// P_SpawnDoorCloseIn30() Spawn a door that closes after 30 seconds (called at level init) Passed the sector of the door, whose type specified the door action Returns nothingjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no lighting changes  P_SpawnDoorRaiseIn5Mins() Spawn a door that opens after 5 minutes (called at level init) Passed the sector of the door, whose type specified the door action Returns nothingjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no lighting changes  Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *   Door animation code (opening/closing)
 *
 *----------------------------------------------------------------------------- Ty 03/27/98 - externalized///////////////////////////////////////////////////////////// Door action routines, called once per tick///////////////////////////////////////////////////////////// T_VerticalDoor Passed a door structure containing all info about the door. See P_SPEC.H for fields. Returns nothing. jff 02/08/98 all cases with labels beginning with gen added to support generalized line type behaviors. Is the door waiting, going up, or going down? Door is waiting downcount and check time to go back down time to go back down time to go back up time to go back up Special case for sector type door that opens in 5 mins 5 minutes up? time to raise then door acts just like normal 1 DR door now Door is moving down killough 10/98: implement gradual lighting effects  handle door reaching bottom regular open and close doors are all done, remove themjff 2/22/98 unlink and free killough 4/15/98: remove double-closing sound of blazing doorsjff 2/22/98 unlink and free close then open doors start waiting jff 5/8/98 insert delay jff 1/31/98 turn lighting off in tagged sectors of manual doors
       * killough 10/98: replaced with gradual lighting code
        handle door meeting obstruction on way down Close types do not bounce, merely wait other types bounce off the obstruction Door is moving up killough 10/98: implement gradual lighting effects  handle door reaching the top regular open/close doors start waiting wait at top with delay close and close/open doors are donejff 2/22/98 unlink and free jff 1/31/98 turn lighting on in tagged sectors of manual doors
         * killough 10/98: replaced with gradual lighting code ///////////////////////////////////////////////////////////// Door linedef handlers///////////////////////////////////////////////////////////// EV_DoLockedDoor Handle opening a tagged locked door Passed the line activating the door, the type of door, and the thing that activated the line Returns true if a thinker created only players can open locked doors check type of linedef, and if key is possessed to open it Blue Lock Ty 03/27/98 - externalized killough 3/20/98 Red Lock Ty 03/27/98 - externalized killough 3/20/98 Yellow Lock Ty 03/27/98 - externalized killough 3/20/98 got the key, so open the door EV_DoDoor Handle opening a tagged door Passed the line activating the door and the type of door Returns true if a thinker created open all doors with the same tag as the activating line if the ceiling already moving, don't start the door actionjff 2/22/98 new door thinkerjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no light effects with tagged doors  setup door parameters according to type of door EV_VerticalDoor Handle opening a door manually, no tag value Passed the line activating the door and the thing activating it Returns true if a thinker created jff 2/12/98 added int return value, fixed all returns  Check for locks Blue Lock Ty 03/27/98 - externalized killough 3/20/98 Yellow Lock Ty 03/27/98 - externalized killough 3/20/98 Red Lock Ty 03/27/98 - externalized killough 3/20/98 if the wrong side of door is pushed, give oof sound killough killough 3/20/98 get the sector on the second side of activating linedef if door already has a thinker, use it
    * cph 2001/04/05 -
    * Ok, this is a disaster area. We're assuming that sec->ceilingdata
    *  is a vldoor_t! What if this door is controlled by both DR lines
    *  and by switches? I don't know how to fix that.
    * Secondly, original Doom didn't distinguish floor/lighting/ceiling
    *  actions, so we need to do the same in demo compatibility mode.
     only for "raise" doors, not "open"s go back up JDC: bad guys never close doors start going down immediately emit proper sound blazing door raise blazing door open normal door sound locked door sound new door thinkerjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: use gradual lighting changes if nonzero tag given  set the type of door from the activating linedef type blazing door raise blazing door open killough 10/98 find the top and bottom of the movement range///////////////////////////////////////////////////////////// Sector type door spawners///////////////////////////////////////////////////////////// P_SpawnDoorCloseIn30() Spawn a door that closes after 30 seconds (called at level init) Passed the sector of the door, whose type specified the door action Returns nothingjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no lighting changes  P_SpawnDoorRaiseIn5Mins() Spawn a door that opens after 5 minutes (called at level init) Passed the sector of the door, whose type specified the door action Returns nothingjff 2/22/98 jff 1/31/98 remember line that triggered us killough 10/98: no lighting changes 