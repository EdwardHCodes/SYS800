 
 * Copyright (C) 1996-1998 Szeredi Miklos
 * Email: mszeredi@inf.bme.hu
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version. See the file COPYING. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
  This module deals with the different tape file formats (.TAP and .TZX)   'sptape.c' uses the functions provided by this module. static FILE *tapefp = NULL; changed NONE because of warinigs #define NONE 0 Table containing information on TZX blocks  ID: 00  ID: 08  ID: 10  ID: 18  ID: 20  ID: 28  ID: 30  ID: 38  ID: 40  ID: 48  ID: 50  ID: 58 FILE *fpreturn (int) fread(ptr, 1, (size_t) size, tapefp); was NONE herefseek(tapefp, tf_cseg.len - tf_cseg.ptr - 1, SEEK_CUR);fseek(tapefp, firstseg_offs, SEEK_SET); 2016  672  1568 fseek(tapefp, callctr*2, SEEK_CUR); PL_SYNC tapefp = fopen(name, "rb");rb->snprintf(seg_desc,DESC_LEN, "Could not open `%s': %s", name, strerror(errno)); 
 * Copyright (C) 1996-1998 Szeredi Miklos
 * Email: mszeredi@inf.bme.hu
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version. See the file COPYING. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
  This module deals with the different tape file formats (.TAP and .TZX)   'sptape.c' uses the functions provided by this module. static FILE *tapefp = NULL; changed NONE because of warinigs #define NONE 0 Table containing information on TZX blocks  ID: 00  ID: 08  ID: 10  ID: 18  ID: 20  ID: 28  ID: 30  ID: 38  ID: 40  ID: 48  ID: 50  ID: 58 FILE *fpreturn (int) fread(ptr, 1, (size_t) size, tapefp); was NONE herefseek(tapefp, tf_cseg.len - tf_cseg.ptr - 1, SEEK_CUR);fseek(tapefp, firstseg_offs, SEEK_SET); 2016  672  1568 fseek(tapefp, callctr*2, SEEK_CUR); PL_SYNC tapefp = fopen(name, "rb");rb->snprintf(seg_desc,DESC_LEN, "Could not open `%s': %s", name, strerror(errno)); 
 * Copyright (C) 1996-1998 Szeredi Miklos
 * Email: mszeredi@inf.bme.hu
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version. See the file COPYING. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
  This module deals with the different tape file formats (.TAP and .TZX)   'sptape.c' uses the functions provided by this module. static FILE *tapefp = NULL; changed NONE because of warinigs #define NONE 0 Table containing information on TZX blocks  ID: 00  ID: 08  ID: 10  ID: 18  ID: 20  ID: 28  ID: 30  ID: 38  ID: 40  ID: 48  ID: 50  ID: 58 FILE *fpreturn (int) fread(ptr, 1, (size_t) size, tapefp); was NONE herefseek(tapefp, tf_cseg.len - tf_cseg.ptr - 1, SEEK_CUR);fseek(tapefp, firstseg_offs, SEEK_SET); 2016  672  1568 fseek(tapefp, callctr*2, SEEK_CUR); PL_SYNC tapefp = fopen(name, "rb");rb->snprintf(seg_desc,DESC_LEN, "Could not open `%s': %s", name, strerror(errno));