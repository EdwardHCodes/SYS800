
 * Copyright (C) 2015 Thomas Hebb <tommyhebb@gmail.com>
 * Copyright (C) 2016 Christian Lamparter <chunkeey@googlemail.com>
 *
 * The format of the header this tool generates was first documented by
 * Chris Blake <chrisrblake93 (at) gmail.com> in a shell script of the
 * same purpose. I have created this reimplementation at his request. The
 * original script can be found at:
 * <https://github.com/riptidewave93/meraki-partbuilder>
 *
 * Support for the old header format, which is used by the Cisco Z1 AP
 * has been reverse engineered from the nandloader's nand_load_bk function.
 * The original code is part of Cisco's GPL code and can be found at:
 * <https://github.com/riptidewave93/meraki-linux>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
 *
 
 * Globals
  terminating entry 
 * Message macros
  If requested, resize buffer to remove padding  Allocate and initialize buffer for final image  Load kernel  Write magic values and filler  Write load and kernel entry point address  Write header and image length  this gets replaced later, after the checksum has been calculated  Write checksum  Get kernel length 
 * Copyright (C) 2015 Thomas Hebb <tommyhebb@gmail.com>
 * Copyright (C) 2016 Christian Lamparter <chunkeey@googlemail.com>
 *
 * The format of the header this tool generates was first documented by
 * Chris Blake <chrisrblake93 (at) gmail.com> in a shell script of the
 * same purpose. I have created this reimplementation at his request. The
 * original script can be found at:
 * <https://github.com/riptidewave93/meraki-partbuilder>
 *
 * Support for the old header format, which is used by the Cisco Z1 AP
 * has been reverse engineered from the nandloader's nand_load_bk function.
 * The original code is part of Cisco's GPL code and can be found at:
 * <https://github.com/riptidewave93/meraki-linux>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
 *
 
 * Globals
  terminating entry 
 * Message macros
  If requested, resize buffer to remove padding  Allocate and initialize buffer for final image  Load kernel  Write magic values and filler  Write load and kernel entry point address  Write header and image length  this gets replaced later, after the checksum has been calculated  Write checksum  Get kernel length 