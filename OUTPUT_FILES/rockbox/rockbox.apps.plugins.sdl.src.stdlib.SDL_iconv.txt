
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 This file contains portable iconv functions for SDL  Depending on which standard the iconv() was implemented with,
   iconv() may or may not use const char ** for the inbuf param.
   If we get this wrong, it's just a warning, so no big deal.
 Lots of useful information on Unicode at:
	http://www.cl.cam.ac.uk/~mgk25/unicode.html
 Needs byte order marker  Needs byte order marker  Native byte order assumed  Native byte order assumed  We need to trim down strings like "en_US.UTF-8@blah" to "UTF-8"  chop end of string.  For simplicity, we'll convert everything to and from UCS-4  Reset the context  Scan for a byte order marker  We can't tell, default to host order  Scan for a byte order marker  We can't tell, default to host order  Default to host order, need to add byte order marker  Default to host order, need to add byte order marker  Decode a character  RFC 3629  Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Potential security risk
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 RFC 2781  Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 RFC 2781  Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Encode a character  RFC 3629  RFC 2781  RFC 2781  Update state  !HAVE_ICONV  See if we can recover here (fixes iconv on Solaris 11)  Try skipping some input data - not perfect, but...  We can't continue... 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 This file contains portable iconv functions for SDL  Depending on which standard the iconv() was implemented with,
   iconv() may or may not use const char ** for the inbuf param.
   If we get this wrong, it's just a warning, so no big deal.
 Lots of useful information on Unicode at:
	http://www.cl.cam.ac.uk/~mgk25/unicode.html
 Needs byte order marker  Needs byte order marker  Native byte order assumed  Native byte order assumed  We need to trim down strings like "en_US.UTF-8@blah" to "UTF-8"  chop end of string.  For simplicity, we'll convert everything to and from UCS-4  Reset the context  Scan for a byte order marker  We can't tell, default to host order  Scan for a byte order marker  We can't tell, default to host order  Default to host order, need to add byte order marker  Default to host order, need to add byte order marker  Decode a character  RFC 3629  Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Potential security risk
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 RFC 2781  Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 RFC 2781  Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Encode a character  RFC 3629  RFC 2781  RFC 2781  Update state  !HAVE_ICONV  See if we can recover here (fixes iconv on Solaris 11)  Try skipping some input data - not perfect, but...  We can't continue... 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 This file contains portable iconv functions for SDL  Depending on which standard the iconv() was implemented with,
   iconv() may or may not use const char ** for the inbuf param.
   If we get this wrong, it's just a warning, so no big deal.
 Lots of useful information on Unicode at:
	http://www.cl.cam.ac.uk/~mgk25/unicode.html
 Needs byte order marker  Needs byte order marker  Native byte order assumed  Native byte order assumed  We need to trim down strings like "en_US.UTF-8@blah" to "UTF-8"  chop end of string.  For simplicity, we'll convert everything to and from UCS-4  Reset the context  Scan for a byte order marker  We can't tell, default to host order  Scan for a byte order marker  We can't tell, default to host order  Default to host order, need to add byte order marker  Default to host order, need to add byte order marker  Decode a character  RFC 3629  Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Skip illegal sequences
						return SDL_ICONV_EILSEQ;
						 Potential security risk
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 RFC 2781  Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 RFC 2781  Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Skip illegal sequences
					return SDL_ICONV_EILSEQ;
					 Encode a character  RFC 3629  RFC 2781  RFC 2781  Update state  !HAVE_ICONV  See if we can recover here (fixes iconv on Solaris 11)  Try skipping some input data - not perfect, but...  We can't continue... 