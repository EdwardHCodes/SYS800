-------------------------------------------------------------------------
Copyright (C) 1996, 2003 - 3D Realms Entertainment

This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

Duke Nukem 3D is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
aint32_t with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Original Source: 1996 - Todd Replogle
Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
------------------------------------------------------------------------- Savage Baggage MastersMEDMED
int32_t hitaspriteandwall(short i,short *hitsp,short *hitw,short *x, short *y)
{
    int32_t sz;
    short sect;

    hitscan(SX,SY,SZ,SECT,
        sintable[(SA+512)&2047],
        sintable[SA&2047],
        0,&sect,hitw,hitsp,x,y,&sz,CLIPMASK1);

    return ( FindDistance2D(*x-SX,*y-SY) );
}
    if(s->picnum == APLAYER && ps[s->yvel].aim_mode) return -1; FIX_00015: Backward compliance with older demos (down to demos v27, 28, 116 and 117 only)if player has AutoAim ON do the function. don't disable any autoaim in case we are playing an old demo							  ud.ffire == 0 && Total tweek                sa = getangle(ps[j].oposx-sx,ps[j].oposy-sy);            RESHOOTGROW:    if(wall[hitwall].overpicnum == MIRROR && k == 0)
                {
                    l = getangle(
                        wall[wall[hitwall].point2].x-wall[hitwall].x,
                        wall[wall[hitwall].point2].y-wall[hitwall].y);

                    sx = hitx;
                    sy = hity;
                    sz = hitz;
                    sect = hitsect;
                    sa = ((l<<1) - sa)&2047;
                    sx += sintable[(sa+512)&2047]>>12;
                    sy += sintable[sa&2047]>>12;

                    k++;
                    goto RESHOOTGROW;
                }
                else     if(ps[snum].access_spritenum >= 0)
        p = sprite[ps[snum].access_spritenum].pal;
    else
        p = wall[ps[snum].access_wallnum].pal;
      else        p = wall[ps[snum].access_wallnum].pal; FIX_00026: Weapon can now be hidden (on your screen only).DUD 7 MED FIX_00038: Improved Mouse accuracy (losses of integer computation)     FIX_00021: Duke was moving when moving the mouse up/down. Y axis move is disabled. remove y axis mouse aiming button is temporary mouse aiming button is a toggle FIX_00039: Toggle autoaim between Normal (full) and partial (on bullet weapons only) FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down This is because we use the same FTA for BULLET and NORMAL text: duke doesn't see we  changed the text and doesnt issue a refresh  Originally reserved for "screen saved". Now used dynamically.  2 = normal, 1 = bullet only, 0 = disabled (not implemented) avoid medkit overloading controls FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down % xduke: dont waste mouse tics svel -= info.dx; This helps the analog feel a bit. Account for which mode we're in. (1, 2 or 7) xduke: fix assymetry (speed of 2 is like -1) If Mouse aim active xduke: fix assymetry (speed of 2 is like -1)	if(loc.avel)		printf("getinput loc.avel=%d\n", loc.avel);    j = sync[snum].avel;    p->weapon_ang = -(j/5); FIX_00076: Added default names for bots + fixed a "killed <name>" bug in Fakeplayers with AI                    printf(tempbuf);            p->bobcounter += 32; 2 == normal == full; 1 == partial; 0 = none (not implemented) 1<<6: toggle ud.auto_aim 1<<7 : ANTIWEAPONSWITCH
    if( j && ud.screen_tilting == 2)
    {
        k = 4;
        if(sb_snum&(1<<5)) k <<= 2;
        p->rotscrnang -= k*j;
        p->look_ang += k*j;
    }
     Shrinking codeGoin upA (soar high)Z (soar low)Aprox twenty seconds.falling (TICSPERFRAME<<6); hit the groundSmooth on the groundSmooth on the waterDo the quick lefts and rightsp->ang += syncangvel * constantENGINE calculates angvel for you RBG***Shooting code/changes                if(p->curr_weapon == KNEE_WEAPON) *kb = 1; HACKS Glowing && p->random_club_frame == 0)UPDATE THIS FILE OVER THE OLD GETSPRITESCORE/COMPUTERGETINPUT FUNCTIONSKNEE PIST SHOT CHAIN RPG PIPE SHRI DEVI WALL FREE HAND EXPAKNEEPISTSHOTCHAINRPGPIPESHRIDEVIWALLFREEHANDEXPAStrafe attackif (dx*(y1-wall[i].y) <= dy*(x1-wall[i].x))   if (dx*(y2-wall[i].y) >= dy*(x2-wall[i].x))Hit a wall (49152 for sprite)Strafe attack-------------------------------------------------------------------------
Copyright (C) 1996, 2003 - 3D Realms Entertainment

This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

Duke Nukem 3D is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
aint32_t with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Original Source: 1996 - Todd Replogle
Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
------------------------------------------------------------------------- Savage Baggage MastersMEDMED
int32_t hitaspriteandwall(short i,short *hitsp,short *hitw,short *x, short *y)
{
    int32_t sz;
    short sect;

    hitscan(SX,SY,SZ,SECT,
        sintable[(SA+512)&2047],
        sintable[SA&2047],
        0,&sect,hitw,hitsp,x,y,&sz,CLIPMASK1);

    return ( FindDistance2D(*x-SX,*y-SY) );
}
    if(s->picnum == APLAYER && ps[s->yvel].aim_mode) return -1; FIX_00015: Backward compliance with older demos (down to demos v27, 28, 116 and 117 only)if player has AutoAim ON do the function. don't disable any autoaim in case we are playing an old demo							  ud.ffire == 0 && Total tweek                sa = getangle(ps[j].oposx-sx,ps[j].oposy-sy);            RESHOOTGROW:    if(wall[hitwall].overpicnum == MIRROR && k == 0)
                {
                    l = getangle(
                        wall[wall[hitwall].point2].x-wall[hitwall].x,
                        wall[wall[hitwall].point2].y-wall[hitwall].y);

                    sx = hitx;
                    sy = hity;
                    sz = hitz;
                    sect = hitsect;
                    sa = ((l<<1) - sa)&2047;
                    sx += sintable[(sa+512)&2047]>>12;
                    sy += sintable[sa&2047]>>12;

                    k++;
                    goto RESHOOTGROW;
                }
                else     if(ps[snum].access_spritenum >= 0)
        p = sprite[ps[snum].access_spritenum].pal;
    else
        p = wall[ps[snum].access_wallnum].pal;
      else        p = wall[ps[snum].access_wallnum].pal; FIX_00026: Weapon can now be hidden (on your screen only).DUD 7 MED FIX_00038: Improved Mouse accuracy (losses of integer computation)     FIX_00021: Duke was moving when moving the mouse up/down. Y axis move is disabled. remove y axis mouse aiming button is temporary mouse aiming button is a toggle FIX_00039: Toggle autoaim between Normal (full) and partial (on bullet weapons only) FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down This is because we use the same FTA for BULLET and NORMAL text: duke doesn't see we  changed the text and doesnt issue a refresh  Originally reserved for "screen saved". Now used dynamically.  2 = normal, 1 = bullet only, 0 = disabled (not implemented) avoid medkit overloading controls FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down % xduke: dont waste mouse tics svel -= info.dx; This helps the analog feel a bit. Account for which mode we're in. (1, 2 or 7) xduke: fix assymetry (speed of 2 is like -1) If Mouse aim active xduke: fix assymetry (speed of 2 is like -1)	if(loc.avel)		printf("getinput loc.avel=%d\n", loc.avel);    j = sync[snum].avel;    p->weapon_ang = -(j/5); FIX_00076: Added default names for bots + fixed a "killed <name>" bug in Fakeplayers with AI                    printf(tempbuf);            p->bobcounter += 32; 2 == normal == full; 1 == partial; 0 = none (not implemented) 1<<6: toggle ud.auto_aim 1<<7 : ANTIWEAPONSWITCH
    if( j && ud.screen_tilting == 2)
    {
        k = 4;
        if(sb_snum&(1<<5)) k <<= 2;
        p->rotscrnang -= k*j;
        p->look_ang += k*j;
    }
     Shrinking codeGoin upA (soar high)Z (soar low)Aprox twenty seconds.falling (TICSPERFRAME<<6); hit the groundSmooth on the groundSmooth on the waterDo the quick lefts and rightsp->ang += syncangvel * constantENGINE calculates angvel for you RBG***Shooting code/changes                if(p->curr_weapon == KNEE_WEAPON) *kb = 1; HACKS Glowing && p->random_club_frame == 0)UPDATE THIS FILE OVER THE OLD GETSPRITESCORE/COMPUTERGETINPUT FUNCTIONSKNEE PIST SHOT CHAIN RPG PIPE SHRI DEVI WALL FREE HAND EXPAKNEEPISTSHOTCHAINRPGPIPESHRIDEVIWALLFREEHANDEXPAStrafe attackif (dx*(y1-wall[i].y) <= dy*(x1-wall[i].x))   if (dx*(y2-wall[i].y) >= dy*(x2-wall[i].x))Hit a wall (49152 for sprite)Strafe attack-------------------------------------------------------------------------
Copyright (C) 1996, 2003 - 3D Realms Entertainment

This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

Duke Nukem 3D is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
aint32_t with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Original Source: 1996 - Todd Replogle
Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
------------------------------------------------------------------------- Savage Baggage MastersMEDMED
int32_t hitaspriteandwall(short i,short *hitsp,short *hitw,short *x, short *y)
{
    int32_t sz;
    short sect;

    hitscan(SX,SY,SZ,SECT,
        sintable[(SA+512)&2047],
        sintable[SA&2047],
        0,&sect,hitw,hitsp,x,y,&sz,CLIPMASK1);

    return ( FindDistance2D(*x-SX,*y-SY) );
}
    if(s->picnum == APLAYER && ps[s->yvel].aim_mode) return -1; FIX_00015: Backward compliance with older demos (down to demos v27, 28, 116 and 117 only)if player has AutoAim ON do the function. don't disable any autoaim in case we are playing an old demo							  ud.ffire == 0 && Total tweek                sa = getangle(ps[j].oposx-sx,ps[j].oposy-sy);            RESHOOTGROW:    if(wall[hitwall].overpicnum == MIRROR && k == 0)
                {
                    l = getangle(
                        wall[wall[hitwall].point2].x-wall[hitwall].x,
                        wall[wall[hitwall].point2].y-wall[hitwall].y);

                    sx = hitx;
                    sy = hity;
                    sz = hitz;
                    sect = hitsect;
                    sa = ((l<<1) - sa)&2047;
                    sx += sintable[(sa+512)&2047]>>12;
                    sy += sintable[sa&2047]>>12;

                    k++;
                    goto RESHOOTGROW;
                }
                else     if(ps[snum].access_spritenum >= 0)
        p = sprite[ps[snum].access_spritenum].pal;
    else
        p = wall[ps[snum].access_wallnum].pal;
      else        p = wall[ps[snum].access_wallnum].pal; FIX_00026: Weapon can now be hidden (on your screen only).DUD 7 MED FIX_00038: Improved Mouse accuracy (losses of integer computation)     FIX_00021: Duke was moving when moving the mouse up/down. Y axis move is disabled. remove y axis mouse aiming button is temporary mouse aiming button is a toggle FIX_00039: Toggle autoaim between Normal (full) and partial (on bullet weapons only) FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down This is because we use the same FTA for BULLET and NORMAL text: duke doesn't see we  changed the text and doesnt issue a refresh  Originally reserved for "screen saved". Now used dynamically.  2 = normal, 1 = bullet only, 0 = disabled (not implemented) avoid medkit overloading controls FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down % xduke: dont waste mouse tics svel -= info.dx; This helps the analog feel a bit. Account for which mode we're in. (1, 2 or 7) xduke: fix assymetry (speed of 2 is like -1) If Mouse aim active xduke: fix assymetry (speed of 2 is like -1)	if(loc.avel)		printf("getinput loc.avel=%d\n", loc.avel);    j = sync[snum].avel;    p->weapon_ang = -(j/5); FIX_00076: Added default names for bots + fixed a "killed <name>" bug in Fakeplayers with AI                    printf(tempbuf);            p->bobcounter += 32; 2 == normal == full; 1 == partial; 0 = none (not implemented) 1<<6: toggle ud.auto_aim 1<<7 : ANTIWEAPONSWITCH
    if( j && ud.screen_tilting == 2)
    {
        k = 4;
        if(sb_snum&(1<<5)) k <<= 2;
        p->rotscrnang -= k*j;
        p->look_ang += k*j;
    }
     Shrinking codeGoin upA (soar high)Z (soar low)Aprox twenty seconds.falling (TICSPERFRAME<<6); hit the groundSmooth on the groundSmooth on the waterDo the quick lefts and rightsp->ang += syncangvel * constantENGINE calculates angvel for you RBG***Shooting code/changes                if(p->curr_weapon == KNEE_WEAPON) *kb = 1; HACKS Glowing && p->random_club_frame == 0)UPDATE THIS FILE OVER THE OLD GETSPRITESCORE/COMPUTERGETINPUT FUNCTIONSKNEE PIST SHOT CHAIN RPG PIPE SHRI DEVI WALL FREE HAND EXPAKNEEPISTSHOTCHAINRPGPIPESHRIDEVIWALLFREEHANDEXPAStrafe attackif (dx*(y1-wall[i].y) <= dy*(x1-wall[i].x))   if (dx*(y2-wall[i].y) >= dy*(x2-wall[i].x))Hit a wall (49152 for sprite)Strafe attack