
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE
 *  Custom GPIO-based I2C driver
 *
 *  Copyright (C) 2007-2008 Gabor Juhos <juhosg@openwrt.org>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 * ---------------------------------------------------------------------------
 *
 *  The behaviour of this driver can be altered by setting some parameters
 *  from the insmod command line.
 *
 *  The following parameters are adjustable:
 *
 *	bus0	These four arguments can be arrays of
 *	bus1	1-8 unsigned integers as follows:
 *	bus2
 *	bus3	<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
 *
 *  where:
 *
 *  <id>	ID to used as device_id for the corresponding bus (required)
 *  <sda>	GPIO pin ID to used for SDA (required)
 *  <scl>	GPIO pin ID to used for SCL (required)
 *  <udelay>	signal toggle delay.
 *  <timeout>	clock stretching timeout.
 *  <sda_od>	SDA is configured as open drain.
 *  <scl_od>	SCL is configured as open drain.
 *  <scl_oo>	SCL output drivers cannot be turned off.
 *
 *  See include/i2c-gpio.h for more information about the parameters.
 *
 *  If this driver is built into the kernel, you can use the following kernel
 *  command line parameters, with the same values as the corresponding module
 *  parameters listed above:
 *
 *	i2c-gpio-custom.bus0
 *	i2c-gpio-custom.bus1
 *	i2c-gpio-custom.bus2
 *	i2c-gpio-custom.bus3
  MODULE