**************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Additional LCD routines not present in the rockbox core
* Scrolling functions
*
* Copyright (C) 2005 Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** Scroll right  Scroll up  Scroll down  Scroll left  Scroll right  LCD_PIXELFORMAT vertical packed or >= 8bit / pixel  Scroll left  Scroll right  LCD_PIXELFORMAT, LCD_DEPTH  Scroll up  Scroll down  LCD_PIXELFORMAT == VERTICAL_PACKING, 
         LCD_PIXELFORMAT == VERTICAL_INTERLEAVED  Scroll up  columns = width  repeat for every column  get start address  rows = row_count  fill with background  repeat for all rows  address -= width  old data to 2nd byte  combine with new data byte  keep data for next round  shift right  store data  rows--  start_address++  columns--  outputs  inputs  clobbers  C version  CPU, LCD_DEPTH  LCD_DEPTH == 2  LCD_PIXELFORMAT  Scroll up  columns = width  repeat for every column  get start address  rows = row_count  fill with background  repeat for all rows  shift right to get residue  get data byte  combine with last residue  store data  address += width  rows--  start_address++  columns--  outputs  inputs  clobbers  C version  CPU, LCD_DEPTH  LCD_DEPTH == 2  LCD_PIXELFORMAT  LCD_PIXELFORMAT, LCD_DEPTH  defined(LCD_STRIDEFORMAT) && LCD_STRIDEFORMAT == VERTICAL_STRIDE **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Additional LCD routines not present in the rockbox core
* Scrolling functions
*
* Copyright (C) 2005 Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** Scroll right  Scroll up  Scroll down  Scroll left  Scroll right  LCD_PIXELFORMAT vertical packed or >= 8bit / pixel  Scroll left  Scroll right  LCD_PIXELFORMAT, LCD_DEPTH  Scroll up  Scroll down  LCD_PIXELFORMAT == VERTICAL_PACKING, 
         LCD_PIXELFORMAT == VERTICAL_INTERLEAVED  Scroll up  columns = width  repeat for every column  get start address  rows = row_count  fill with background  repeat for all rows  address -= width  old data to 2nd byte  combine with new data byte  keep data for next round  shift right  store data  rows--  start_address++  columns--  outputs  inputs  clobbers  C version  CPU, LCD_DEPTH  LCD_DEPTH == 2  LCD_PIXELFORMAT  Scroll up  columns = width  repeat for every column  get start address  rows = row_count  fill with background  repeat for all rows  shift right to get residue  get data byte  combine with last residue  store data  address += width  rows--  start_address++  columns--  outputs  inputs  clobbers  C version  CPU, LCD_DEPTH  LCD_DEPTH == 2  LCD_PIXELFORMAT  LCD_PIXELFORMAT, LCD_DEPTH  defined(LCD_STRIDEFORMAT) && LCD_STRIDEFORMAT == VERTICAL_STRIDE **************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Additional LCD routines not present in the rockbox core
* Scrolling functions
*
* Copyright (C) 2005 Jens Arnold
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** Scroll right  Scroll up  Scroll down  Scroll left  Scroll right  LCD_PIXELFORMAT vertical packed or >= 8bit / pixel  Scroll left  Scroll right  LCD_PIXELFORMAT, LCD_DEPTH  Scroll up  Scroll down  LCD_PIXELFORMAT == VERTICAL_PACKING, 
         LCD_PIXELFORMAT == VERTICAL_INTERLEAVED  Scroll up  columns = width  repeat for every column  get start address  rows = row_count  fill with background  repeat for all rows  address -= width  old data to 2nd byte  combine with new data byte  keep data for next round  shift right  store data  rows--  start_address++  columns--  outputs  inputs  clobbers  C version  CPU, LCD_DEPTH  LCD_DEPTH == 2  LCD_PIXELFORMAT  Scroll up  columns = width  repeat for every column  get start address  rows = row_count  fill with background  repeat for all rows  shift right to get residue  get data byte  combine with last residue  store data  address += width  rows--  start_address++  columns--  outputs  inputs  clobbers  C version  CPU, LCD_DEPTH  LCD_DEPTH == 2  LCD_PIXELFORMAT  LCD_PIXELFORMAT, LCD_DEPTH  defined(LCD_STRIDEFORMAT) && LCD_STRIDEFORMAT == VERTICAL_STRIDE 