
 * ps.c: PostScript printing functions.
  Clip to the region.  Hatch the entire game printing area. 
     * Stroking in hatched colours is not permitted.
     
     * Offset by half a pixel for the exactness requirement.
     
     * Offset by half a pixel for the exactness requirement.
     
     * We can handle anything in ISO 8859-1, and we'll manually
     * translate it out of UTF-8 for the purpose.
      ASCII  top half of 8859-1 
     * Re-encode Helvetica and Courier into ISO-8859-1, which gives
     * us times and divide signs - and also (according to the
     * Language Reference Manual) a bonus in that the ASCII '-' code
     * point now points to a minus sign instead of a hyphen.
      get the font dictionary  create and open a new dict  move the original font to top of stack  copy everything except FID  set the thing we actually wanted to change  set a new font name  and define the font  get the font dictionary  create and open a new dict  move the original font to top of stack  copy everything except FID  set the thing we actually wanted to change  set a new font name  and define the font  draw_update  start_draw  end_draw  status_bar  blitter_new  blitter_free  blitter_save  blitter_load 
 * ps.c: PostScript printing functions.
  Clip to the region.  Hatch the entire game printing area. 
     * Stroking in hatched colours is not permitted.
     
     * Offset by half a pixel for the exactness requirement.
     
     * Offset by half a pixel for the exactness requirement.
     
     * We can handle anything in ISO 8859-1, and we'll manually
     * translate it out of UTF-8 for the purpose.
      ASCII  top half of 8859-1 
     * Re-encode Helvetica and Courier into ISO-8859-1, which gives
     * us times and divide signs - and also (according to the
     * Language Reference Manual) a bonus in that the ASCII '-' code
     * point now points to a minus sign instead of a hyphen.
      get the font dictionary  create and open a new dict  move the original font to top of stack  copy everything except FID  set the thing we actually wanted to change  set a new font name  and define the font  get the font dictionary  create and open a new dict  move the original font to top of stack  copy everything except FID  set the thing we actually wanted to change  set a new font name  and define the font  draw_update  start_draw  end_draw  status_bar  blitter_new  blitter_free  blitter_save  blitter_load 
 * ps.c: PostScript printing functions.
  Clip to the region.  Hatch the entire game printing area. 
     * Stroking in hatched colours is not permitted.
     
     * Offset by half a pixel for the exactness requirement.
     
     * Offset by half a pixel for the exactness requirement.
     
     * We can handle anything in ISO 8859-1, and we'll manually
     * translate it out of UTF-8 for the purpose.
      ASCII  top half of 8859-1 
     * Re-encode Helvetica and Courier into ISO-8859-1, which gives
     * us times and divide signs - and also (according to the
     * Language Reference Manual) a bonus in that the ASCII '-' code
     * point now points to a minus sign instead of a hyphen.
      get the font dictionary  create and open a new dict  move the original font to top of stack  copy everything except FID  set the thing we actually wanted to change  set a new font name  and define the font  get the font dictionary  create and open a new dict  move the original font to top of stack  copy everything except FID  set the thing we actually wanted to change  set a new font name  and define the font  draw_update  start_draw  end_draw  status_bar  blitter_new  blitter_free  blitter_save  blitter_load 