
 * Copyright (C) 2013 Realtek Semiconductor Corp.
 * All Rights Reserved.
 *
 * Unless you and Realtek execute a separate written software license
 * agreement governing use of this software, this software is licensed
 * to you under the terms of the GNU General Public License version 2,
 * available at https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt
 *
 * $Revision: 76306 $
 * $Date: 2017-03-08 15:13:58 +0800 (週三, 08 三月 2017) $
 *
 * Purpose : RTL8367C switch high-level API for RTL8367C
 * Feature : MIB related functions
 *
  Function Name:
 *      rtl8367c_setAsicMIBsCounterReset
 * Description:
 *      Reset global/queue manage or per-port MIB counter
 * Input:
 *      greset  - Global reset
 *      qmreset - Queue maganement reset
 *      portmask    - Port reset mask
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsCounter
 * Description:
 *      Get MIBs counter
 * Input:
 *      port        - Physical port number (0~7)
 *      mibIdx      - MIB counter index
 *      pCounter    - MIB retrived counter
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_PORT_ID          - Invalid port number
 *      RT_ERR_BUSYWAIT_TIMEOUT - MIB is busy at retrieving
 *      RT_ERR_STAT_CNTR_FAIL   - MIB is resetting
 * Note:
 *      Before MIBs counter retrieving, writting accessing address to ASIC at first and check the MIB
 *      control register status. If busy bit of MIB control is set, that means MIB counter have been
 *      waiting for preparing, then software must wait atfer this busy flag reset by ASIC. This driver
 *      did not recycle reading user desired counter. Software must use driver again to get MIB counter
 *      if return value is not RT_ERR_OK.
  address offset to MIBs counter writing access counter address firstThis address is SRAM address, and SRAM address = MIB register address >> 2then ASIC will prepare 64bits counter wait for being retrivedWrite Mib related address to access control register polling busy flag read MIB control register Function Name:
 *      rtl8367c_getAsicMIBsLogCounter
 * Description:
 *      Get MIBs Loggin counter
 * Input:
 *      index       - The index of 32 logging counter (0 ~ 31)
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_ENTRY_INDEX      - Wrong index
 *      RT_ERR_BUSYWAIT_TIMEOUT - MIB is busy at retrieving
 *      RT_ERR_STAT_CNTR_FAIL   - MIB is resetting
 * Note:
 *      This API get 32 logging counter
 read MIB control register Function Name:
 *      rtl8367c_getAsicMIBsControl
 * Description:
 *      Get MIB control register
 * Input:
 *      pMask       - MIB control status mask bit[0]-busy bit[1]
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 * Note:
 *      Software need to check this control register atfer doing port resetting or global resetting
  Function Name:
 *      rtl8367c_setAsicMIBsResetValue
 * Description:
 *      Reset all counter to 0 or 1
 * Input:
 *      value           - Reset to value 0 or 1
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsResetValue
 * Description:
 *      Reset all counter to 0 or 1
 * Input:
 *      value           - Reset to value 0 or 1
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsUsageMode
 * Description:
 *      MIB update mode
 * Input:
 *      mode            - 1: latch all MIBs by timer 0:normal free run counting
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsUsageMode
 * Description:
 *      MIB update mode
 * Input:
 *      pMode           - 1: latch all MIBs by timer 0:normal free run counting
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsTimer
 * Description:
 *      MIB latching timer
 * Input:
 *      timer           - latch timer, unit 1 second
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsTimer
 * Description:
 *      MIB latching timer
 * Input:
 *      pTimer          - latch timer, unit 1 second
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLoggingMode
 * Description:
 *      MIB logging counter mode
 * Input:
 *      index   - logging counter mode index (0~15)
 *      mode    - 0:32-bits mode 1:64-bits mode
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsLoggingMode
 * Description:
 *      MIB logging counter mode
 * Input:
 *      index   - logging counter mode index (0~15)
 *      pMode   - 0:32-bits mode 1:64-bits mode
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLoggingType
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter mode index (0~15)
 *      type    - 0:Packet count 1:Byte count
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsLoggingType
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter mode index (0~15)
 *      pType   - 0:Packet count 1:Byte count
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsResetLoggingCounter
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter index (0~31)
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLength
 * Description:
 *      Set MIB length couting mode
 * Input:
 *      txLengthMode    - 0: tag length doesn't be counted. 1: tag length is counted.
 *      rxLengthMode    - 0: tag length doesn't be counted. 1: tag length is counted.
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLength
 * Description:
 *      Set MIB length couting mode
 * Input:
 *      None.
 * Output:
 *      pTxLengthMode - 0: tag length doesn't be counted. 1: tag length is counted.
 *      pRxLengthMode - 0: tag length doesn't be counted. 1: tag length is counted.
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
 
 * Copyright (C) 2013 Realtek Semiconductor Corp.
 * All Rights Reserved.
 *
 * Unless you and Realtek execute a separate written software license
 * agreement governing use of this software, this software is licensed
 * to you under the terms of the GNU General Public License version 2,
 * available at https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt
 *
 * $Revision: 76306 $
 * $Date: 2017-03-08 15:13:58 +0800 (週三, 08 三月 2017) $
 *
 * Purpose : RTL8367C switch high-level API for RTL8367C
 * Feature : MIB related functions
 *
  Function Name:
 *      rtl8367c_setAsicMIBsCounterReset
 * Description:
 *      Reset global/queue manage or per-port MIB counter
 * Input:
 *      greset  - Global reset
 *      qmreset - Queue maganement reset
 *      portmask    - Port reset mask
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsCounter
 * Description:
 *      Get MIBs counter
 * Input:
 *      port        - Physical port number (0~7)
 *      mibIdx      - MIB counter index
 *      pCounter    - MIB retrived counter
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_PORT_ID          - Invalid port number
 *      RT_ERR_BUSYWAIT_TIMEOUT - MIB is busy at retrieving
 *      RT_ERR_STAT_CNTR_FAIL   - MIB is resetting
 * Note:
 *      Before MIBs counter retrieving, writting accessing address to ASIC at first and check the MIB
 *      control register status. If busy bit of MIB control is set, that means MIB counter have been
 *      waiting for preparing, then software must wait atfer this busy flag reset by ASIC. This driver
 *      did not recycle reading user desired counter. Software must use driver again to get MIB counter
 *      if return value is not RT_ERR_OK.
  address offset to MIBs counter writing access counter address firstThis address is SRAM address, and SRAM address = MIB register address >> 2then ASIC will prepare 64bits counter wait for being retrivedWrite Mib related address to access control register polling busy flag read MIB control register Function Name:
 *      rtl8367c_getAsicMIBsLogCounter
 * Description:
 *      Get MIBs Loggin counter
 * Input:
 *      index       - The index of 32 logging counter (0 ~ 31)
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_ENTRY_INDEX      - Wrong index
 *      RT_ERR_BUSYWAIT_TIMEOUT - MIB is busy at retrieving
 *      RT_ERR_STAT_CNTR_FAIL   - MIB is resetting
 * Note:
 *      This API get 32 logging counter
 read MIB control register Function Name:
 *      rtl8367c_getAsicMIBsControl
 * Description:
 *      Get MIB control register
 * Input:
 *      pMask       - MIB control status mask bit[0]-busy bit[1]
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 * Note:
 *      Software need to check this control register atfer doing port resetting or global resetting
  Function Name:
 *      rtl8367c_setAsicMIBsResetValue
 * Description:
 *      Reset all counter to 0 or 1
 * Input:
 *      value           - Reset to value 0 or 1
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsResetValue
 * Description:
 *      Reset all counter to 0 or 1
 * Input:
 *      value           - Reset to value 0 or 1
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsUsageMode
 * Description:
 *      MIB update mode
 * Input:
 *      mode            - 1: latch all MIBs by timer 0:normal free run counting
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsUsageMode
 * Description:
 *      MIB update mode
 * Input:
 *      pMode           - 1: latch all MIBs by timer 0:normal free run counting
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsTimer
 * Description:
 *      MIB latching timer
 * Input:
 *      timer           - latch timer, unit 1 second
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsTimer
 * Description:
 *      MIB latching timer
 * Input:
 *      pTimer          - latch timer, unit 1 second
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLoggingMode
 * Description:
 *      MIB logging counter mode
 * Input:
 *      index   - logging counter mode index (0~15)
 *      mode    - 0:32-bits mode 1:64-bits mode
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsLoggingMode
 * Description:
 *      MIB logging counter mode
 * Input:
 *      index   - logging counter mode index (0~15)
 *      pMode   - 0:32-bits mode 1:64-bits mode
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLoggingType
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter mode index (0~15)
 *      type    - 0:Packet count 1:Byte count
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsLoggingType
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter mode index (0~15)
 *      pType   - 0:Packet count 1:Byte count
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsResetLoggingCounter
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter index (0~31)
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLength
 * Description:
 *      Set MIB length couting mode
 * Input:
 *      txLengthMode    - 0: tag length doesn't be counted. 1: tag length is counted.
 *      rxLengthMode    - 0: tag length doesn't be counted. 1: tag length is counted.
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLength
 * Description:
 *      Set MIB length couting mode
 * Input:
 *      None.
 * Output:
 *      pTxLengthMode - 0: tag length doesn't be counted. 1: tag length is counted.
 *      pRxLengthMode - 0: tag length doesn't be counted. 1: tag length is counted.
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
 
 * Copyright (C) 2013 Realtek Semiconductor Corp.
 * All Rights Reserved.
 *
 * Unless you and Realtek execute a separate written software license
 * agreement governing use of this software, this software is licensed
 * to you under the terms of the GNU General Public License version 2,
 * available at https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt
 *
 * $Revision: 76306 $
 * $Date: 2017-03-08 15:13:58 +0800 (週三, 08 三月 2017) $
 *
 * Purpose : RTL8367C switch high-level API for RTL8367C
 * Feature : MIB related functions
 *
  Function Name:
 *      rtl8367c_setAsicMIBsCounterReset
 * Description:
 *      Reset global/queue manage or per-port MIB counter
 * Input:
 *      greset  - Global reset
 *      qmreset - Queue maganement reset
 *      portmask    - Port reset mask
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsCounter
 * Description:
 *      Get MIBs counter
 * Input:
 *      port        - Physical port number (0~7)
 *      mibIdx      - MIB counter index
 *      pCounter    - MIB retrived counter
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_PORT_ID          - Invalid port number
 *      RT_ERR_BUSYWAIT_TIMEOUT - MIB is busy at retrieving
 *      RT_ERR_STAT_CNTR_FAIL   - MIB is resetting
 * Note:
 *      Before MIBs counter retrieving, writting accessing address to ASIC at first and check the MIB
 *      control register status. If busy bit of MIB control is set, that means MIB counter have been
 *      waiting for preparing, then software must wait atfer this busy flag reset by ASIC. This driver
 *      did not recycle reading user desired counter. Software must use driver again to get MIB counter
 *      if return value is not RT_ERR_OK.
  address offset to MIBs counter writing access counter address firstThis address is SRAM address, and SRAM address = MIB register address >> 2then ASIC will prepare 64bits counter wait for being retrivedWrite Mib related address to access control register polling busy flag read MIB control register Function Name:
 *      rtl8367c_getAsicMIBsLogCounter
 * Description:
 *      Get MIBs Loggin counter
 * Input:
 *      index       - The index of 32 logging counter (0 ~ 31)
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_ENTRY_INDEX      - Wrong index
 *      RT_ERR_BUSYWAIT_TIMEOUT - MIB is busy at retrieving
 *      RT_ERR_STAT_CNTR_FAIL   - MIB is resetting
 * Note:
 *      This API get 32 logging counter
 read MIB control register Function Name:
 *      rtl8367c_getAsicMIBsControl
 * Description:
 *      Get MIB control register
 * Input:
 *      pMask       - MIB control status mask bit[0]-busy bit[1]
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 * Note:
 *      Software need to check this control register atfer doing port resetting or global resetting
  Function Name:
 *      rtl8367c_setAsicMIBsResetValue
 * Description:
 *      Reset all counter to 0 or 1
 * Input:
 *      value           - Reset to value 0 or 1
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsResetValue
 * Description:
 *      Reset all counter to 0 or 1
 * Input:
 *      value           - Reset to value 0 or 1
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsUsageMode
 * Description:
 *      MIB update mode
 * Input:
 *      mode            - 1: latch all MIBs by timer 0:normal free run counting
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsUsageMode
 * Description:
 *      MIB update mode
 * Input:
 *      pMode           - 1: latch all MIBs by timer 0:normal free run counting
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsTimer
 * Description:
 *      MIB latching timer
 * Input:
 *      timer           - latch timer, unit 1 second
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsTimer
 * Description:
 *      MIB latching timer
 * Input:
 *      pTimer          - latch timer, unit 1 second
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK       - Success
 *      RT_ERR_SMI      - SMI access error
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLoggingMode
 * Description:
 *      MIB logging counter mode
 * Input:
 *      index   - logging counter mode index (0~15)
 *      mode    - 0:32-bits mode 1:64-bits mode
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsLoggingMode
 * Description:
 *      MIB logging counter mode
 * Input:
 *      index   - logging counter mode index (0~15)
 *      pMode   - 0:32-bits mode 1:64-bits mode
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLoggingType
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter mode index (0~15)
 *      type    - 0:Packet count 1:Byte count
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_getAsicMIBsLoggingType
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter mode index (0~15)
 *      pType   - 0:Packet count 1:Byte count
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsResetLoggingCounter
 * Description:
 *      MIB logging counter type
 * Input:
 *      index   - logging counter index (0~31)
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLength
 * Description:
 *      Set MIB length couting mode
 * Input:
 *      txLengthMode    - 0: tag length doesn't be counted. 1: tag length is counted.
 *      rxLengthMode    - 0: tag length doesn't be counted. 1: tag length is counted.
 * Output:
 *      None
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
  Function Name:
 *      rtl8367c_setAsicMIBsLength
 * Description:
 *      Set MIB length couting mode
 * Input:
 *      None.
 * Output:
 *      pTxLengthMode - 0: tag length doesn't be counted. 1: tag length is counted.
 *      pRxLengthMode - 0: tag length doesn't be counted. 1: tag length is counted.
 * Return:
 *      RT_ERR_OK               - Success
 *      RT_ERR_SMI              - SMI access error
 *      RT_ERR_OUT_OF_RANGE     - input parameter out of range
 * Note:
 *      None
 