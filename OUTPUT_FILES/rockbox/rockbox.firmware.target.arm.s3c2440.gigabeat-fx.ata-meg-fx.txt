**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006,2007 by Marcoen Hirschberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** ARESET on C7C68300 and RESET on ATA interface (Active Low)  ATA_EN on C7C68300  > 25us  > 2ms  This function is called before enabling the USB bus  Make the pin an output  Disable pullup in SOC as we are now driving  Check the pin configuration - return true when pin is unconfigured  Make the pin an output  Disable pullup in SOC as we are now driving  ATA reset  Set the pin to disable an active low reset  Unaligned transfer - slow copy  not 16-bit aligned, copy byte by byte  I assume big endian   and don't use the SWAB16 macro  tail loop is faster  This should never happen, but worth watching for #define GIGABEAT_DEBUG_ATA Reset the channel  Wait for DMA controller to be ready  Source is ATA_DATA, on AHB Bus, Fixed  Dest mapped to physical address, on AHB bus, increment  DACK/DREQ Sync to AHB, Whole service, No reload, 16-bit transfers  Activate the channel  Dump cache for the buffer   Start DMA  Wait for transfer to complete **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006,2007 by Marcoen Hirschberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** ARESET on C7C68300 and RESET on ATA interface (Active Low)  ATA_EN on C7C68300  > 25us  > 2ms  This function is called before enabling the USB bus  Make the pin an output  Disable pullup in SOC as we are now driving  Check the pin configuration - return true when pin is unconfigured  Make the pin an output  Disable pullup in SOC as we are now driving  ATA reset  Set the pin to disable an active low reset  Unaligned transfer - slow copy  not 16-bit aligned, copy byte by byte  I assume big endian   and don't use the SWAB16 macro  tail loop is faster  This should never happen, but worth watching for #define GIGABEAT_DEBUG_ATA Reset the channel  Wait for DMA controller to be ready  Source is ATA_DATA, on AHB Bus, Fixed  Dest mapped to physical address, on AHB bus, increment  DACK/DREQ Sync to AHB, Whole service, No reload, 16-bit transfers  Activate the channel  Dump cache for the buffer   Start DMA  Wait for transfer to complete **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006,2007 by Marcoen Hirschberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** ARESET on C7C68300 and RESET on ATA interface (Active Low)  ATA_EN on C7C68300  > 25us  > 2ms  This function is called before enabling the USB bus  Make the pin an output  Disable pullup in SOC as we are now driving  Check the pin configuration - return true when pin is unconfigured  Make the pin an output  Disable pullup in SOC as we are now driving  ATA reset  Set the pin to disable an active low reset  Unaligned transfer - slow copy  not 16-bit aligned, copy byte by byte  I assume big endian   and don't use the SWAB16 macro  tail loop is faster  This should never happen, but worth watching for #define GIGABEAT_DEBUG_ATA Reset the channel  Wait for DMA controller to be ready  Source is ATA_DATA, on AHB Bus, Fixed  Dest mapped to physical address, on AHB bus, increment  DACK/DREQ Sync to AHB, Whole service, No reload, 16-bit transfers  Activate the channel  Dump cache for the buffer   Start DMA  Wait for transfer to complete 