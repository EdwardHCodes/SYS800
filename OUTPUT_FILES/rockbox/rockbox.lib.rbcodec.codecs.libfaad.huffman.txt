
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* static function declarations  printf("ERROR: offset into hcb_sf = %d >240!\n", offset);  defines whether a huffman codebook is unsigned or not  Table 4.6.2  codebook 16 to 31  silence compiler warning about unused globals  we know for sure it's more than hcbN[cb] bits long  printf("ERROR: offset into hcb_2_quad_table = %d >%d!\n", offset,
           hcb_2_quad_table_size[cb]);  we know for sure it's more than hcbN[cb] bits long  printf("ERROR: offset into hcb_2_pair_table = %d >%d!\n", offset,
           hcb_2_pair_table_size[cb]);  printf("ERROR: offset into hcb_bin_table = %d >%d!\n", offset,
           hcb_bin_table_size[cb]);  printf("ERROR: offset into hcb_bin_table = %d >%d!\n", offset,
           hcb_bin_table_size[cb]);  2-step method for data quadruples  binary search for data quadruples  2-step method for data quadruples  binary search for data pairs  2-step method for data pairs  binary search for data pairs  2-step method for data pairs  VCB11 uses codebook 11  check LAV (Largest Absolute Value)  this finds errors in the ESCAPE signal  Non existent codebook number, something went wrong  Special version of huffman_spectral_data
Will not read from a bitfile but a bits_t structure.
Will keep track of the bits decoded and return the number of bits remaining.
Do not read more than ld->len, return -1 if codeword would be longer  2-step method for data quadruples  we know for sure it's more than hcbN[cb] bits long  2-step method for data pairs  VCB11 uses codebook 11  store the virtual codebook  we know for sure it's more than hcbN[cb] bits long  binary search for data quadruples  binary search for data pairs  decode sign bits  decode huffman escape bits  check LAV (Largest Absolute Value)  this finds errors in the ESCAPE signal 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* static function declarations  printf("ERROR: offset into hcb_sf = %d >240!\n", offset);  defines whether a huffman codebook is unsigned or not  Table 4.6.2  codebook 16 to 31  silence compiler warning about unused globals  we know for sure it's more than hcbN[cb] bits long  printf("ERROR: offset into hcb_2_quad_table = %d >%d!\n", offset,
           hcb_2_quad_table_size[cb]);  we know for sure it's more than hcbN[cb] bits long  printf("ERROR: offset into hcb_2_pair_table = %d >%d!\n", offset,
           hcb_2_pair_table_size[cb]);  printf("ERROR: offset into hcb_bin_table = %d >%d!\n", offset,
           hcb_bin_table_size[cb]);  printf("ERROR: offset into hcb_bin_table = %d >%d!\n", offset,
           hcb_bin_table_size[cb]);  2-step method for data quadruples  binary search for data quadruples  2-step method for data quadruples  binary search for data pairs  2-step method for data pairs  binary search for data pairs  2-step method for data pairs  VCB11 uses codebook 11  check LAV (Largest Absolute Value)  this finds errors in the ESCAPE signal  Non existent codebook number, something went wrong  Special version of huffman_spectral_data
Will not read from a bitfile but a bits_t structure.
Will keep track of the bits decoded and return the number of bits remaining.
Do not read more than ld->len, return -1 if codeword would be longer  2-step method for data quadruples  we know for sure it's more than hcbN[cb] bits long  2-step method for data pairs  VCB11 uses codebook 11  store the virtual codebook  we know for sure it's more than hcbN[cb] bits long  binary search for data quadruples  binary search for data pairs  decode sign bits  decode huffman escape bits  check LAV (Largest Absolute Value)  this finds errors in the ESCAPE signal 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* static function declarations  printf("ERROR: offset into hcb_sf = %d >240!\n", offset);  defines whether a huffman codebook is unsigned or not  Table 4.6.2  codebook 16 to 31  silence compiler warning about unused globals  we know for sure it's more than hcbN[cb] bits long  printf("ERROR: offset into hcb_2_quad_table = %d >%d!\n", offset,
           hcb_2_quad_table_size[cb]);  we know for sure it's more than hcbN[cb] bits long  printf("ERROR: offset into hcb_2_pair_table = %d >%d!\n", offset,
           hcb_2_pair_table_size[cb]);  printf("ERROR: offset into hcb_bin_table = %d >%d!\n", offset,
           hcb_bin_table_size[cb]);  printf("ERROR: offset into hcb_bin_table = %d >%d!\n", offset,
           hcb_bin_table_size[cb]);  2-step method for data quadruples  binary search for data quadruples  2-step method for data quadruples  binary search for data pairs  2-step method for data pairs  binary search for data pairs  2-step method for data pairs  VCB11 uses codebook 11  check LAV (Largest Absolute Value)  this finds errors in the ESCAPE signal  Non existent codebook number, something went wrong  Special version of huffman_spectral_data
Will not read from a bitfile but a bits_t structure.
Will keep track of the bits decoded and return the number of bits remaining.
Do not read more than ld->len, return -1 if codeword would be longer  2-step method for data quadruples  we know for sure it's more than hcbN[cb] bits long  2-step method for data pairs  VCB11 uses codebook 11  store the virtual codebook  we know for sure it's more than hcbN[cb] bits long  binary search for data quadruples  binary search for data pairs  decode sign bits  decode huffman escape bits  check LAV (Largest Absolute Value)  this finds errors in the ESCAPE signal 