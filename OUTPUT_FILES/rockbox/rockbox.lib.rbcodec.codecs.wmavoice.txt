**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Mohamed Tarek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************maximum number of frames per superframe maximum number of samples per frame  This function initialises AVCodecContext with the data needed for the wmapro
 * decoder to work. The required data is taken from asf_waveformatex_t because that's
 * what the rockbox asf metadata parser fill/work with. In the future, when the 
 * codec is being optimised for on-target playback this function should not be needed.  Copy the extra-data  this is the codec entry point  Generic codec initialisation  this is called for each file to process  Holds the stream properties  Return values from asf_read_packet() and decode_packet()  Pointer to the payload of one wma pro packet  Payload size  Logical packet size (minus the header size)  Number of bytes written to the output buffer  Count of the packets played  Copy the format metadata we've stored in the id3 TOC field.  This
       saves us from parsing it again here.  Initialise the AVCodecContext  Now advance the file position to the first frame  The main decoding loop  Deal with any pending seek requests  Pretend you never saw this...  wmavoice_decode_packet checks for the output buffer size to 
                   avoid overflows  Just skip this packet  Advance to the next logical packet **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Mohamed Tarek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************maximum number of frames per superframe maximum number of samples per frame  This function initialises AVCodecContext with the data needed for the wmapro
 * decoder to work. The required data is taken from asf_waveformatex_t because that's
 * what the rockbox asf metadata parser fill/work with. In the future, when the 
 * codec is being optimised for on-target playback this function should not be needed.  Copy the extra-data  this is the codec entry point  Generic codec initialisation  this is called for each file to process  Holds the stream properties  Return values from asf_read_packet() and decode_packet()  Pointer to the payload of one wma pro packet  Payload size  Logical packet size (minus the header size)  Number of bytes written to the output buffer  Count of the packets played  Copy the format metadata we've stored in the id3 TOC field.  This
       saves us from parsing it again here.  Initialise the AVCodecContext  Now advance the file position to the first frame  The main decoding loop  Deal with any pending seek requests  Pretend you never saw this...  wmavoice_decode_packet checks for the output buffer size to 
                   avoid overflows  Just skip this packet  Advance to the next logical packet **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2010 Mohamed Tarek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************maximum number of frames per superframe maximum number of samples per frame  This function initialises AVCodecContext with the data needed for the wmapro
 * decoder to work. The required data is taken from asf_waveformatex_t because that's
 * what the rockbox asf metadata parser fill/work with. In the future, when the 
 * codec is being optimised for on-target playback this function should not be needed.  Copy the extra-data  this is the codec entry point  Generic codec initialisation  this is called for each file to process  Holds the stream properties  Return values from asf_read_packet() and decode_packet()  Pointer to the payload of one wma pro packet  Payload size  Logical packet size (minus the header size)  Number of bytes written to the output buffer  Count of the packets played  Copy the format metadata we've stored in the id3 TOC field.  This
       saves us from parsing it again here.  Initialise the AVCodecContext  Now advance the file position to the first frame  The main decoding loop  Deal with any pending seek requests  Pretend you never saw this...  wmavoice_decode_packet checks for the output buffer size to 
                   avoid overflows  Just skip this packet  Advance to the next logical packet 