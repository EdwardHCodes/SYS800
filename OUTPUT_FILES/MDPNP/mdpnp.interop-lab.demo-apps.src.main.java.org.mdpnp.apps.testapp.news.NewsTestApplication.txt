*
     * Could we just change the names in the scores.xml to match the labels in VitalSign?
     *
     * The current patient score
     Later, map this to Metrics... Also read some score data.  Should this live in a bean, or be CSV instead?Map vital signs to scores...System.err.println("NTA.handle called, score starts at "+currentScore);Use this event loop to also handle the score calculation - maybe every 5 seconds?We have access to the scores from here, and access to the vital values.System.err.println("Processing vitalModel element "+i+ " with size "+v.size());Keep track of which value in the list of v is the "worst"Probably the device(s) have been assigned to a patient and that patientis not the active partition as chosen in the "Select a patient" drop down.Use a score of "-1" to indicate to the chart that the data is no longer valid.System.err.println("v.size() is 0 for i="+i+" but vitalSignsController.vitalModel.size is "+vitalSignsController.vitalModel.size());
        	        			 * When doing the first metric for the given chart,
        	        			 * reset the score for the current chart to 0.  Can't
        	        			 * do this outside the "int j" loop because if no metrics
        	        			 * have been published yet then v.size() is 0 anyway and
        	        			 * that gives ArrayIndexOutOfBounds.  So it happens here,
        	        			 * conditional on it being the first metric on the chart.
        	        			 System.err.println("Vital v value is "+v.get(j).getMetricId()+" - "+v.get(j).getValue());System.err.println("Need to do a score for "+scoreForMetric);System.err.println(vitalSign.label+" has value "+f+" in range "+range.lower+" "+range.upper+", set worstScore to "+worstScore);System.err.println("Pushing "+v.get(j).getMetricId()+" with score "+range.score+" to chart");Out of the loop across rangesSystem.err.println("No Score for "+vitalSign.label);System.err.println("Added "+worstScore+" to give currentScore of "+currentScore);System.err.println("final currentScore is "+currentScore); API registered with the application-wide event bus    @FXML    public void pauseAppTimeline() {    	datePickUpdate.pause();    }System.err.println("allNodes length is "+allNodes.getLength());System.err.println("node type is "+node.getNodeType());System.err.println("node name is "+node.getNodeName());					System.err.println("Node with name "+scoreNode.getNodeName()+" is "+nnm.getNamedItem("name").getNodeValue());						System.err.printf("range details are lower %s, upper %s, score %s\n",rangeMap.getNamedItem("lower").getNodeValue(),rangeMap.getNamedItem("upper").getNodeValue(),rangeMap.getNamedItem("score").getNodeValue());					System.err.println("Added to scoreList");			for(Score score: scoreList ) {				System.err.println(score);			}This is really quite critical and so should re-throw to prevent intialization or something?*
     * Configure the mapping of vital signs between scores.xml and VitalSign.
     * KEYS are from VitalSign label field.
     * VALUES are from scores.xml name field.
     TODO: more pairs...*
     * Could we just change the names in the scores.xml to match the labels in VitalSign?
     *
     * The current patient score
     Later, map this to Metrics... Also read some score data.  Should this live in a bean, or be CSV instead?Map vital signs to scores...System.err.println("NTA.handle called, score starts at "+currentScore);Use this event loop to also handle the score calculation - maybe every 5 seconds?We have access to the scores from here, and access to the vital values.System.err.println("Processing vitalModel element "+i+ " with size "+v.size());Keep track of which value in the list of v is the "worst"Probably the device(s) have been assigned to a patient and that patientis not the active partition as chosen in the "Select a patient" drop down.Use a score of "-1" to indicate to the chart that the data is no longer valid.System.err.println("v.size() is 0 for i="+i+" but vitalSignsController.vitalModel.size is "+vitalSignsController.vitalModel.size());
        	        			 * When doing the first metric for the given chart,
        	        			 * reset the score for the current chart to 0.  Can't
        	        			 * do this outside the "int j" loop because if no metrics
        	        			 * have been published yet then v.size() is 0 anyway and
        	        			 * that gives ArrayIndexOutOfBounds.  So it happens here,
        	        			 * conditional on it being the first metric on the chart.
        	        			 System.err.println("Vital v value is "+v.get(j).getMetricId()+" - "+v.get(j).getValue());System.err.println("Need to do a score for "+scoreForMetric);System.err.println(vitalSign.label+" has value "+f+" in range "+range.lower+" "+range.upper+", set worstScore to "+worstScore);System.err.println("Pushing "+v.get(j).getMetricId()+" with score "+range.score+" to chart");Out of the loop across rangesSystem.err.println("No Score for "+vitalSign.label);System.err.println("Added "+worstScore+" to give currentScore of "+currentScore);System.err.println("final currentScore is "+currentScore); API registered with the application-wide event bus    @FXML    public void pauseAppTimeline() {    	datePickUpdate.pause();    }System.err.println("allNodes length is "+allNodes.getLength());System.err.println("node type is "+node.getNodeType());System.err.println("node name is "+node.getNodeName());					System.err.println("Node with name "+scoreNode.getNodeName()+" is "+nnm.getNamedItem("name").getNodeValue());						System.err.printf("range details are lower %s, upper %s, score %s\n",rangeMap.getNamedItem("lower").getNodeValue(),rangeMap.getNamedItem("upper").getNodeValue(),rangeMap.getNamedItem("score").getNodeValue());					System.err.println("Added to scoreList");			for(Score score: scoreList ) {				System.err.println(score);			}This is really quite critical and so should re-throw to prevent intialization or something?*
     * Configure the mapping of vital signs between scores.xml and VitalSign.
     * KEYS are from VitalSign label field.
     * VALUES are from scores.xml name field.
     TODO: more pairs...*
     * Could we just change the names in the scores.xml to match the labels in VitalSign?
     *
     * The current patient score
     Later, map this to Metrics... Also read some score data.  Should this live in a bean, or be CSV instead?Map vital signs to scores...System.err.println("NTA.handle called, score starts at "+currentScore);Use this event loop to also handle the score calculation - maybe every 5 seconds?We have access to the scores from here, and access to the vital values.System.err.println("Processing vitalModel element "+i+ " with size "+v.size());Keep track of which value in the list of v is the "worst"Probably the device(s) have been assigned to a patient and that patientis not the active partition as chosen in the "Select a patient" drop down.Use a score of "-1" to indicate to the chart that the data is no longer valid.System.err.println("v.size() is 0 for i="+i+" but vitalSignsController.vitalModel.size is "+vitalSignsController.vitalModel.size());
        	        			 * When doing the first metric for the given chart,
        	        			 * reset the score for the current chart to 0.  Can't
        	        			 * do this outside the "int j" loop because if no metrics
        	        			 * have been published yet then v.size() is 0 anyway and
        	        			 * that gives ArrayIndexOutOfBounds.  So it happens here,
        	        			 * conditional on it being the first metric on the chart.
        	        			 System.err.println("Vital v value is "+v.get(j).getMetricId()+" - "+v.get(j).getValue());System.err.println("Need to do a score for "+scoreForMetric);System.err.println(vitalSign.label+" has value "+f+" in range "+range.lower+" "+range.upper+", set worstScore to "+worstScore);System.err.println("Pushing "+v.get(j).getMetricId()+" with score "+range.score+" to chart");Out of the loop across rangesSystem.err.println("No Score for "+vitalSign.label);System.err.println("Added "+worstScore+" to give currentScore of "+currentScore);System.err.println("final currentScore is "+currentScore); API registered with the application-wide event bus    @FXML    public void pauseAppTimeline() {    	datePickUpdate.pause();    }System.err.println("allNodes length is "+allNodes.getLength());System.err.println("node type is "+node.getNodeType());System.err.println("node name is "+node.getNodeName());					System.err.println("Node with name "+scoreNode.getNodeName()+" is "+nnm.getNamedItem("name").getNodeValue());						System.err.printf("range details are lower %s, upper %s, score %s\n",rangeMap.getNamedItem("lower").getNodeValue(),rangeMap.getNamedItem("upper").getNodeValue(),rangeMap.getNamedItem("score").getNodeValue());					System.err.println("Added to scoreList");			for(Score score: scoreList ) {				System.err.println(score);			}This is really quite critical and so should re-throw to prevent intialization or something?*
     * Configure the mapping of vital signs between scores.xml and VitalSign.
     * KEYS are from VitalSign label field.
     * VALUES are from scores.xml name field.
     TODO: more pairs...*
     * Could we just change the names in the scores.xml to match the labels in VitalSign?
     *
     * The current patient score
     Later, map this to Metrics... Also read some score data.  Should this live in a bean, or be CSV instead?Map vital signs to scores...System.err.println("NTA.handle called, score starts at "+currentScore);Use this event loop to also handle the score calculation - maybe every 5 seconds?We have access to the scores from here, and access to the vital values.System.err.println("Processing vitalModel element "+i+ " with size "+v.size());Keep track of which value in the list of v is the "worst"Probably the device(s) have been assigned to a patient and that patientis not the active partition as chosen in the "Select a patient" drop down.Use a score of "-1" to indicate to the chart that the data is no longer valid.System.err.println("v.size() is 0 for i="+i+" but vitalSignsController.vitalModel.size is "+vitalSignsController.vitalModel.size());
        	        			 * When doing the first metric for the given chart,
        	        			 * reset the score for the current chart to 0.  Can't
        	        			 * do this outside the "int j" loop because if no metrics
        	        			 * have been published yet then v.size() is 0 anyway and
        	        			 * that gives ArrayIndexOutOfBounds.  So it happens here,
        	        			 * conditional on it being the first metric on the chart.
        	        			 System.err.println("Vital v value is "+v.get(j).getMetricId()+" - "+v.get(j).getValue());System.err.println("Need to do a score for "+scoreForMetric);System.err.println(vitalSign.label+" has value "+f+" in range "+range.lower+" "+range.upper+", set worstScore to "+worstScore);System.err.println("Pushing "+v.get(j).getMetricId()+" with score "+range.score+" to chart");Out of the loop across rangesSystem.err.println("No Score for "+vitalSign.label);System.err.println("Added "+worstScore+" to give currentScore of "+currentScore);System.err.println("final currentScore is "+currentScore); API registered with the application-wide event bus    @FXML    public void pauseAppTimeline() {    	datePickUpdate.pause();    }System.err.println("allNodes length is "+allNodes.getLength());System.err.println("node type is "+node.getNodeType());System.err.println("node name is "+node.getNodeName());					System.err.println("Node with name "+scoreNode.getNodeName()+" is "+nnm.getNamedItem("name").getNodeValue());						System.err.printf("range details are lower %s, upper %s, score %s\n",rangeMap.getNamedItem("lower").getNodeValue(),rangeMap.getNamedItem("upper").getNodeValue(),rangeMap.getNamedItem("score").getNodeValue());					System.err.println("Added to scoreList");			for(Score score: scoreList ) {				System.err.println(score);			}This is really quite critical and so should re-throw to prevent intialization or something?*
     * Configure the mapping of vital signs between scores.xml and VitalSign.
     * KEYS are from VitalSign label field.
     * VALUES are from scores.xml name field.
     TODO: more pairs...*
     * Could we just change the names in the scores.xml to match the labels in VitalSign?
     *
     * The current patient score
     Later, map this to Metrics... Also read some score data.  Should this live in a bean, or be CSV instead?Map vital signs to scores...System.err.println("NTA.handle called, score starts at "+currentScore);Use this event loop to also handle the score calculation - maybe every 5 seconds?We have access to the scores from here, and access to the vital values.System.err.println("Processing vitalModel element "+i+ " with size "+v.size());Keep track of which value in the list of v is the "worst"Probably the device(s) have been assigned to a patient and that patientis not the active partition as chosen in the "Select a patient" drop down.Use a score of "-1" to indicate to the chart that the data is no longer valid.System.err.println("v.size() is 0 for i="+i+" but vitalSignsController.vitalModel.size is "+vitalSignsController.vitalModel.size());
        	        			 * When doing the first metric for the given chart,
        	        			 * reset the score for the current chart to 0.  Can't
        	        			 * do this outside the "int j" loop because if no metrics
        	        			 * have been published yet then v.size() is 0 anyway and
        	        			 * that gives ArrayIndexOutOfBounds.  So it happens here,
        	        			 * conditional on it being the first metric on the chart.
        	        			 System.err.println("Vital v value is "+v.get(j).getMetricId()+" - "+v.get(j).getValue());System.err.println("Need to do a score for "+scoreForMetric);System.err.println(vitalSign.label+" has value "+f+" in range "+range.lower+" "+range.upper+", set worstScore to "+worstScore);System.err.println("Pushing "+v.get(j).getMetricId()+" with score "+range.score+" to chart");Out of the loop across rangesSystem.err.println("No Score for "+vitalSign.label);System.err.println("Added "+worstScore+" to give currentScore of "+currentScore);System.err.println("final currentScore is "+currentScore); API registered with the application-wide event bus    @FXML    public void pauseAppTimeline() {    	datePickUpdate.pause();    }System.err.println("allNodes length is "+allNodes.getLength());System.err.println("node type is "+node.getNodeType());System.err.println("node name is "+node.getNodeName());					System.err.println("Node with name "+scoreNode.getNodeName()+" is "+nnm.getNamedItem("name").getNodeValue());						System.err.printf("range details are lower %s, upper %s, score %s\n",rangeMap.getNamedItem("lower").getNodeValue(),rangeMap.getNamedItem("upper").getNodeValue(),rangeMap.getNamedItem("score").getNodeValue());					System.err.println("Added to scoreList");			for(Score score: scoreList ) {				System.err.println(score);			}This is really quite critical and so should re-throw to prevent intialization or something?*
     * Configure the mapping of vital signs between scores.xml and VitalSign.
     * KEYS are from VitalSign label field.
     * VALUES are from scores.xml name field.
     TODO: more pairs...*
     * Could we just change the names in the scores.xml to match the labels in VitalSign?
     *
     * The current patient score
     Later, map this to Metrics... Also read some score data.  Should this live in a bean, or be CSV instead?Map vital signs to scores...System.err.println("NTA.handle called, score starts at "+currentScore);Use this event loop to also handle the score calculation - maybe every 5 seconds?We have access to the scores from here, and access to the vital values.System.err.println("Processing vitalModel element "+i+ " with size "+v.size());Keep track of which value in the list of v is the "worst"Probably the device(s) have been assigned to a patient and that patientis not the active partition as chosen in the "Select a patient" drop down.Use a score of "-1" to indicate to the chart that the data is no longer valid.System.err.println("v.size() is 0 for i="+i+" but vitalSignsController.vitalModel.size is "+vitalSignsController.vitalModel.size());
        	        			 * When doing the first metric for the given chart,
        	        			 * reset the score for the current chart to 0.  Can't
        	        			 * do this outside the "int j" loop because if no metrics
        	        			 * have been published yet then v.size() is 0 anyway and
        	        			 * that gives ArrayIndexOutOfBounds.  So it happens here,
        	        			 * conditional on it being the first metric on the chart.
        	        			 System.err.println("Vital v value is "+v.get(j).getMetricId()+" - "+v.get(j).getValue());System.err.println("Need to do a score for "+scoreForMetric);System.err.println(vitalSign.label+" has value "+f+" in range "+range.lower+" "+range.upper+", set worstScore to "+worstScore);System.err.println("Pushing "+v.get(j).getMetricId()+" with score "+range.score+" to chart");Out of the loop across rangesSystem.err.println("No Score for "+vitalSign.label);System.err.println("Added "+worstScore+" to give currentScore of "+currentScore);System.err.println("final currentScore is "+currentScore); API registered with the application-wide event bus    @FXML    public void pauseAppTimeline() {    	datePickUpdate.pause();    }System.err.println("allNodes length is "+allNodes.getLength());System.err.println("node type is "+node.getNodeType());System.err.println("node name is "+node.getNodeName());					System.err.println("Node with name "+scoreNode.getNodeName()+" is "+nnm.getNamedItem("name").getNodeValue());						System.err.printf("range details are lower %s, upper %s, score %s\n",rangeMap.getNamedItem("lower").getNodeValue(),rangeMap.getNamedItem("upper").getNodeValue(),rangeMap.getNamedItem("score").getNodeValue());					System.err.println("Added to scoreList");			for(Score score: scoreList ) {				System.err.println(score);			}This is really quite critical and so should re-throw to prevent intialization or something?*
     * Configure the mapping of vital signs between scores.xml and VitalSign.
     * KEYS are from VitalSign label field.
     * VALUES are from scores.xml name field.
     TODO: more pairs...*
     * Could we just change the names in the scores.xml to match the labels in VitalSign?
     *
     * The current patient score
     Later, map this to Metrics... Also read some score data.  Should this live in a bean, or be CSV instead?Map vital signs to scores...System.err.println("NTA.handle called, score starts at "+currentScore);Use this event loop to also handle the score calculation - maybe every 5 seconds?We have access to the scores from here, and access to the vital values.System.err.println("Processing vitalModel element "+i+ " with size "+v.size());Keep track of which value in the list of v is the "worst"Probably the device(s) have been assigned to a patient and that patientis not the active partition as chosen in the "Select a patient" drop down.Use a score of "-1" to indicate to the chart that the data is no longer valid.System.err.println("v.size() is 0 for i="+i+" but vitalSignsController.vitalModel.size is "+vitalSignsController.vitalModel.size());
        	        			 * When doing the first metric for the given chart,
        	        			 * reset the score for the current chart to 0.  Can't
        	        			 * do this outside the "int j" loop because if no metrics
        	        			 * have been published yet then v.size() is 0 anyway and
        	        			 * that gives ArrayIndexOutOfBounds.  So it happens here,
        	        			 * conditional on it being the first metric on the chart.
        	        			 System.err.println("Vital v value is "+v.get(j).getMetricId()+" - "+v.get(j).getValue());System.err.println("Need to do a score for "+scoreForMetric);System.err.println(vitalSign.label+" has value "+f+" in range "+range.lower+" "+range.upper+", set worstScore to "+worstScore);System.err.println("Pushing "+v.get(j).getMetricId()+" with score "+range.score+" to chart");Out of the loop across rangesSystem.err.println("No Score for "+vitalSign.label);System.err.println("Added "+worstScore+" to give currentScore of "+currentScore);System.err.println("final currentScore is "+currentScore); API registered with the application-wide event bus    @FXML    public void pauseAppTimeline() {    	datePickUpdate.pause();    }System.err.println("allNodes length is "+allNodes.getLength());System.err.println("node type is "+node.getNodeType());System.err.println("node name is "+node.getNodeName());					System.err.println("Node with name "+scoreNode.getNodeName()+" is "+nnm.getNamedItem("name").getNodeValue());						System.err.printf("range details are lower %s, upper %s, score %s\n",rangeMap.getNamedItem("lower").getNodeValue(),rangeMap.getNamedItem("upper").getNodeValue(),rangeMap.getNamedItem("score").getNodeValue());					System.err.println("Added to scoreList");			for(Score score: scoreList ) {				System.err.println(score);			}This is really quite critical and so should re-throw to prevent intialization or something?*
     * Configure the mapping of vital signs between scores.xml and VitalSign.
     * KEYS are from VitalSign label field.
     * VALUES are from scores.xml name field.
     TODO: more pairs...