
** $Id: lmathlib.c,v 1.67.1.1 2007/12/27 13:02:25 roberto Exp $
** Standard mathematical library
** See Copyright Notice in lua.h
 Was: lua_pushnumber(L, fabs(luaL_checknumber(L, 1)));  Was: lua_pushnumber(L, fmod(luaL_checknumber(L, 1), luaL_checknumber(L, 2)));  number of arguments  number of arguments  We're not SunOS  check number of arguments  no arguments  Number between 0 and RAND_MAX  only upper limit  int between 1 and `u'  lower and upper limits  int between `l' and `u'  ROCKLUA ADDED  Ceil & floor Doesn't change anything in fixed point arithmetic 
** Open math library
 No use in adding floating point constants when there's no FP 
** $Id: lmathlib.c,v 1.67.1.1 2007/12/27 13:02:25 roberto Exp $
** Standard mathematical library
** See Copyright Notice in lua.h
 Was: lua_pushnumber(L, fabs(luaL_checknumber(L, 1)));  Was: lua_pushnumber(L, fmod(luaL_checknumber(L, 1), luaL_checknumber(L, 2)));  number of arguments  number of arguments  We're not SunOS  check number of arguments  no arguments  Number between 0 and RAND_MAX  only upper limit  int between 1 and `u'  lower and upper limits  int between `l' and `u'  ROCKLUA ADDED  Ceil & floor Doesn't change anything in fixed point arithmetic 
** Open math library
 No use in adding floating point constants when there's no FP 
** $Id: lmathlib.c,v 1.67.1.1 2007/12/27 13:02:25 roberto Exp $
** Standard mathematical library
** See Copyright Notice in lua.h
 Was: lua_pushnumber(L, fabs(luaL_checknumber(L, 1)));  Was: lua_pushnumber(L, fmod(luaL_checknumber(L, 1), luaL_checknumber(L, 2)));  number of arguments  number of arguments  We're not SunOS  check number of arguments  no arguments  Number between 0 and RAND_MAX  only upper limit  int between 1 and `u'  lower and upper limits  int between `l' and `u'  ROCKLUA ADDED  Ceil & floor Doesn't change anything in fixed point arithmetic 
** Open math library
 No use in adding floating point constants when there's no FP 