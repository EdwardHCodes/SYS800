******************************************************************* menu.c - user menu for rockboy                                                                                                        Note: this file only exposes one function: do_user_menu().        ******************************************************************* load/save state function declarations  directory ROM save slots belong in 
 * do_user_menu - create the user menu on the screen.
 *
 * Returns USER_MENU_QUIT if the user selected "quit", otherwise 
 * returns zero.
  Clean out the button Queue  Load Game  Save Game  Options  Reset  Quit  Reset the font  Clear display for screen size changes  Keep the RTC in sync  ignore backlight time out 
 * munge_name - munge a string into a filesystem-safe name
  check strlen  iterate over characters and munge them (if necessary) 
 * build_slot_path - build a path to an slot state file for this rom
 *
 * Note: uses rom.name.  Is there a safer way of doing this?  Like a ROM
 * checksum or something like that?
  munge state file name  glom the whole mess together 
 * do_file - load or save game data in the given file
 *
 * Returns true on success and false on failure.
 *
 * @desc is a brief user-provided description of the state.
 * If no description is provided, set @desc to NULL.
 *
  set file mode  attempt to open file descriptor here  load/save state  load description  load state  print out a status message so the user knows the state loaded  build description buffer  save state  close file descriptor  return true (for success)  
 * get information on the given slot
  get slot file path  attempt to open slot  this slot has a some data in it, read it  if we couldn't open the file, then the slot is empty 
 * do_slot - load or save game data in the given slot
 *
 * Returns true on success and false on failure.
  build slot filename, clear desc buf  if we're saving to a slot, then get a brief description  load/save file  
 * slot_get_name
 
 * list_action_callback
 
 * do_slot_menu - prompt the user for a load/save memory slot
  create menu items  Assume that the settings have been changed  Frameskip  Autosave  Sound  Volume  Stats  Keys  Screen Size  Screen rotate  Palette ******************************************************************* menu.c - user menu for rockboy                                                                                                        Note: this file only exposes one function: do_user_menu().        ******************************************************************* load/save state function declarations  directory ROM save slots belong in 
 * do_user_menu - create the user menu on the screen.
 *
 * Returns USER_MENU_QUIT if the user selected "quit", otherwise 
 * returns zero.
  Clean out the button Queue  Load Game  Save Game  Options  Reset  Quit  Reset the font  Clear display for screen size changes  Keep the RTC in sync  ignore backlight time out 
 * munge_name - munge a string into a filesystem-safe name
  check strlen  iterate over characters and munge them (if necessary) 
 * build_slot_path - build a path to an slot state file for this rom
 *
 * Note: uses rom.name.  Is there a safer way of doing this?  Like a ROM
 * checksum or something like that?
  munge state file name  glom the whole mess together 
 * do_file - load or save game data in the given file
 *
 * Returns true on success and false on failure.
 *
 * @desc is a brief user-provided description of the state.
 * If no description is provided, set @desc to NULL.
 *
  set file mode  attempt to open file descriptor here  load/save state  load description  load state  print out a status message so the user knows the state loaded  build description buffer  save state  close file descriptor  return true (for success)  
 * get information on the given slot
  get slot file path  attempt to open slot  this slot has a some data in it, read it  if we couldn't open the file, then the slot is empty 
 * do_slot - load or save game data in the given slot
 *
 * Returns true on success and false on failure.
  build slot filename, clear desc buf  if we're saving to a slot, then get a brief description  load/save file  
 * slot_get_name
 
 * list_action_callback
 
 * do_slot_menu - prompt the user for a load/save memory slot
  create menu items  Assume that the settings have been changed  Frameskip  Autosave  Sound  Volume  Stats  Keys  Screen Size  Screen rotate  Palette ******************************************************************* menu.c - user menu for rockboy                                                                                                        Note: this file only exposes one function: do_user_menu().        ******************************************************************* load/save state function declarations  directory ROM save slots belong in 
 * do_user_menu - create the user menu on the screen.
 *
 * Returns USER_MENU_QUIT if the user selected "quit", otherwise 
 * returns zero.
  Clean out the button Queue  Load Game  Save Game  Options  Reset  Quit  Reset the font  Clear display for screen size changes  Keep the RTC in sync  ignore backlight time out 
 * munge_name - munge a string into a filesystem-safe name
  check strlen  iterate over characters and munge them (if necessary) 
 * build_slot_path - build a path to an slot state file for this rom
 *
 * Note: uses rom.name.  Is there a safer way of doing this?  Like a ROM
 * checksum or something like that?
  munge state file name  glom the whole mess together 
 * do_file - load or save game data in the given file
 *
 * Returns true on success and false on failure.
 *
 * @desc is a brief user-provided description of the state.
 * If no description is provided, set @desc to NULL.
 *
  set file mode  attempt to open file descriptor here  load/save state  load description  load state  print out a status message so the user knows the state loaded  build description buffer  save state  close file descriptor  return true (for success)  
 * get information on the given slot
  get slot file path  attempt to open slot  this slot has a some data in it, read it  if we couldn't open the file, then the slot is empty 
 * do_slot - load or save game data in the given slot
 *
 * Returns true on success and false on failure.
  build slot filename, clear desc buf  if we're saving to a slot, then get a brief description  load/save file  
 * slot_get_name
 
 * list_action_callback
 
 * do_slot_menu - prompt the user for a load/save memory slot
  create menu items  Assume that the settings have been changed  Frameskip  Autosave  Sound  Volume  Stats  Keys  Screen Size  Screen rotate  Palette 