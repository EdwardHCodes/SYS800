 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:  heads-up text and input code
 *
 *-----------------------------------------------------------------------------
  boolean : whether the screen is always erased phares phares not used currently code to initialize HUlib would go here if needed////////////////////////////////////////////////////// Basic text line widget////////////////////////////////////////////////////// HUlib_clearTextLine() Blank the internal text line in a hu_textline_t widget Passed a hu_textline_t, returns nothing killough 1/23 98: support multiple lines HUlib_initTextLine() Initialize a hu_textline_t widget. Set the position, font, start char of the font, and color range to be used. Passed a hu_textline_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter HUlib_addCharToTextLine() Adds a character at the end of the text line in a hu_textline_t widget Passed the hu_textline_t and the char to add Returns false if already at length limit, true if the character added killough 1/23/98 -- support multiple lines HUlib_delCharFromTextLine() Deletes a character at the end of the text line in a hu_textline_t widget Passed the hu_textline_t Returns false if already empty, true if the character deleted HUlib_drawTextLine() Draws a hu_textline_t widget Passed the hu_textline_t and flag whether to draw a cursor Returns nothingjff 2/17/98 remember default color killough 1/18/98 -- support multiple lines draw the new stuffjff insure were not getting a cheap toupper conv. killough 1/18/98 -- support multiple lines killough 1/23/98 -- support tab stopsjff 2/17/98 escape code for color changejff 3/26/98 changed to actual escape char killough 1/18/98 -- support multiple lines: CPhipps - patch drawing updatedjff 2/17/98 restore original color draw the cursor if requested killough 1/18/98 -- support multiple lines CPhipps - patch drawing updated HUlib_eraseTextLine() Erases a hu_textline_t widget when screen border is behind text Sorta called by HU_Erase and just better darn get things straight Passed the hu_textline_t Returns nothing KK - If someone finds a use for this code, please fix it, I havn't seen the need      And it's not written to take into account scaling.  Causing some nasty effects      on smaller screens. Only erases when NOT in automap and the screen is reduced, and the text must either need updating or refreshing (because of a recent change back from the automap) erase entire line erase left border erase right border////////////////////////////////////////////////////// Player message widget (up to 4 lines of text)////////////////////////////////////////////////////// HUlib_initSText() Initialize a hu_stext_t widget. Set the position, number of lines, font, start char of the font, and color range to be used, and whether enabled. Passed a hu_stext_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter HUlib_addLineToSText() Adds a blank line to a hu_stext_t widget Passed a hu_stext_t Returns nothing add a clear line everything needs updating HUlib_addMessageToSText() Adds a message line with prefix to a hu_stext_t widget Passed a hu_stext_t, the prefix string, and a message string Returns nothing HUlib_drawSText() Displays a hu_stext_t widget Passed a hu_stext_t Returns nothing if not on, don't draw draw everything handle queue of lines need a decision made here on whether to skip the draw no cursor, please HUlib_eraseSText() Erases a hu_stext_t widget, when the screen is not fullsize Passed a hu_stext_t Returns nothing////////////////////////////////////////////////////// Scrolling message review widget jff added 2/26/98////////////////////////////////////////////////////// HUlib_initMText() Initialize a hu_mtext_t widget. Set the position, width, number of lines, font, start char of the font, color range, background font, and whether enabled. Passed a hu_mtext_t, and the values used to initialize Returns nothingjff 4/28/98 prepare for pre-increment HUlib_addLineToMText() Adds a blank line to a hu_mtext_t widget Passed a hu_mtext_t Returns nothing add a clear line needs updating HUlib_addMessageToMText() Adds a message line with prefix to a hu_mtext_t widget Passed a hu_mtext_t, the prefix string, and a message string Returns nothing HUlib_drawMBg() Draws a background box which the message display review widget can display over Passed position, width, height, and the background patches Returns nothing CPhipps - patch drawing updated top rows ul uc ur middle rows cl cc cr bottom row ll lc lr HUlib_drawMText() Displays a hu_mtext_t widget Passed a hu_mtext_t Returns nothing if not on, don't draw draw everything handle queue of lines need a decision made here on whether to skip the draw no cursor, please HUlib_eraseMBg() Erases background behind hu_mtext_t widget, when the screen is not fullsize Passed a hu_mtext_t Returns nothing Only erases when NOT in automap and the screen is reduced, and the text must either need updating or refreshing (because of a recent change back from the automap) erase entire line erase left border erase right border HUlib_eraseMText() Erases a hu_mtext_t widget, when the screen is not fullsize Passed a hu_mtext_t Returns nothing////////////////////////////////////////////////////// Interactive text entry widget////////////////////////////////////////////////////// HUlib_initIText() Initialize a hu_itext_t widget. Set the position, font, start char of the font, color range, and whether enabled. Passed a hu_itext_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter default left margin is start of text The following deletion routines adhere to the left margin restriction HUlib_delCharFromIText() Deletes a character at the end of the text line in a hu_itext_t widget Passed the hu_itext_t Returns nothing HUlib_eraseLineFromIText() Deletes all characters from a hu_itext_t widget Passed the hu_itext_t Returns nothing HUlib_resetIText() Deletes all characters from a hu_itext_t widget Resets left margin as well Passed the hu_itext_t Returns nothing HUlib_addPrefixToIText() Adds a prefix string passed to a hu_itext_t widget Sets left margin to length of string added Passed the hu_itext_t and the prefix string Returns nothing HUlib_keyInIText() Wrapper function for handling general keyed input. Passed the hu_itext_t and the char input Returns true if it ate the key phares phares did not eat key ate the key HUlib_drawIText() Displays a hu_itext_t widget Passed the hu_itext_t Returns nothing draw the line w/ cursor HUlib_eraseIText() Erases a hu_itext_t widget when the screen is not fullsize Passed the hu_itext_t Returns nothing Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:  heads-up text and input code
 *
 *-----------------------------------------------------------------------------
  boolean : whether the screen is always erased phares phares not used currently code to initialize HUlib would go here if needed////////////////////////////////////////////////////// Basic text line widget////////////////////////////////////////////////////// HUlib_clearTextLine() Blank the internal text line in a hu_textline_t widget Passed a hu_textline_t, returns nothing killough 1/23 98: support multiple lines HUlib_initTextLine() Initialize a hu_textline_t widget. Set the position, font, start char of the font, and color range to be used. Passed a hu_textline_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter HUlib_addCharToTextLine() Adds a character at the end of the text line in a hu_textline_t widget Passed the hu_textline_t and the char to add Returns false if already at length limit, true if the character added killough 1/23/98 -- support multiple lines HUlib_delCharFromTextLine() Deletes a character at the end of the text line in a hu_textline_t widget Passed the hu_textline_t Returns false if already empty, true if the character deleted HUlib_drawTextLine() Draws a hu_textline_t widget Passed the hu_textline_t and flag whether to draw a cursor Returns nothingjff 2/17/98 remember default color killough 1/18/98 -- support multiple lines draw the new stuffjff insure were not getting a cheap toupper conv. killough 1/18/98 -- support multiple lines killough 1/23/98 -- support tab stopsjff 2/17/98 escape code for color changejff 3/26/98 changed to actual escape char killough 1/18/98 -- support multiple lines: CPhipps - patch drawing updatedjff 2/17/98 restore original color draw the cursor if requested killough 1/18/98 -- support multiple lines CPhipps - patch drawing updated HUlib_eraseTextLine() Erases a hu_textline_t widget when screen border is behind text Sorta called by HU_Erase and just better darn get things straight Passed the hu_textline_t Returns nothing KK - If someone finds a use for this code, please fix it, I havn't seen the need      And it's not written to take into account scaling.  Causing some nasty effects      on smaller screens. Only erases when NOT in automap and the screen is reduced, and the text must either need updating or refreshing (because of a recent change back from the automap) erase entire line erase left border erase right border////////////////////////////////////////////////////// Player message widget (up to 4 lines of text)////////////////////////////////////////////////////// HUlib_initSText() Initialize a hu_stext_t widget. Set the position, number of lines, font, start char of the font, and color range to be used, and whether enabled. Passed a hu_stext_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter HUlib_addLineToSText() Adds a blank line to a hu_stext_t widget Passed a hu_stext_t Returns nothing add a clear line everything needs updating HUlib_addMessageToSText() Adds a message line with prefix to a hu_stext_t widget Passed a hu_stext_t, the prefix string, and a message string Returns nothing HUlib_drawSText() Displays a hu_stext_t widget Passed a hu_stext_t Returns nothing if not on, don't draw draw everything handle queue of lines need a decision made here on whether to skip the draw no cursor, please HUlib_eraseSText() Erases a hu_stext_t widget, when the screen is not fullsize Passed a hu_stext_t Returns nothing////////////////////////////////////////////////////// Scrolling message review widget jff added 2/26/98////////////////////////////////////////////////////// HUlib_initMText() Initialize a hu_mtext_t widget. Set the position, width, number of lines, font, start char of the font, color range, background font, and whether enabled. Passed a hu_mtext_t, and the values used to initialize Returns nothingjff 4/28/98 prepare for pre-increment HUlib_addLineToMText() Adds a blank line to a hu_mtext_t widget Passed a hu_mtext_t Returns nothing add a clear line needs updating HUlib_addMessageToMText() Adds a message line with prefix to a hu_mtext_t widget Passed a hu_mtext_t, the prefix string, and a message string Returns nothing HUlib_drawMBg() Draws a background box which the message display review widget can display over Passed position, width, height, and the background patches Returns nothing CPhipps - patch drawing updated top rows ul uc ur middle rows cl cc cr bottom row ll lc lr HUlib_drawMText() Displays a hu_mtext_t widget Passed a hu_mtext_t Returns nothing if not on, don't draw draw everything handle queue of lines need a decision made here on whether to skip the draw no cursor, please HUlib_eraseMBg() Erases background behind hu_mtext_t widget, when the screen is not fullsize Passed a hu_mtext_t Returns nothing Only erases when NOT in automap and the screen is reduced, and the text must either need updating or refreshing (because of a recent change back from the automap) erase entire line erase left border erase right border HUlib_eraseMText() Erases a hu_mtext_t widget, when the screen is not fullsize Passed a hu_mtext_t Returns nothing////////////////////////////////////////////////////// Interactive text entry widget////////////////////////////////////////////////////// HUlib_initIText() Initialize a hu_itext_t widget. Set the position, font, start char of the font, color range, and whether enabled. Passed a hu_itext_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter default left margin is start of text The following deletion routines adhere to the left margin restriction HUlib_delCharFromIText() Deletes a character at the end of the text line in a hu_itext_t widget Passed the hu_itext_t Returns nothing HUlib_eraseLineFromIText() Deletes all characters from a hu_itext_t widget Passed the hu_itext_t Returns nothing HUlib_resetIText() Deletes all characters from a hu_itext_t widget Resets left margin as well Passed the hu_itext_t Returns nothing HUlib_addPrefixToIText() Adds a prefix string passed to a hu_itext_t widget Sets left margin to length of string added Passed the hu_itext_t and the prefix string Returns nothing HUlib_keyInIText() Wrapper function for handling general keyed input. Passed the hu_itext_t and the char input Returns true if it ate the key phares phares did not eat key ate the key HUlib_drawIText() Displays a hu_itext_t widget Passed the hu_itext_t Returns nothing draw the line w/ cursor HUlib_eraseIText() Erases a hu_itext_t widget when the screen is not fullsize Passed the hu_itext_t Returns nothing Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:  heads-up text and input code
 *
 *-----------------------------------------------------------------------------
  boolean : whether the screen is always erased phares phares not used currently code to initialize HUlib would go here if needed////////////////////////////////////////////////////// Basic text line widget////////////////////////////////////////////////////// HUlib_clearTextLine() Blank the internal text line in a hu_textline_t widget Passed a hu_textline_t, returns nothing killough 1/23 98: support multiple lines HUlib_initTextLine() Initialize a hu_textline_t widget. Set the position, font, start char of the font, and color range to be used. Passed a hu_textline_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter HUlib_addCharToTextLine() Adds a character at the end of the text line in a hu_textline_t widget Passed the hu_textline_t and the char to add Returns false if already at length limit, true if the character added killough 1/23/98 -- support multiple lines HUlib_delCharFromTextLine() Deletes a character at the end of the text line in a hu_textline_t widget Passed the hu_textline_t Returns false if already empty, true if the character deleted HUlib_drawTextLine() Draws a hu_textline_t widget Passed the hu_textline_t and flag whether to draw a cursor Returns nothingjff 2/17/98 remember default color killough 1/18/98 -- support multiple lines draw the new stuffjff insure were not getting a cheap toupper conv. killough 1/18/98 -- support multiple lines killough 1/23/98 -- support tab stopsjff 2/17/98 escape code for color changejff 3/26/98 changed to actual escape char killough 1/18/98 -- support multiple lines: CPhipps - patch drawing updatedjff 2/17/98 restore original color draw the cursor if requested killough 1/18/98 -- support multiple lines CPhipps - patch drawing updated HUlib_eraseTextLine() Erases a hu_textline_t widget when screen border is behind text Sorta called by HU_Erase and just better darn get things straight Passed the hu_textline_t Returns nothing KK - If someone finds a use for this code, please fix it, I havn't seen the need      And it's not written to take into account scaling.  Causing some nasty effects      on smaller screens. Only erases when NOT in automap and the screen is reduced, and the text must either need updating or refreshing (because of a recent change back from the automap) erase entire line erase left border erase right border////////////////////////////////////////////////////// Player message widget (up to 4 lines of text)////////////////////////////////////////////////////// HUlib_initSText() Initialize a hu_stext_t widget. Set the position, number of lines, font, start char of the font, and color range to be used, and whether enabled. Passed a hu_stext_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter HUlib_addLineToSText() Adds a blank line to a hu_stext_t widget Passed a hu_stext_t Returns nothing add a clear line everything needs updating HUlib_addMessageToSText() Adds a message line with prefix to a hu_stext_t widget Passed a hu_stext_t, the prefix string, and a message string Returns nothing HUlib_drawSText() Displays a hu_stext_t widget Passed a hu_stext_t Returns nothing if not on, don't draw draw everything handle queue of lines need a decision made here on whether to skip the draw no cursor, please HUlib_eraseSText() Erases a hu_stext_t widget, when the screen is not fullsize Passed a hu_stext_t Returns nothing////////////////////////////////////////////////////// Scrolling message review widget jff added 2/26/98////////////////////////////////////////////////////// HUlib_initMText() Initialize a hu_mtext_t widget. Set the position, width, number of lines, font, start char of the font, color range, background font, and whether enabled. Passed a hu_mtext_t, and the values used to initialize Returns nothingjff 4/28/98 prepare for pre-increment HUlib_addLineToMText() Adds a blank line to a hu_mtext_t widget Passed a hu_mtext_t Returns nothing add a clear line needs updating HUlib_addMessageToMText() Adds a message line with prefix to a hu_mtext_t widget Passed a hu_mtext_t, the prefix string, and a message string Returns nothing HUlib_drawMBg() Draws a background box which the message display review widget can display over Passed position, width, height, and the background patches Returns nothing CPhipps - patch drawing updated top rows ul uc ur middle rows cl cc cr bottom row ll lc lr HUlib_drawMText() Displays a hu_mtext_t widget Passed a hu_mtext_t Returns nothing if not on, don't draw draw everything handle queue of lines need a decision made here on whether to skip the draw no cursor, please HUlib_eraseMBg() Erases background behind hu_mtext_t widget, when the screen is not fullsize Passed a hu_mtext_t Returns nothing Only erases when NOT in automap and the screen is reduced, and the text must either need updating or refreshing (because of a recent change back from the automap) erase entire line erase left border erase right border HUlib_eraseMText() Erases a hu_mtext_t widget, when the screen is not fullsize Passed a hu_mtext_t Returns nothing////////////////////////////////////////////////////// Interactive text entry widget////////////////////////////////////////////////////// HUlib_initIText() Initialize a hu_itext_t widget. Set the position, font, start char of the font, color range, and whether enabled. Passed a hu_itext_t, and the values used to initialize Returns nothingjff 2/16/98 add color range parameter default left margin is start of text The following deletion routines adhere to the left margin restriction HUlib_delCharFromIText() Deletes a character at the end of the text line in a hu_itext_t widget Passed the hu_itext_t Returns nothing HUlib_eraseLineFromIText() Deletes all characters from a hu_itext_t widget Passed the hu_itext_t Returns nothing HUlib_resetIText() Deletes all characters from a hu_itext_t widget Resets left margin as well Passed the hu_itext_t Returns nothing HUlib_addPrefixToIText() Adds a prefix string passed to a hu_itext_t widget Sets left margin to length of string added Passed the hu_itext_t and the prefix string Returns nothing HUlib_keyInIText() Wrapper function for handling general keyed input. Passed the hu_itext_t and the char input Returns true if it ate the key phares phares did not eat key ate the key HUlib_drawIText() Displays a hu_itext_t widget Passed the hu_itext_t Returns nothing draw the line w/ cursor HUlib_eraseIText() Erases a hu_itext_t widget when the screen is not fullsize Passed the hu_itext_t Returns nothing