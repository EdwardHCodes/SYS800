**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2017 Sebastian Leonhardt
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
 *  Follow Windows shortcuts (*.lnk files) in Rockbox.
 *  If the destination is a file, it will be selected in the file browser,
 *  a directory will be entered.
 *  For now, only relative links are supported.
  a selection of link flags  a selection of file attributes flags *
 *  Read one byte from file
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Read 16-bit word from file, respecting windows endianness (little endian)
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Read 32-bit word from file, respecting windows endianness (little endian)
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Scan *.lnk file for relative link target
 *  \param  fd          file descriptor
 *  \param  link_target the extracted link destination
 *  \param  target_size available space for the extracted link (in bytes)
 *  \param  link_flags  the link flags are stored here
 *  \param  file_atts   file attributes are stored here
 *  \return             returns false if extraction failed.
  Read ShellLinkHeader  header size MUST be 76 bytes  Skip LinkCLSID (class identifier)  We need the LinkFlags and File attribute (to see if target is a directory)  Skip to end of header  For now we only support relative links, so we can exit right away
       if no relative link structure is present  Read (skip) LinkTargetIDList structure if present  Read (skip) LinkInfo structure if present  String Data section  Read (skip) NAME_STRING StringData structure if present  Read RELATIVE_PATH StringData structure if present  This is finally the data we are searching for!  check for surrogate pair and read the second char  non-unicode  convert from windows to unix subdir separators *
 * strip rightmost part of file/pathname to next '/', i.e. remove filename
 * or last subdirectory. Leaves a trailing '/' character.
 * \param   pathname    full path or filename
 cut off *
 * Combine link file's absolute path with relative link target to form
 * (absolute) link destination
 * \param   abs_path    full shortcut filename (including path)
 * \param   rel_path    the extracted relative link target
 * \param   max_len     maximum lengt of combined filename
  cut off link filename  avoid double '/' chars when concatenating *
 *  Select the chosen file in the file browser. A directory (filename ending
 *  with '/') will be entered.
 *  \param  link_target link target to be selected in the browser
 *  \return             returns false if the target doesn't exist
  Set the browsers dirfilter to the global setting.
     * This is required in case the plugin was launched
     * from the plugins browser, in which case the
     * dirfilter is set to only display .rock files  Change directory to the entry selected by the user  This is a viewer, so a parameter must have been specified  if target is a directory, add '/' to the dir name,
       so that the directory gets entered instead of just highlighted **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2017 Sebastian Leonhardt
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
 *  Follow Windows shortcuts (*.lnk files) in Rockbox.
 *  If the destination is a file, it will be selected in the file browser,
 *  a directory will be entered.
 *  For now, only relative links are supported.
  a selection of link flags  a selection of file attributes flags *
 *  Read one byte from file
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Read 16-bit word from file, respecting windows endianness (little endian)
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Read 32-bit word from file, respecting windows endianness (little endian)
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Scan *.lnk file for relative link target
 *  \param  fd          file descriptor
 *  \param  link_target the extracted link destination
 *  \param  target_size available space for the extracted link (in bytes)
 *  \param  link_flags  the link flags are stored here
 *  \param  file_atts   file attributes are stored here
 *  \return             returns false if extraction failed.
  Read ShellLinkHeader  header size MUST be 76 bytes  Skip LinkCLSID (class identifier)  We need the LinkFlags and File attribute (to see if target is a directory)  Skip to end of header  For now we only support relative links, so we can exit right away
       if no relative link structure is present  Read (skip) LinkTargetIDList structure if present  Read (skip) LinkInfo structure if present  String Data section  Read (skip) NAME_STRING StringData structure if present  Read RELATIVE_PATH StringData structure if present  This is finally the data we are searching for!  check for surrogate pair and read the second char  non-unicode  convert from windows to unix subdir separators *
 * strip rightmost part of file/pathname to next '/', i.e. remove filename
 * or last subdirectory. Leaves a trailing '/' character.
 * \param   pathname    full path or filename
 cut off *
 * Combine link file's absolute path with relative link target to form
 * (absolute) link destination
 * \param   abs_path    full shortcut filename (including path)
 * \param   rel_path    the extracted relative link target
 * \param   max_len     maximum lengt of combined filename
  cut off link filename  avoid double '/' chars when concatenating *
 *  Select the chosen file in the file browser. A directory (filename ending
 *  with '/') will be entered.
 *  \param  link_target link target to be selected in the browser
 *  \return             returns false if the target doesn't exist
  Set the browsers dirfilter to the global setting.
     * This is required in case the plugin was launched
     * from the plugins browser, in which case the
     * dirfilter is set to only display .rock files  Change directory to the entry selected by the user  This is a viewer, so a parameter must have been specified  if target is a directory, add '/' to the dir name,
       so that the directory gets entered instead of just highlighted **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2017 Sebastian Leonhardt
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************
 *  Follow Windows shortcuts (*.lnk files) in Rockbox.
 *  If the destination is a file, it will be selected in the file browser,
 *  a directory will be entered.
 *  For now, only relative links are supported.
  a selection of link flags  a selection of file attributes flags *
 *  Read one byte from file
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Read 16-bit word from file, respecting windows endianness (little endian)
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Read 32-bit word from file, respecting windows endianness (little endian)
 *  \param  fd  file descriptor
 *  \param  *a  where the data should go
 *  \return     false if an error occured, true on success
 *
 *  Scan *.lnk file for relative link target
 *  \param  fd          file descriptor
 *  \param  link_target the extracted link destination
 *  \param  target_size available space for the extracted link (in bytes)
 *  \param  link_flags  the link flags are stored here
 *  \param  file_atts   file attributes are stored here
 *  \return             returns false if extraction failed.
  Read ShellLinkHeader  header size MUST be 76 bytes  Skip LinkCLSID (class identifier)  We need the LinkFlags and File attribute (to see if target is a directory)  Skip to end of header  For now we only support relative links, so we can exit right away
       if no relative link structure is present  Read (skip) LinkTargetIDList structure if present  Read (skip) LinkInfo structure if present  String Data section  Read (skip) NAME_STRING StringData structure if present  Read RELATIVE_PATH StringData structure if present  This is finally the data we are searching for!  check for surrogate pair and read the second char  non-unicode  convert from windows to unix subdir separators *
 * strip rightmost part of file/pathname to next '/', i.e. remove filename
 * or last subdirectory. Leaves a trailing '/' character.
 * \param   pathname    full path or filename
 cut off *
 * Combine link file's absolute path with relative link target to form
 * (absolute) link destination
 * \param   abs_path    full shortcut filename (including path)
 * \param   rel_path    the extracted relative link target
 * \param   max_len     maximum lengt of combined filename
  cut off link filename  avoid double '/' chars when concatenating *
 *  Select the chosen file in the file browser. A directory (filename ending
 *  with '/') will be entered.
 *  \param  link_target link target to be selected in the browser
 *  \return             returns false if the target doesn't exist
  Set the browsers dirfilter to the global setting.
     * This is required in case the plugin was launched
     * from the plugins browser, in which case the
     * dirfilter is set to only display .rock files  Change directory to the entry selected by the user  This is a viewer, so a parameter must have been specified  if target is a directory, add '/' to the dir name,
       so that the directory gets entered instead of just highlighted 