-------------------------------------------------------------------------
Copyright (C) 1996, 2003 - 3D Realms Entertainment

This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

Duke Nukem 3D is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
aint32_t with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Original Source: 1996 - Todd Replogle
Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
-------------------------------------------------------------------------Stick at beginning of domovethingsStick at beginning of drawscreenStick at end of drawscreen FIX_00012: added "weapon autoswitch" toggle allowing to turn the autoswitch off when picking up new weapons. The weapon sound on pickup will remain on, to not  affect the opponent's gameplay (so he can still hear you picking up new weapons) Anti antiswitch ordered don't block the weapon change on 1st pick up if playing an old demo FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down Found the weapon
void checkavailweapon( struct player_struct *p )
{
    short i,okay,check_shoot,check_bombs;

    if(p->ammo_amount[p->curr_weapon] > 0) return;
    okay = check_shoot = check_bombs = 0;

    switch(p->curr_weapon)
    {
        case PISTOL_WEAPON:
        case CHAINGUN_WEAPON:
        case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
        case FREEZE_WEAPON:
        case DEVISTATOR_WEAPON:
        case SHRINKER_WEAPON:
        case GROW_WEAPON:
#endif
        case RPG_WEAPON:
        case KNEE_WEAPON:
            check_shoot = 1;
            break;
        case HANDBOMB_WEAPON:
        case HANDREMOTE_WEAPON:
#ifndef VOLUMEONE
        case TRIPBOMB_WEAPON:
#endif
            check_bombs = 1;
            break;
    }

    CHECK_SHOOT:
    if(check_shoot)
    {
        for(i = p->curr_weapon+1; i < MAX_WEAPONS;i++)
            switch(i)
            {
                case PISTOL_WEAPON:
                case CHAINGUN_WEAPON:
                case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
                case FREEZE_WEAPON:
                case SHRINKER_WEAPON:
                case GROW_WEAPON:
                case DEVISTATOR_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        for(i = p->curr_weapon-1; i > 0;i--)
            switch(i)
            {
                case PISTOL_WEAPON:
                case CHAINGUN_WEAPON:
                case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
                case FREEZE_WEAPON:
                case DEVISTATOR_WEAPON:
                case SHRINKER_WEAPON:
                case GROW_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        if( p->gotweapon[RPG_WEAPON] && p->ammo_amount[RPG_WEAPON] > 0 )
        {
            okay = RPG_WEAPON;
            goto OKAY_HERE;
        }

        if(check_bombs == 0)
            check_bombs = 1;
        else
        {
            addweapon(p,KNEE_WEAPON);
            return;
        }
    }

    if(check_bombs)
    {
        for(i = p->curr_weapon-1; i > 0;i--)
            switch(i)
            {
                case HANDBOMB_WEAPON:
#ifndef VOLUMEONE
                case TRIPBOMB_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        for(i = p->curr_weapon+1; i < MAX_WEAPONS;i++)
            switch(i)
            {
                case HANDBOMB_WEAPON:
#ifdef VOLUMEONE
                case TRIPBOMB_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        if(check_shoot == 0)
        {
            check_shoot = 1;
            goto CHECK_SHOOT;
        }
        else
        {
            addweapon(p,KNEE_WEAPON);
            return;
        }
    }

    OKAY_HERE:

    if(okay)
    {
        p->last_weapon  = p->curr_weapon;
        p->random_club_frame = 0;
        p->curr_weapon  = okay;
        p->kickback_pic = 0;
        if(p->holster_weapon == 1)
        {
            p->holster_weapon = 0;
            p->weapon_pos = 10;
        }
        else p->weapon_pos   = -1;
        return;
    }
}
    && (sc->lotag&32768) == 0;The set sprite functionT1,T2 and T3 are used for all the sector moving stuff!!!             j = 1;PlayersLooking thru the camera                    sprite[j].pal = sprite[i].pal;t[0] = statet[1] = checking sector numberWaiting to check the sectorGrabbed the spriteDelay before going up l not defined here. Line is met in 2nd demo with l = 0.Move the sector floorTransporters Player                        if( onfloorz && sectlotag == 1 && ps[p].posz > (sector[sect].floorz-(6<<8)) )                            if( sprite[j].extra <= 0) break;                                if( rnd(192) && sprite[j].picnum == WATERBUBBLE)                                 break;                        if(s->pal == 12) 3 = findplayerz, 4 = shoot Found a locator and going with it Control speed here #ifndef VOLUMEONE #endif FROZENOn the playerFalling downwardClimbing up duke All weapShrinking down                    if(s->yrepeat > 62)                      guts(s,JIBS6,5,myconnectindex);On top of somebodyCheck randomly to see of there is an actor nearGulp themMoving on the ground or ceiling TJR && sector[sect].lotag != 2 )Turn on all of those flashing sectoreffector.
                            j = headspritestat[3];
                            while(j>=0)
                            {
                                if( sprite[j].lotag  == 3 )
                                    hittype[j].temp_data[4]=1;
                                else if(sprite[j].lotag == 12)
                                {
                                    hittype[j].temp_data[4] = 1;
                                    sprite[j].lotag = 3;
                                    sprite[j].owner = 0;
                                    hittype[j].temp_data[0] = s->shade;
                                }
                                j = nextspritestat[j];
                            }
 static #ifndef VOLOMEONE #endif STATNUM 5                    else
                    {
                        l = getflorzofslope(sect,s->x,s->y)-s->z;
                        if( l > (16<<8) ) KILLIT(i);
                    }
                    else  8 52;Number of bouncesSTATNUM 3z's are touchingz's are touchingz's are touchingz's are touchingNothing for now used as the pivotInit                        if( t[4] == 1 )Slow it down Starting to go                    if(sprite[j].sectnum != s->sectnum)QuakesStop the quakeFlashing sector lights after reactor EXPLOSION2    if(t[5] > 0) { t[5]--; break; }       t[5] = 4+(global_random&7);       t[5] = 4+(global_random&3);Got really brightBOSSStart searchFind the shortest distt[0] hold sectnum work only if its movingSwingdoor DelayLights going offLights flickering onChange the shadesOpeningTurn off the slidersReactorThe following code check to see ifthere is any other sprites in the sector.If there isn't, then kill this sectoreffectoritself.....If in motionBattlestar galactia shieldsNot hit yet                                case 18:Shut them all onExtend-o-bridgeMoving Cascading effectDecide if the s->sectnum should go up or downAll donePISTONS FIX_00013: 3rd person camera view during demo playback can now be  turned off (no need to use hacked no-camera maps anymore)                sprite[ps[p].i].extra > 0 && myconnectindex == screenpeek  xduke remove camera view for the 1st player (notice myconnectindex is == 1 when replaying, dosent matter who recorded) True Drop Floor Choose dir Retract True Drop Ceiling Choose dir RetractSE to control glass breakageSloped sin-wave floors!-------------------------------------------------------------------------
Copyright (C) 1996, 2003 - 3D Realms Entertainment

This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

Duke Nukem 3D is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
aint32_t with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Original Source: 1996 - Todd Replogle
Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
-------------------------------------------------------------------------Stick at beginning of domovethingsStick at beginning of drawscreenStick at end of drawscreen FIX_00012: added "weapon autoswitch" toggle allowing to turn the autoswitch off when picking up new weapons. The weapon sound on pickup will remain on, to not  affect the opponent's gameplay (so he can still hear you picking up new weapons) Anti antiswitch ordered don't block the weapon change on 1st pick up if playing an old demo FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down Found the weapon
void checkavailweapon( struct player_struct *p )
{
    short i,okay,check_shoot,check_bombs;

    if(p->ammo_amount[p->curr_weapon] > 0) return;
    okay = check_shoot = check_bombs = 0;

    switch(p->curr_weapon)
    {
        case PISTOL_WEAPON:
        case CHAINGUN_WEAPON:
        case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
        case FREEZE_WEAPON:
        case DEVISTATOR_WEAPON:
        case SHRINKER_WEAPON:
        case GROW_WEAPON:
#endif
        case RPG_WEAPON:
        case KNEE_WEAPON:
            check_shoot = 1;
            break;
        case HANDBOMB_WEAPON:
        case HANDREMOTE_WEAPON:
#ifndef VOLUMEONE
        case TRIPBOMB_WEAPON:
#endif
            check_bombs = 1;
            break;
    }

    CHECK_SHOOT:
    if(check_shoot)
    {
        for(i = p->curr_weapon+1; i < MAX_WEAPONS;i++)
            switch(i)
            {
                case PISTOL_WEAPON:
                case CHAINGUN_WEAPON:
                case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
                case FREEZE_WEAPON:
                case SHRINKER_WEAPON:
                case GROW_WEAPON:
                case DEVISTATOR_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        for(i = p->curr_weapon-1; i > 0;i--)
            switch(i)
            {
                case PISTOL_WEAPON:
                case CHAINGUN_WEAPON:
                case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
                case FREEZE_WEAPON:
                case DEVISTATOR_WEAPON:
                case SHRINKER_WEAPON:
                case GROW_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        if( p->gotweapon[RPG_WEAPON] && p->ammo_amount[RPG_WEAPON] > 0 )
        {
            okay = RPG_WEAPON;
            goto OKAY_HERE;
        }

        if(check_bombs == 0)
            check_bombs = 1;
        else
        {
            addweapon(p,KNEE_WEAPON);
            return;
        }
    }

    if(check_bombs)
    {
        for(i = p->curr_weapon-1; i > 0;i--)
            switch(i)
            {
                case HANDBOMB_WEAPON:
#ifndef VOLUMEONE
                case TRIPBOMB_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        for(i = p->curr_weapon+1; i < MAX_WEAPONS;i++)
            switch(i)
            {
                case HANDBOMB_WEAPON:
#ifdef VOLUMEONE
                case TRIPBOMB_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        if(check_shoot == 0)
        {
            check_shoot = 1;
            goto CHECK_SHOOT;
        }
        else
        {
            addweapon(p,KNEE_WEAPON);
            return;
        }
    }

    OKAY_HERE:

    if(okay)
    {
        p->last_weapon  = p->curr_weapon;
        p->random_club_frame = 0;
        p->curr_weapon  = okay;
        p->kickback_pic = 0;
        if(p->holster_weapon == 1)
        {
            p->holster_weapon = 0;
            p->weapon_pos = 10;
        }
        else p->weapon_pos   = -1;
        return;
    }
}
    && (sc->lotag&32768) == 0;The set sprite functionT1,T2 and T3 are used for all the sector moving stuff!!!             j = 1;PlayersLooking thru the camera                    sprite[j].pal = sprite[i].pal;t[0] = statet[1] = checking sector numberWaiting to check the sectorGrabbed the spriteDelay before going up l not defined here. Line is met in 2nd demo with l = 0.Move the sector floorTransporters Player                        if( onfloorz && sectlotag == 1 && ps[p].posz > (sector[sect].floorz-(6<<8)) )                            if( sprite[j].extra <= 0) break;                                if( rnd(192) && sprite[j].picnum == WATERBUBBLE)                                 break;                        if(s->pal == 12) 3 = findplayerz, 4 = shoot Found a locator and going with it Control speed here #ifndef VOLUMEONE #endif FROZENOn the playerFalling downwardClimbing up duke All weapShrinking down                    if(s->yrepeat > 62)                      guts(s,JIBS6,5,myconnectindex);On top of somebodyCheck randomly to see of there is an actor nearGulp themMoving on the ground or ceiling TJR && sector[sect].lotag != 2 )Turn on all of those flashing sectoreffector.
                            j = headspritestat[3];
                            while(j>=0)
                            {
                                if( sprite[j].lotag  == 3 )
                                    hittype[j].temp_data[4]=1;
                                else if(sprite[j].lotag == 12)
                                {
                                    hittype[j].temp_data[4] = 1;
                                    sprite[j].lotag = 3;
                                    sprite[j].owner = 0;
                                    hittype[j].temp_data[0] = s->shade;
                                }
                                j = nextspritestat[j];
                            }
 static #ifndef VOLOMEONE #endif STATNUM 5                    else
                    {
                        l = getflorzofslope(sect,s->x,s->y)-s->z;
                        if( l > (16<<8) ) KILLIT(i);
                    }
                    else  8 52;Number of bouncesSTATNUM 3z's are touchingz's are touchingz's are touchingz's are touchingNothing for now used as the pivotInit                        if( t[4] == 1 )Slow it down Starting to go                    if(sprite[j].sectnum != s->sectnum)QuakesStop the quakeFlashing sector lights after reactor EXPLOSION2    if(t[5] > 0) { t[5]--; break; }       t[5] = 4+(global_random&7);       t[5] = 4+(global_random&3);Got really brightBOSSStart searchFind the shortest distt[0] hold sectnum work only if its movingSwingdoor DelayLights going offLights flickering onChange the shadesOpeningTurn off the slidersReactorThe following code check to see ifthere is any other sprites in the sector.If there isn't, then kill this sectoreffectoritself.....If in motionBattlestar galactia shieldsNot hit yet                                case 18:Shut them all onExtend-o-bridgeMoving Cascading effectDecide if the s->sectnum should go up or downAll donePISTONS FIX_00013: 3rd person camera view during demo playback can now be  turned off (no need to use hacked no-camera maps anymore)                sprite[ps[p].i].extra > 0 && myconnectindex == screenpeek  xduke remove camera view for the 1st player (notice myconnectindex is == 1 when replaying, dosent matter who recorded) True Drop Floor Choose dir Retract True Drop Ceiling Choose dir RetractSE to control glass breakageSloped sin-wave floors!-------------------------------------------------------------------------
Copyright (C) 1996, 2003 - 3D Realms Entertainment

This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

Duke Nukem 3D is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
aint32_t with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Original Source: 1996 - Todd Replogle
Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
-------------------------------------------------------------------------Stick at beginning of domovethingsStick at beginning of drawscreenStick at end of drawscreen FIX_00012: added "weapon autoswitch" toggle allowing to turn the autoswitch off when picking up new weapons. The weapon sound on pickup will remain on, to not  affect the opponent's gameplay (so he can still hear you picking up new weapons) Anti antiswitch ordered don't block the weapon change on 1st pick up if playing an old demo FIX_00056: Refresh issue w/FPS, small Weapon and custom FTA, when screen resized down Found the weapon
void checkavailweapon( struct player_struct *p )
{
    short i,okay,check_shoot,check_bombs;

    if(p->ammo_amount[p->curr_weapon] > 0) return;
    okay = check_shoot = check_bombs = 0;

    switch(p->curr_weapon)
    {
        case PISTOL_WEAPON:
        case CHAINGUN_WEAPON:
        case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
        case FREEZE_WEAPON:
        case DEVISTATOR_WEAPON:
        case SHRINKER_WEAPON:
        case GROW_WEAPON:
#endif
        case RPG_WEAPON:
        case KNEE_WEAPON:
            check_shoot = 1;
            break;
        case HANDBOMB_WEAPON:
        case HANDREMOTE_WEAPON:
#ifndef VOLUMEONE
        case TRIPBOMB_WEAPON:
#endif
            check_bombs = 1;
            break;
    }

    CHECK_SHOOT:
    if(check_shoot)
    {
        for(i = p->curr_weapon+1; i < MAX_WEAPONS;i++)
            switch(i)
            {
                case PISTOL_WEAPON:
                case CHAINGUN_WEAPON:
                case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
                case FREEZE_WEAPON:
                case SHRINKER_WEAPON:
                case GROW_WEAPON:
                case DEVISTATOR_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        for(i = p->curr_weapon-1; i > 0;i--)
            switch(i)
            {
                case PISTOL_WEAPON:
                case CHAINGUN_WEAPON:
                case SHOTGUN_WEAPON:
#ifndef VOLUMEONE
                case FREEZE_WEAPON:
                case DEVISTATOR_WEAPON:
                case SHRINKER_WEAPON:
                case GROW_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        if( p->gotweapon[RPG_WEAPON] && p->ammo_amount[RPG_WEAPON] > 0 )
        {
            okay = RPG_WEAPON;
            goto OKAY_HERE;
        }

        if(check_bombs == 0)
            check_bombs = 1;
        else
        {
            addweapon(p,KNEE_WEAPON);
            return;
        }
    }

    if(check_bombs)
    {
        for(i = p->curr_weapon-1; i > 0;i--)
            switch(i)
            {
                case HANDBOMB_WEAPON:
#ifndef VOLUMEONE
                case TRIPBOMB_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        for(i = p->curr_weapon+1; i < MAX_WEAPONS;i++)
            switch(i)
            {
                case HANDBOMB_WEAPON:
#ifdef VOLUMEONE
                case TRIPBOMB_WEAPON:
#endif
                    if ( p->gotweapon[i] && p->ammo_amount[i] > 0 )
                    {
                        okay = i;
                        goto OKAY_HERE;
                    }
                    break;
            }

        if(check_shoot == 0)
        {
            check_shoot = 1;
            goto CHECK_SHOOT;
        }
        else
        {
            addweapon(p,KNEE_WEAPON);
            return;
        }
    }

    OKAY_HERE:

    if(okay)
    {
        p->last_weapon  = p->curr_weapon;
        p->random_club_frame = 0;
        p->curr_weapon  = okay;
        p->kickback_pic = 0;
        if(p->holster_weapon == 1)
        {
            p->holster_weapon = 0;
            p->weapon_pos = 10;
        }
        else p->weapon_pos   = -1;
        return;
    }
}
    && (sc->lotag&32768) == 0;The set sprite functionT1,T2 and T3 are used for all the sector moving stuff!!!             j = 1;PlayersLooking thru the camera                    sprite[j].pal = sprite[i].pal;t[0] = statet[1] = checking sector numberWaiting to check the sectorGrabbed the spriteDelay before going up l not defined here. Line is met in 2nd demo with l = 0.Move the sector floorTransporters Player                        if( onfloorz && sectlotag == 1 && ps[p].posz > (sector[sect].floorz-(6<<8)) )                            if( sprite[j].extra <= 0) break;                                if( rnd(192) && sprite[j].picnum == WATERBUBBLE)                                 break;                        if(s->pal == 12) 3 = findplayerz, 4 = shoot Found a locator and going with it Control speed here #ifndef VOLUMEONE #endif FROZENOn the playerFalling downwardClimbing up duke All weapShrinking down                    if(s->yrepeat > 62)                      guts(s,JIBS6,5,myconnectindex);On top of somebodyCheck randomly to see of there is an actor nearGulp themMoving on the ground or ceiling TJR && sector[sect].lotag != 2 )Turn on all of those flashing sectoreffector.
                            j = headspritestat[3];
                            while(j>=0)
                            {
                                if( sprite[j].lotag  == 3 )
                                    hittype[j].temp_data[4]=1;
                                else if(sprite[j].lotag == 12)
                                {
                                    hittype[j].temp_data[4] = 1;
                                    sprite[j].lotag = 3;
                                    sprite[j].owner = 0;
                                    hittype[j].temp_data[0] = s->shade;
                                }
                                j = nextspritestat[j];
                            }
 static #ifndef VOLOMEONE #endif STATNUM 5                    else
                    {
                        l = getflorzofslope(sect,s->x,s->y)-s->z;
                        if( l > (16<<8) ) KILLIT(i);
                    }
                    else  8 52;Number of bouncesSTATNUM 3z's are touchingz's are touchingz's are touchingz's are touchingNothing for now used as the pivotInit                        if( t[4] == 1 )Slow it down Starting to go                    if(sprite[j].sectnum != s->sectnum)QuakesStop the quakeFlashing sector lights after reactor EXPLOSION2    if(t[5] > 0) { t[5]--; break; }       t[5] = 4+(global_random&7);       t[5] = 4+(global_random&3);Got really brightBOSSStart searchFind the shortest distt[0] hold sectnum work only if its movingSwingdoor DelayLights going offLights flickering onChange the shadesOpeningTurn off the slidersReactorThe following code check to see ifthere is any other sprites in the sector.If there isn't, then kill this sectoreffectoritself.....If in motionBattlestar galactia shieldsNot hit yet                                case 18:Shut them all onExtend-o-bridgeMoving Cascading effectDecide if the s->sectnum should go up or downAll donePISTONS FIX_00013: 3rd person camera view during demo playback can now be  turned off (no need to use hacked no-camera maps anymore)                sprite[ps[p].i].extra > 0 && myconnectindex == screenpeek  xduke remove camera view for the 1st player (notice myconnectindex is == 1 when replaying, dosent matter who recorded) True Drop Floor Choose dir Retract True Drop Ceiling Choose dir RetractSE to control glass breakageSloped sin-wave floors!