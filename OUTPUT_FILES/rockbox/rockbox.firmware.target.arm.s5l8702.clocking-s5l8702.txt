**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id:
 *
 * Copyright (C) 2015 by Cástor Muñoz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** udelay()  returns configured frequency (PLLxFreq, when locked)  experimental results sugests that the HW is working this way  divide  XXX: overflows for high f_in, safe for 32768 Hz  multiply  returns PLLxClk  slow mode  returns selected oscillator for CG16_SEL_OSC source  returns output frequency  FClk  each target/app could define its own clk_modes table  at this point, CK16_SYS should be already configured
       and enabled by emCORE/bootloader  initialize global clocking  start initial level  step-up  step up/down  step-down  TBC: probably not needed  lock_time are PClk ticks  MM  DM  PLL2 does not support MM  DM  ALTOSCx  start PLL  locking...  slow mode OFF  returns DMLCK status, only meaningful for Divisor Mode (DM)  slow mode ON  TBC: needed when current F_in is 0 Hz  stop PLL  configure and enable/disable 16-bit clockgate udelay(100); probably not needed  Configures EClk for USEC_TIMER. DRAM refresh also depends on EClk,
 * this clock should be initialized by the bootloader, so USEC_TIMER
 * is ready to use for RB.
  select OSC0 for CG16 SEL_OSC  configure and enable ECLK  unmask timer controller clock gate  configure and start timer E  TE_CS = ECLK / 1  select ECLK (12 MHz on Classic)  TE_MODE_SEL = interval mode  prescaler  TE_CLR = initialize timer  TE_EN = enable  - This function is mainly to documment how s5l8702 ROMBOOT and iPod
 *   Classic diagnostic OF detects primary external clock.
 * - ATM it is unknown if 24 MHz are used on other targets (i.e. Nano 3G),
 *   other SoC (ROMBOOT identifies itself as s5l8900/s5l8702), a Classic
 *   prototype, or (probably) never used...
 * - This function should be called only at boot time, GPIO3.5 is also
 *   used for ATA controller.
  configure GPIO3.5 as input  BOOTLOADER **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id:
 *
 * Copyright (C) 2015 by Cástor Muñoz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** udelay()  returns configured frequency (PLLxFreq, when locked)  experimental results sugests that the HW is working this way  divide  XXX: overflows for high f_in, safe for 32768 Hz  multiply  returns PLLxClk  slow mode  returns selected oscillator for CG16_SEL_OSC source  returns output frequency  FClk  each target/app could define its own clk_modes table  at this point, CK16_SYS should be already configured
       and enabled by emCORE/bootloader  initialize global clocking  start initial level  step-up  step up/down  step-down  TBC: probably not needed  lock_time are PClk ticks  MM  DM  PLL2 does not support MM  DM  ALTOSCx  start PLL  locking...  slow mode OFF  returns DMLCK status, only meaningful for Divisor Mode (DM)  slow mode ON  TBC: needed when current F_in is 0 Hz  stop PLL  configure and enable/disable 16-bit clockgate udelay(100); probably not needed  Configures EClk for USEC_TIMER. DRAM refresh also depends on EClk,
 * this clock should be initialized by the bootloader, so USEC_TIMER
 * is ready to use for RB.
  select OSC0 for CG16 SEL_OSC  configure and enable ECLK  unmask timer controller clock gate  configure and start timer E  TE_CS = ECLK / 1  select ECLK (12 MHz on Classic)  TE_MODE_SEL = interval mode  prescaler  TE_CLR = initialize timer  TE_EN = enable  - This function is mainly to documment how s5l8702 ROMBOOT and iPod
 *   Classic diagnostic OF detects primary external clock.
 * - ATM it is unknown if 24 MHz are used on other targets (i.e. Nano 3G),
 *   other SoC (ROMBOOT identifies itself as s5l8900/s5l8702), a Classic
 *   prototype, or (probably) never used...
 * - This function should be called only at boot time, GPIO3.5 is also
 *   used for ATA controller.
  configure GPIO3.5 as input  BOOTLOADER **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id:
 *
 * Copyright (C) 2015 by Cástor Muñoz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** udelay()  returns configured frequency (PLLxFreq, when locked)  experimental results sugests that the HW is working this way  divide  XXX: overflows for high f_in, safe for 32768 Hz  multiply  returns PLLxClk  slow mode  returns selected oscillator for CG16_SEL_OSC source  returns output frequency  FClk  each target/app could define its own clk_modes table  at this point, CK16_SYS should be already configured
       and enabled by emCORE/bootloader  initialize global clocking  start initial level  step-up  step up/down  step-down  TBC: probably not needed  lock_time are PClk ticks  MM  DM  PLL2 does not support MM  DM  ALTOSCx  start PLL  locking...  slow mode OFF  returns DMLCK status, only meaningful for Divisor Mode (DM)  slow mode ON  TBC: needed when current F_in is 0 Hz  stop PLL  configure and enable/disable 16-bit clockgate udelay(100); probably not needed  Configures EClk for USEC_TIMER. DRAM refresh also depends on EClk,
 * this clock should be initialized by the bootloader, so USEC_TIMER
 * is ready to use for RB.
  select OSC0 for CG16 SEL_OSC  configure and enable ECLK  unmask timer controller clock gate  configure and start timer E  TE_CS = ECLK / 1  select ECLK (12 MHz on Classic)  TE_MODE_SEL = interval mode  prescaler  TE_CLR = initialize timer  TE_EN = enable  - This function is mainly to documment how s5l8702 ROMBOOT and iPod
 *   Classic diagnostic OF detects primary external clock.
 * - ATM it is unknown if 24 MHz are used on other targets (i.e. Nano 3G),
 *   other SoC (ROMBOOT identifies itself as s5l8900/s5l8702), a Classic
 *   prototype, or (probably) never used...
 * - This function should be called only at boot time, GPIO3.5 is also
 *   used for ATA controller.
  configure GPIO3.5 as input  BOOTLOADER 