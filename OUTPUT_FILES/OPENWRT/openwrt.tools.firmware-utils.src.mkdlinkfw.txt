
 * mkdlinkfw
 *
 * Copyright (C) 2018 Paweł Dembicki <paweldembicki@gmail.com>
 *
 * This tool is based on mktplinkfw.
 * Copyright (C) 2009 Gabor Juhos <juhosg@openwrt.org>
 * Copyright (C) 2008,2009 Wang Jian <lark@linux.net.cn>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
  for unlink()  for getopt() for crc32  ARM update header 2.0
 * used only in factory images to erase and flash selected area
  12-bit rom-id unique per router type  used for scramble header  jboot_checksum of flashed data  zeros  zeros  zerosu  must be 0x01  bust be 0  timestamp calculated in jboot way  erase start address  erase length address  data start address  data length address  zeros  zeros  zeros  zeros  magic 0x4842  0x02 for 2.0  zeros  section id  (?) 0x04 in factory images  (?) zeros in factory images  unique per router type  negated jboot_checksum of header data  used only of sch2 wrapped kernel data  in factory 0xFF ,in sysuograde must be the same as id  0x04  magic 0x2B24  timestamp calculated in jboot way  lentgh of kernel + sch2 header  negated jboot_checksum of sch2 + kernel  negated jboot_checksum of stag header data  used only in kernel partitions  magic 0x2124  0x00 for flat, 0x01 for jz, 0x02 for gzip, 0x03 for lzma  0x02 for sch2  ram entry address  kernel image length  kernel image crc  ram start address  rootfs flash address  rootfls length  rootfs crc32  sch2 header crc32, durring calculation this area is replaced by zero  sch2 header length: 0x28  cmd line length, known zeros  globals 
 * mkdlinkfw
 *
 * Copyright (C) 2018 Paweł Dembicki <paweldembicki@gmail.com>
 *
 * This tool is based on mktplinkfw.
 * Copyright (C) 2009 Gabor Juhos <juhosg@openwrt.org>
 * Copyright (C) 2008,2009 Wang Jian <lark@linux.net.cn>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
  for unlink()  for getopt() for crc32  ARM update header 2.0
 * used only in factory images to erase and flash selected area
  12-bit rom-id unique per router type  used for scramble header  jboot_checksum of flashed data  zeros  zeros  zerosu  must be 0x01  bust be 0  timestamp calculated in jboot way  erase start address  erase length address  data start address  data length address  zeros  zeros  zeros  zeros  magic 0x4842  0x02 for 2.0  zeros  section id  (?) 0x04 in factory images  (?) zeros in factory images  unique per router type  negated jboot_checksum of header data  used only of sch2 wrapped kernel data  in factory 0xFF ,in sysuograde must be the same as id  0x04  magic 0x2B24  timestamp calculated in jboot way  lentgh of kernel + sch2 header  negated jboot_checksum of sch2 + kernel  negated jboot_checksum of stag header data  used only in kernel partitions  magic 0x2124  0x00 for flat, 0x01 for jz, 0x02 for gzip, 0x03 for lzma  0x02 for sch2  ram entry address  kernel image length  kernel image crc  ram start address  rootfs flash address  rootfls length  rootfs crc32  sch2 header crc32, durring calculation this area is replaced by zero  sch2 header length: 0x28  cmd line length, known zeros  globals 