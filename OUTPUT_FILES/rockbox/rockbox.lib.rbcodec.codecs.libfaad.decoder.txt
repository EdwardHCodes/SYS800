
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
**
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* rockbox: not used
#include "output.h"
 Globals  static variables  static function declarations  not used by rockbox
static void create_channel_config(NeAACDecHandle hDecoder, NeAACDecFrameInfo *hInfo);
 rockbox: not used  can't do without it  check if we can decode this object type  samplerate: anything but 0 should be possible  check output format  OK  Check if an ADIF header is present  Check if an ADTS header is present  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  A maximum of MAX_CHANNELS channels is supported.  implicit signalling  must be done before frameLength is divided by 2 for LD  could not allocate memory  Init the library using a DecoderSpecificInfo  decode the audio specific config  copy the relevant info to the decoder handle  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  A maximum of MAX_CHANNELS channels is supported.  AAC core decoder samplerate is 2 times as low  must be done before frameLength is divided by 2 for LD  could not allocate memory  error  Special object type defined for DRM  This shoudl always be defined for DRM VCB11  no RVLC  HCR  not used by rockbox  check if there is a PCE  channelConfiguration == 0 || channelConfiguration > 7  there's either a center front or a center back channel  safety checks  initialize the bitstream temp = getdword((void*)buf); We do not support stereo right now (hDecoder->channelConfiguration == 2) Throw CRC error MPEG2 does byte_alignment() here,
         * but ADTS header is always multiple of 8 bits in MPEG2
         * so not needed to actually do it.
          decode the complete bitstream  safety check  invalid number of channels  no more bit reading after this  7.1  not a standard channelConfiguration  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  Make a channel configuration based on either a PCE or a channelConfiguration  not used by rockbox
    create_channel_config(hDecoder, hInfo);
     number of samples in this frame  number of channels in this frame  samplerate  object type  sbr  header type  check if frame has channel elements  allocate the buffer for the final samples  this data is different when SBR is used or when the data is upsampled  check if every element was provided with SBR data  sbr  LD encoders will give lower delay  cleanup  return void* != NULL  cleanup 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
**
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* rockbox: not used
#include "output.h"
 Globals  static variables  static function declarations  not used by rockbox
static void create_channel_config(NeAACDecHandle hDecoder, NeAACDecFrameInfo *hInfo);
 rockbox: not used  can't do without it  check if we can decode this object type  samplerate: anything but 0 should be possible  check output format  OK  Check if an ADIF header is present  Check if an ADTS header is present  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  A maximum of MAX_CHANNELS channels is supported.  implicit signalling  must be done before frameLength is divided by 2 for LD  could not allocate memory  Init the library using a DecoderSpecificInfo  decode the audio specific config  copy the relevant info to the decoder handle  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  A maximum of MAX_CHANNELS channels is supported.  AAC core decoder samplerate is 2 times as low  must be done before frameLength is divided by 2 for LD  could not allocate memory  error  Special object type defined for DRM  This shoudl always be defined for DRM VCB11  no RVLC  HCR  not used by rockbox  check if there is a PCE  channelConfiguration == 0 || channelConfiguration > 7  there's either a center front or a center back channel  safety checks  initialize the bitstream temp = getdword((void*)buf); We do not support stereo right now (hDecoder->channelConfiguration == 2) Throw CRC error MPEG2 does byte_alignment() here,
         * but ADTS header is always multiple of 8 bits in MPEG2
         * so not needed to actually do it.
          decode the complete bitstream  safety check  invalid number of channels  no more bit reading after this  7.1  not a standard channelConfiguration  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  Make a channel configuration based on either a PCE or a channelConfiguration  not used by rockbox
    create_channel_config(hDecoder, hInfo);
     number of samples in this frame  number of channels in this frame  samplerate  object type  sbr  header type  check if frame has channel elements  allocate the buffer for the final samples  this data is different when SBR is used or when the data is upsampled  check if every element was provided with SBR data  sbr  LD encoders will give lower delay  cleanup  return void* != NULL  cleanup 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2003-2004 M. Bakker, Ahead Software AG, http://www.nero.com
**
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
**
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* rockbox: not used
#include "output.h"
 Globals  static variables  static function declarations  not used by rockbox
static void create_channel_config(NeAACDecHandle hDecoder, NeAACDecFrameInfo *hInfo);
 rockbox: not used  can't do without it  check if we can decode this object type  samplerate: anything but 0 should be possible  check output format  OK  Check if an ADIF header is present  Check if an ADTS header is present  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  A maximum of MAX_CHANNELS channels is supported.  implicit signalling  must be done before frameLength is divided by 2 for LD  could not allocate memory  Init the library using a DecoderSpecificInfo  decode the audio specific config  copy the relevant info to the decoder handle  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  A maximum of MAX_CHANNELS channels is supported.  AAC core decoder samplerate is 2 times as low  must be done before frameLength is divided by 2 for LD  could not allocate memory  error  Special object type defined for DRM  This shoudl always be defined for DRM VCB11  no RVLC  HCR  not used by rockbox  check if there is a PCE  channelConfiguration == 0 || channelConfiguration > 7  there's either a center front or a center back channel  safety checks  initialize the bitstream temp = getdword((void*)buf); We do not support stereo right now (hDecoder->channelConfiguration == 2) Throw CRC error MPEG2 does byte_alignment() here,
         * but ADTS header is always multiple of 8 bits in MPEG2
         * so not needed to actually do it.
          decode the complete bitstream  safety check  invalid number of channels  no more bit reading after this  7.1  not a standard channelConfiguration  check if we have a mono file  upMatrix to 2 channels for implicit signalling of PS  Make a channel configuration based on either a PCE or a channelConfiguration  not used by rockbox
    create_channel_config(hDecoder, hInfo);
     number of samples in this frame  number of channels in this frame  samplerate  object type  sbr  header type  check if frame has channel elements  allocate the buffer for the final samples  this data is different when SBR is used or when the data is upsampled  check if every element was provided with SBR data  sbr  LD encoders will give lower delay  cleanup  return void* != NULL  cleanup 