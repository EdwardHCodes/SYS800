 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      The status bar widget code.
 *
 *-----------------------------------------------------------------------------jff 2/18/98 control to disable status color changes killough 2/21/98: always gray %'s? bug or feature? STlib_init() cph - no longer hold STMINUS pointer STlib_initNum() Initializes an st_number_t widget Passed the widget, its position, the patches for the digits, a pointer to the value displayed, a pointer to the on/off control, and the width Returns nothing
 * STlib_drawNum()
 *
 * A fairly efficient way to draw a number based on differences from the
 * old number.
 *
 * Passed a st_number_t widget, a color range for output, and a flag
 * indicating whether refresh is needed.
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps 10/99 - const pointer to colour trans table, made function static
  leban 1/20/99: strange that somebody went through all the work to draw only the differences, and then went and constantly redrew all the numbers. return without drawing if the number didn't change and the bar isn't refreshing. CPhipps - compact some code, use num instead of *n->num clear the area if non-number, do not draw itjff 2/16/98 add color translation to digit output in the special case of 0, you draw 0 CPhipps - patch drawing updated, reformatted draw the new numberjff 2/16/98 add color translation to digit output CPhipps - patch drawing updated, reformatted draw a minus sign if necessaryjff 2/16/98 add color translation to digit output cph - patch drawing updated, load by name instead of acquiring pointer earlier
 * STlib_updateNum()
 *
 * Draws a number conditionally based on the widget's enable
 *
 * Passed a number widget, the output color range, and a refresh flag
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps 10/99 - make that pointer const
  STlib_initPercent() Initialize a st_percent_t number with percent sign widget Passed a st_percent_t widget, the position, the digit patches, a pointer to the number to display, a pointer to the enable flag, and patch for the percent sign. Returns nothing.
 * STlib_updatePercent()
 *
 * Draws a number/percent conditionally based on the widget's enable
 *
 * Passed a precent widget, the output color range, and a refresh flag
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps - const for pointer to the colour translation table
  killough 2/21/98: fix percents not updated; CPhipps - make %'s only be updated if number changed  CPhipps - patch drawing updated STlib_initMultIcon() Initialize a st_multicon_t widget, used for a multigraphic display like the status bar's keys. Passed a st_multicon_t widget, the position, the graphic patches, a pointer to the numbers representing what to display, and pointer to the enable flag Returns nothing. STlib_updateMultIcon() Draw a st_multicon_t widget, used for a multigraphic display like the status bar's keys. Displays each when the control numbers change or refresh is true Passed a st_multicon_t widget, and a refresh flag Returns nothing. killough 2/16/98: redraw only if != -1 STlib_initBinIcon() Initialize a st_binicon_t widget, used for a multinumber display like the status bar's weapons, that are present or not. Passed a st_binicon_t widget, the position, the digit patches, a pointer to the flags representing what is displayed, and pointer to the enable flag Returns nothing. STlib_updateBinIcon() DInitialize a st_binicon_t widget, used for a multinumber display like the status bar's weapons, that are present or not. Draw a st_binicon_t widget, used for a multinumber display like the status bar's weapons that are present or not. Displays each when the control flag changes or refresh is true Passed a st_binicon_t widget, and a refresh flag Returns nothing. Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      The status bar widget code.
 *
 *-----------------------------------------------------------------------------jff 2/18/98 control to disable status color changes killough 2/21/98: always gray %'s? bug or feature? STlib_init() cph - no longer hold STMINUS pointer STlib_initNum() Initializes an st_number_t widget Passed the widget, its position, the patches for the digits, a pointer to the value displayed, a pointer to the on/off control, and the width Returns nothing
 * STlib_drawNum()
 *
 * A fairly efficient way to draw a number based on differences from the
 * old number.
 *
 * Passed a st_number_t widget, a color range for output, and a flag
 * indicating whether refresh is needed.
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps 10/99 - const pointer to colour trans table, made function static
  leban 1/20/99: strange that somebody went through all the work to draw only the differences, and then went and constantly redrew all the numbers. return without drawing if the number didn't change and the bar isn't refreshing. CPhipps - compact some code, use num instead of *n->num clear the area if non-number, do not draw itjff 2/16/98 add color translation to digit output in the special case of 0, you draw 0 CPhipps - patch drawing updated, reformatted draw the new numberjff 2/16/98 add color translation to digit output CPhipps - patch drawing updated, reformatted draw a minus sign if necessaryjff 2/16/98 add color translation to digit output cph - patch drawing updated, load by name instead of acquiring pointer earlier
 * STlib_updateNum()
 *
 * Draws a number conditionally based on the widget's enable
 *
 * Passed a number widget, the output color range, and a refresh flag
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps 10/99 - make that pointer const
  STlib_initPercent() Initialize a st_percent_t number with percent sign widget Passed a st_percent_t widget, the position, the digit patches, a pointer to the number to display, a pointer to the enable flag, and patch for the percent sign. Returns nothing.
 * STlib_updatePercent()
 *
 * Draws a number/percent conditionally based on the widget's enable
 *
 * Passed a precent widget, the output color range, and a refresh flag
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps - const for pointer to the colour translation table
  killough 2/21/98: fix percents not updated; CPhipps - make %'s only be updated if number changed  CPhipps - patch drawing updated STlib_initMultIcon() Initialize a st_multicon_t widget, used for a multigraphic display like the status bar's keys. Passed a st_multicon_t widget, the position, the graphic patches, a pointer to the numbers representing what to display, and pointer to the enable flag Returns nothing. STlib_updateMultIcon() Draw a st_multicon_t widget, used for a multigraphic display like the status bar's keys. Displays each when the control numbers change or refresh is true Passed a st_multicon_t widget, and a refresh flag Returns nothing. killough 2/16/98: redraw only if != -1 STlib_initBinIcon() Initialize a st_binicon_t widget, used for a multinumber display like the status bar's weapons, that are present or not. Passed a st_binicon_t widget, the position, the digit patches, a pointer to the flags representing what is displayed, and pointer to the enable flag Returns nothing. STlib_updateBinIcon() DInitialize a st_binicon_t widget, used for a multinumber display like the status bar's weapons, that are present or not. Draw a st_binicon_t widget, used for a multinumber display like the status bar's weapons that are present or not. Displays each when the control flag changes or refresh is true Passed a st_binicon_t widget, and a refresh flag Returns nothing. Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      The status bar widget code.
 *
 *-----------------------------------------------------------------------------jff 2/18/98 control to disable status color changes killough 2/21/98: always gray %'s? bug or feature? STlib_init() cph - no longer hold STMINUS pointer STlib_initNum() Initializes an st_number_t widget Passed the widget, its position, the patches for the digits, a pointer to the value displayed, a pointer to the on/off control, and the width Returns nothing
 * STlib_drawNum()
 *
 * A fairly efficient way to draw a number based on differences from the
 * old number.
 *
 * Passed a st_number_t widget, a color range for output, and a flag
 * indicating whether refresh is needed.
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps 10/99 - const pointer to colour trans table, made function static
  leban 1/20/99: strange that somebody went through all the work to draw only the differences, and then went and constantly redrew all the numbers. return without drawing if the number didn't change and the bar isn't refreshing. CPhipps - compact some code, use num instead of *n->num clear the area if non-number, do not draw itjff 2/16/98 add color translation to digit output in the special case of 0, you draw 0 CPhipps - patch drawing updated, reformatted draw the new numberjff 2/16/98 add color translation to digit output CPhipps - patch drawing updated, reformatted draw a minus sign if necessaryjff 2/16/98 add color translation to digit output cph - patch drawing updated, load by name instead of acquiring pointer earlier
 * STlib_updateNum()
 *
 * Draws a number conditionally based on the widget's enable
 *
 * Passed a number widget, the output color range, and a refresh flag
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps 10/99 - make that pointer const
  STlib_initPercent() Initialize a st_percent_t number with percent sign widget Passed a st_percent_t widget, the position, the digit patches, a pointer to the number to display, a pointer to the enable flag, and patch for the percent sign. Returns nothing.
 * STlib_updatePercent()
 *
 * Draws a number/percent conditionally based on the widget's enable
 *
 * Passed a precent widget, the output color range, and a refresh flag
 * Returns nothing
 *
 * jff 2/16/98 add color translation to digit output
 * cphipps - const for pointer to the colour translation table
  killough 2/21/98: fix percents not updated; CPhipps - make %'s only be updated if number changed  CPhipps - patch drawing updated STlib_initMultIcon() Initialize a st_multicon_t widget, used for a multigraphic display like the status bar's keys. Passed a st_multicon_t widget, the position, the graphic patches, a pointer to the numbers representing what to display, and pointer to the enable flag Returns nothing. STlib_updateMultIcon() Draw a st_multicon_t widget, used for a multigraphic display like the status bar's keys. Displays each when the control numbers change or refresh is true Passed a st_multicon_t widget, and a refresh flag Returns nothing. killough 2/16/98: redraw only if != -1 STlib_initBinIcon() Initialize a st_binicon_t widget, used for a multinumber display like the status bar's weapons, that are present or not. Passed a st_binicon_t widget, the position, the digit patches, a pointer to the flags representing what is displayed, and pointer to the enable flag Returns nothing. STlib_updateBinIcon() DInitialize a st_binicon_t widget, used for a multinumber display like the status bar's weapons, that are present or not. Draw a st_binicon_t widget, used for a multinumber display like the status bar's weapons that are present or not. Displays each when the control flag changes or refresh is true Passed a st_binicon_t widget, and a refresh flag Returns nothing.