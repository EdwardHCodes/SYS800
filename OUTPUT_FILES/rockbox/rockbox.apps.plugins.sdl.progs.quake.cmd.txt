
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 cmd.c -- Quake script command processing module=============================================================================
============
Cmd_Wait_f

Causes execution of the remainder of the command buffer to be delayed until
next frame.  This allows commands like:
bind g "impulse 5 ; +attack ; wait ; -attack ; impulse 2"
============

=============================================================================

						COMMAND BUFFER

=============================================================================

============
Cbuf_Init
============
 space for commands and script files
============
Cbuf_AddText

Adds command text at the end of the buffer
============

============
Cbuf_InsertText

FW19: before???

Adds command text immediately after the current command
Adds a \n to the text
FIXME: actually change the command buffer to do less copying
============
 copy off any commands still remaining in the exec buffer shut up compiler add the entire text of the file add the copied off data
============
Cbuf_Execute
============
 find a \n or ; line break don't break if inside a quoted string delete the text from the command buffer and move remaining commands down this is necessary because commands (exec, alias) can insert data at the beginning of the text buffer execute the command line skip out while text still remains in buffer, leaving it for next frame
==============================================================================

						SCRIPT COMMANDS

==============================================================================

===============
Cmd_StuffCmds_f

Adds command line parameters as script statements
Commands lead with a +, and continue until a - or another +
quake +prog jctest.qp +cmd amlev1
quake -nosound +cmd amlev1
===============
 build the combined string to parse from NEXTSTEP nulls out -NXHost NEXTSTEP nulls out -NXHost pull out the commands
===============
Cmd_Exec_f
===============
 insert to next space in buffer if we are running config, tell bind not to override defaults (see keys.c) force binds to continue allow override
===============
Cmd_Echo_f

Just prints the rest of the line to the console
===============

===============
Cmd_Alias_f

Creates a new command that executes a command string (possibly ; seperated)
===============
 if the alias allready exists, reuse it copy the rest of the command line start out with a null string
=============================================================================

					COMMAND EXECUTION

=============================================================================
 possible commands to execute
============
Cmd_Init
============
 register our commands
============
Cmd_Argc
============

============
Cmd_Argv
============

============
Cmd_Args
============

============
Cmd_TokenizeString

Parses the given string into command line tokens.
============
 clear the args from the last string skip whitespace up to a /n a newline seperates commands in the buffer
============
Cmd_AddCommand
============
 because hunk allocation would get stomped fail if the command is a variable name fail if the command already exists
============
Cmd_Exists
============

============
Cmd_CompleteCommand
============
 check functions
============
Cmd_ExecuteString

A complete command line has been parsed, so try to execute it
FIXME: lookupnoadd the token to speed search?
============
 execute the command line no tokens check functions check alias check cvars
===================
Cmd_ForwardToServer

Sends the entire command line over to the server
===================
 not really connected
================
Cmd_CheckParm

Returns the position (1 to argc-1) in the command's argument list
where the given parameter apears, or 0 if not present
================

Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 cmd.c -- Quake script command processing module=============================================================================
============
Cmd_Wait_f

Causes execution of the remainder of the command buffer to be delayed until
next frame.  This allows commands like:
bind g "impulse 5 ; +attack ; wait ; -attack ; impulse 2"
============

=============================================================================

						COMMAND BUFFER

=============================================================================

============
Cbuf_Init
============
 space for commands and script files
============
Cbuf_AddText

Adds command text at the end of the buffer
============

============
Cbuf_InsertText

FW19: before???

Adds command text immediately after the current command
Adds a \n to the text
FIXME: actually change the command buffer to do less copying
============
 copy off any commands still remaining in the exec buffer shut up compiler add the entire text of the file add the copied off data
============
Cbuf_Execute
============
 find a \n or ; line break don't break if inside a quoted string delete the text from the command buffer and move remaining commands down this is necessary because commands (exec, alias) can insert data at the beginning of the text buffer execute the command line skip out while text still remains in buffer, leaving it for next frame
==============================================================================

						SCRIPT COMMANDS

==============================================================================

===============
Cmd_StuffCmds_f

Adds command line parameters as script statements
Commands lead with a +, and continue until a - or another +
quake +prog jctest.qp +cmd amlev1
quake -nosound +cmd amlev1
===============
 build the combined string to parse from NEXTSTEP nulls out -NXHost NEXTSTEP nulls out -NXHost pull out the commands
===============
Cmd_Exec_f
===============
 insert to next space in buffer if we are running config, tell bind not to override defaults (see keys.c) force binds to continue allow override
===============
Cmd_Echo_f

Just prints the rest of the line to the console
===============

===============
Cmd_Alias_f

Creates a new command that executes a command string (possibly ; seperated)
===============
 if the alias allready exists, reuse it copy the rest of the command line start out with a null string
=============================================================================

					COMMAND EXECUTION

=============================================================================
 possible commands to execute
============
Cmd_Init
============
 register our commands
============
Cmd_Argc
============

============
Cmd_Argv
============

============
Cmd_Args
============

============
Cmd_TokenizeString

Parses the given string into command line tokens.
============
 clear the args from the last string skip whitespace up to a /n a newline seperates commands in the buffer
============
Cmd_AddCommand
============
 because hunk allocation would get stomped fail if the command is a variable name fail if the command already exists
============
Cmd_Exists
============

============
Cmd_CompleteCommand
============
 check functions
============
Cmd_ExecuteString

A complete command line has been parsed, so try to execute it
FIXME: lookupnoadd the token to speed search?
============
 execute the command line no tokens check functions check alias check cvars
===================
Cmd_ForwardToServer

Sends the entire command line over to the server
===================
 not really connected
================
Cmd_CheckParm

Returns the position (1 to argc-1) in the command's argument list
where the given parameter apears, or 0 if not present
================

Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 cmd.c -- Quake script command processing module=============================================================================
============
Cmd_Wait_f

Causes execution of the remainder of the command buffer to be delayed until
next frame.  This allows commands like:
bind g "impulse 5 ; +attack ; wait ; -attack ; impulse 2"
============

=============================================================================

						COMMAND BUFFER

=============================================================================

============
Cbuf_Init
============
 space for commands and script files
============
Cbuf_AddText

Adds command text at the end of the buffer
============

============
Cbuf_InsertText

FW19: before???

Adds command text immediately after the current command
Adds a \n to the text
FIXME: actually change the command buffer to do less copying
============
 copy off any commands still remaining in the exec buffer shut up compiler add the entire text of the file add the copied off data
============
Cbuf_Execute
============
 find a \n or ; line break don't break if inside a quoted string delete the text from the command buffer and move remaining commands down this is necessary because commands (exec, alias) can insert data at the beginning of the text buffer execute the command line skip out while text still remains in buffer, leaving it for next frame
==============================================================================

						SCRIPT COMMANDS

==============================================================================

===============
Cmd_StuffCmds_f

Adds command line parameters as script statements
Commands lead with a +, and continue until a - or another +
quake +prog jctest.qp +cmd amlev1
quake -nosound +cmd amlev1
===============
 build the combined string to parse from NEXTSTEP nulls out -NXHost NEXTSTEP nulls out -NXHost pull out the commands
===============
Cmd_Exec_f
===============
 insert to next space in buffer if we are running config, tell bind not to override defaults (see keys.c) force binds to continue allow override
===============
Cmd_Echo_f

Just prints the rest of the line to the console
===============

===============
Cmd_Alias_f

Creates a new command that executes a command string (possibly ; seperated)
===============
 if the alias allready exists, reuse it copy the rest of the command line start out with a null string
=============================================================================

					COMMAND EXECUTION

=============================================================================
 possible commands to execute
============
Cmd_Init
============
 register our commands
============
Cmd_Argc
============

============
Cmd_Argv
============

============
Cmd_Args
============

============
Cmd_TokenizeString

Parses the given string into command line tokens.
============
 clear the args from the last string skip whitespace up to a /n a newline seperates commands in the buffer
============
Cmd_AddCommand
============
 because hunk allocation would get stomped fail if the command is a variable name fail if the command already exists
============
Cmd_Exists
============

============
Cmd_CompleteCommand
============
 check functions
============
Cmd_ExecuteString

A complete command line has been parsed, so try to execute it
FIXME: lookupnoadd the token to speed search?
============
 execute the command line no tokens check functions check alias check cvars
===================
Cmd_ForwardToServer

Sends the entire command line over to the server
===================
 not really connected
================
Cmd_CheckParm

Returns the position (1 to argc-1) in the command's argument list
where the given parameter apears, or 0 if not present
================
