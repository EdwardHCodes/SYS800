**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Bryan Childs
 * Copyright (c) 2007 Alexander Levin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** strlen(PATH_DISP_SEPARATOR)  strlen(CONTROL_PREFIX)  strlen(NAME_VALUE_SEPARATOR)  Memory (will be used for entries)  Size of memory_buf in bytes  The file we're processing  Assume bad case  We start to load a new file -> prepare it  The file didn't exist on disk  For some reason we couldn't create the file,
                 * so return an error message and exit  File created, but there's nothing in it, so just exit  Could not parse the entry (too long path?) -> ignore  Everything went ok  Explicit name for the entry is specified -> use it  No special name to display  Safe since we've checked the length  don't count one trailing separator  Eat the '/' to show that something has been truncated  Process control instruction  Unknown instruction -> ignore  No separator char -> weird instruction  Too long name  Too long value  ideally, we should just write a new
    * entry to the file, but I'm going to
    * be lazy, and just re-write the whole
    * thing. 
     * Write instructions
      Always dump the 'display last segms' settings (even it it's
     * not active) so that it can be easily changed without having
     * to remember the setting name **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Bryan Childs
 * Copyright (c) 2007 Alexander Levin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** strlen(PATH_DISP_SEPARATOR)  strlen(CONTROL_PREFIX)  strlen(NAME_VALUE_SEPARATOR)  Memory (will be used for entries)  Size of memory_buf in bytes  The file we're processing  Assume bad case  We start to load a new file -> prepare it  The file didn't exist on disk  For some reason we couldn't create the file,
                 * so return an error message and exit  File created, but there's nothing in it, so just exit  Could not parse the entry (too long path?) -> ignore  Everything went ok  Explicit name for the entry is specified -> use it  No special name to display  Safe since we've checked the length  don't count one trailing separator  Eat the '/' to show that something has been truncated  Process control instruction  Unknown instruction -> ignore  No separator char -> weird instruction  Too long name  Too long value  ideally, we should just write a new
    * entry to the file, but I'm going to
    * be lazy, and just re-write the whole
    * thing. 
     * Write instructions
      Always dump the 'display last segms' settings (even it it's
     * not active) so that it can be easily changed without having
     * to remember the setting name **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2007 Bryan Childs
 * Copyright (c) 2007 Alexander Levin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** strlen(PATH_DISP_SEPARATOR)  strlen(CONTROL_PREFIX)  strlen(NAME_VALUE_SEPARATOR)  Memory (will be used for entries)  Size of memory_buf in bytes  The file we're processing  Assume bad case  We start to load a new file -> prepare it  The file didn't exist on disk  For some reason we couldn't create the file,
                 * so return an error message and exit  File created, but there's nothing in it, so just exit  Could not parse the entry (too long path?) -> ignore  Everything went ok  Explicit name for the entry is specified -> use it  No special name to display  Safe since we've checked the length  don't count one trailing separator  Eat the '/' to show that something has been truncated  Process control instruction  Unknown instruction -> ignore  No separator char -> weird instruction  Too long name  Too long value  ideally, we should just write a new
    * entry to the file, but I'm going to
    * be lazy, and just re-write the whole
    * thing. 
     * Write instructions
      Always dump the 'display last segms' settings (even it it's
     * not active) so that it can be easily changed without having
     * to remember the setting name 