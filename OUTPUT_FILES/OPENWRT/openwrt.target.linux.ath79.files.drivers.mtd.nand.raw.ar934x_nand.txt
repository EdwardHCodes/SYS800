
 * Driver for the built-in NAND controller of the Atheros AR934x SoCs
 *
 * Copyright (C) 2011-2013 Gabor Juhos <juhosg@openwrt.org>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
  default timing values  msecs  msecs  AR934X_NFC_DEBUG  AR934X_NFC_DEBUG_DATA  flush write  flush write  ERASE1  SEQIN, READ0, etc..  TODO: handle 16bit bus width  flush write  override number of address cycles for the erase command  emulate subpage read  output read command  the data is already written  TODO: optimize to avoid memcpy  read the ECC status 
		 * The hardware ECC engine reports uncorrectable errors
		 * on empty pages. Check the ECC bytes and the data. If
		 * both contains 0xff bytes only, dont report a failure.
		 *
		 * TODO: prebuild a buffer with 0xff bytes and use memcmp
		 * for better performance?
		 
		 * The hardware does not report the exact count of the
		 * corrected bitflips, use assumptions based on the
		 * threshold.
		 
			 * The number of corrected bitflips exceeds the
			 * threshold. Assume the maximum.
			  write OOB first  TODO: optimize to avoid memcopy 
	 * setup timings
	 * TODO: make it configurable via platform data or DT
	  disable WP on all chips, and select chip 0  initialize Control register   Setup generic sequence register for small page reads.  flush write 
		 * Writing a subpage separately is not supported, because
		 * the controller only does ECC on full-page accesses.
		  dummy  dummy  default 
 * Driver for the built-in NAND controller of the Atheros AR934x SoCs
 *
 * Copyright (C) 2011-2013 Gabor Juhos <juhosg@openwrt.org>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
  default timing values  msecs  msecs  AR934X_NFC_DEBUG  AR934X_NFC_DEBUG_DATA  flush write  flush write  ERASE1  SEQIN, READ0, etc..  TODO: handle 16bit bus width  flush write  override number of address cycles for the erase command  emulate subpage read  output read command  the data is already written  TODO: optimize to avoid memcpy  read the ECC status 
		 * The hardware ECC engine reports uncorrectable errors
		 * on empty pages. Check the ECC bytes and the data. If
		 * both contains 0xff bytes only, dont report a failure.
		 *
		 * TODO: prebuild a buffer with 0xff bytes and use memcmp
		 * for better performance?
		 
		 * The hardware does not report the exact count of the
		 * corrected bitflips, use assumptions based on the
		 * threshold.
		 
			 * The number of corrected bitflips exceeds the
			 * threshold. Assume the maximum.
			  write OOB first  TODO: optimize to avoid memcopy 
	 * setup timings
	 * TODO: make it configurable via platform data or DT
	  disable WP on all chips, and select chip 0  initialize Control register   Setup generic sequence register for small page reads.  flush write 
		 * Writing a subpage separately is not supported, because
		 * the controller only does ECC on full-page accesses.
		  dummy  dummy  default 
 * Driver for the built-in NAND controller of the Atheros AR934x SoCs
 *
 * Copyright (C) 2011-2013 Gabor Juhos <juhosg@openwrt.org>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
  default timing values  msecs  msecs  AR934X_NFC_DEBUG  AR934X_NFC_DEBUG_DATA  flush write  flush write  ERASE1  SEQIN, READ0, etc..  TODO: handle 16bit bus width  flush write  override number of address cycles for the erase command  emulate subpage read  output read command  the data is already written  TODO: optimize to avoid memcpy  read the ECC status 
		 * The hardware ECC engine reports uncorrectable errors
		 * on empty pages. Check the ECC bytes and the data. If
		 * both contains 0xff bytes only, dont report a failure.
		 *
		 * TODO: prebuild a buffer with 0xff bytes and use memcmp
		 * for better performance?
		 
		 * The hardware does not report the exact count of the
		 * corrected bitflips, use assumptions based on the
		 * threshold.
		 
			 * The number of corrected bitflips exceeds the
			 * threshold. Assume the maximum.
			  write OOB first  TODO: optimize to avoid memcopy 
	 * setup timings
	 * TODO: make it configurable via platform data or DT
	  disable WP on all chips, and select chip 0  initialize Control register   Setup generic sequence register for small page reads.  flush write 
		 * Writing a subpage separately is not supported, because
		 * the controller only does ECC on full-page accesses.
		  dummy  dummy  default 