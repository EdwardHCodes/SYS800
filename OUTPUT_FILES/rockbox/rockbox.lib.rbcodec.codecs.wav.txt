**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 * Copyright (C) 2009 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** WAVE (RIFF) codec:
 * 
 *  For a good documentation on WAVE files, see:
 *  http://www.tsp.ece.mcgill.ca/MMSP/Documents/AudioFormats/WAVE/WAVE.html
 *  and
 *  http://www.sonicspot.com/guide/wavefiles.html
 *
 *  For sample WAV files, see:
 *  http://www.tsp.ece.mcgill.ca/MMSP/Documents/AudioFormats/WAVE/Samples.html
 *
  This codec support WAVE files with the following formats:  Microsoft Unknown Wave Format  Microsoft PCM Format  Microsoft ADPCM Format  IEEE Float  Microsoft ALAW  Microsoft MULAW  Intel's DVI ADPCM  Dialogic OKI ADPCM  Yamaha ADPCM  XBOX ADPCM  same as WAVE_FORMAT_MULAW  same as WAVE_FORMAT_ALAW  Adobe SWF ADPCM  skip 'fmt '  get nNumCoef 
     * In many case, nNumCoef is 7.
     * Depending upon the encoder, as for this value there is a possibility of
     * increasing more.
     * If you found the file where this value exceeds 7, please report.
      get aCoeffs  this is the codec entry point  Generic codec initialisation  this is called for each file to process  position of the first block in file  Need to save resume for later use (cleared indirectly by advance_buffer)  get RIFF chunk header  advance to first WAVE chunk  iterate over WAVE chunks until the 'data' chunk, which should be after the 'fmt ' chunk  get WAVE chunk header  no more chunks, 'data' chunk must not have been found  chunkSize  wFormatTag  wChannels  skipping dwSamplesPerSec  skipping dwAvgBytesPerSec  wBlockAlign  wBitsPerSample  this is not a fatal error with some formats,
                     * we'll see later if we can't decode it  wValidBitsPerSample  skipping dwChannelMask (4bytes)  SubFormat (only get the first two bytes)  msadpcm specific  get codec  riff 8bit linear pcm is unsigned  set format, parse codec specific tag, check format, and calculate chunk size  advance to start of data  dwSampleLength  go to next chunk (even chunk sizes must be padded)  common format check  check chunksize  make sure we're at the correct offset  Round down to previous block  already where we need to be  The main decoder loop  End of stream **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 * Copyright (C) 2009 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** WAVE (RIFF) codec:
 * 
 *  For a good documentation on WAVE files, see:
 *  http://www.tsp.ece.mcgill.ca/MMSP/Documents/AudioFormats/WAVE/WAVE.html
 *  and
 *  http://www.sonicspot.com/guide/wavefiles.html
 *
 *  For sample WAV files, see:
 *  http://www.tsp.ece.mcgill.ca/MMSP/Documents/AudioFormats/WAVE/Samples.html
 *
  This codec support WAVE files with the following formats:  Microsoft Unknown Wave Format  Microsoft PCM Format  Microsoft ADPCM Format  IEEE Float  Microsoft ALAW  Microsoft MULAW  Intel's DVI ADPCM  Dialogic OKI ADPCM  Yamaha ADPCM  XBOX ADPCM  same as WAVE_FORMAT_MULAW  same as WAVE_FORMAT_ALAW  Adobe SWF ADPCM  skip 'fmt '  get nNumCoef 
     * In many case, nNumCoef is 7.
     * Depending upon the encoder, as for this value there is a possibility of
     * increasing more.
     * If you found the file where this value exceeds 7, please report.
      get aCoeffs  this is the codec entry point  Generic codec initialisation  this is called for each file to process  position of the first block in file  Need to save resume for later use (cleared indirectly by advance_buffer)  get RIFF chunk header  advance to first WAVE chunk  iterate over WAVE chunks until the 'data' chunk, which should be after the 'fmt ' chunk  get WAVE chunk header  no more chunks, 'data' chunk must not have been found  chunkSize  wFormatTag  wChannels  skipping dwSamplesPerSec  skipping dwAvgBytesPerSec  wBlockAlign  wBitsPerSample  this is not a fatal error with some formats,
                     * we'll see later if we can't decode it  wValidBitsPerSample  skipping dwChannelMask (4bytes)  SubFormat (only get the first two bytes)  msadpcm specific  get codec  riff 8bit linear pcm is unsigned  set format, parse codec specific tag, check format, and calculate chunk size  advance to start of data  dwSampleLength  go to next chunk (even chunk sizes must be padded)  common format check  check chunksize  make sure we're at the correct offset  Round down to previous block  already where we need to be  The main decoder loop  End of stream **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2005 Dave Chapman
 * Copyright (C) 2009 Yoshihisa Uchida
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** WAVE (RIFF) codec:
 * 
 *  For a good documentation on WAVE files, see:
 *  http://www.tsp.ece.mcgill.ca/MMSP/Documents/AudioFormats/WAVE/WAVE.html
 *  and
 *  http://www.sonicspot.com/guide/wavefiles.html
 *
 *  For sample WAV files, see:
 *  http://www.tsp.ece.mcgill.ca/MMSP/Documents/AudioFormats/WAVE/Samples.html
 *
  This codec support WAVE files with the following formats:  Microsoft Unknown Wave Format  Microsoft PCM Format  Microsoft ADPCM Format  IEEE Float  Microsoft ALAW  Microsoft MULAW  Intel's DVI ADPCM  Dialogic OKI ADPCM  Yamaha ADPCM  XBOX ADPCM  same as WAVE_FORMAT_MULAW  same as WAVE_FORMAT_ALAW  Adobe SWF ADPCM  skip 'fmt '  get nNumCoef 
     * In many case, nNumCoef is 7.
     * Depending upon the encoder, as for this value there is a possibility of
     * increasing more.
     * If you found the file where this value exceeds 7, please report.
      get aCoeffs  this is the codec entry point  Generic codec initialisation  this is called for each file to process  position of the first block in file  Need to save resume for later use (cleared indirectly by advance_buffer)  get RIFF chunk header  advance to first WAVE chunk  iterate over WAVE chunks until the 'data' chunk, which should be after the 'fmt ' chunk  get WAVE chunk header  no more chunks, 'data' chunk must not have been found  chunkSize  wFormatTag  wChannels  skipping dwSamplesPerSec  skipping dwAvgBytesPerSec  wBlockAlign  wBitsPerSample  this is not a fatal error with some formats,
                     * we'll see later if we can't decode it  wValidBitsPerSample  skipping dwChannelMask (4bytes)  SubFormat (only get the first two bytes)  msadpcm specific  get codec  riff 8bit linear pcm is unsigned  set format, parse codec specific tag, check format, and calculate chunk size  advance to start of data  dwSampleLength  go to next chunk (even chunk sizes must be padded)  common format check  check chunksize  make sure we're at the correct offset  Round down to previous block  already where we need to be  The main decoder loop  End of stream 