******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU ******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU ******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU ******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU ******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU ******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU ******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU ******************************************************************
 *
 * File:            ddr_oxsemi.c
 *
 * Description:     Declarations for DDR routines and data objects
 *
 * Author:          Julien Margetts
 *
 * Copyright:       Oxford Semiconductor Ltd, 2009
  DDR TIMING PARAMETERS DDR CONFIG PARAMETERScmd_mode_wr_cl_blwhen SDR : cmd_mode_wr_cl_bl = 0x80200002 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8else       cmd_mode_wr_cl_bl = 0x80200003 + (latency_CAS_RAM * 16) + (recovery_WR - 1) * 512; -- Sets write rec XX, CL=XX; BL=8                                                            cmd_                    bank_ dir_     lat_  rec_ width_ odt_   odt_ fix delay     ratio                                                                A                                F  C         update offset all  re  re_to_we  w  r0  r1                                                                R     L        P  R        R  W  A  A  W  WTiming Parameters                                            A  W  N  M  R  W  C  F  R  W  W  R  W  S  L  Relida device. 400MHz, Speedgrade 25 timings (1Gb parts)                                                          D     B  B  R  A   S                                                          D  W  L  K  A  S   PConfig Parameters                                         R  D  C  8  M  Z   D CMD_MODEstatic const T_DDR_CONFIG_PARAMETERS C_CP_DDR2_25E_CL5  = { 2,16, 1, 0, 1, 32,25,0x80200A53}; // 64 MByte 128 MByte 256 MByteExtra read to put in delay before starting to poll... readPOLL C_DDR_PHY2_REG register until clock and flock!!! Ideally have a timeout on this. readlocked when bits 30 and 31 are setExtra read to put in delay before starting to poll... readPOLL DDR_STAT register until no longer busy!!! Ideally have a timeout on this. readwhen bit 31 is clear - core is no longer busy update the DDR controller registers for timing parameters  Program the timing parameters in the PHY too Total size of memory in Mbits...Deduce value to program into DDR_CFG register...forces sims not to work if badly configuredMemory widthforces sims not to work if badly configuredSetup DDR ModeSDRDDRDDR2forces sims not to work if badly configuredSetup BanksProgram DDR_CFG register...Configure PHY0 reg - se_mode is bit 1,needs to be 1 for DDR (single_ended drive)SDRDDRDDR2Program DDR_PHY0 register...Read DDR_PHY* registers to exercise paths for vcdStart up sequences - Different dependant on DDR modeDDR2Start-up sequence: follows procedure described in Micron datasheet.start up DDR PHY DLL dll on, start point and inc = h28 start on, dll on, start point and inc = h28200usStartup SDRAM...!!! Software: CK should be running for 200us before wake-upSets CL=3; BL=8 but also reset DLL to trigger a DLL initialisation...1us1us!!! Software: Wait 200 CK cycles before...for(i=1; i<=2; i++) { !!! Software: Wait here at least 8 CK cycles}need a wait here to ensure PHY DLL lock before the refresh is issued1us!!! Software: Wait here at least 8 CK cycles to satify tRFC1usAs before but without 'RESET_DLL' bit set...1us OCD commandsDo nothingEnable auto-refresh 8192 Refreshes required every 64ms, so maximum refresh period is 7.8125 us We have a 400 MHz DDR clock (2.5ns period) so max period is 3125 cycles Our core now does 8 refreshes in a go, so we multiply this period by 8 Refresh period in clocks readVerify register contents readprintf("Warning XXXXXXXXXXXXXXXXXXXXXX - get bad read data from C_DDR_PHY2_REG, though it looks OK on bus XXXXXXXXXXXXXXXXXX");TBD   Check_data (read_data,  dll_reg, "Error: bad C_DDR_PHY2_REG read", tb_pass); readTBD   Check_data (read_data,  cfg_reg, "Error: bad DDR_CFG read", tb_pass);disable optimised wrappingenable midbuffer followon read Enable write behind coherency checking for all clientsWait for 200 clock cycles for SDRAM DLL to lock...1us Function used to Setup DDR coreBring core out of ResetDDR TIMING INITIALISTIONDDR NORMAL INITIALISATION route all writes through one clientBring all clients out of reset reset all timing controls to known value (31)  step up or down read delay to the requested value  now write delay Function used to Setup SDRAM in DDR/SDR mode start clocks  bring phy and core out of reset  DDR runs at half the speed of the CPU 