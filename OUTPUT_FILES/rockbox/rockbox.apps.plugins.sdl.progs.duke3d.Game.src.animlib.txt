-------------------------------------------------------------------------
  Copyright (C) 1996, 2003 - 3D Realms Entertainment

  This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

  Duke Nukem 3D is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  See the GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  aint32_t with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

  Original Source: 1996 - Todd Replogle
  Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
-------------------------------------------------------------------------#include "_animlib.h"**************************************************************************** GLOBALS******************************************************************************************************************************************************** LOCALS********************************************************************************************************************************************************      CheckAnimStarted ()********************************************************************************************************************************************************      findpage ()              - given a frame number return the large page number it resides in********************************************************************************************************************************************************      loadpage ()      - seek out and load in the large page specified********************************************************************************************************************************************************      CPlayRunSkipDump ()      - This version of the decompressor is here for portability to non PC's****************************************************************************printf("op %d", cnt); dump following bytes  repeating sequence  shortSkip  adding 7-bit count to 32-bit pointer  8-bit unsigned count printf("longop");wordCnt = *((uint16 *)srcP); Do SIGNED test.  longSkip.  Remove sign bit.  longDump.  Clear "longRun" bit.  all done ****************************************************************************      renderframe ()      - draw the frame sepcified from the large page in the buffer pointed to****************************************************************************rb->splash(HZ, "point 1");rb->splashf(HZ, "val=%d", val);uint16_t val = readLE16(((uint16_t*)ppointer) + 1);ppointer += (4 + ( ( val + (val & 1 ))));rb->splashf(HZ, "point 2 (d = %d)", (char*)ppointer - (char*)pagepointer);****************************************************************************      drawframe ()      - high level frame draw routine****************************************************************************rb->splashf(HZ, "draw %d", framenumber);rb->splashf(HZ, "page: %08x", crc32(anim->thepage, sizeof(anim->thepage)));rb->splashf(HZ, "image: %08x", crc32(anim->imagebuffer, sizeof(anim->imagebuffer)));****************************************************************************      ANIM_LoadAnim ()**************************************************************************** load the color palette read in large page descriptors****************************************************************************      ANIM_FreeAnim ()****************************************************************************      SafeFree(anim);****************************************************************************      ANIM_NumFrames ()********************************************************************************************************************************************************      ANIM_DrawFrame ()********************************************************************************************************************************************************      ANIM_GetPalette ()****************************************************************************-------------------------------------------------------------------------
  Copyright (C) 1996, 2003 - 3D Realms Entertainment

  This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

  Duke Nukem 3D is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  See the GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  aint32_t with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

  Original Source: 1996 - Todd Replogle
  Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
-------------------------------------------------------------------------#include "_animlib.h"**************************************************************************** GLOBALS******************************************************************************************************************************************************** LOCALS********************************************************************************************************************************************************      CheckAnimStarted ()********************************************************************************************************************************************************      findpage ()              - given a frame number return the large page number it resides in********************************************************************************************************************************************************      loadpage ()      - seek out and load in the large page specified********************************************************************************************************************************************************      CPlayRunSkipDump ()      - This version of the decompressor is here for portability to non PC's****************************************************************************printf("op %d", cnt); dump following bytes  repeating sequence  shortSkip  adding 7-bit count to 32-bit pointer  8-bit unsigned count printf("longop");wordCnt = *((uint16 *)srcP); Do SIGNED test.  longSkip.  Remove sign bit.  longDump.  Clear "longRun" bit.  all done ****************************************************************************      renderframe ()      - draw the frame sepcified from the large page in the buffer pointed to****************************************************************************rb->splash(HZ, "point 1");rb->splashf(HZ, "val=%d", val);uint16_t val = readLE16(((uint16_t*)ppointer) + 1);ppointer += (4 + ( ( val + (val & 1 ))));rb->splashf(HZ, "point 2 (d = %d)", (char*)ppointer - (char*)pagepointer);****************************************************************************      drawframe ()      - high level frame draw routine****************************************************************************rb->splashf(HZ, "draw %d", framenumber);rb->splashf(HZ, "page: %08x", crc32(anim->thepage, sizeof(anim->thepage)));rb->splashf(HZ, "image: %08x", crc32(anim->imagebuffer, sizeof(anim->imagebuffer)));****************************************************************************      ANIM_LoadAnim ()**************************************************************************** load the color palette read in large page descriptors****************************************************************************      ANIM_FreeAnim ()****************************************************************************      SafeFree(anim);****************************************************************************      ANIM_NumFrames ()********************************************************************************************************************************************************      ANIM_DrawFrame ()********************************************************************************************************************************************************      ANIM_GetPalette ()****************************************************************************-------------------------------------------------------------------------
  Copyright (C) 1996, 2003 - 3D Realms Entertainment

  This file is part of Duke Nukem 3D version 1.5 - Atomic Edition

  Duke Nukem 3D is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  See the GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  aint32_t with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

  Original Source: 1996 - Todd Replogle
  Prepared for public release: 03/21/2003 - Charlie Wiederhold, 3D Realms
-------------------------------------------------------------------------#include "_animlib.h"**************************************************************************** GLOBALS******************************************************************************************************************************************************** LOCALS********************************************************************************************************************************************************      CheckAnimStarted ()********************************************************************************************************************************************************      findpage ()              - given a frame number return the large page number it resides in********************************************************************************************************************************************************      loadpage ()      - seek out and load in the large page specified********************************************************************************************************************************************************      CPlayRunSkipDump ()      - This version of the decompressor is here for portability to non PC's****************************************************************************printf("op %d", cnt); dump following bytes  repeating sequence  shortSkip  adding 7-bit count to 32-bit pointer  8-bit unsigned count printf("longop");wordCnt = *((uint16 *)srcP); Do SIGNED test.  longSkip.  Remove sign bit.  longDump.  Clear "longRun" bit.  all done ****************************************************************************      renderframe ()      - draw the frame sepcified from the large page in the buffer pointed to****************************************************************************rb->splash(HZ, "point 1");rb->splashf(HZ, "val=%d", val);uint16_t val = readLE16(((uint16_t*)ppointer) + 1);ppointer += (4 + ( ( val + (val & 1 ))));rb->splashf(HZ, "point 2 (d = %d)", (char*)ppointer - (char*)pagepointer);****************************************************************************      drawframe ()      - high level frame draw routine****************************************************************************rb->splashf(HZ, "draw %d", framenumber);rb->splashf(HZ, "page: %08x", crc32(anim->thepage, sizeof(anim->thepage)));rb->splashf(HZ, "image: %08x", crc32(anim->imagebuffer, sizeof(anim->imagebuffer)));****************************************************************************      ANIM_LoadAnim ()**************************************************************************** load the color palette read in large page descriptors****************************************************************************      ANIM_FreeAnim ()****************************************************************************      SafeFree(anim);****************************************************************************      ANIM_NumFrames ()********************************************************************************************************************************************************      ANIM_DrawFrame ()********************************************************************************************************************************************************      ANIM_GetPalette ()****************************************************************************