**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Alan Korr
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************** definitions **Set P1.1 to inputSet P4.2 and 4.3 to outputSet P4.2 and 4.3 to outputSet P7.0 and 7.1 to outputdelay(10);  // < 470 usdelay(13); // > 22 usdelay(20); // >> 6.7 usdelay(20); // >> 6.7 us possibly 0x74 possibly 0x77 possibly 0x74 possibly 0x77* globals * needed for flip ** hardware configuration ** turn the display upside down (call lcd_update() afterwards)  TODO: flip mode isn't working.  The commands in the else part of
       this function are how the original firmware inits the LCD  132 colums minus the 128 we have  LCD init  RGB interface, RGB interface for PNP mode ?? See also datasheet 11.3 Set up Flow of Generated Power Supply  VC1IEN, 2.76V VGH=6*VCI1, VGL=-4*VCI1, f(DCCLK):f(DCCLK1)=1:0.5, f(DCCLK) : f(DCCLK3)= 1:0.5DCR_EX=1(Use dotclock) >10ms >10ms >10ms >10ms >10ms >30ms{DB [17:12], DB [11:6], DB [5:0]} is assigned to {B, G, R}. Horizontal first, auto increment address, write from 0x0000 to 0xdbaf all off Start oscillator, X 1.25 Set things up to write to the entire screen  end of partial screen start of partial screen end of window start of window end of window start of window** Update functions ** Performance function that works with an external buffer
   note that by and bheight are in 8-pixel units!  Copy display bitmap to hardware  Performance function that works with an external buffer
   note that by and bheight are in 8-pixel units!  Update the display.
   This must be called after all other LCD functions that change the display.  Copy display bitmap to hardware  Update a fraction of the display.  The Y coordinates have to work on even 8 pixel rows  nothing left to do, 0 is harmful to lcd_write_data()  Copy specified rectange bitmap to hardware **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Alan Korr
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************** definitions **Set P1.1 to inputSet P4.2 and 4.3 to outputSet P4.2 and 4.3 to outputSet P7.0 and 7.1 to outputdelay(10);  // < 470 usdelay(13); // > 22 usdelay(20); // >> 6.7 usdelay(20); // >> 6.7 us possibly 0x74 possibly 0x77 possibly 0x74 possibly 0x77* globals * needed for flip ** hardware configuration ** turn the display upside down (call lcd_update() afterwards)  TODO: flip mode isn't working.  The commands in the else part of
       this function are how the original firmware inits the LCD  132 colums minus the 128 we have  LCD init  RGB interface, RGB interface for PNP mode ?? See also datasheet 11.3 Set up Flow of Generated Power Supply  VC1IEN, 2.76V VGH=6*VCI1, VGL=-4*VCI1, f(DCCLK):f(DCCLK1)=1:0.5, f(DCCLK) : f(DCCLK3)= 1:0.5DCR_EX=1(Use dotclock) >10ms >10ms >10ms >10ms >10ms >30ms{DB [17:12], DB [11:6], DB [5:0]} is assigned to {B, G, R}. Horizontal first, auto increment address, write from 0x0000 to 0xdbaf all off Start oscillator, X 1.25 Set things up to write to the entire screen  end of partial screen start of partial screen end of window start of window end of window start of window** Update functions ** Performance function that works with an external buffer
   note that by and bheight are in 8-pixel units!  Copy display bitmap to hardware  Performance function that works with an external buffer
   note that by and bheight are in 8-pixel units!  Update the display.
   This must be called after all other LCD functions that change the display.  Copy display bitmap to hardware  Update a fraction of the display.  The Y coordinates have to work on even 8 pixel rows  nothing left to do, 0 is harmful to lcd_write_data()  Copy specified rectange bitmap to hardware **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Alan Korr
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************** definitions **Set P1.1 to inputSet P4.2 and 4.3 to outputSet P4.2 and 4.3 to outputSet P7.0 and 7.1 to outputdelay(10);  // < 470 usdelay(13); // > 22 usdelay(20); // >> 6.7 usdelay(20); // >> 6.7 us possibly 0x74 possibly 0x77 possibly 0x74 possibly 0x77* globals * needed for flip ** hardware configuration ** turn the display upside down (call lcd_update() afterwards)  TODO: flip mode isn't working.  The commands in the else part of
       this function are how the original firmware inits the LCD  132 colums minus the 128 we have  LCD init  RGB interface, RGB interface for PNP mode ?? See also datasheet 11.3 Set up Flow of Generated Power Supply  VC1IEN, 2.76V VGH=6*VCI1, VGL=-4*VCI1, f(DCCLK):f(DCCLK1)=1:0.5, f(DCCLK) : f(DCCLK3)= 1:0.5DCR_EX=1(Use dotclock) >10ms >10ms >10ms >10ms >10ms >30ms{DB [17:12], DB [11:6], DB [5:0]} is assigned to {B, G, R}. Horizontal first, auto increment address, write from 0x0000 to 0xdbaf all off Start oscillator, X 1.25 Set things up to write to the entire screen  end of partial screen start of partial screen end of window start of window end of window start of window** Update functions ** Performance function that works with an external buffer
   note that by and bheight are in 8-pixel units!  Copy display bitmap to hardware  Performance function that works with an external buffer
   note that by and bheight are in 8-pixel units!  Update the display.
   This must be called after all other LCD functions that change the display.  Copy display bitmap to hardware  Update a fraction of the display.  The Y coordinates have to work on even 8 pixel rows  nothing left to do, 0 is harmful to lcd_write_data()  Copy specified rectange bitmap to hardware 