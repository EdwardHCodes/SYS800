	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Screamtracker 2 (STM) module loader

======================================================================================== Module structure  sample information  0x00  Instrument disk  Sample length  Loop start point  Loop end point  Volume  Good old c2spd  header  !Scream! for ST 2.xx   0x1A   1=song, 2=module  initspeed= stm inittempo>>4   number of patterns   STM sample data  Docs say 64 - actually 128 ========== Loader variables  tracker identifiers ========== Loader code  STM Module = filetype 2  Prevent false positives for S3M files  extract the various information from the 4 bytes that make up a note  special values of [SBYTE0] are handled here
	   we have no idea if these strange values will ever be encountered.
	   but it appears as those stms sound correct.  note cut  if note < 251, then all three bytes are stored in the file  Axx set speed to xx  Bxx position jump  Cxx patternbreak to row xx  Dxy volumeslide  Exy toneslide down  Fxy toneslide up  Gxx Tone portamento,speed xx  Hxy vibrato  Ixy tremor, ontime x, offtime y  protracker arpeggio  fall through  Jxy arpeggio  Kxy Dual command H00 & Dxy  Lxy Dual command G00 & Dxy  Support all these above, since ST2 can LOAD these values but can
			   actually only play up to J - and J is only half-way implemented
			   in ST2  Xxx amiga panning command 8xx  Allocate temporary buffer for loading and converting the patterns  We must generate our own ISA, it's not stored in stm  try to read stm header  STM sample data  set module variables  make a cstr of songname  mh->inittempo+0x1c;  get number of channels  99 terminates the patorder list  normalize  load sample info !mh->sample[t].volume ||  normalize  contrary to the STM specs, sample data is signed ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Screamtracker 2 (STM) module loader

======================================================================================== Module structure  sample information  0x00  Instrument disk  Sample length  Loop start point  Loop end point  Volume  Good old c2spd  header  !Scream! for ST 2.xx   0x1A   1=song, 2=module  initspeed= stm inittempo>>4   number of patterns   STM sample data  Docs say 64 - actually 128 ========== Loader variables  tracker identifiers ========== Loader code  STM Module = filetype 2  Prevent false positives for S3M files  extract the various information from the 4 bytes that make up a note  special values of [SBYTE0] are handled here
	   we have no idea if these strange values will ever be encountered.
	   but it appears as those stms sound correct.  note cut  if note < 251, then all three bytes are stored in the file  Axx set speed to xx  Bxx position jump  Cxx patternbreak to row xx  Dxy volumeslide  Exy toneslide down  Fxy toneslide up  Gxx Tone portamento,speed xx  Hxy vibrato  Ixy tremor, ontime x, offtime y  protracker arpeggio  fall through  Jxy arpeggio  Kxy Dual command H00 & Dxy  Lxy Dual command G00 & Dxy  Support all these above, since ST2 can LOAD these values but can
			   actually only play up to J - and J is only half-way implemented
			   in ST2  Xxx amiga panning command 8xx  Allocate temporary buffer for loading and converting the patterns  We must generate our own ISA, it's not stored in stm  try to read stm header  STM sample data  set module variables  make a cstr of songname  mh->inittempo+0x1c;  get number of channels  99 terminates the patorder list  normalize  load sample info !mh->sample[t].volume ||  normalize  contrary to the STM specs, sample data is signed ========== Loader information  ex:set ts=4: 	MikMod sound library
	(c) 1998, 1999, 2000, 2001, 2002 Miodrag Vallat and others - see file
	AUTHORS for complete list.

	This library is free software; you can redistribute it and/or modify
	it under the terms of the GNU Library General Public License as
	published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Library General Public License for more details.

	You should have received a copy of the GNU Library General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.
==============================================================================

  $Id$

  Screamtracker 2 (STM) module loader

======================================================================================== Module structure  sample information  0x00  Instrument disk  Sample length  Loop start point  Loop end point  Volume  Good old c2spd  header  !Scream! for ST 2.xx   0x1A   1=song, 2=module  initspeed= stm inittempo>>4   number of patterns   STM sample data  Docs say 64 - actually 128 ========== Loader variables  tracker identifiers ========== Loader code  STM Module = filetype 2  Prevent false positives for S3M files  extract the various information from the 4 bytes that make up a note  special values of [SBYTE0] are handled here
	   we have no idea if these strange values will ever be encountered.
	   but it appears as those stms sound correct.  note cut  if note < 251, then all three bytes are stored in the file  Axx set speed to xx  Bxx position jump  Cxx patternbreak to row xx  Dxy volumeslide  Exy toneslide down  Fxy toneslide up  Gxx Tone portamento,speed xx  Hxy vibrato  Ixy tremor, ontime x, offtime y  protracker arpeggio  fall through  Jxy arpeggio  Kxy Dual command H00 & Dxy  Lxy Dual command G00 & Dxy  Support all these above, since ST2 can LOAD these values but can
			   actually only play up to J - and J is only half-way implemented
			   in ST2  Xxx amiga panning command 8xx  Allocate temporary buffer for loading and converting the patterns  We must generate our own ISA, it's not stored in stm  try to read stm header  STM sample data  set module variables  make a cstr of songname  mh->inittempo+0x1c;  get number of channels  99 terminates the patorder list  normalize  load sample info !mh->sample[t].volume ||  normalize  contrary to the STM specs, sample data is signed ========== Loader information  ex:set ts=4: 