**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Tuner "middleware" for Silicon Labs SI4700 chip
 *
 * Copyright (C) 2008 Nils Wallménius
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** tuner abstraction interface  physical interface driver  some models use the internal 32 kHz oscillator which needs special attention
   during initialisation, power-up and power-down.  gigabeat S uses the GPIO for stereo/mono detection  define RSSI range * Registers and bits - "x" denotes Si4702/03 only (so they say) * x  x  x  x  DEVICEID (0x0)  0x01 = Si4700/01  0x01 = Si4702/03  always 0x242  CHIPID (0x1)  Informational  Si4700/01  0 before powerup  0 after powerup = Si4700  1 after powerup = Si4701  Si4702/03  0000 before PU = Si4702  0001 after PU = Si4702  1000 before PU = Si4703  1001 after PU = Si4703  Indicates Si4701/2/3 after powerup  POWERCFG (0x2)  x  CHANNEL (0x3)  SYSCONFIG1 (0x4)  x  x  SYSCONFIG2 (0x5)  tenth-megahertz  4700/01            0000=mute,0001=-28dBFS..2dB steps..1111= +0dBFS  4702/03: VOLEXT=0: 0000=mute,0001=-28dBFS..2dB steps..1111= +0dBFS           VOLEXT=1: 0000=mute,0001=-58dBFS..2dB steps..1111=-30dBFS  SYSCONFIG3 (0x6)  x  TEST1 (0x7)  4700/01: 15=always 0, 13:0 = write with preexisting values!  4702/03:              13:0 = write with preexisting values!  x  TEST2 (0x8)  15:0 = write with preexisting values!  BOOTCONFIG (0x9)  15:0 = write with preexisting values!  STATUSRSSI (0xA)  x  x  x  READCHAN (0xB)  x  x  x  RDSA-D (0xC-0xF)  4702/03: RDS Block A-D data  reads <len> registers from radio at offset 0x0A into cache  writes <len> registers from cache to radio at offset 0x02  Hide silly, wrapped and continuous register reading and make interface
 * appear sane and normal. This also makes the driver compatible with
 * using the 3-wire interface.  Poll i2c for the stereo status  ndef SI4700_USE_MO_ST_I * power down * ENABLE high, DISABLE high  Bits self-clear once placed in powerdown.  read all registers  Enable the internal oscillator
          (Si4702-16 needs this register to be initialised to 0x100) * power up * ENABLE high, DISABLE low  init register cache  set mono->stereo switching RSSI range to lowest setting  enable RDS and RDS interrupt if supported (bit 9 of CHIPID)  Is Si4701/2/3 - Enable RDS and interrupt  check device id  make sure the tuner goes into a well-defined powered-off state  SYSCONFIG2_SPACE_200KHZ  SYSCONFIG2_SPACE_100KHZ  SYSCONFIG2_SPACE_50KHZ   SYSCONFIG2_BAND_875_1080  SYSCONFIG2_BAND_760_1080  SYSCONFIG2_BAND_760_900   check BAND and spacings  tuning should be done within 60 ms according to the datasheet  get tune result  Primitive tuning check: sufficient level and AFC not railed  tuner abstraction layer: set something to the tuner  tuner abstraction layer: read something from the tuner  default for unsupported query  Called by RDS interrupt on target  Handle RDS event from ISR  !(CONFIG_RDS & RDS_CFG_ISR)  Handle RDS event from thread  (CONFIG_RDS & RDS_CFG_ISR)  HAVE_RDS_CAP **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Tuner "middleware" for Silicon Labs SI4700 chip
 *
 * Copyright (C) 2008 Nils Wallménius
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** tuner abstraction interface  physical interface driver  some models use the internal 32 kHz oscillator which needs special attention
   during initialisation, power-up and power-down.  gigabeat S uses the GPIO for stereo/mono detection  define RSSI range * Registers and bits - "x" denotes Si4702/03 only (so they say) * x  x  x  x  DEVICEID (0x0)  0x01 = Si4700/01  0x01 = Si4702/03  always 0x242  CHIPID (0x1)  Informational  Si4700/01  0 before powerup  0 after powerup = Si4700  1 after powerup = Si4701  Si4702/03  0000 before PU = Si4702  0001 after PU = Si4702  1000 before PU = Si4703  1001 after PU = Si4703  Indicates Si4701/2/3 after powerup  POWERCFG (0x2)  x  CHANNEL (0x3)  SYSCONFIG1 (0x4)  x  x  SYSCONFIG2 (0x5)  tenth-megahertz  4700/01            0000=mute,0001=-28dBFS..2dB steps..1111= +0dBFS  4702/03: VOLEXT=0: 0000=mute,0001=-28dBFS..2dB steps..1111= +0dBFS           VOLEXT=1: 0000=mute,0001=-58dBFS..2dB steps..1111=-30dBFS  SYSCONFIG3 (0x6)  x  TEST1 (0x7)  4700/01: 15=always 0, 13:0 = write with preexisting values!  4702/03:              13:0 = write with preexisting values!  x  TEST2 (0x8)  15:0 = write with preexisting values!  BOOTCONFIG (0x9)  15:0 = write with preexisting values!  STATUSRSSI (0xA)  x  x  x  READCHAN (0xB)  x  x  x  RDSA-D (0xC-0xF)  4702/03: RDS Block A-D data  reads <len> registers from radio at offset 0x0A into cache  writes <len> registers from cache to radio at offset 0x02  Hide silly, wrapped and continuous register reading and make interface
 * appear sane and normal. This also makes the driver compatible with
 * using the 3-wire interface.  Poll i2c for the stereo status  ndef SI4700_USE_MO_ST_I * power down * ENABLE high, DISABLE high  Bits self-clear once placed in powerdown.  read all registers  Enable the internal oscillator
          (Si4702-16 needs this register to be initialised to 0x100) * power up * ENABLE high, DISABLE low  init register cache  set mono->stereo switching RSSI range to lowest setting  enable RDS and RDS interrupt if supported (bit 9 of CHIPID)  Is Si4701/2/3 - Enable RDS and interrupt  check device id  make sure the tuner goes into a well-defined powered-off state  SYSCONFIG2_SPACE_200KHZ  SYSCONFIG2_SPACE_100KHZ  SYSCONFIG2_SPACE_50KHZ   SYSCONFIG2_BAND_875_1080  SYSCONFIG2_BAND_760_1080  SYSCONFIG2_BAND_760_900   check BAND and spacings  tuning should be done within 60 ms according to the datasheet  get tune result  Primitive tuning check: sufficient level and AFC not railed  tuner abstraction layer: set something to the tuner  tuner abstraction layer: read something from the tuner  default for unsupported query  Called by RDS interrupt on target  Handle RDS event from ISR  !(CONFIG_RDS & RDS_CFG_ISR)  Handle RDS event from thread  (CONFIG_RDS & RDS_CFG_ISR)  HAVE_RDS_CAP **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Tuner "middleware" for Silicon Labs SI4700 chip
 *
 * Copyright (C) 2008 Nils Wallménius
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** tuner abstraction interface  physical interface driver  some models use the internal 32 kHz oscillator which needs special attention
   during initialisation, power-up and power-down.  gigabeat S uses the GPIO for stereo/mono detection  define RSSI range * Registers and bits - "x" denotes Si4702/03 only (so they say) * x  x  x  x  DEVICEID (0x0)  0x01 = Si4700/01  0x01 = Si4702/03  always 0x242  CHIPID (0x1)  Informational  Si4700/01  0 before powerup  0 after powerup = Si4700  1 after powerup = Si4701  Si4702/03  0000 before PU = Si4702  0001 after PU = Si4702  1000 before PU = Si4703  1001 after PU = Si4703  Indicates Si4701/2/3 after powerup  POWERCFG (0x2)  x  CHANNEL (0x3)  SYSCONFIG1 (0x4)  x  x  SYSCONFIG2 (0x5)  tenth-megahertz  4700/01            0000=mute,0001=-28dBFS..2dB steps..1111= +0dBFS  4702/03: VOLEXT=0: 0000=mute,0001=-28dBFS..2dB steps..1111= +0dBFS           VOLEXT=1: 0000=mute,0001=-58dBFS..2dB steps..1111=-30dBFS  SYSCONFIG3 (0x6)  x  TEST1 (0x7)  4700/01: 15=always 0, 13:0 = write with preexisting values!  4702/03:              13:0 = write with preexisting values!  x  TEST2 (0x8)  15:0 = write with preexisting values!  BOOTCONFIG (0x9)  15:0 = write with preexisting values!  STATUSRSSI (0xA)  x  x  x  READCHAN (0xB)  x  x  x  RDSA-D (0xC-0xF)  4702/03: RDS Block A-D data  reads <len> registers from radio at offset 0x0A into cache  writes <len> registers from cache to radio at offset 0x02  Hide silly, wrapped and continuous register reading and make interface
 * appear sane and normal. This also makes the driver compatible with
 * using the 3-wire interface.  Poll i2c for the stereo status  ndef SI4700_USE_MO_ST_I * power down * ENABLE high, DISABLE high  Bits self-clear once placed in powerdown.  read all registers  Enable the internal oscillator
          (Si4702-16 needs this register to be initialised to 0x100) * power up * ENABLE high, DISABLE low  init register cache  set mono->stereo switching RSSI range to lowest setting  enable RDS and RDS interrupt if supported (bit 9 of CHIPID)  Is Si4701/2/3 - Enable RDS and interrupt  check device id  make sure the tuner goes into a well-defined powered-off state  SYSCONFIG2_SPACE_200KHZ  SYSCONFIG2_SPACE_100KHZ  SYSCONFIG2_SPACE_50KHZ   SYSCONFIG2_BAND_875_1080  SYSCONFIG2_BAND_760_1080  SYSCONFIG2_BAND_760_900   check BAND and spacings  tuning should be done within 60 ms according to the datasheet  get tune result  Primitive tuning check: sufficient level and AFC not railed  tuner abstraction layer: set something to the tuner  tuner abstraction layer: read something from the tuner  default for unsupported query  Called by RDS interrupt on target  Handle RDS event from ISR  !(CONFIG_RDS & RDS_CFG_ISR)  Handle RDS event from thread  (CONFIG_RDS & RDS_CFG_ISR)  HAVE_RDS_CAP 