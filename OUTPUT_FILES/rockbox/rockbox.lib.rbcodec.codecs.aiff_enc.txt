**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Antonius Hellmann
 * Copyright (C) 2006-2013 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 00h - 'FORM'                           04h - size of file - 8                 08h - 'AIFF'                           0Ch - 'COMM'                           10h - num_channels through sample_rate
                                             (18)                             14h - 1=M, 2=S, etc.                   16h - num samples for each channel     1ah - 1-32 bits per sample             1ch - IEEE 754 80-bit floating point   26h - "SSND"                           2ah - size of chunk from offset to
                                             end of pcm data                  2eh - data offset from end of header   32h - pcm data alignment               36h  Template headers  form_id                form_size         (*)  aiff_id                comm_id                comm_size              num_channels      (*)  num_sample_frames (*)  sample_size            sample_rate       (*)  ssnd_id                ssnd_size         (*)  offset                 block_size             (*) updated when finalizing stream  Byte-swap samples, stereo or mono  ROCKBOX_LITTLE_ENDIAN  convert unsigned 32 bit value to 80-bit floating point number  sign always zero - bit 79  exponent is 0-31 (normalized: 30 - shift + 16383) - bits 64-78  mantissa is value left justified with most significant non-zero
       bit stored in bit 63 - bits 0-63  reset sample count  write template header  update template header  Called for stream error; get correct data size  'FORM' chunk  'COMM' chunk  'SSND' chunk  this is the codec entry point  this is called for each file to process  main encoding loop  First obtain output buffer; when available, get PCM data  this is called by recording system **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Antonius Hellmann
 * Copyright (C) 2006-2013 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 00h - 'FORM'                           04h - size of file - 8                 08h - 'AIFF'                           0Ch - 'COMM'                           10h - num_channels through sample_rate
                                             (18)                             14h - 1=M, 2=S, etc.                   16h - num samples for each channel     1ah - 1-32 bits per sample             1ch - IEEE 754 80-bit floating point   26h - "SSND"                           2ah - size of chunk from offset to
                                             end of pcm data                  2eh - data offset from end of header   32h - pcm data alignment               36h  Template headers  form_id                form_size         (*)  aiff_id                comm_id                comm_size              num_channels      (*)  num_sample_frames (*)  sample_size            sample_rate       (*)  ssnd_id                ssnd_size         (*)  offset                 block_size             (*) updated when finalizing stream  Byte-swap samples, stereo or mono  ROCKBOX_LITTLE_ENDIAN  convert unsigned 32 bit value to 80-bit floating point number  sign always zero - bit 79  exponent is 0-31 (normalized: 30 - shift + 16383) - bits 64-78  mantissa is value left justified with most significant non-zero
       bit stored in bit 63 - bits 0-63  reset sample count  write template header  update template header  Called for stream error; get correct data size  'FORM' chunk  'COMM' chunk  'SSND' chunk  this is the codec entry point  this is called for each file to process  main encoding loop  First obtain output buffer; when available, get PCM data  this is called by recording system **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2006 Antonius Hellmann
 * Copyright (C) 2006-2013 Michael Sevakis
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** 00h - 'FORM'                           04h - size of file - 8                 08h - 'AIFF'                           0Ch - 'COMM'                           10h - num_channels through sample_rate
                                             (18)                             14h - 1=M, 2=S, etc.                   16h - num samples for each channel     1ah - 1-32 bits per sample             1ch - IEEE 754 80-bit floating point   26h - "SSND"                           2ah - size of chunk from offset to
                                             end of pcm data                  2eh - data offset from end of header   32h - pcm data alignment               36h  Template headers  form_id                form_size         (*)  aiff_id                comm_id                comm_size              num_channels      (*)  num_sample_frames (*)  sample_size            sample_rate       (*)  ssnd_id                ssnd_size         (*)  offset                 block_size             (*) updated when finalizing stream  Byte-swap samples, stereo or mono  ROCKBOX_LITTLE_ENDIAN  convert unsigned 32 bit value to 80-bit floating point number  sign always zero - bit 79  exponent is 0-31 (normalized: 30 - shift + 16383) - bits 64-78  mantissa is value left justified with most significant non-zero
       bit stored in bit 63 - bits 0-63  reset sample count  write template header  update template header  Called for stream error; get correct data size  'FORM' chunk  'COMM' chunk  'SSND' chunk  this is the codec entry point  this is called for each file to process  main encoding loop  First obtain output buffer; when available, get PCM data  this is called by recording system 