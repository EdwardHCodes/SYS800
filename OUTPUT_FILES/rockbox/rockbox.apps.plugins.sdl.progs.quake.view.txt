
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 view.c -- player eye positioning

The view is allowed to move slightly from it's true position for bobbing,
but if it exceeds 8 pixels linear distance (spherical, not box), the list of
entities sent from the server may not include everything in the pvs, especially
when crossing a water boudnary.


===============
V_CalcRoll

Used by view and sv_user
===============
	if (cl.inwater)		value *= 6;
===============
V_CalcBob

===============
 bob is proportional to velocity in the xy plane (don't count Z, or jumping messes it up)Con_Printf ("speed: %5.1f\n", Length(cl.velocity));============================================================================= something else is keeping it from drifting
===============
V_DriftPitch

Moves the client pitch angle towards cl.idealpitch sent by the server.

If the user is adjusting pitch manually, either with lookup/lookdown,
mlook and mouse, or klook and keyboard, pitch drifting is constantly stopped.

Drifting is enabled when the center view key is hit, mlook is released and
lookspring is non 0, or when 
===============
 don't count small mouse motionCon_Printf ("move: %f (%f)\n", move, host_frametime);
============================================================================== 
 
						PALETTE FLASHES 
 
============================================================================== 
 palette is sent through this rgba 0.0 - 1.0 GLQUAKE
=================
V_CheckGamma
=================
 force a surface cache flush
===============
V_ParseDamage
===============
 but sbar face into pain frame calculate view angle kicks
==================
V_cshift_f
==================

==================
V_BonusFlash_f

When you run over an item, the server sends this command
==================

=============
V_SetContentsColor

Underwater, lava, etc each has a color shift
=============

=============
V_CalcPowerupCshift
=============

=============
V_CalcBlend
=============
		a2 = cl.cshifts[j].percent/255.0;Con_Printf ("j:%i a:%f\n", j, a);
=============
V_UpdatePalette
=============
 drop the damage value drop the bonus value !GLQUAKE drop the damage value drop the bonus value !GLQUAKE 
============================================================================== 
 
						VIEW RENDERING 
 
============================================================================== 

==================
CalcGunAngle
==================

==============
V_BoundOffsets
==============
 absolutely bound refresh reletive to entity clipping hull so the view can never be inside a solid wall
==============
V_AddIdle

Idle swaying
==============

==============
V_CalcViewRoll

Roll is induced by movement and damage
==============
 dead view angle
==================
V_CalcIntermissionRefdef

==================
 ent is the player model (visible when out of body) view is the weapon model (only visible from inside body) allways idle in intermission
==================
V_CalcRefdef

==================
 ent is the player model (visible when out of body) view is the weapon model (only visible from inside body) transform the view offset by the model's matrix to get the offset from model origin for the view the model should face the view dir the model should face the view dir refresh position never let it sit exactly on a node line, because a water plane can dissapear when viewed with the eye exactly on it. the server protocol only specifies to 1/16 pixel, so add 1/32 in each axis offsets because entity pitches are  actually backward set up gun position		view->origin[i] += right[i]*bob*0.4;		view->origin[i] += up[i]*bob*0.8; fudge position around to keep amount of weapon visible roughly equal with different FOV set up the refresh position smooth out stair step upsFIXME		I_Error ("steptime < 0");
==================
V_RenderView

The player's clipping box goes from (-16 -16 -24) to (16 16 32) from
the entity origin, so any view position inside that will be valid
==================
 don't allow cheats in multiplayer intermission / finale rendering && (sv.maxclients > 1 || key_dest == key_game)  render two interleaved views============================================================================
=============
V_Init
=============
 no gamma yet
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 view.c -- player eye positioning

The view is allowed to move slightly from it's true position for bobbing,
but if it exceeds 8 pixels linear distance (spherical, not box), the list of
entities sent from the server may not include everything in the pvs, especially
when crossing a water boudnary.


===============
V_CalcRoll

Used by view and sv_user
===============
	if (cl.inwater)		value *= 6;
===============
V_CalcBob

===============
 bob is proportional to velocity in the xy plane (don't count Z, or jumping messes it up)Con_Printf ("speed: %5.1f\n", Length(cl.velocity));============================================================================= something else is keeping it from drifting
===============
V_DriftPitch

Moves the client pitch angle towards cl.idealpitch sent by the server.

If the user is adjusting pitch manually, either with lookup/lookdown,
mlook and mouse, or klook and keyboard, pitch drifting is constantly stopped.

Drifting is enabled when the center view key is hit, mlook is released and
lookspring is non 0, or when 
===============
 don't count small mouse motionCon_Printf ("move: %f (%f)\n", move, host_frametime);
============================================================================== 
 
						PALETTE FLASHES 
 
============================================================================== 
 palette is sent through this rgba 0.0 - 1.0 GLQUAKE
=================
V_CheckGamma
=================
 force a surface cache flush
===============
V_ParseDamage
===============
 but sbar face into pain frame calculate view angle kicks
==================
V_cshift_f
==================

==================
V_BonusFlash_f

When you run over an item, the server sends this command
==================

=============
V_SetContentsColor

Underwater, lava, etc each has a color shift
=============

=============
V_CalcPowerupCshift
=============

=============
V_CalcBlend
=============
		a2 = cl.cshifts[j].percent/255.0;Con_Printf ("j:%i a:%f\n", j, a);
=============
V_UpdatePalette
=============
 drop the damage value drop the bonus value !GLQUAKE drop the damage value drop the bonus value !GLQUAKE 
============================================================================== 
 
						VIEW RENDERING 
 
============================================================================== 

==================
CalcGunAngle
==================

==============
V_BoundOffsets
==============
 absolutely bound refresh reletive to entity clipping hull so the view can never be inside a solid wall
==============
V_AddIdle

Idle swaying
==============

==============
V_CalcViewRoll

Roll is induced by movement and damage
==============
 dead view angle
==================
V_CalcIntermissionRefdef

==================
 ent is the player model (visible when out of body) view is the weapon model (only visible from inside body) allways idle in intermission
==================
V_CalcRefdef

==================
 ent is the player model (visible when out of body) view is the weapon model (only visible from inside body) transform the view offset by the model's matrix to get the offset from model origin for the view the model should face the view dir the model should face the view dir refresh position never let it sit exactly on a node line, because a water plane can dissapear when viewed with the eye exactly on it. the server protocol only specifies to 1/16 pixel, so add 1/32 in each axis offsets because entity pitches are  actually backward set up gun position		view->origin[i] += right[i]*bob*0.4;		view->origin[i] += up[i]*bob*0.8; fudge position around to keep amount of weapon visible roughly equal with different FOV set up the refresh position smooth out stair step upsFIXME		I_Error ("steptime < 0");
==================
V_RenderView

The player's clipping box goes from (-16 -16 -24) to (16 16 32) from
the entity origin, so any view position inside that will be valid
==================
 don't allow cheats in multiplayer intermission / finale rendering && (sv.maxclients > 1 || key_dest == key_game)  render two interleaved views============================================================================
=============
V_Init
=============
 no gamma yet
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 view.c -- player eye positioning

The view is allowed to move slightly from it's true position for bobbing,
but if it exceeds 8 pixels linear distance (spherical, not box), the list of
entities sent from the server may not include everything in the pvs, especially
when crossing a water boudnary.


===============
V_CalcRoll

Used by view and sv_user
===============
	if (cl.inwater)		value *= 6;
===============
V_CalcBob

===============
 bob is proportional to velocity in the xy plane (don't count Z, or jumping messes it up)Con_Printf ("speed: %5.1f\n", Length(cl.velocity));============================================================================= something else is keeping it from drifting
===============
V_DriftPitch

Moves the client pitch angle towards cl.idealpitch sent by the server.

If the user is adjusting pitch manually, either with lookup/lookdown,
mlook and mouse, or klook and keyboard, pitch drifting is constantly stopped.

Drifting is enabled when the center view key is hit, mlook is released and
lookspring is non 0, or when 
===============
 don't count small mouse motionCon_Printf ("move: %f (%f)\n", move, host_frametime);
============================================================================== 
 
						PALETTE FLASHES 
 
============================================================================== 
 palette is sent through this rgba 0.0 - 1.0 GLQUAKE
=================
V_CheckGamma
=================
 force a surface cache flush
===============
V_ParseDamage
===============
 but sbar face into pain frame calculate view angle kicks
==================
V_cshift_f
==================

==================
V_BonusFlash_f

When you run over an item, the server sends this command
==================

=============
V_SetContentsColor

Underwater, lava, etc each has a color shift
=============

=============
V_CalcPowerupCshift
=============

=============
V_CalcBlend
=============
		a2 = cl.cshifts[j].percent/255.0;Con_Printf ("j:%i a:%f\n", j, a);
=============
V_UpdatePalette
=============
 drop the damage value drop the bonus value !GLQUAKE drop the damage value drop the bonus value !GLQUAKE 
============================================================================== 
 
						VIEW RENDERING 
 
============================================================================== 

==================
CalcGunAngle
==================

==============
V_BoundOffsets
==============
 absolutely bound refresh reletive to entity clipping hull so the view can never be inside a solid wall
==============
V_AddIdle

Idle swaying
==============

==============
V_CalcViewRoll

Roll is induced by movement and damage
==============
 dead view angle
==================
V_CalcIntermissionRefdef

==================
 ent is the player model (visible when out of body) view is the weapon model (only visible from inside body) allways idle in intermission
==================
V_CalcRefdef

==================
 ent is the player model (visible when out of body) view is the weapon model (only visible from inside body) transform the view offset by the model's matrix to get the offset from model origin for the view the model should face the view dir the model should face the view dir refresh position never let it sit exactly on a node line, because a water plane can dissapear when viewed with the eye exactly on it. the server protocol only specifies to 1/16 pixel, so add 1/32 in each axis offsets because entity pitches are  actually backward set up gun position		view->origin[i] += right[i]*bob*0.4;		view->origin[i] += up[i]*bob*0.8; fudge position around to keep amount of weapon visible roughly equal with different FOV set up the refresh position smooth out stair step upsFIXME		I_Error ("steptime < 0");
==================
V_RenderView

The player's clipping box goes from (-16 -16 -24) to (16 16 32) from
the entity origin, so any view position inside that will be valid
==================
 don't allow cheats in multiplayer intermission / finale rendering && (sv.maxclients > 1 || key_dest == key_game)  render two interleaved views============================================================================
=============
V_Init
=============
 no gamma yet