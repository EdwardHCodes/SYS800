**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002-2007 Björn Stenberg
 * Copyright (C) 2007-2008 Nicolas Pennequin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Image stuff  update a skinned screen, update_type is WPS_REFRESH_* values.
 * Usually it should only be WPS_REFRESH_NON_STATIC
 * A full update will be done if required (skin_do_full_update() == true)
  This maybe shouldnt be here, 
     * This is also safe for skined screen which dont use the id3  draw lines in decreasing size until a height of zero is reached  if both markers are set, determine if they're far enough apart
    to draw arrows  center the pb in the line, but only if the line is higher than the pb  if Y was not set calculate by font height,Y is -line_number-1  we want to fill upwards which is technically inverted.  clear the slider  account for the sliders width in the progressbar  disable for now CONFIG_TUNER  clears the area where the image was shown  now draw the AA  Evaluate the conditional that is at *token_index and return whether a skip
   has ocurred. *token_index is updated with the new position.
 get_token_value needs to know the number of options in the enum  intval is now the number of the enum option we want to read,
       starting from 1. If intval is -1, we check if value is empty.  so %?AA<true>  returned as 0 for true, -1 for false  Display a line appropriately according to its alignment format.
   format_align contains the text, separated between left, center and right.
   line is the index of the line on the screen.
   scroll indicates whether the line is a scrolling one or not.
 calculate different string sizes and positions  Checks for overlapping strings.
        If needed the overlapping strings will be merged, separated by a
        space  CASE 1: left and centered string overlap  there is a left string, need to merge left and center  replace the former separator '\0' of left and
            center string with a space  calculate the new width and position of the merged string  there is no centered string anymore  there is no left string, move center to left  move the center string to the left string  calculate the new width and position of the string  there is no centered string anymore  CASE 2: centered and right string overlap  there is a right string, need to merge center and right  replace the former separator '\0' of center and
            right string with a space  move the center string to the right after merge  calculate the new width and position of the merged string  there is no centered string anymore  there is no right string, move center to right  move the center string to the right string  calculate the new width and position of the string  there is no centered string anymore  CASE 3: left and right overlap
        There is no center string anymore, either there never
        was one or it has been merged in case 1 or 2  there is a left string, need to merge left and right  replace the former separator '\0' of left and
            right string with a space  calculate the new width and position of the string  there is no right string anymore  there is no left string, move right to left  move the right string to the left string  calculate the new width and position of the string  there is no right string anymore  strings can be as large as MAX_LINE which exceeds put_lines()
         * limit for inline strings. Use $t to avoid truncation  clear the line first  Nasty hack: we output an empty scrolling string,
        which will reset the scroller for that line  print aligned strings. print whole line at once so that %Vs works
         * across the full viewport width  The user might decide to have the peak meter in the last
            line so that it is only displayed if no status bar is
            visible. If so we neither want do draw nor enable the
            peak meter.  do the button loop as often as required for the peak meters to update
 * with a good refresh rate. 
  when the peak meter is enabled we want to have a
        few extra updates to make it look smooth. On the
        other hand we don't want to waste energy if it
        isn't displayed  Sleep until end of current tick.  The peak meter is disabled
       -> no additional screen updates needed **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002-2007 Björn Stenberg
 * Copyright (C) 2007-2008 Nicolas Pennequin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Image stuff  update a skinned screen, update_type is WPS_REFRESH_* values.
 * Usually it should only be WPS_REFRESH_NON_STATIC
 * A full update will be done if required (skin_do_full_update() == true)
  This maybe shouldnt be here, 
     * This is also safe for skined screen which dont use the id3  draw lines in decreasing size until a height of zero is reached  if both markers are set, determine if they're far enough apart
    to draw arrows  center the pb in the line, but only if the line is higher than the pb  if Y was not set calculate by font height,Y is -line_number-1  we want to fill upwards which is technically inverted.  clear the slider  account for the sliders width in the progressbar  disable for now CONFIG_TUNER  clears the area where the image was shown  now draw the AA  Evaluate the conditional that is at *token_index and return whether a skip
   has ocurred. *token_index is updated with the new position.
 get_token_value needs to know the number of options in the enum  intval is now the number of the enum option we want to read,
       starting from 1. If intval is -1, we check if value is empty.  so %?AA<true>  returned as 0 for true, -1 for false  Display a line appropriately according to its alignment format.
   format_align contains the text, separated between left, center and right.
   line is the index of the line on the screen.
   scroll indicates whether the line is a scrolling one or not.
 calculate different string sizes and positions  Checks for overlapping strings.
        If needed the overlapping strings will be merged, separated by a
        space  CASE 1: left and centered string overlap  there is a left string, need to merge left and center  replace the former separator '\0' of left and
            center string with a space  calculate the new width and position of the merged string  there is no centered string anymore  there is no left string, move center to left  move the center string to the left string  calculate the new width and position of the string  there is no centered string anymore  CASE 2: centered and right string overlap  there is a right string, need to merge center and right  replace the former separator '\0' of center and
            right string with a space  move the center string to the right after merge  calculate the new width and position of the merged string  there is no centered string anymore  there is no right string, move center to right  move the center string to the right string  calculate the new width and position of the string  there is no centered string anymore  CASE 3: left and right overlap
        There is no center string anymore, either there never
        was one or it has been merged in case 1 or 2  there is a left string, need to merge left and right  replace the former separator '\0' of left and
            right string with a space  calculate the new width and position of the string  there is no right string anymore  there is no left string, move right to left  move the right string to the left string  calculate the new width and position of the string  there is no right string anymore  strings can be as large as MAX_LINE which exceeds put_lines()
         * limit for inline strings. Use $t to avoid truncation  clear the line first  Nasty hack: we output an empty scrolling string,
        which will reset the scroller for that line  print aligned strings. print whole line at once so that %Vs works
         * across the full viewport width  The user might decide to have the peak meter in the last
            line so that it is only displayed if no status bar is
            visible. If so we neither want do draw nor enable the
            peak meter.  do the button loop as often as required for the peak meters to update
 * with a good refresh rate. 
  when the peak meter is enabled we want to have a
        few extra updates to make it look smooth. On the
        other hand we don't want to waste energy if it
        isn't displayed  Sleep until end of current tick.  The peak meter is disabled
       -> no additional screen updates needed **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002-2007 Björn Stenberg
 * Copyright (C) 2007-2008 Nicolas Pennequin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Image stuff  update a skinned screen, update_type is WPS_REFRESH_* values.
 * Usually it should only be WPS_REFRESH_NON_STATIC
 * A full update will be done if required (skin_do_full_update() == true)
  This maybe shouldnt be here, 
     * This is also safe for skined screen which dont use the id3  draw lines in decreasing size until a height of zero is reached  if both markers are set, determine if they're far enough apart
    to draw arrows  center the pb in the line, but only if the line is higher than the pb  if Y was not set calculate by font height,Y is -line_number-1  we want to fill upwards which is technically inverted.  clear the slider  account for the sliders width in the progressbar  disable for now CONFIG_TUNER  clears the area where the image was shown  now draw the AA  Evaluate the conditional that is at *token_index and return whether a skip
   has ocurred. *token_index is updated with the new position.
 get_token_value needs to know the number of options in the enum  intval is now the number of the enum option we want to read,
       starting from 1. If intval is -1, we check if value is empty.  so %?AA<true>  returned as 0 for true, -1 for false  Display a line appropriately according to its alignment format.
   format_align contains the text, separated between left, center and right.
   line is the index of the line on the screen.
   scroll indicates whether the line is a scrolling one or not.
 calculate different string sizes and positions  Checks for overlapping strings.
        If needed the overlapping strings will be merged, separated by a
        space  CASE 1: left and centered string overlap  there is a left string, need to merge left and center  replace the former separator '\0' of left and
            center string with a space  calculate the new width and position of the merged string  there is no centered string anymore  there is no left string, move center to left  move the center string to the left string  calculate the new width and position of the string  there is no centered string anymore  CASE 2: centered and right string overlap  there is a right string, need to merge center and right  replace the former separator '\0' of center and
            right string with a space  move the center string to the right after merge  calculate the new width and position of the merged string  there is no centered string anymore  there is no right string, move center to right  move the center string to the right string  calculate the new width and position of the string  there is no centered string anymore  CASE 3: left and right overlap
        There is no center string anymore, either there never
        was one or it has been merged in case 1 or 2  there is a left string, need to merge left and right  replace the former separator '\0' of left and
            right string with a space  calculate the new width and position of the string  there is no right string anymore  there is no left string, move right to left  move the right string to the left string  calculate the new width and position of the string  there is no right string anymore  strings can be as large as MAX_LINE which exceeds put_lines()
         * limit for inline strings. Use $t to avoid truncation  clear the line first  Nasty hack: we output an empty scrolling string,
        which will reset the scroller for that line  print aligned strings. print whole line at once so that %Vs works
         * across the full viewport width  The user might decide to have the peak meter in the last
            line so that it is only displayed if no status bar is
            visible. If so we neither want do draw nor enable the
            peak meter.  do the button loop as often as required for the peak meters to update
 * with a good refresh rate. 
  when the peak meter is enabled we want to have a
        few extra updates to make it look smooth. On the
        other hand we don't want to waste energy if it
        isn't displayed  Sleep until end of current tick.  The peak meter is disabled
       -> no additional screen updates needed 