
 * malloc.c: safe wrappers around malloc, realloc, free, strdup
 
 * smalloc should guarantee to return a useful pointer - Halibut
 * can do nothing except die when it's out of memory anyway.
  We don't load as an overlay anymore, so the audiobuf should always
 * be available.  Try aligning if tlsf crashes in add_new_area().  This is
     * disabled now since things seem to work without it.  I'm sorry. LOGF("allocs: %d", ++allocs);
 * sfree should guaranteeably deal gracefully with freeing NULL
 LOGF("frees: %d, total outstanding: %d", frees, allocs - frees);
 * srealloc should guaranteeably be able to realloc NULL
 LOGF("allocs: %d", ++allocs);
 * dupstr is like strdup, but with the never-return-NULL property
 * of smalloc (and also reliably defined in all environments :-)
 
 * malloc.c: safe wrappers around malloc, realloc, free, strdup
 
 * smalloc should guarantee to return a useful pointer - Halibut
 * can do nothing except die when it's out of memory anyway.
  We don't load as an overlay anymore, so the audiobuf should always
 * be available.  Try aligning if tlsf crashes in add_new_area().  This is
     * disabled now since things seem to work without it.  I'm sorry. LOGF("allocs: %d", ++allocs);
 * sfree should guaranteeably deal gracefully with freeing NULL
 LOGF("frees: %d, total outstanding: %d", frees, allocs - frees);
 * srealloc should guaranteeably be able to realloc NULL
 LOGF("allocs: %d", ++allocs);
 * dupstr is like strdup, but with the never-return-NULL property
 * of smalloc (and also reliably defined in all environments :-)
 
 * malloc.c: safe wrappers around malloc, realloc, free, strdup
 
 * smalloc should guarantee to return a useful pointer - Halibut
 * can do nothing except die when it's out of memory anyway.
  We don't load as an overlay anymore, so the audiobuf should always
 * be available.  Try aligning if tlsf crashes in add_new_area().  This is
     * disabled now since things seem to work without it.  I'm sorry. LOGF("allocs: %d", ++allocs);
 * sfree should guaranteeably deal gracefully with freeing NULL
 LOGF("frees: %d, total outstanding: %d", frees, allocs - frees);
 * srealloc should guaranteeably be able to realloc NULL
 LOGF("allocs: %d", ++allocs);
 * dupstr is like strdup, but with the never-return-NULL property
 * of smalloc (and also reliably defined in all environments :-)
 