 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      BSP traversal, handling of LineSegs for rendering.
 *
 *----------------------------------------------------------------------------- cph - sanity checking killough 4/7/98: indicates doors closed wrt automap bugfix: cph - replaced by linedef rendering flags - int      doorclosed; killough: New code which removes 2s linedef limit drawseg_t drawsegs[MAXDRAWSEGS];       // old code -- killough R_ClearDrawSegs CPhipps - Instead of clipsegs, let's try using an array with one entry for each column, indicating whether it's blocked by a solid wall yet or not. CPhipps - R_ClipWallSegment Replaces the old R_Clip*WallSegment functions. It draws bits of walls in those columns which aren't solid, and updates the solidcol[] array appropriately All solid R_ClearClipSegs killough 1/18/98 -- This function is used to fix the automap bug which showed lines behind closed doors simply because the door had a dropoff. cph - converted to R_RecalcLineFlags. This recalculates all the flags for a line, including closure and texture tiling. First decide if the line is closed, normal, or invisible  if door is closed because back is shut: preserve a kind of transparent door/lift special effect: properly render skies (consider door "open" if both ceilings are sky): Reject empty lines used for triggers  and special events. Identical floor and ceiling on both sides, identical light levels on both sides, and no middle texture. CPhipps - recode for speed, not certain if this is portable though cph - I'm too lazy to try and work with offsets in this  Now decide on texture tiling  Does top texture need tiling  Does bottom texture need tiling  Does middle texture need tiling  killough 3/7/98: Hack floor/ceiling heights for deep water etc. If player's view height is underneath fake floor, lower the drawn ceiling to be just under the floor height, and replace the drawn floor and ceiling textures, and light level, with the control sector's. Similar for ceiling, only reflected. killough 4/11/98, 4/13/98: fix bugs, add 'back' parameter killough 4/11/98 Replace sector being drawn, with a copy to be hacked Replace floor and ceiling height with other sector's heights. killough 11/98: prevent sudden light changes from non-water sectors: head-below-floor hack killough 3/16/98 killough 4/11/98 Above-ceiling hack killough 3/16/98 killough 4/11/98 Use other sector R_AddLine Clips the given segment and adds any visible pieces to the line list. killough 3/8/98: ceiling/water hack  boolean solid = true; Clip to view edges. Back side, i.e. backface culling Global angle needed by segcalc. Totally off the left edge? Totally off the left edge? The seg is in the view range, but not necessarily visible. killough 1/31/98: Here is where "slime trails" can SOMETIMES occur: Does not cross a pixel? killough 1/31/98 -- change == to >= for robustness Single sided line? killough 3/8/98, 4/4/98: hack for invisible ceilings / deep water cph - roll up linedef properties in flags  R_CheckBBox Checks BSP node/subtree bounding box. Returns true  if some part of the bbox might be visible. killough -- static const killough 1/28/98: static // CPhipps - const parameter, reformatted Find the corners of the box that define the edges from current viewpoint. cph - replaced old code, which was unclear and badly commented Much more efficient code now it's "behind" us  Either angle1 or angle2 is behind us, so it doesn't matter if we
       * change it to the corect sign
        which is ANG180-1  Both off left edge Both off right edge Clip at left edge Clip at right edge Find the first clippost  that touches the source post  (adjacent pixels are touching).    const cliprange_t *start; Does not cross a pixel. All columns it covers are already solidly covered R_Subsector Determine floor/ceiling planes. Add sprites of things in sector. Draw one or more line segments. killough 1/31/98 -- made static, polished Had to move this out of the function - causes stack overflows in RockBox killough 3/7/98: deep water hack killough 3/16/98: set floor lightlevel killough 4/11/98   sscount++; killough 3/8/98, 4/4/98: Deep water / fake ceiling effect killough 4/11/98 killough 3/7/98: Add (x,y) offsets to flats, add deep water check killough 3/16/98: add floorlightlevel killough 10/98: add support for skies transferred from sidedefs killough 3/7/98 kilough 10/98 killough 3/16/98 killough 3/7/98 killough 3/8/98 kilough 10/98 killough 4/11/98 killough 3/7/98 killough 9/18/98: Fix underwater slowdown, by passing real sector instead of fake one. Improve sprite lighting by basing sprite lightlevels on floor & ceiling lightlevels in the surrounding area. 10/98 killough: NOTE: TeamTNT fixed this bug incorrectly, messing up sprite lighting!!! That is part of the 242 effect!!!  If you simply pass sub->sector to the old code you will not get correct lighting for underwater sprites!!! Either you must pass the fake sector and handle validcount here, on the real sector, or you must account for the lighting in some other way, like passing it as an argument. RenderBSPNode Renders all subsectors below a given node,  traversing subtree recursively. Just call with BSP root. killough 5/2/98: reformatted, removed tail recursion Found a subsector? Decide which side the view point is on. Recursively divide front space. Possibly divide back space. Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      BSP traversal, handling of LineSegs for rendering.
 *
 *----------------------------------------------------------------------------- cph - sanity checking killough 4/7/98: indicates doors closed wrt automap bugfix: cph - replaced by linedef rendering flags - int      doorclosed; killough: New code which removes 2s linedef limit drawseg_t drawsegs[MAXDRAWSEGS];       // old code -- killough R_ClearDrawSegs CPhipps - Instead of clipsegs, let's try using an array with one entry for each column, indicating whether it's blocked by a solid wall yet or not. CPhipps - R_ClipWallSegment Replaces the old R_Clip*WallSegment functions. It draws bits of walls in those columns which aren't solid, and updates the solidcol[] array appropriately All solid R_ClearClipSegs killough 1/18/98 -- This function is used to fix the automap bug which showed lines behind closed doors simply because the door had a dropoff. cph - converted to R_RecalcLineFlags. This recalculates all the flags for a line, including closure and texture tiling. First decide if the line is closed, normal, or invisible  if door is closed because back is shut: preserve a kind of transparent door/lift special effect: properly render skies (consider door "open" if both ceilings are sky): Reject empty lines used for triggers  and special events. Identical floor and ceiling on both sides, identical light levels on both sides, and no middle texture. CPhipps - recode for speed, not certain if this is portable though cph - I'm too lazy to try and work with offsets in this  Now decide on texture tiling  Does top texture need tiling  Does bottom texture need tiling  Does middle texture need tiling  killough 3/7/98: Hack floor/ceiling heights for deep water etc. If player's view height is underneath fake floor, lower the drawn ceiling to be just under the floor height, and replace the drawn floor and ceiling textures, and light level, with the control sector's. Similar for ceiling, only reflected. killough 4/11/98, 4/13/98: fix bugs, add 'back' parameter killough 4/11/98 Replace sector being drawn, with a copy to be hacked Replace floor and ceiling height with other sector's heights. killough 11/98: prevent sudden light changes from non-water sectors: head-below-floor hack killough 3/16/98 killough 4/11/98 Above-ceiling hack killough 3/16/98 killough 4/11/98 Use other sector R_AddLine Clips the given segment and adds any visible pieces to the line list. killough 3/8/98: ceiling/water hack  boolean solid = true; Clip to view edges. Back side, i.e. backface culling Global angle needed by segcalc. Totally off the left edge? Totally off the left edge? The seg is in the view range, but not necessarily visible. killough 1/31/98: Here is where "slime trails" can SOMETIMES occur: Does not cross a pixel? killough 1/31/98 -- change == to >= for robustness Single sided line? killough 3/8/98, 4/4/98: hack for invisible ceilings / deep water cph - roll up linedef properties in flags  R_CheckBBox Checks BSP node/subtree bounding box. Returns true  if some part of the bbox might be visible. killough -- static const killough 1/28/98: static // CPhipps - const parameter, reformatted Find the corners of the box that define the edges from current viewpoint. cph - replaced old code, which was unclear and badly commented Much more efficient code now it's "behind" us  Either angle1 or angle2 is behind us, so it doesn't matter if we
       * change it to the corect sign
        which is ANG180-1  Both off left edge Both off right edge Clip at left edge Clip at right edge Find the first clippost  that touches the source post  (adjacent pixels are touching).    const cliprange_t *start; Does not cross a pixel. All columns it covers are already solidly covered R_Subsector Determine floor/ceiling planes. Add sprites of things in sector. Draw one or more line segments. killough 1/31/98 -- made static, polished Had to move this out of the function - causes stack overflows in RockBox killough 3/7/98: deep water hack killough 3/16/98: set floor lightlevel killough 4/11/98   sscount++; killough 3/8/98, 4/4/98: Deep water / fake ceiling effect killough 4/11/98 killough 3/7/98: Add (x,y) offsets to flats, add deep water check killough 3/16/98: add floorlightlevel killough 10/98: add support for skies transferred from sidedefs killough 3/7/98 kilough 10/98 killough 3/16/98 killough 3/7/98 killough 3/8/98 kilough 10/98 killough 4/11/98 killough 3/7/98 killough 9/18/98: Fix underwater slowdown, by passing real sector instead of fake one. Improve sprite lighting by basing sprite lightlevels on floor & ceiling lightlevels in the surrounding area. 10/98 killough: NOTE: TeamTNT fixed this bug incorrectly, messing up sprite lighting!!! That is part of the 242 effect!!!  If you simply pass sub->sector to the old code you will not get correct lighting for underwater sprites!!! Either you must pass the fake sector and handle validcount here, on the real sector, or you must account for the lighting in some other way, like passing it as an argument. RenderBSPNode Renders all subsectors below a given node,  traversing subtree recursively. Just call with BSP root. killough 5/2/98: reformatted, removed tail recursion Found a subsector? Decide which side the view point is on. Recursively divide front space. Possibly divide back space. Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *      BSP traversal, handling of LineSegs for rendering.
 *
 *----------------------------------------------------------------------------- cph - sanity checking killough 4/7/98: indicates doors closed wrt automap bugfix: cph - replaced by linedef rendering flags - int      doorclosed; killough: New code which removes 2s linedef limit drawseg_t drawsegs[MAXDRAWSEGS];       // old code -- killough R_ClearDrawSegs CPhipps - Instead of clipsegs, let's try using an array with one entry for each column, indicating whether it's blocked by a solid wall yet or not. CPhipps - R_ClipWallSegment Replaces the old R_Clip*WallSegment functions. It draws bits of walls in those columns which aren't solid, and updates the solidcol[] array appropriately All solid R_ClearClipSegs killough 1/18/98 -- This function is used to fix the automap bug which showed lines behind closed doors simply because the door had a dropoff. cph - converted to R_RecalcLineFlags. This recalculates all the flags for a line, including closure and texture tiling. First decide if the line is closed, normal, or invisible  if door is closed because back is shut: preserve a kind of transparent door/lift special effect: properly render skies (consider door "open" if both ceilings are sky): Reject empty lines used for triggers  and special events. Identical floor and ceiling on both sides, identical light levels on both sides, and no middle texture. CPhipps - recode for speed, not certain if this is portable though cph - I'm too lazy to try and work with offsets in this  Now decide on texture tiling  Does top texture need tiling  Does bottom texture need tiling  Does middle texture need tiling  killough 3/7/98: Hack floor/ceiling heights for deep water etc. If player's view height is underneath fake floor, lower the drawn ceiling to be just under the floor height, and replace the drawn floor and ceiling textures, and light level, with the control sector's. Similar for ceiling, only reflected. killough 4/11/98, 4/13/98: fix bugs, add 'back' parameter killough 4/11/98 Replace sector being drawn, with a copy to be hacked Replace floor and ceiling height with other sector's heights. killough 11/98: prevent sudden light changes from non-water sectors: head-below-floor hack killough 3/16/98 killough 4/11/98 Above-ceiling hack killough 3/16/98 killough 4/11/98 Use other sector R_AddLine Clips the given segment and adds any visible pieces to the line list. killough 3/8/98: ceiling/water hack  boolean solid = true; Clip to view edges. Back side, i.e. backface culling Global angle needed by segcalc. Totally off the left edge? Totally off the left edge? The seg is in the view range, but not necessarily visible. killough 1/31/98: Here is where "slime trails" can SOMETIMES occur: Does not cross a pixel? killough 1/31/98 -- change == to >= for robustness Single sided line? killough 3/8/98, 4/4/98: hack for invisible ceilings / deep water cph - roll up linedef properties in flags  R_CheckBBox Checks BSP node/subtree bounding box. Returns true  if some part of the bbox might be visible. killough -- static const killough 1/28/98: static // CPhipps - const parameter, reformatted Find the corners of the box that define the edges from current viewpoint. cph - replaced old code, which was unclear and badly commented Much more efficient code now it's "behind" us  Either angle1 or angle2 is behind us, so it doesn't matter if we
       * change it to the corect sign
        which is ANG180-1  Both off left edge Both off right edge Clip at left edge Clip at right edge Find the first clippost  that touches the source post  (adjacent pixels are touching).    const cliprange_t *start; Does not cross a pixel. All columns it covers are already solidly covered R_Subsector Determine floor/ceiling planes. Add sprites of things in sector. Draw one or more line segments. killough 1/31/98 -- made static, polished Had to move this out of the function - causes stack overflows in RockBox killough 3/7/98: deep water hack killough 3/16/98: set floor lightlevel killough 4/11/98   sscount++; killough 3/8/98, 4/4/98: Deep water / fake ceiling effect killough 4/11/98 killough 3/7/98: Add (x,y) offsets to flats, add deep water check killough 3/16/98: add floorlightlevel killough 10/98: add support for skies transferred from sidedefs killough 3/7/98 kilough 10/98 killough 3/16/98 killough 3/7/98 killough 3/8/98 kilough 10/98 killough 4/11/98 killough 3/7/98 killough 9/18/98: Fix underwater slowdown, by passing real sector instead of fake one. Improve sprite lighting by basing sprite lightlevels on floor & ceiling lightlevels in the surrounding area. 10/98 killough: NOTE: TeamTNT fixed this bug incorrectly, messing up sprite lighting!!! That is part of the 242 effect!!!  If you simply pass sub->sector to the old code you will not get correct lighting for underwater sprites!!! Either you must pass the fake sector and handle validcount here, on the real sector, or you must account for the lighting in some other way, like passing it as an argument. RenderBSPNode Renders all subsectors below a given node,  traversing subtree recursively. Just call with BSP root. killough 5/2/98: reformatted, removed tail recursion Found a subsector? Decide which side the view point is on. Recursively divide front space. Possibly divide back space.