
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Dummy SDL video driver implementation; this is just enough to make an
 *  SDL-based application THINK it's got a working video driver, for
 *  applications that call SDL_Init(SDL_INIT_VIDEO) when they don't need it,
 *  and also for use as a collection of stubs when porting SDL to a new
 *  platform for which you haven't yet written a valid video driver.
 *
 * This is also a great way to determine bottlenecks: if you think that SDL
 *  is a performance problem for a given platform, enable this driver, and
 *  then see if your application runs faster without video overhead.
 *
 * Initial work by Ryan C. Gordon (icculus@icculus.org). A good portion
 *  of this was cut-and-pasted from Stephane Peter's work in the AAlib
 *  SDL video driver.  Renamed to "DUMMY" by Sam Lantinga.
  Initialization/Query functions  Hardware surface functions  etc.  DUMMY driver bootstrap functions  Initialize all variables that we clean on shutdown  Set the function pointers 
	fprintf(stderr, "WARNING: You are using the SDL dummy video driver!\n");
	 Determine the screen depth (use default 8-bit depth)  we change this during the SDL_SetVideoMode implementation...  We're done!  	printf("Setting mode %dx%d\n", width, height);  Allocate the new pixel format for the screen  Set up the new mode framebuffer  We're done  We don't actually allow hardware surfaces other than the main one  We need to wait for vertical retrace on page flipped displays  do nothing.  do nothing of note.  Note:  If we are terminated, this could be called in the middle of
   another SDL video routine -- notably UpdateRects.

    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Dummy SDL video driver implementation; this is just enough to make an
 *  SDL-based application THINK it's got a working video driver, for
 *  applications that call SDL_Init(SDL_INIT_VIDEO) when they don't need it,
 *  and also for use as a collection of stubs when porting SDL to a new
 *  platform for which you haven't yet written a valid video driver.
 *
 * This is also a great way to determine bottlenecks: if you think that SDL
 *  is a performance problem for a given platform, enable this driver, and
 *  then see if your application runs faster without video overhead.
 *
 * Initial work by Ryan C. Gordon (icculus@icculus.org). A good portion
 *  of this was cut-and-pasted from Stephane Peter's work in the AAlib
 *  SDL video driver.  Renamed to "DUMMY" by Sam Lantinga.
  Initialization/Query functions  Hardware surface functions  etc.  DUMMY driver bootstrap functions  Initialize all variables that we clean on shutdown  Set the function pointers 
	fprintf(stderr, "WARNING: You are using the SDL dummy video driver!\n");
	 Determine the screen depth (use default 8-bit depth)  we change this during the SDL_SetVideoMode implementation...  We're done!  	printf("Setting mode %dx%d\n", width, height);  Allocate the new pixel format for the screen  Set up the new mode framebuffer  We're done  We don't actually allow hardware surfaces other than the main one  We need to wait for vertical retrace on page flipped displays  do nothing.  do nothing of note.  Note:  If we are terminated, this could be called in the middle of
   another SDL video routine -- notably UpdateRects.

    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 Dummy SDL video driver implementation; this is just enough to make an
 *  SDL-based application THINK it's got a working video driver, for
 *  applications that call SDL_Init(SDL_INIT_VIDEO) when they don't need it,
 *  and also for use as a collection of stubs when porting SDL to a new
 *  platform for which you haven't yet written a valid video driver.
 *
 * This is also a great way to determine bottlenecks: if you think that SDL
 *  is a performance problem for a given platform, enable this driver, and
 *  then see if your application runs faster without video overhead.
 *
 * Initial work by Ryan C. Gordon (icculus@icculus.org). A good portion
 *  of this was cut-and-pasted from Stephane Peter's work in the AAlib
 *  SDL video driver.  Renamed to "DUMMY" by Sam Lantinga.
  Initialization/Query functions  Hardware surface functions  etc.  DUMMY driver bootstrap functions  Initialize all variables that we clean on shutdown  Set the function pointers 
	fprintf(stderr, "WARNING: You are using the SDL dummy video driver!\n");
	 Determine the screen depth (use default 8-bit depth)  we change this during the SDL_SetVideoMode implementation...  We're done!  	printf("Setting mode %dx%d\n", width, height);  Allocate the new pixel format for the screen  Set up the new mode framebuffer  We're done  We don't actually allow hardware surfaces other than the main one  We need to wait for vertical retrace on page flipped displays  do nothing.  do nothing of note.  Note:  If we are terminated, this could be called in the middle of
   another SDL video routine -- notably UpdateRects.
