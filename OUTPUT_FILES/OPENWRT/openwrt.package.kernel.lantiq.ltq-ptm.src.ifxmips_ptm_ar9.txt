*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_ar9.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 * ####################################
 *              Head File
 * ####################################
 
 *  Common Head File
 
 *  Chip Specific Head File
 
 * ####################################
 *              Definition
 * ####################################
 
 *  EMA Settings
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Hardware Init/Uninit Functions
 
 * ####################################
 *            Local Variable
 * ####################################
 
 * ####################################
 *            Local Function
 * ####################################
   reset PPE    ifx_rcu_rst(IFX_RCU_DOMAIN_PPE, IFX_RCU_MODULE_PTM);  Configure share buffer master selection  EMA Settings
     *  0. Backup port2 value to temp
     *  1. Disable CPU port2 in switch (link and learning)
     *  2. wait for a while
     *  3. Configure DM register and counter
     *  4. restore temp to CPU port2 in switch
     *  This code will cause network to stop working if there are heavy
     *  traffic during bootup. This part should be moved to switch and use
     *  the same code as ATM
     
         * For dynamic, must reset these counters,
         * For once initialization, don't need to reset these counters
         
 *  Description:
 *    Download PPE firmware binary code.
 *  Input:
 *    src       --- u32 *, binary code buffer
 *    dword_len --- unsigned int, binary code length in DWORD (32-bit)
 *  Output:
 *    int       --- 0:    Success
 *                  else:           Error Code
   copy code     copy data   
 * ####################################
 *           Global Function
 * ####################################
 
 *  Description:
 *    Initialize and start up PP32.
 *  Input:
 *    none
 *  Output:
 *    int  --- 0: Success
 *             else:        Error Code
   download firmware     run PP32      idle for a while to let PP32 init itself    
 *  Description:
 *    Halt PP32.
 *  Input:
 *    none
 *  Output:
 *    none
   halt PP32   *****************************************************************************
**
** FILE NAME    : ifxmips_ptm_ar9.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 * ####################################
 *              Head File
 * ####################################
 
 *  Common Head File
 
 *  Chip Specific Head File
 
 * ####################################
 *              Definition
 * ####################################
 
 *  EMA Settings
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Hardware Init/Uninit Functions
 
 * ####################################
 *            Local Variable
 * ####################################
 
 * ####################################
 *            Local Function
 * ####################################
   reset PPE    ifx_rcu_rst(IFX_RCU_DOMAIN_PPE, IFX_RCU_MODULE_PTM);  Configure share buffer master selection  EMA Settings
     *  0. Backup port2 value to temp
     *  1. Disable CPU port2 in switch (link and learning)
     *  2. wait for a while
     *  3. Configure DM register and counter
     *  4. restore temp to CPU port2 in switch
     *  This code will cause network to stop working if there are heavy
     *  traffic during bootup. This part should be moved to switch and use
     *  the same code as ATM
     
         * For dynamic, must reset these counters,
         * For once initialization, don't need to reset these counters
         
 *  Description:
 *    Download PPE firmware binary code.
 *  Input:
 *    src       --- u32 *, binary code buffer
 *    dword_len --- unsigned int, binary code length in DWORD (32-bit)
 *  Output:
 *    int       --- 0:    Success
 *                  else:           Error Code
   copy code     copy data   
 * ####################################
 *           Global Function
 * ####################################
 
 *  Description:
 *    Initialize and start up PP32.
 *  Input:
 *    none
 *  Output:
 *    int  --- 0: Success
 *             else:        Error Code
   download firmware     run PP32      idle for a while to let PP32 init itself    
 *  Description:
 *    Halt PP32.
 *  Input:
 *    none
 *  Output:
 *    none
   halt PP32   *****************************************************************************
**
** FILE NAME    : ifxmips_ptm_ar9.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 * ####################################
 *              Head File
 * ####################################
 
 *  Common Head File
 
 *  Chip Specific Head File
 
 * ####################################
 *              Definition
 * ####################################
 
 *  EMA Settings
 
 * ####################################
 *             Declaration
 * ####################################
 
 *  Hardware Init/Uninit Functions
 
 * ####################################
 *            Local Variable
 * ####################################
 
 * ####################################
 *            Local Function
 * ####################################
   reset PPE    ifx_rcu_rst(IFX_RCU_DOMAIN_PPE, IFX_RCU_MODULE_PTM);  Configure share buffer master selection  EMA Settings
     *  0. Backup port2 value to temp
     *  1. Disable CPU port2 in switch (link and learning)
     *  2. wait for a while
     *  3. Configure DM register and counter
     *  4. restore temp to CPU port2 in switch
     *  This code will cause network to stop working if there are heavy
     *  traffic during bootup. This part should be moved to switch and use
     *  the same code as ATM
     
         * For dynamic, must reset these counters,
         * For once initialization, don't need to reset these counters
         
 *  Description:
 *    Download PPE firmware binary code.
 *  Input:
 *    src       --- u32 *, binary code buffer
 *    dword_len --- unsigned int, binary code length in DWORD (32-bit)
 *  Output:
 *    int       --- 0:    Success
 *                  else:           Error Code
   copy code     copy data   
 * ####################################
 *           Global Function
 * ####################################
 
 *  Description:
 *    Initialize and start up PP32.
 *  Input:
 *    none
 *  Output:
 *    int  --- 0: Success
 *             else:        Error Code
   download firmware     run PP32      idle for a while to let PP32 init itself    
 *  Description:
 *    Halt PP32.
 *  Input:
 *    none
 *  Output:
 *    none
   halt PP32   