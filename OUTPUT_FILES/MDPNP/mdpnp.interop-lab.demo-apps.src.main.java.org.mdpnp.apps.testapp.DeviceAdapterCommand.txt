******************************************************************************
 * Copyright (c) 2014, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************
 * single vm batch command. assumes none of the run-time support available yet - no
 * top-level spring context exists yet.
  TODO revisit check for headless and check for FX Application Thread This attempts to initialize the default Toolkit which will fail in truly headless environments.  Is there another precheck for a graphical display that can be called before this? or is it possible to substitute a different Toolkit?            if(Platform.isFxApplicationThread())                throw new IllegalStateException("Trying to start headless blocking device adapter on UI thread"); this will block until stops kills everything from another thread or a VM's shutdown hook will only get here once the controller loop is stopped at the very end; kill the context that was created here.*
         * blocking call to start adapter's listening loop. It is expected that stop API will be called on another thread
          Wait until killAdapter Required to trigger destruction of animated DevicePanels            if(!Platform.isFxApplicationThread())                throw new IllegalStateException("Sneaky developer! Trying to start ui outside of FX thread"); Use the device subscriber so that we automatically maintain the same partition as the device TODO These beans are required only for the standalone adapter with GUI, perhaps they should get their own spring config though? TODO contentfilter these on the one device? this is a dialog - the application's 'close' event wont happen In case of this being a 'real' application,  stop will be called by the fx framework