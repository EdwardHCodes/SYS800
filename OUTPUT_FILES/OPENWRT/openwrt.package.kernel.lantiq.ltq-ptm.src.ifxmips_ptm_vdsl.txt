*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt*****************************************************************************
**
** FILE NAME    : ifxmips_ptm_vdsl.c
** PROJECT      : UEIP
** MODULES      : PTM
**
** DATE         : 7 Jul 2009
** AUTHOR       : Xu Liang
** DESCRIPTION  : PTM driver common source file (core functions for VR9)
** COPYRIGHT    :       Copyright (c) 2006
**                      Infineon Technologies AG
**                      Am Campeon 1-12, 85579 Neubiberg, Germany
**
**    This program is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
** HISTORY
** $Date        $Author         $Comment
** 07 JUL 2009  Xu Liang        Init Version
******************************************************************************
 *  Mailbox handler and signal function
 
 *  Tasklet to Handle Swap Descriptors
 
 *  Init & clean-up functions
 
 * ####################################
 *            Local Function
 * ####################################
  Allow up to 1508 bytes, for RFC4638  || !desc->c   if PP32 hold descriptor or descriptor not completed  parse protocol header  write discriptor to memory    interface down  clear interrupt  no more traffic  next round  allocate descriptor   write back to physical memory    make the skb unowned   write back to physical memory     free previous skb     update descriptor     update MIB    write discriptor to memory    use bear channel 0 preemption gamma interface settings  disable TX irq, release skb when sending new packet   wake up TX queue      allocate memroy including trailer and padding     must be burst length alignment and reserve two more bytes for MAC address alignment    pub skb in reserved area "skb->data - 4"      write back and invalidate cache      invalidate cache      allocate memory including padding     must be burst length alignment    usually, CPE memory is less than 256M bytes  so NULL means invalid pointer  assume TX is serial operation  no protection provided  PP32 hold  if PP32 hold descriptor  clear interrupt  no more skb to be replaced  if PP32 hold descriptor  this field replaces byte_off in rx descriptor of VDSL ingress  16 * (cgu_get_pp32_clock() / 1000000)  disable  strict priority  enable sleep mode*GPIO_ADDR = (unsigned int)IFX_GPIO_P0_OUT;  disabled by default  default TX queue QoS config is all ZERO  TX Ctrl K Table  init RX descriptor  init TX descriptor  init Swap descriptor  init fastpath TX descriptor  TODO: ReTX set xdata_addr#ifdef CONFIG_VR9    IFX_REG_W32_MASK(1 << 17, 0, FFSM_CFG0);#endif#ifdef CONFIG_VR9    IFX_REG_W32_MASK(0, 1 << 17, FFSM_CFG0);#endif  TODO: ReTX clean state  register interrupt handler    enable SWAP interrupt