 Sms_Snd_Emu 0.1.1. http://www.slack.net/~ant/ Copyright (C) 2003-2008 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Must be silent (all NULL), mono (left and right NULL), or stereo (none NULL) fails if you pass invalid osc index Calculate noise feedback values Reset oscs silent Clear outputs to NULL FIRST Synthesize each oscillator Determine what will be generated volumes [i] ~= 64 * pow( 1.26, 15 - i ) / pow( 1.26, 15 ) Square freq above 16 kHz yields constant amplitude at half volume Update amplitude Generate wave Calculate actual period Maintain phase when silent TODO: maintain noise LFSR phase? Square Noise true if bits 0 and 1 differ We want the raw values written so our save state format can be as close to hardware as possible and unspecific to any emulator. reset noise LFSR Replace high 6 bits/low 4 bits of register with data Sms_Snd_Emu 0.1.1. http://www.slack.net/~ant/ Copyright (C) 2003-2008 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Must be silent (all NULL), mono (left and right NULL), or stereo (none NULL) fails if you pass invalid osc index Calculate noise feedback values Reset oscs silent Clear outputs to NULL FIRST Synthesize each oscillator Determine what will be generated volumes [i] ~= 64 * pow( 1.26, 15 - i ) / pow( 1.26, 15 ) Square freq above 16 kHz yields constant amplitude at half volume Update amplitude Generate wave Calculate actual period Maintain phase when silent TODO: maintain noise LFSR phase? Square Noise true if bits 0 and 1 differ We want the raw values written so our save state format can be as close to hardware as possible and unspecific to any emulator. reset noise LFSR Replace high 6 bits/low 4 bits of register with data Sms_Snd_Emu 0.1.1. http://www.slack.net/~ant/ Copyright (C) 2003-2008 Shay Green. This module is free software; you
can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This
module is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
details. You should have received a copy of the GNU Lesser General Public
License along with this module; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Must be silent (all NULL), mono (left and right NULL), or stereo (none NULL) fails if you pass invalid osc index Calculate noise feedback values Reset oscs silent Clear outputs to NULL FIRST Synthesize each oscillator Determine what will be generated volumes [i] ~= 64 * pow( 1.26, 15 - i ) / pow( 1.26, 15 ) Square freq above 16 kHz yields constant amplitude at half volume Update amplitude Generate wave Calculate actual period Maintain phase when silent TODO: maintain noise LFSR phase? Square Noise true if bits 0 and 1 differ We want the raw values written so our save state format can be as close to hardware as possible and unspecific to any emulator. reset noise LFSR Replace high 6 bits/low 4 bits of register with data