
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  flush descriptors  flush descriptors  flush descriptors  flush descriptors  stop RX and TX 
	 * give the hardware some time to really stop all rx/tx activity
	 * clearing the descriptors too early causes random memory corruption
	  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  disable all interrupts and stop the rx/tx engine  setup MAC configuration registers  setup max frame length to zero  setup FIFO configuration registers  setup max frame length  start RX engine  enable interrupts  SGMII reset sequence 
	 * The following is what QCA has to say about what happens here:
	 *
	 * Across resets SGMII link status goes to weird state.
	 * If SGMII_DEBUG register reads other than 0x1f or 0x10,
	 * we are for sure in a bad  state.
	 *
	 * Issue a PHY reset in MR_AN_CONTROL to keep going.
	 
		 * The rx ring buffer can stall on small packets on QCA953x and
		 * QCA956x. Disabling the inline checksum engine fixes the stall.
		 * The wr, rr functions cannot be used since this hidden register
		 * is outside of the normal ag71xx register block.
		  setup max frame length 
			 * TX will hang if DMA transfers <= 4 bytes,
			 * make sure next segment is more than 4 bytes long.
			  prevent early tx attempt of this descriptor  setup descriptor fields  flush descriptor  enable TX engine  restart RX  enable interrupts 
	 * populate current node to register mdio-bus as a subdevice.
	 * the mdio bus works independently on ar7241 and later chips
	 * and we need to load mdio1 before gmac0, which can be done
	 * by adding a "simple-mfd" compatible to gmac node. The
	 * following code checks OF_POPULATED_BUS flag before populating
	 * to avoid duplicated population.
	 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  flush descriptors  flush descriptors  flush descriptors  flush descriptors  stop RX and TX 
	 * give the hardware some time to really stop all rx/tx activity
	 * clearing the descriptors too early causes random memory corruption
	  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  disable all interrupts and stop the rx/tx engine  setup MAC configuration registers  setup max frame length to zero  setup FIFO configuration registers  setup max frame length  start RX engine  enable interrupts  SGMII reset sequence 
	 * The following is what QCA has to say about what happens here:
	 *
	 * Across resets SGMII link status goes to weird state.
	 * If SGMII_DEBUG register reads other than 0x1f or 0x10,
	 * we are for sure in a bad  state.
	 *
	 * Issue a PHY reset in MR_AN_CONTROL to keep going.
	 
		 * The rx ring buffer can stall on small packets on QCA953x and
		 * QCA956x. Disabling the inline checksum engine fixes the stall.
		 * The wr, rr functions cannot be used since this hidden register
		 * is outside of the normal ag71xx register block.
		  setup max frame length 
			 * TX will hang if DMA transfers <= 4 bytes,
			 * make sure next segment is more than 4 bytes long.
			  prevent early tx attempt of this descriptor  setup descriptor fields  flush descriptor  enable TX engine  restart RX  enable interrupts 
	 * populate current node to register mdio-bus as a subdevice.
	 * the mdio bus works independently on ar7241 and later chips
	 * and we need to load mdio1 before gmac0, which can be done
	 * by adding a "simple-mfd" compatible to gmac node. The
	 * following code checks OF_POPULATED_BUS flag before populating
	 * to avoid duplicated population.
	 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  flush descriptors  flush descriptors  flush descriptors  flush descriptors  stop RX and TX 
	 * give the hardware some time to really stop all rx/tx activity
	 * clearing the descriptors too early causes random memory corruption
	  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  disable all interrupts and stop the rx/tx engine  setup MAC configuration registers  setup max frame length to zero  setup FIFO configuration registers  setup max frame length  start RX engine  enable interrupts  SGMII reset sequence 
	 * The following is what QCA has to say about what happens here:
	 *
	 * Across resets SGMII link status goes to weird state.
	 * If SGMII_DEBUG register reads other than 0x1f or 0x10,
	 * we are for sure in a bad  state.
	 *
	 * Issue a PHY reset in MR_AN_CONTROL to keep going.
	 
		 * The rx ring buffer can stall on small packets on QCA953x and
		 * QCA956x. Disabling the inline checksum engine fixes the stall.
		 * The wr, rr functions cannot be used since this hidden register
		 * is outside of the normal ag71xx register block.
		  setup max frame length 
			 * TX will hang if DMA transfers <= 4 bytes,
			 * make sure next segment is more than 4 bytes long.
			  prevent early tx attempt of this descriptor  setup descriptor fields  flush descriptor  enable TX engine  restart RX  enable interrupts 
	 * populate current node to register mdio-bus as a subdevice.
	 * the mdio bus works independently on ar7241 and later chips
	 * and we need to load mdio1 before gmac0, which can be done
	 * by adding a "simple-mfd" compatible to gmac node. The
	 * following code checks OF_POPULATED_BUS flag before populating
	 * to avoid duplicated population.
	 
 *  Atheros AR71xx built-in ethernet mac driver
 *
 *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
 *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
 *
 *  Based on Atheros' AG7100 driver
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License version 2 as published
 *  by the Free Software Foundation.
  flush descriptors  flush descriptors  flush descriptors  flush descriptors  stop RX and TX 
	 * give the hardware some time to really stop all rx/tx activity
	 * clearing the descriptors too early causes random memory corruption
	  clear descriptor addresses  clear pending RX/TX interrupts  clear pending errors  mask out reserved bits  disable all interrupts and stop the rx/tx engine  setup MAC configuration registers  setup max frame length to zero  setup FIFO configuration registers  setup max frame length  start RX engine  enable interrupts  SGMII reset sequence 
	 * The following is what QCA has to say about what happens here:
	 *
	 * Across resets SGMII link status goes to weird state.
	 * If SGMII_DEBUG register reads other than 0x1f or 0x10,
	 * we are for sure in a bad  state.
	 *
	 * Issue a PHY reset in MR_AN_CONTROL to keep going.
	 
		 * The rx ring buffer can stall on small packets on QCA953x and
		 * QCA956x. Disabling the inline checksum engine fixes the stall.
		 * The wr, rr functions cannot be used since this hidden register
		 * is outside of the normal ag71xx register block.
		  setup max frame length 
			 * TX will hang if DMA transfers <= 4 bytes,
			 * make sure next segment is more than 4 bytes long.
			  prevent early tx attempt of this descriptor  setup descriptor fields  flush descriptor  enable TX engine  restart RX  enable interrupts 
	 * populate current node to register mdio-bus as a subdevice.
	 * the mdio bus works independently on ar7241 and later chips
	 * and we need to load mdio1 before gmac0, which can be done
	 * by adding a "simple-mfd" compatible to gmac node. The
	 * following code checks OF_POPULATED_BUS flag before populating
	 * to avoid duplicated population.
	 