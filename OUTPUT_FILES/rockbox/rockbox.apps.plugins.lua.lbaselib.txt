
** $Id: lbaselib.c,v 1.191.1.6 2008/02/14 16:46:22 roberto Exp $
** Basic library
** See Copyright Notice in lua.h

** If your system does not support `stdout', you can just remove this function.
** If you need, you can define your own `print' function, following this
** model but changing `fputs' to put the strings at a proper place
** (a console window or a log file, for instance).
 number of arguments  function to be called  value to print  get result  pop result  standard conversion  at least one valid digit?  skip trailing spaces  no invalid trailing characters?  else not a number  add extra information?  no metatable  returns either __metatable field (if present) or metatable  is a C function?  return the thread's global env.  change environment of current thread * $Id: lbaselib.c,v 1.276.1.1 2013/04/12 18:48:47 roberto Exp $  no metamethod?  argument must be a table  will return generator,  state,  and initial value  argument 'self' to metamethod  get 3 values from metamethod  create a 2nd argument if there isn't one  pairs function from lua 5.2  next value  ipairs function from lua 5.2  OK?  put before error message  return nil plus error message  stripdebug([level[, function]]).
 * level:    1 don't discard debug
 *           2 discard Local and Upvalue debug info
 *           3 discard Local, Upvalue and lineno debug info.
 * function: Function to be stripped as per setfenv except 0 not permitted.
 * If no arguments then the current default setting is returned.
 * If function is omitted, this is the default setting for future compiles
 * The function returns an estimated integer count of the bytes stripped.
  Store the default level in the registry if no function parameter  if the function parameter is a +ve integer then climb to find function  pop level as getinfo will replace it by the function  lua_lock(L); lua_unlock(L);
** Reader for generic `load' function: `lua_load' uses the
** stack for internal stuff, so the reader cannot change the
** stack top. Instead, it keeps its resulting string in a
** reserved slot inside the stack.
 to avoid warnings  get function  call it  save string in a reserved stack slot  to avoid warnings  function, eventual name, plus one reserved slot  empty range  number of elements  n <= 0 means arith. overflow  push arg[i] (avoiding overflow problems)  push arg[i + 1...e]  return status + all results  put error function under function to be called  return status + all results  is there a metafield?  use its value  create proxy  no metatable  create a new metatable `m' ...  ... and mark `m' as a valid metatable  weaktable[m] = true  to check if weaktable[metatable(u)] == true  remove value  metatable is valid; get it 
** {======================================================
** Coroutine library
** =======================================================
 running  suspended  'normal' (it resumed another coroutine)  does it have frames?  it is running  initial state  some error occured  error flag  move yielded values  move error message  error flag  return false + error message  return true + `resume' returns  error object is a string?  add extra info  propagate error  move function to top  move function from L to NL  main thread is not a coroutine  }======================================================  set global _G  open lib into global table  set global _VERSION  `newproxy' needs a weaktable as upvalue  new table `w'  `w' will be its own metatable  metatable(w).__mode = "kv"  set global `newproxy' 
** $Id: lbaselib.c,v 1.191.1.6 2008/02/14 16:46:22 roberto Exp $
** Basic library
** See Copyright Notice in lua.h

** If your system does not support `stdout', you can just remove this function.
** If you need, you can define your own `print' function, following this
** model but changing `fputs' to put the strings at a proper place
** (a console window or a log file, for instance).
 number of arguments  function to be called  value to print  get result  pop result  standard conversion  at least one valid digit?  skip trailing spaces  no invalid trailing characters?  else not a number  add extra information?  no metatable  returns either __metatable field (if present) or metatable  is a C function?  return the thread's global env.  change environment of current thread * $Id: lbaselib.c,v 1.276.1.1 2013/04/12 18:48:47 roberto Exp $  no metamethod?  argument must be a table  will return generator,  state,  and initial value  argument 'self' to metamethod  get 3 values from metamethod  create a 2nd argument if there isn't one  pairs function from lua 5.2  next value  ipairs function from lua 5.2  OK?  put before error message  return nil plus error message  stripdebug([level[, function]]).
 * level:    1 don't discard debug
 *           2 discard Local and Upvalue debug info
 *           3 discard Local, Upvalue and lineno debug info.
 * function: Function to be stripped as per setfenv except 0 not permitted.
 * If no arguments then the current default setting is returned.
 * If function is omitted, this is the default setting for future compiles
 * The function returns an estimated integer count of the bytes stripped.
  Store the default level in the registry if no function parameter  if the function parameter is a +ve integer then climb to find function  pop level as getinfo will replace it by the function  lua_lock(L); lua_unlock(L);
** Reader for generic `load' function: `lua_load' uses the
** stack for internal stuff, so the reader cannot change the
** stack top. Instead, it keeps its resulting string in a
** reserved slot inside the stack.
 to avoid warnings  get function  call it  save string in a reserved stack slot  to avoid warnings  function, eventual name, plus one reserved slot  empty range  number of elements  n <= 0 means arith. overflow  push arg[i] (avoiding overflow problems)  push arg[i + 1...e]  return status + all results  put error function under function to be called  return status + all results  is there a metafield?  use its value  create proxy  no metatable  create a new metatable `m' ...  ... and mark `m' as a valid metatable  weaktable[m] = true  to check if weaktable[metatable(u)] == true  remove value  metatable is valid; get it 
** {======================================================
** Coroutine library
** =======================================================
 running  suspended  'normal' (it resumed another coroutine)  does it have frames?  it is running  initial state  some error occured  error flag  move yielded values  move error message  error flag  return false + error message  return true + `resume' returns  error object is a string?  add extra info  propagate error  move function to top  move function from L to NL  main thread is not a coroutine  }======================================================  set global _G  open lib into global table  set global _VERSION  `newproxy' needs a weaktable as upvalue  new table `w'  `w' will be its own metatable  metatable(w).__mode = "kv"  set global `newproxy' 
** $Id: lbaselib.c,v 1.191.1.6 2008/02/14 16:46:22 roberto Exp $
** Basic library
** See Copyright Notice in lua.h

** If your system does not support `stdout', you can just remove this function.
** If you need, you can define your own `print' function, following this
** model but changing `fputs' to put the strings at a proper place
** (a console window or a log file, for instance).
 number of arguments  function to be called  value to print  get result  pop result  standard conversion  at least one valid digit?  skip trailing spaces  no invalid trailing characters?  else not a number  add extra information?  no metatable  returns either __metatable field (if present) or metatable  is a C function?  return the thread's global env.  change environment of current thread * $Id: lbaselib.c,v 1.276.1.1 2013/04/12 18:48:47 roberto Exp $  no metamethod?  argument must be a table  will return generator,  state,  and initial value  argument 'self' to metamethod  get 3 values from metamethod  create a 2nd argument if there isn't one  pairs function from lua 5.2  next value  ipairs function from lua 5.2  OK?  put before error message  return nil plus error message  stripdebug([level[, function]]).
 * level:    1 don't discard debug
 *           2 discard Local and Upvalue debug info
 *           3 discard Local, Upvalue and lineno debug info.
 * function: Function to be stripped as per setfenv except 0 not permitted.
 * If no arguments then the current default setting is returned.
 * If function is omitted, this is the default setting for future compiles
 * The function returns an estimated integer count of the bytes stripped.
  Store the default level in the registry if no function parameter  if the function parameter is a +ve integer then climb to find function  pop level as getinfo will replace it by the function  lua_lock(L); lua_unlock(L);
** Reader for generic `load' function: `lua_load' uses the
** stack for internal stuff, so the reader cannot change the
** stack top. Instead, it keeps its resulting string in a
** reserved slot inside the stack.
 to avoid warnings  get function  call it  save string in a reserved stack slot  to avoid warnings  function, eventual name, plus one reserved slot  empty range  number of elements  n <= 0 means arith. overflow  push arg[i] (avoiding overflow problems)  push arg[i + 1...e]  return status + all results  put error function under function to be called  return status + all results  is there a metafield?  use its value  create proxy  no metatable  create a new metatable `m' ...  ... and mark `m' as a valid metatable  weaktable[m] = true  to check if weaktable[metatable(u)] == true  remove value  metatable is valid; get it 
** {======================================================
** Coroutine library
** =======================================================
 running  suspended  'normal' (it resumed another coroutine)  does it have frames?  it is running  initial state  some error occured  error flag  move yielded values  move error message  error flag  return false + error message  return true + `resume' returns  error object is a string?  add extra info  propagate error  move function to top  move function from L to NL  main thread is not a coroutine  }======================================================  set global _G  open lib into global table  set global _VERSION  `newproxy' needs a weaktable as upvalue  new table `w'  `w' will be its own metatable  metatable(w).__mode = "kv"  set global `newproxy' 