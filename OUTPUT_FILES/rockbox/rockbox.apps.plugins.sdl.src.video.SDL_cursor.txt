
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 General cursor handling code for SDL  These are static for our cursor handling code  Public functions  We don't have mouse focus, and the cursor isn't drawn yet  Create the default cursor  Create a lock if necessary  That's it!  Multi-thread support for cursors  Software cursor drawing support  Make sure the width is a multiple of 8  Sanity check the hot spot  Allocate memory for the cursor  If the window manager gives us a good cursor, we're done!  SDL_SetCursor(NULL) can be used to force the cursor redraw,
   if this is desired for any reason.  This is used when setting
   the video mode and when the SDL window gains the mouse focus.
  Make sure that the video subsystem has been initialized  Prevent the event thread from moving the mouse  Set the new cursor  Erase the current mouse position  If the video driver is moving the cursor directly,
			   it needs to hide the old cursor before (possibly)
			   showing the new one.  (But don't erase NULL cursor)
			  Draw the new mouse cursor  Use window manager cursor if possible  Erase window manager mouse (cursor not visible)  Query current state  If we have an offset video mode, offset the mouse coordinates  This generates a mouse motion event  Erase and update the current mouse position  Erase and redraw mouse cursor in new position  Keep track of the current cursor colors  This handles the ugly work of converting the saved cursor background from
   the pixel format of the shadow surface to that of the video surface.
   This is only necessary when blitting from a shadow surface of a different
   pixel format than the video surface, and using a software rendered cursor.
 Make sure we can steal the blit mapping  Set up the blit information  Run the actual software blit  Get the mouse rectangle, clipped to the screen  Copy mouse background  Set up the copy pointers  Perform the copy  Draw the mouse cursor  Lock the screen if necessary  Unlock the screen and update if necessary  This can be called before a video mode is set  Get the mouse rectangle, clipped to the screen  Copy mouse background  Set up the copy pointers  Perform the copy  Perform pixel conversion on cursor background  Lock the screen if necessary  Unlock the screen and update if necessary  Reset the cursor on video mode change
   FIXME:  Keep track of all cursors, and reset them all.
 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 General cursor handling code for SDL  These are static for our cursor handling code  Public functions  We don't have mouse focus, and the cursor isn't drawn yet  Create the default cursor  Create a lock if necessary  That's it!  Multi-thread support for cursors  Software cursor drawing support  Make sure the width is a multiple of 8  Sanity check the hot spot  Allocate memory for the cursor  If the window manager gives us a good cursor, we're done!  SDL_SetCursor(NULL) can be used to force the cursor redraw,
   if this is desired for any reason.  This is used when setting
   the video mode and when the SDL window gains the mouse focus.
  Make sure that the video subsystem has been initialized  Prevent the event thread from moving the mouse  Set the new cursor  Erase the current mouse position  If the video driver is moving the cursor directly,
			   it needs to hide the old cursor before (possibly)
			   showing the new one.  (But don't erase NULL cursor)
			  Draw the new mouse cursor  Use window manager cursor if possible  Erase window manager mouse (cursor not visible)  Query current state  If we have an offset video mode, offset the mouse coordinates  This generates a mouse motion event  Erase and update the current mouse position  Erase and redraw mouse cursor in new position  Keep track of the current cursor colors  This handles the ugly work of converting the saved cursor background from
   the pixel format of the shadow surface to that of the video surface.
   This is only necessary when blitting from a shadow surface of a different
   pixel format than the video surface, and using a software rendered cursor.
 Make sure we can steal the blit mapping  Set up the blit information  Run the actual software blit  Get the mouse rectangle, clipped to the screen  Copy mouse background  Set up the copy pointers  Perform the copy  Draw the mouse cursor  Lock the screen if necessary  Unlock the screen and update if necessary  This can be called before a video mode is set  Get the mouse rectangle, clipped to the screen  Copy mouse background  Set up the copy pointers  Perform the copy  Perform pixel conversion on cursor background  Lock the screen if necessary  Unlock the screen and update if necessary  Reset the cursor on video mode change
   FIXME:  Keep track of all cursors, and reset them all.
 
    SDL - Simple DirectMedia Layer
    Copyright (C) 1997-2012 Sam Lantinga

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

    Sam Lantinga
    slouken@libsdl.org
 General cursor handling code for SDL  These are static for our cursor handling code  Public functions  We don't have mouse focus, and the cursor isn't drawn yet  Create the default cursor  Create a lock if necessary  That's it!  Multi-thread support for cursors  Software cursor drawing support  Make sure the width is a multiple of 8  Sanity check the hot spot  Allocate memory for the cursor  If the window manager gives us a good cursor, we're done!  SDL_SetCursor(NULL) can be used to force the cursor redraw,
   if this is desired for any reason.  This is used when setting
   the video mode and when the SDL window gains the mouse focus.
  Make sure that the video subsystem has been initialized  Prevent the event thread from moving the mouse  Set the new cursor  Erase the current mouse position  If the video driver is moving the cursor directly,
			   it needs to hide the old cursor before (possibly)
			   showing the new one.  (But don't erase NULL cursor)
			  Draw the new mouse cursor  Use window manager cursor if possible  Erase window manager mouse (cursor not visible)  Query current state  If we have an offset video mode, offset the mouse coordinates  This generates a mouse motion event  Erase and update the current mouse position  Erase and redraw mouse cursor in new position  Keep track of the current cursor colors  This handles the ugly work of converting the saved cursor background from
   the pixel format of the shadow surface to that of the video surface.
   This is only necessary when blitting from a shadow surface of a different
   pixel format than the video surface, and using a software rendered cursor.
 Make sure we can steal the blit mapping  Set up the blit information  Run the actual software blit  Get the mouse rectangle, clipped to the screen  Copy mouse background  Set up the copy pointers  Perform the copy  Draw the mouse cursor  Lock the screen if necessary  Unlock the screen and update if necessary  This can be called before a video mode is set  Get the mouse rectangle, clipped to the screen  Copy mouse background  Set up the copy pointers  Perform the copy  Perform pixel conversion on cursor background  Lock the screen if necessary  Unlock the screen and update if necessary  Reset the cursor on video mode change
   FIXME:  Keep track of all cursors, and reset them all.
 