 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  DOOM main program (D_DoomMain) and game loop (D_DoomLoop),
 *  plus functions to determine game mode (shareware, registered),
 *  parse command line parameters, configure game parameters (turbo),
 *  and call the startup functions.
 *
 *-----------------------------------------------------------------------------
  Ty 04/08/98 - Externalizations DEHacked support - Ty 03/09/97 // CPhipps - const char*'s CPhipps - removed wadfiles[] stuff started game with -devparm jff 1/24/98 add new versions of these variables to remember command line checkparm of -nomonsters checkparm of -respawn checkparm of -fast jff 1/24/98 end definition of command line version of play mode switches working -nomonsters working -respawn working -fast debug flag to cancel adaptivenessjff 1/22/98 parms for disabling music and soundjff 4/18/98 killough
 * D_PostEvent - Event handling
 *
 * Called by I/O functions when an event is received.
 * Try event handlers for each code area in turn.
  cph - suppress all input events at game start
    * FIXME: This is a lousy kludge  D_Wipe CPhipps - moved the screen wipe code from D_Display to here The screens to wipe between are already stored, this just does the timing and screen updatingI_uSleep(5000); // CPhipps - don't thrash cpu in this loop menu is drawn even on top of wipes page flip or blit buffer D_Display  draw current display, possibly wiping it from the previous wipegamestate can be set to -1 to force a wipe on the next draw for comparative timing / profiling save the current screen if about to wipe Not a level cph - use default (basic) palette In a level change the view size if needed force background redraw Work out if the player view is visible, and if there is a border draw the pattern into the back screen CPhipps - If there is a border, and either there was no border last time, or the border might need refreshing, then redraw it. The border may need redrawing next time if the border surrounds the screen, and there is a menu being displayed Now do the drawing draw pause pic Cache results of x pos calc CPhipps - updated for new patch drawing cph - Must un-stretch viewwindowy menus go directly to the screen menu is drawn even on top of everything normal update page flip or blit buffer wipe update  D_DoomLoop() Not a globally visible function,  just included for source reference,  called by D_DoomMain, never exits. Manages timing and IO,  calls all ?_Responder, ?_Ticker, and ?_Drawer,  calls I_GetTime, I_StartFrame, and I_StartTic process one or more tics will run at least one tic killough 3/16/98: change consoleplayer to displayplayer cph 2002/08/10 move positional sounds Update display, next frame, with current state. Give the system some time  DEMO LOOP killough 5/2/98: made static CPhipps - const D_PageTicker Handles timing for warped projection D_PageDrawer CPhipps - updated for new patch drawing D_AdvanceDemo Called after each demo or intro demosequence finishes killough 11/98: functions to perform demo sequences
 * cphipps 10/99: constness fixes
  killough 11/98: tabulate demo sequences
 
 * This cycles through the demo sequences.
 * killough 11/98: made table-driven
  not reborn  killough 11/98: default behavior  D_StartTitle D_AddFile Rewritten by Lee Killough Ty 08/29/98 - add source parm to indicate where this came from CPhipps - static, const char* parameter         - source is an enum         - modified to allocate & use new wadfiles array Ty 08/29/98 CheckIWAD Verify a file is indeed tagged as an IWAD Scan its lumps for levelnames and return gamemode as indicated Detect missing wolf levels in DOOM II The filename to check is passed in iwadname, the gamemode detected is returned in gmode, hassec returns the presence of secret levels jff 4/19/98 Add routine to test IWAD for validity and determine the gamemode from it. Also note if DOOM II, whether secret levels exist CPhipps - const char* for iwadname, made static Identify IWAD correctly read IWAD header read IWAD directory scan directory for levelname lumps missing IWAD tag in header error from open call Determine game mode from levels present Must be a full set for whichever mode is present Lack of wolf-3d levels also detected here error from access call turbo option get skill / episode / map from parms CPhipps - move up netgame init init subsystems cph - add dehacked-in-a-wad supportjff 4/24/98 load color translation lumps Check for -file in shareware These are the lumps that will be checked in IWAD, if any one is not present, execution will be aborted. Check for fake IWAD with right name, but w/o all the lumps of the registered version. Iff additonal PWAD files are used, print modified banner Check and print which version is executed. Ouch. *8  *8 check for a driver that wants intermission stats for statistics driver start the apropriate game based on parms killough 12/98  start up intro loop D_DoomMain get this crap off the stack never returns Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  DOOM main program (D_DoomMain) and game loop (D_DoomLoop),
 *  plus functions to determine game mode (shareware, registered),
 *  parse command line parameters, configure game parameters (turbo),
 *  and call the startup functions.
 *
 *-----------------------------------------------------------------------------
  Ty 04/08/98 - Externalizations DEHacked support - Ty 03/09/97 // CPhipps - const char*'s CPhipps - removed wadfiles[] stuff started game with -devparm jff 1/24/98 add new versions of these variables to remember command line checkparm of -nomonsters checkparm of -respawn checkparm of -fast jff 1/24/98 end definition of command line version of play mode switches working -nomonsters working -respawn working -fast debug flag to cancel adaptivenessjff 1/22/98 parms for disabling music and soundjff 4/18/98 killough
 * D_PostEvent - Event handling
 *
 * Called by I/O functions when an event is received.
 * Try event handlers for each code area in turn.
  cph - suppress all input events at game start
    * FIXME: This is a lousy kludge  D_Wipe CPhipps - moved the screen wipe code from D_Display to here The screens to wipe between are already stored, this just does the timing and screen updatingI_uSleep(5000); // CPhipps - don't thrash cpu in this loop menu is drawn even on top of wipes page flip or blit buffer D_Display  draw current display, possibly wiping it from the previous wipegamestate can be set to -1 to force a wipe on the next draw for comparative timing / profiling save the current screen if about to wipe Not a level cph - use default (basic) palette In a level change the view size if needed force background redraw Work out if the player view is visible, and if there is a border draw the pattern into the back screen CPhipps - If there is a border, and either there was no border last time, or the border might need refreshing, then redraw it. The border may need redrawing next time if the border surrounds the screen, and there is a menu being displayed Now do the drawing draw pause pic Cache results of x pos calc CPhipps - updated for new patch drawing cph - Must un-stretch viewwindowy menus go directly to the screen menu is drawn even on top of everything normal update page flip or blit buffer wipe update  D_DoomLoop() Not a globally visible function,  just included for source reference,  called by D_DoomMain, never exits. Manages timing and IO,  calls all ?_Responder, ?_Ticker, and ?_Drawer,  calls I_GetTime, I_StartFrame, and I_StartTic process one or more tics will run at least one tic killough 3/16/98: change consoleplayer to displayplayer cph 2002/08/10 move positional sounds Update display, next frame, with current state. Give the system some time  DEMO LOOP killough 5/2/98: made static CPhipps - const D_PageTicker Handles timing for warped projection D_PageDrawer CPhipps - updated for new patch drawing D_AdvanceDemo Called after each demo or intro demosequence finishes killough 11/98: functions to perform demo sequences
 * cphipps 10/99: constness fixes
  killough 11/98: tabulate demo sequences
 
 * This cycles through the demo sequences.
 * killough 11/98: made table-driven
  not reborn  killough 11/98: default behavior  D_StartTitle D_AddFile Rewritten by Lee Killough Ty 08/29/98 - add source parm to indicate where this came from CPhipps - static, const char* parameter         - source is an enum         - modified to allocate & use new wadfiles array Ty 08/29/98 CheckIWAD Verify a file is indeed tagged as an IWAD Scan its lumps for levelnames and return gamemode as indicated Detect missing wolf levels in DOOM II The filename to check is passed in iwadname, the gamemode detected is returned in gmode, hassec returns the presence of secret levels jff 4/19/98 Add routine to test IWAD for validity and determine the gamemode from it. Also note if DOOM II, whether secret levels exist CPhipps - const char* for iwadname, made static Identify IWAD correctly read IWAD header read IWAD directory scan directory for levelname lumps missing IWAD tag in header error from open call Determine game mode from levels present Must be a full set for whichever mode is present Lack of wolf-3d levels also detected here error from access call turbo option get skill / episode / map from parms CPhipps - move up netgame init init subsystems cph - add dehacked-in-a-wad supportjff 4/24/98 load color translation lumps Check for -file in shareware These are the lumps that will be checked in IWAD, if any one is not present, execution will be aborted. Check for fake IWAD with right name, but w/o all the lumps of the registered version. Iff additonal PWAD files are used, print modified banner Check and print which version is executed. Ouch. *8  *8 check for a driver that wants intermission stats for statistics driver start the apropriate game based on parms killough 12/98  start up intro loop D_DoomMain get this crap off the stack never returns Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *  DOOM main program (D_DoomMain) and game loop (D_DoomLoop),
 *  plus functions to determine game mode (shareware, registered),
 *  parse command line parameters, configure game parameters (turbo),
 *  and call the startup functions.
 *
 *-----------------------------------------------------------------------------
  Ty 04/08/98 - Externalizations DEHacked support - Ty 03/09/97 // CPhipps - const char*'s CPhipps - removed wadfiles[] stuff started game with -devparm jff 1/24/98 add new versions of these variables to remember command line checkparm of -nomonsters checkparm of -respawn checkparm of -fast jff 1/24/98 end definition of command line version of play mode switches working -nomonsters working -respawn working -fast debug flag to cancel adaptivenessjff 1/22/98 parms for disabling music and soundjff 4/18/98 killough
 * D_PostEvent - Event handling
 *
 * Called by I/O functions when an event is received.
 * Try event handlers for each code area in turn.
  cph - suppress all input events at game start
    * FIXME: This is a lousy kludge  D_Wipe CPhipps - moved the screen wipe code from D_Display to here The screens to wipe between are already stored, this just does the timing and screen updatingI_uSleep(5000); // CPhipps - don't thrash cpu in this loop menu is drawn even on top of wipes page flip or blit buffer D_Display  draw current display, possibly wiping it from the previous wipegamestate can be set to -1 to force a wipe on the next draw for comparative timing / profiling save the current screen if about to wipe Not a level cph - use default (basic) palette In a level change the view size if needed force background redraw Work out if the player view is visible, and if there is a border draw the pattern into the back screen CPhipps - If there is a border, and either there was no border last time, or the border might need refreshing, then redraw it. The border may need redrawing next time if the border surrounds the screen, and there is a menu being displayed Now do the drawing draw pause pic Cache results of x pos calc CPhipps - updated for new patch drawing cph - Must un-stretch viewwindowy menus go directly to the screen menu is drawn even on top of everything normal update page flip or blit buffer wipe update  D_DoomLoop() Not a globally visible function,  just included for source reference,  called by D_DoomMain, never exits. Manages timing and IO,  calls all ?_Responder, ?_Ticker, and ?_Drawer,  calls I_GetTime, I_StartFrame, and I_StartTic process one or more tics will run at least one tic killough 3/16/98: change consoleplayer to displayplayer cph 2002/08/10 move positional sounds Update display, next frame, with current state. Give the system some time  DEMO LOOP killough 5/2/98: made static CPhipps - const D_PageTicker Handles timing for warped projection D_PageDrawer CPhipps - updated for new patch drawing D_AdvanceDemo Called after each demo or intro demosequence finishes killough 11/98: functions to perform demo sequences
 * cphipps 10/99: constness fixes
  killough 11/98: tabulate demo sequences
 
 * This cycles through the demo sequences.
 * killough 11/98: made table-driven
  not reborn  killough 11/98: default behavior  D_StartTitle D_AddFile Rewritten by Lee Killough Ty 08/29/98 - add source parm to indicate where this came from CPhipps - static, const char* parameter         - source is an enum         - modified to allocate & use new wadfiles array Ty 08/29/98 CheckIWAD Verify a file is indeed tagged as an IWAD Scan its lumps for levelnames and return gamemode as indicated Detect missing wolf levels in DOOM II The filename to check is passed in iwadname, the gamemode detected is returned in gmode, hassec returns the presence of secret levels jff 4/19/98 Add routine to test IWAD for validity and determine the gamemode from it. Also note if DOOM II, whether secret levels exist CPhipps - const char* for iwadname, made static Identify IWAD correctly read IWAD header read IWAD directory scan directory for levelname lumps missing IWAD tag in header error from open call Determine game mode from levels present Must be a full set for whichever mode is present Lack of wolf-3d levels also detected here error from access call turbo option get skill / episode / map from parms CPhipps - move up netgame init init subsystems cph - add dehacked-in-a-wad supportjff 4/24/98 load color translation lumps Check for -file in shareware These are the lumps that will be checked in IWAD, if any one is not present, execution will be aborted. Check for fake IWAD with right name, but w/o all the lumps of the registered version. Iff additonal PWAD files are used, print modified banner Check and print which version is executed. Ouch. *8  *8 check for a driver that wants intermission stats for statistics driver start the apropriate game based on parms killough 12/98  start up intro loop D_DoomMain get this crap off the stack never returns