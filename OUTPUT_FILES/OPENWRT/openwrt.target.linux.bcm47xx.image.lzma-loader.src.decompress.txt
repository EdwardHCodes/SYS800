
 * LZMA compressed kernel decompressor for bcm947xx boards
 *
 * Copyright (C) 2005 by Oleg I. Vdovikin <oleg@cs.msu.su>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 *
 * Please note, this was code based on the bunzip2 decompressor code
 * by Manuel Novoa III  (mjn3@codepoet.org), although the only thing left
 * is an idea and part of original vendor code
 *
 *
 * 12-Mar-2005  Mineharu Takahara <mtakahar@yahoo.com>
 *   pass actual output size to decoder (stream mode
 *   compressed input is not a requirement anymore)
 *
 * 24-Apr-2005 Oleg I. Vdovikin
 *   reordered functions using lds script, removed forward decl
 *
  Flash  "HDR0"  "HDR0"  Length of file including header  32-bit CRC from flag_version to end of file  0:15 flags, 16:31 version  Offsets of partitions from start of header   "PS16"   12 bytes long for edimax header  beyound the image end, size not known in advance  flash access should be aligned, so wrapper is used  read byte from the flash, all accesses are 32-bit aligned  should be the first function  temp value  literal context bits  literal pos state bits  pos state bits  uncompressed size  look for trx header, 32-bit data access  compressed kernel is in the partition 0 or 1  lzma args  skip rest of the LZMA coder property  read the lower half of uncompressed size in the header  skip rest of the header (upper half of uncompressed size)  decompress kernel  Jump to load address 
 * LZMA compressed kernel decompressor for bcm947xx boards
 *
 * Copyright (C) 2005 by Oleg I. Vdovikin <oleg@cs.msu.su>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 *
 * Please note, this was code based on the bunzip2 decompressor code
 * by Manuel Novoa III  (mjn3@codepoet.org), although the only thing left
 * is an idea and part of original vendor code
 *
 *
 * 12-Mar-2005  Mineharu Takahara <mtakahar@yahoo.com>
 *   pass actual output size to decoder (stream mode
 *   compressed input is not a requirement anymore)
 *
 * 24-Apr-2005 Oleg I. Vdovikin
 *   reordered functions using lds script, removed forward decl
 *
  Flash  "HDR0"  "HDR0"  Length of file including header  32-bit CRC from flag_version to end of file  0:15 flags, 16:31 version  Offsets of partitions from start of header   "PS16"   12 bytes long for edimax header  beyound the image end, size not known in advance  flash access should be aligned, so wrapper is used  read byte from the flash, all accesses are 32-bit aligned  should be the first function  temp value  literal context bits  literal pos state bits  pos state bits  uncompressed size  look for trx header, 32-bit data access  compressed kernel is in the partition 0 or 1  lzma args  skip rest of the LZMA coder property  read the lower half of uncompressed size in the header  skip rest of the header (upper half of uncompressed size)  decompress kernel  Jump to load address 
 * LZMA compressed kernel decompressor for bcm947xx boards
 *
 * Copyright (C) 2005 by Oleg I. Vdovikin <oleg@cs.msu.su>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 *
 * Please note, this was code based on the bunzip2 decompressor code
 * by Manuel Novoa III  (mjn3@codepoet.org), although the only thing left
 * is an idea and part of original vendor code
 *
 *
 * 12-Mar-2005  Mineharu Takahara <mtakahar@yahoo.com>
 *   pass actual output size to decoder (stream mode
 *   compressed input is not a requirement anymore)
 *
 * 24-Apr-2005 Oleg I. Vdovikin
 *   reordered functions using lds script, removed forward decl
 *
  Flash  "HDR0"  "HDR0"  Length of file including header  32-bit CRC from flag_version to end of file  0:15 flags, 16:31 version  Offsets of partitions from start of header   "PS16"   12 bytes long for edimax header  beyound the image end, size not known in advance  flash access should be aligned, so wrapper is used  read byte from the flash, all accesses are 32-bit aligned  should be the first function  temp value  literal context bits  literal pos state bits  pos state bits  uncompressed size  look for trx header, 32-bit data access  compressed kernel is in the partition 0 or 1  lzma args  skip rest of the LZMA coder property  read the lower half of uncompressed size in the header  skip rest of the header (upper half of uncompressed size)  decompress kernel  Jump to load address 