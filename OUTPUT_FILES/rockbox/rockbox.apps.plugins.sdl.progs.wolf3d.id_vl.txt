 ID_VL.C Uncomment the following line, if you get destination out of bounds assertion errors and want to ignore them during debugging#define IGNORE_BAD_DEST SDL will scale for us use "best" color depth according to libSDL===========================================================================
=======================
=
= VL_Shutdown
=
=======================
VL_SetTextMode ();
=======================
=
= VL_SetVGAPlaneMode
=
=======================

=============================================================================

						PALETTE OPS

		To avoid snow, do a WaitVBL BEFORE calling these

=============================================================================

=================
=
= VL_ConvertPalette
=
=================

=================
=
= VL_FillPalette
=
=================
===========================================================================
=================
=
= VL_SetColor
=
=================
===========================================================================
=================
=
= VL_GetColor
=
=================
===========================================================================
=================
=
= VL_SetPalette
=
=================
===========================================================================
=================
=
= VL_GetPalette
=
=================
===========================================================================
=================
=
= VL_FadeOut
=
= Fades the current palette to the given color in the given number of steps
=
=================
 rockbox fade through intermediate frames final color
=================
=
= VL_FadeIn
=
=================
 fade through intermediate frames final color
=============================================================================

							PIXEL OPS

=============================================================================

=================
=
= VL_Plot
=
=================

=================
=
= VL_GetPixel
=
=================

=================
=
= VL_Hlin
=
=================

=================
=
= VL_Vlin
=
=================

=================
=
= VL_Bar
=
=================

============================================================================

							MEMORY OPS

============================================================================

=================
=
= VL_MemToLatch
=
=================
===========================================================================
=================
=
= VL_MemToScreenScaledCoord
=
= Draws a block of data to the screen with scaling according to scaleFactor.
=
=================

=================
=
= VL_MemToScreenScaledCoord
=
= Draws a part of a block of data to the screen.
= The block has the size origwidth*origheight.
= The part at (srcx, srcy) has the size width*height
= and will be painted to (destx, desty) with scaling according to scaleFactor.
=
=================
==========================================================================
=================
=
= VL_LatchToScreen
=
=================
 HACK: If screenBits is not 8 and the screen is faded out, the       result will be black when using SDL_BlitSurface. The reason       is that the logical palette needed for the transformation       to the screen color depth is not equal to the logical       palette of the latch (the latch is not faded). Therefore,       SDL tries to map the colors...       The result: All colors are mapped to black.       So, we do the blit on our own... width and height are ignored===========================================================================
=================
=
= VL_ScreenToScreen
=
=================
 ID_VL.C Uncomment the following line, if you get destination out of bounds assertion errors and want to ignore them during debugging#define IGNORE_BAD_DEST SDL will scale for us use "best" color depth according to libSDL===========================================================================
=======================
=
= VL_Shutdown
=
=======================
VL_SetTextMode ();
=======================
=
= VL_SetVGAPlaneMode
=
=======================

=============================================================================

						PALETTE OPS

		To avoid snow, do a WaitVBL BEFORE calling these

=============================================================================

=================
=
= VL_ConvertPalette
=
=================

=================
=
= VL_FillPalette
=
=================
===========================================================================
=================
=
= VL_SetColor
=
=================
===========================================================================
=================
=
= VL_GetColor
=
=================
===========================================================================
=================
=
= VL_SetPalette
=
=================
===========================================================================
=================
=
= VL_GetPalette
=
=================
===========================================================================
=================
=
= VL_FadeOut
=
= Fades the current palette to the given color in the given number of steps
=
=================
 rockbox fade through intermediate frames final color
=================
=
= VL_FadeIn
=
=================
 fade through intermediate frames final color
=============================================================================

							PIXEL OPS

=============================================================================

=================
=
= VL_Plot
=
=================

=================
=
= VL_GetPixel
=
=================

=================
=
= VL_Hlin
=
=================

=================
=
= VL_Vlin
=
=================

=================
=
= VL_Bar
=
=================

============================================================================

							MEMORY OPS

============================================================================

=================
=
= VL_MemToLatch
=
=================
===========================================================================
=================
=
= VL_MemToScreenScaledCoord
=
= Draws a block of data to the screen with scaling according to scaleFactor.
=
=================

=================
=
= VL_MemToScreenScaledCoord
=
= Draws a part of a block of data to the screen.
= The block has the size origwidth*origheight.
= The part at (srcx, srcy) has the size width*height
= and will be painted to (destx, desty) with scaling according to scaleFactor.
=
=================
==========================================================================
=================
=
= VL_LatchToScreen
=
=================
 HACK: If screenBits is not 8 and the screen is faded out, the       result will be black when using SDL_BlitSurface. The reason       is that the logical palette needed for the transformation       to the screen color depth is not equal to the logical       palette of the latch (the latch is not faded). Therefore,       SDL tries to map the colors...       The result: All colors are mapped to black.       So, we do the blit on our own... width and height are ignored===========================================================================
=================
=
= VL_ScreenToScreen
=
=================
 ID_VL.C Uncomment the following line, if you get destination out of bounds assertion errors and want to ignore them during debugging#define IGNORE_BAD_DEST SDL will scale for us use "best" color depth according to libSDL===========================================================================
=======================
=
= VL_Shutdown
=
=======================
VL_SetTextMode ();
=======================
=
= VL_SetVGAPlaneMode
=
=======================

=============================================================================

						PALETTE OPS

		To avoid snow, do a WaitVBL BEFORE calling these

=============================================================================

=================
=
= VL_ConvertPalette
=
=================

=================
=
= VL_FillPalette
=
=================
===========================================================================
=================
=
= VL_SetColor
=
=================
===========================================================================
=================
=
= VL_GetColor
=
=================
===========================================================================
=================
=
= VL_SetPalette
=
=================
===========================================================================
=================
=
= VL_GetPalette
=
=================
===========================================================================
=================
=
= VL_FadeOut
=
= Fades the current palette to the given color in the given number of steps
=
=================
 rockbox fade through intermediate frames final color
=================
=
= VL_FadeIn
=
=================
 fade through intermediate frames final color
=============================================================================

							PIXEL OPS

=============================================================================

=================
=
= VL_Plot
=
=================

=================
=
= VL_GetPixel
=
=================

=================
=
= VL_Hlin
=
=================

=================
=
= VL_Vlin
=
=================

=================
=
= VL_Bar
=
=================

============================================================================

							MEMORY OPS

============================================================================

=================
=
= VL_MemToLatch
=
=================
===========================================================================
=================
=
= VL_MemToScreenScaledCoord
=
= Draws a block of data to the screen with scaling according to scaleFactor.
=
=================

=================
=
= VL_MemToScreenScaledCoord
=
= Draws a part of a block of data to the screen.
= The block has the size origwidth*origheight.
= The part at (srcx, srcy) has the size width*height
= and will be painted to (destx, desty) with scaling according to scaleFactor.
=
=================
==========================================================================
=================
=
= VL_LatchToScreen
=
=================
 HACK: If screenBits is not 8 and the screen is faded out, the       result will be black when using SDL_BlitSurface. The reason       is that the logical palette needed for the transformation       to the screen color depth is not equal to the logical       palette of the latch (the latch is not faded). Therefore,       SDL tries to map the colors...       The result: All colors are mapped to black.       So, we do the blit on our own... width and height are ignored===========================================================================
=================
=
= VL_ScreenToScreen
=
=================
