*
 * @author mfeinberg
  make sure that we can re-assign the gradient without loosing the original start value. this is to emulate the case when the user changes the simulator controls via the gui and that sends increments for every drag of the slider. acid test to mock the update sequence all the way from the update loop The loop simulates the logic in the typical GlobalSimulationObjectiveListener::simulatedNumeric implementation*
 * @author mfeinberg
  make sure that we can re-assign the gradient without loosing the original start value. this is to emulate the case when the user changes the simulator controls via the gui and that sends increments for every drag of the slider. acid test to mock the update sequence all the way from the update loop The loop simulates the logic in the typical GlobalSimulationObjectiveListener::simulatedNumeric implementation*
 * @author mfeinberg
  make sure that we can re-assign the gradient without loosing the original start value. this is to emulate the case when the user changes the simulator controls via the gui and that sends increments for every drag of the slider. acid test to mock the update sequence all the way from the update loop The loop simulates the logic in the typical GlobalSimulationObjectiveListener::simulatedNumeric implementation*
 * @author mfeinberg
  make sure that we can re-assign the gradient without loosing the original start value. this is to emulate the case when the user changes the simulator controls via the gui and that sends increments for every drag of the slider. acid test to mock the update sequence all the way from the update loop The loop simulates the logic in the typical GlobalSimulationObjectiveListener::simulatedNumeric implementation*
 * @author mfeinberg
  make sure that we can re-assign the gradient without loosing the original start value. this is to emulate the case when the user changes the simulator controls via the gui and that sends increments for every drag of the slider. acid test to mock the update sequence all the way from the update loop The loop simulates the logic in the typical GlobalSimulationObjectiveListener::simulatedNumeric implementation*
 * @author mfeinberg
  make sure that we can re-assign the gradient without loosing the original start value. this is to emulate the case when the user changes the simulator controls via the gui and that sends increments for every drag of the slider. acid test to mock the update sequence all the way from the update loop The loop simulates the logic in the typical GlobalSimulationObjectiveListener::simulatedNumeric implementation*
 * @author mfeinberg
  make sure that we can re-assign the gradient without loosing the original start value. this is to emulate the case when the user changes the simulator controls via the gui and that sends increments for every drag of the slider. acid test to mock the update sequence all the way from the update loop The loop simulates the logic in the typical GlobalSimulationObjectiveListener::simulatedNumeric implementation