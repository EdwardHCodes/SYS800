**************************************************************************
 *
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2003 Hardeep Sidhu
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Kevin Ferrare 2005/10/16
 * multi-screen support, rewrote a lot of code
  Maximum number of tracks we can have loaded at one time  The number of items between the selected one and the end/start of
 * the buffer under which the buffer must reload  Information about a specific track  Formatted track name                      Playlist index                            Display index                             Is track queued?                          Is track marked as bad?                   Buffer used to store track names  Size of name buffer  Real index of first track loaded inside
                                 the buffer  Direction of the buffer (if the buffer
                                 was loaded BACKWARD, the last track in
                                 the buffer has a real index < to the
                                 real index of the the first track) Number of track entries loaded in buffer  Global playlist viewer settings  playlist being viewed                  Number of tracks in playlist               Index of current playing track             The selected track, relative (first is 0)  The track to move, relative (first is 0)
                                   or -1 if nothing is currently being moved  Playlist-relative index (as opposed to 
                                   viewer-relative index) of moving track     Used when viewing playlists on disk 
 * Loads the entries following 'index' in the playlist buffer
  Out of name buffer space  playlist_buffer_load_entries_screen()
 *      This function is called when the currently selected item gets too close
 *      to the start or the end of the loaded part of the playlis, or when
 *      the list callback requests a playlist item that has not been loaded yet
 *
 *      reference_track is either the currently selected track, or the track that
 *      has been requested by the callback, and has not been loaded yet.
  Playlist viewer orders songs based on display index.  We need to
       convert to real playlist index to access track  rotation : track0 in buffer + requested track  rotation : track0 in buffer + dist from the last track
                to the requested track (num_tracks-requested track)  Make sure that we are not returning an invalid pointer.
       In some cases, when scrolling really fast, it could happen that a reqested track
       has not been pre-loaded  This really shouldn't happen. If this happens, then
           the name_buffer is probably too small to store enough
           titles to fill the screen, and preload data in the short
           direction.
          
           If this happens then scrolling performance will probably
           be quite low, but it's better then having Data Abort errors  Initialize the playlist viewer.  Try to restore the list from control file If dynamic playlist still exists, view it anyway even 
        if playback has reached the end of the playlist  Nothing to view, exit  Viewing playlist on disk  Separate directory from filename  Something is playing, try to accommodate
            *  global_settings.max_files_in_playlist entries  Format trackname for display purposes  Only display the filename  Remove the extension  Full path  Format display line  Display playlist index  Update playlist in case something has changed or forced  Reload tracks  Menu of playlist commands.  Invoked via ON+PLAY on main viewer screen.
   Returns -1 if USB attached, 0 if no playlist change, 1 if playlist
   changed, 2 if a track was removed from the playlist  Abort current move  playlist  add to catalog  delete track  Start playing new track except if it's the lasttrack
                          track in the playlist and repeat mode is disabled  move track  shuffle  save playlist  playlist viewer settings  View current playlist  move down  move up  Current playing track  Track we are moving  Queued track  Main viewer function.  Filename identifies playlist to be viewed.  If NULL,
   view current playlist.  exit viewer  Playlist has changed (new track started?) Needed because update_playlist gives wrong value when
                                                            playing is stopped Timeout so we can determine if play status has changed  during moving, another redraw is going to be needed,
         * since viewer.selected_track is updated too late (after the first draw)
         * drawing the moving item needs it  Move track  play new track  New playlist  Our playlist is now the current list  ON+PLAY menu  Playlist changed  the show_icons option in the playlist viewer settings
                 * menu might have changed  this should probably be used **************************************************************************
 *
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2003 Hardeep Sidhu
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Kevin Ferrare 2005/10/16
 * multi-screen support, rewrote a lot of code
  Maximum number of tracks we can have loaded at one time  The number of items between the selected one and the end/start of
 * the buffer under which the buffer must reload  Information about a specific track  Formatted track name                      Playlist index                            Display index                             Is track queued?                          Is track marked as bad?                   Buffer used to store track names  Size of name buffer  Real index of first track loaded inside
                                 the buffer  Direction of the buffer (if the buffer
                                 was loaded BACKWARD, the last track in
                                 the buffer has a real index < to the
                                 real index of the the first track) Number of track entries loaded in buffer  Global playlist viewer settings  playlist being viewed                  Number of tracks in playlist               Index of current playing track             The selected track, relative (first is 0)  The track to move, relative (first is 0)
                                   or -1 if nothing is currently being moved  Playlist-relative index (as opposed to 
                                   viewer-relative index) of moving track     Used when viewing playlists on disk 
 * Loads the entries following 'index' in the playlist buffer
  Out of name buffer space  playlist_buffer_load_entries_screen()
 *      This function is called when the currently selected item gets too close
 *      to the start or the end of the loaded part of the playlis, or when
 *      the list callback requests a playlist item that has not been loaded yet
 *
 *      reference_track is either the currently selected track, or the track that
 *      has been requested by the callback, and has not been loaded yet.
  Playlist viewer orders songs based on display index.  We need to
       convert to real playlist index to access track  rotation : track0 in buffer + requested track  rotation : track0 in buffer + dist from the last track
                to the requested track (num_tracks-requested track)  Make sure that we are not returning an invalid pointer.
       In some cases, when scrolling really fast, it could happen that a reqested track
       has not been pre-loaded  This really shouldn't happen. If this happens, then
           the name_buffer is probably too small to store enough
           titles to fill the screen, and preload data in the short
           direction.
          
           If this happens then scrolling performance will probably
           be quite low, but it's better then having Data Abort errors  Initialize the playlist viewer.  Try to restore the list from control file If dynamic playlist still exists, view it anyway even 
        if playback has reached the end of the playlist  Nothing to view, exit  Viewing playlist on disk  Separate directory from filename  Something is playing, try to accommodate
            *  global_settings.max_files_in_playlist entries  Format trackname for display purposes  Only display the filename  Remove the extension  Full path  Format display line  Display playlist index  Update playlist in case something has changed or forced  Reload tracks  Menu of playlist commands.  Invoked via ON+PLAY on main viewer screen.
   Returns -1 if USB attached, 0 if no playlist change, 1 if playlist
   changed, 2 if a track was removed from the playlist  Abort current move  playlist  add to catalog  delete track  Start playing new track except if it's the lasttrack
                          track in the playlist and repeat mode is disabled  move track  shuffle  save playlist  playlist viewer settings  View current playlist  move down  move up  Current playing track  Track we are moving  Queued track  Main viewer function.  Filename identifies playlist to be viewed.  If NULL,
   view current playlist.  exit viewer  Playlist has changed (new track started?) Needed because update_playlist gives wrong value when
                                                            playing is stopped Timeout so we can determine if play status has changed  during moving, another redraw is going to be needed,
         * since viewer.selected_track is updated too late (after the first draw)
         * drawing the moving item needs it  Move track  play new track  New playlist  Our playlist is now the current list  ON+PLAY menu  Playlist changed  the show_icons option in the playlist viewer settings
                 * menu might have changed  this should probably be used **************************************************************************
 *
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2003 Hardeep Sidhu
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************
 * Kevin Ferrare 2005/10/16
 * multi-screen support, rewrote a lot of code
  Maximum number of tracks we can have loaded at one time  The number of items between the selected one and the end/start of
 * the buffer under which the buffer must reload  Information about a specific track  Formatted track name                      Playlist index                            Display index                             Is track queued?                          Is track marked as bad?                   Buffer used to store track names  Size of name buffer  Real index of first track loaded inside
                                 the buffer  Direction of the buffer (if the buffer
                                 was loaded BACKWARD, the last track in
                                 the buffer has a real index < to the
                                 real index of the the first track) Number of track entries loaded in buffer  Global playlist viewer settings  playlist being viewed                  Number of tracks in playlist               Index of current playing track             The selected track, relative (first is 0)  The track to move, relative (first is 0)
                                   or -1 if nothing is currently being moved  Playlist-relative index (as opposed to 
                                   viewer-relative index) of moving track     Used when viewing playlists on disk 
 * Loads the entries following 'index' in the playlist buffer
  Out of name buffer space  playlist_buffer_load_entries_screen()
 *      This function is called when the currently selected item gets too close
 *      to the start or the end of the loaded part of the playlis, or when
 *      the list callback requests a playlist item that has not been loaded yet
 *
 *      reference_track is either the currently selected track, or the track that
 *      has been requested by the callback, and has not been loaded yet.
  Playlist viewer orders songs based on display index.  We need to
       convert to real playlist index to access track  rotation : track0 in buffer + requested track  rotation : track0 in buffer + dist from the last track
                to the requested track (num_tracks-requested track)  Make sure that we are not returning an invalid pointer.
       In some cases, when scrolling really fast, it could happen that a reqested track
       has not been pre-loaded  This really shouldn't happen. If this happens, then
           the name_buffer is probably too small to store enough
           titles to fill the screen, and preload data in the short
           direction.
          
           If this happens then scrolling performance will probably
           be quite low, but it's better then having Data Abort errors  Initialize the playlist viewer.  Try to restore the list from control file If dynamic playlist still exists, view it anyway even 
        if playback has reached the end of the playlist  Nothing to view, exit  Viewing playlist on disk  Separate directory from filename  Something is playing, try to accommodate
            *  global_settings.max_files_in_playlist entries  Format trackname for display purposes  Only display the filename  Remove the extension  Full path  Format display line  Display playlist index  Update playlist in case something has changed or forced  Reload tracks  Menu of playlist commands.  Invoked via ON+PLAY on main viewer screen.
   Returns -1 if USB attached, 0 if no playlist change, 1 if playlist
   changed, 2 if a track was removed from the playlist  Abort current move  playlist  add to catalog  delete track  Start playing new track except if it's the lasttrack
                          track in the playlist and repeat mode is disabled  move track  shuffle  save playlist  playlist viewer settings  View current playlist  move down  move up  Current playing track  Track we are moving  Queued track  Main viewer function.  Filename identifies playlist to be viewed.  If NULL,
   view current playlist.  exit viewer  Playlist has changed (new track started?) Needed because update_playlist gives wrong value when
                                                            playing is stopped Timeout so we can determine if play status has changed  during moving, another redraw is going to be needed,
         * since viewer.selected_track is updated too late (after the first draw)
         * drawing the moving item needs it  Move track  play new track  New playlist  Our playlist is now the current list  ON+PLAY menu  Playlist changed  the show_icons option in the playlist viewer settings
                 * menu might have changed  this should probably be used 