**************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2005 Kevin Ferrare
*
* Mystify demo plugin
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** Key assignement ****************************** Globals **********************************
 * Compute a new random step to make the point bounce the borders of the screen
 
 * Point Stuffs
 
 * Polygon Stuffs
 
 * Generates a random polygon (which fits the screen size though)
 
 * Draw the given polygon onto the screen
 
 * Polygon moving data Stuffs
  -1 because we want a positive random step 
 * Update the given polygon's position according to the given informations in
 * polygon_move (polygon_move may be updated)
 
 * Polygon fifo Stuffs
 
     * Workaround for gcc (which uses memcpy internally) to avoid link error
     * fifo->tab[fifo->fifo_head]=polygon
     
 * Drawing stuffs
 
 * Main function
  This describes the movement of the leading
                                             polygon, the others just follow  We have too many polygons, we must drop some of them  We have the good number of polygons, we can safely drop 
                the last one to add the new one later 
            * Then we update the leading polygon for the next round acording to
            * current move (the move may be altered in case of sreen border 
            * collision)
             Now the drawing part  Speed handling full speed ************************** Plugin entry point *****************************************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2005 Kevin Ferrare
*
* Mystify demo plugin
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** Key assignement ****************************** Globals **********************************
 * Compute a new random step to make the point bounce the borders of the screen
 
 * Point Stuffs
 
 * Polygon Stuffs
 
 * Generates a random polygon (which fits the screen size though)
 
 * Draw the given polygon onto the screen
 
 * Polygon moving data Stuffs
  -1 because we want a positive random step 
 * Update the given polygon's position according to the given informations in
 * polygon_move (polygon_move may be updated)
 
 * Polygon fifo Stuffs
 
     * Workaround for gcc (which uses memcpy internally) to avoid link error
     * fifo->tab[fifo->fifo_head]=polygon
     
 * Drawing stuffs
 
 * Main function
  This describes the movement of the leading
                                             polygon, the others just follow  We have too many polygons, we must drop some of them  We have the good number of polygons, we can safely drop 
                the last one to add the new one later 
            * Then we update the leading polygon for the next round acording to
            * current move (the move may be altered in case of sreen border 
            * collision)
             Now the drawing part  Speed handling full speed ************************** Plugin entry point *****************************************************************************************************
*             __________               __   ___.
*   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
*   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
*   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
*   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
*                     \/            \/     \/    \/            \/
* $Id$
*
* Copyright (C) 2005 Kevin Ferrare
*
* Mystify demo plugin
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
* KIND, either express or implied.
*
*************************************************************************** Key assignement ****************************** Globals **********************************
 * Compute a new random step to make the point bounce the borders of the screen
 
 * Point Stuffs
 
 * Polygon Stuffs
 
 * Generates a random polygon (which fits the screen size though)
 
 * Draw the given polygon onto the screen
 
 * Polygon moving data Stuffs
  -1 because we want a positive random step 
 * Update the given polygon's position according to the given informations in
 * polygon_move (polygon_move may be updated)
 
 * Polygon fifo Stuffs
 
     * Workaround for gcc (which uses memcpy internally) to avoid link error
     * fifo->tab[fifo->fifo_head]=polygon
     
 * Drawing stuffs
 
 * Main function
  This describes the movement of the leading
                                             polygon, the others just follow  We have too many polygons, we must drop some of them  We have the good number of polygons, we can safely drop 
                the last one to add the new one later 
            * Then we update the leading polygon for the next round acording to
            * current move (the move may be altered in case of sreen border 
            * collision)
             Now the drawing part  Speed handling full speed ************************** Plugin entry point ***************************