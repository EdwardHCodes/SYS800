**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C)2003 by Benjamin Metzler
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Used to buffer bookmarks while displaying the bookmark list.  flags for optional bookmark tokens  bookmark values  optional values  File name created by generate_bookmark_file_name  Bookmark created by create_bookmark Filename from parsed bookmark (can be made local where needed)  -----------------------------------------------------------------------  This is an interface function from the context menu.                     Returns true on successful bookmark creation.                            -----------------------------------------------------------------------  -----------------------------------------------------------------------  This function acts as the load interface from the context menu.          This function determines the bookmark file name and then loads that file for the user.  The user can then select or delete previous bookmarks.    This function returns BOOKMARK_SUCCESS on the selection of a track to    resume, BOOKMARK_FAIL if the menu is exited without a selection and      BOOKMARK_USB_CONNECTED if the menu is forced to exit due to a USB        connection.                                                              -----------------------------------------------------------------------  -----------------------------------------------------------------------  Gives the user a list of the Most Recent Bookmarks.  This is an          interface function                                                       Returns true on the successful selection of a recent bookmark.           -----------------------------------------------------------------------  -----------------------------------------------------------------------  This function handles an autobookmark creation.  This is an interface    function.                                                                Returns true on successful bookmark creation.                            -----------------------------------------------------------------------  first pause playback  -----------------------------------------------------------------------  This function takes the current current resume information and writes    that to the beginning of the bookmark file.                              This file will contain N number of bookmarks in the following format:    resume_index*resume_offset*resume_seed*resume_first_index*               resume_file*milliseconds*MP3 Title*                                      Returns true on successful bookmark write.                               Returns false if any part of the bookmarking process fails.  It is       possible that a bookmark is successfully added to the most recent         bookmark list but fails to be added to the bookmark file or vice versa.  ------------------------------------------------------------------------ something didn't happen correctly, do nothing  writing the bookmark  generating bookmark file failed  Get the name of the playlist and the name of the track from a bookmark.  Returns true iff both were extracted.                                    -----------------------------------------------------------------------  This function adds a bookmark to a file.                                 Returns true on successful bookmark add.                                 ------------------------------------------------------------------------ Opening up a temp bookmark file  can't open the temp file  Writing the new bookmark to the begining of the temp file  Reading in the previous bookmarks and writing them to the temp file  The MRB has a max of MAX_BOOKMARKS in it  This keeps it from getting too large  GCC 7 and up complain about the snprintf in create_bookmark() when
   compiled with -D_FORTIFY_SOURCE or -Wformat-truncation
   This is a false positive, so disable it here only  -----------------------------------------------------------------------  This function takes the system resume data and formats it into a valid   bookmark.                                                                Returns not NULL on successful bookmark format.                          -----------------------------------------------------------------------  something didn't happen correctly, do nothing  grab the currently playing track  Get some basic resume information  queue_resume and queue_resume_index are not used and can be ignored. Get the currently playing file minus the path  This is used when displaying the available bookmarks  create the bookmark  new optional bookmark token descriptors should be inserted
                just before the "%s;%s" in this line...  ... their flags should go here ...  ...and their values should go here  more mandatory tokens  checking to see if the bookmark is valid  -Wformat-truncation  -----------------------------------------------------------------------  This function will determine if an autoload is necessary.  This is an    interface function.                                                      Returns true on bookmark load or bookmark selection.                     ------------------------------------------------------------------------Checking to see if a bookmark file exists. Selected bookmark not found.  Act as if autoload was done even if it failed, since the 
             * user did make an active selection.
              -----------------------------------------------------------------------  This function loads the bookmark information into the resume memory.     This is an interface function.                                           Returns true on successful bookmark load.                                ------------------------------------------------------------------------ This is not an auto-load, so list the bookmarks  Selected bookmark not found.  Entire file fits in buffer  Using count as a guide on how far to move could possibly fail
         * sometimes. Use byte count if that is a problem?
          Move count * 3 / 4 items in the direction the user is moving,
             * but don't go too close to the end.
              -----------------------------------------------------------------------  This displays the bookmarks in a file and allows the user to             select one to play.                                                      *selected_bookmark contains a non NULL value on successful bookmark      selection.                                                               Returns BOOKMARK_SUCCESS on successful bookmark selection, BOOKMARK_FAIL if no selection was made and BOOKMARK_USB_CONNECTED if the selection     menu is forced to exit due to a USB connection.                          ------------------------------------------------------------------------ No more bookmarks, delete file and exit  Selected item has been deleted  -----------------------------------------------------------------------  This function takes a location in a bookmark file and deletes that       bookmark.                                                                Returns true on successful bookmark deletion.                            ------------------------------------------------------------------------ Opening up a temp bookmark file  can't open the temp file  Reading in the previous bookmarks and writing them to the temp file  -----------------------------------------------------------------------  This function parses a bookmark, says the voice UI part of it.           ------------------------------------------------------------------------ HWCODEC cannot enqueue voice file entries and .talk thumbnails
       together, because there is no guarantee that the same mp3
       parameters are used.  It's useful to know which playlist this is  Track filename  -----------------------------------------------------------------------  This function parses a bookmark and then plays it.                       Returns true on successful bookmark play.                                ------------------------------------------------------------------------ preset pitch and speed to 100% in case bookmark doesn't have info  Should be atol, but we don't have it.  -----------------------------------------------------------------------  This function takes a bookmark and parses it.  This function also        validates the bookmark.  The parse_filenames flag indicates whether      the filename tokens are to be extracted.                                 Returns true on successful bookmark parse.                               -----------------------------------------------------------------------  if new format bookmark, extract the optional content flags,
       otherwise treat as an original format bookmark  extract all original bookmark tokens  skip deprecated token  extract all optional bookmark tokens  extract file names  -----------------------------------------------------------------------  This function is used by multiple functions and is used to generate a    bookmark named based off of the input.                                   Changing this function could result in how the bookmarks are stored.     it would be here that the centralized/decentralized bookmark code        could be placed.                                                         Always returns true                                                      -----------------------------------------------------------------------  if this is a root dir MP3, rename the bookmark file root_dir.bmark  otherwise, name it based on the in variable  The "root" of an extra volume need special handling too.  -----------------------------------------------------------------------  Returns true if a bookmark file exists for the current playlist.         This is an interface function.                                           -----------------------------------------------------------------------  -----------------------------------------------------------------------  Checks the current state of the system and returns true if it is in a    bookmarkable state.                                                      This is an interface funtion.                                            -----------------------------------------------------------------------  no track playing  invalid queue info  can't bookmark while in the queue **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C)2003 by Benjamin Metzler
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Used to buffer bookmarks while displaying the bookmark list.  flags for optional bookmark tokens  bookmark values  optional values  File name created by generate_bookmark_file_name  Bookmark created by create_bookmark Filename from parsed bookmark (can be made local where needed)  -----------------------------------------------------------------------  This is an interface function from the context menu.                     Returns true on successful bookmark creation.                            -----------------------------------------------------------------------  -----------------------------------------------------------------------  This function acts as the load interface from the context menu.          This function determines the bookmark file name and then loads that file for the user.  The user can then select or delete previous bookmarks.    This function returns BOOKMARK_SUCCESS on the selection of a track to    resume, BOOKMARK_FAIL if the menu is exited without a selection and      BOOKMARK_USB_CONNECTED if the menu is forced to exit due to a USB        connection.                                                              -----------------------------------------------------------------------  -----------------------------------------------------------------------  Gives the user a list of the Most Recent Bookmarks.  This is an          interface function                                                       Returns true on the successful selection of a recent bookmark.           -----------------------------------------------------------------------  -----------------------------------------------------------------------  This function handles an autobookmark creation.  This is an interface    function.                                                                Returns true on successful bookmark creation.                            -----------------------------------------------------------------------  first pause playback  -----------------------------------------------------------------------  This function takes the current current resume information and writes    that to the beginning of the bookmark file.                              This file will contain N number of bookmarks in the following format:    resume_index*resume_offset*resume_seed*resume_first_index*               resume_file*milliseconds*MP3 Title*                                      Returns true on successful bookmark write.                               Returns false if any part of the bookmarking process fails.  It is       possible that a bookmark is successfully added to the most recent         bookmark list but fails to be added to the bookmark file or vice versa.  ------------------------------------------------------------------------ something didn't happen correctly, do nothing  writing the bookmark  generating bookmark file failed  Get the name of the playlist and the name of the track from a bookmark.  Returns true iff both were extracted.                                    -----------------------------------------------------------------------  This function adds a bookmark to a file.                                 Returns true on successful bookmark add.                                 ------------------------------------------------------------------------ Opening up a temp bookmark file  can't open the temp file  Writing the new bookmark to the begining of the temp file  Reading in the previous bookmarks and writing them to the temp file  The MRB has a max of MAX_BOOKMARKS in it  This keeps it from getting too large  GCC 7 and up complain about the snprintf in create_bookmark() when
   compiled with -D_FORTIFY_SOURCE or -Wformat-truncation
   This is a false positive, so disable it here only  -----------------------------------------------------------------------  This function takes the system resume data and formats it into a valid   bookmark.                                                                Returns not NULL on successful bookmark format.                          -----------------------------------------------------------------------  something didn't happen correctly, do nothing  grab the currently playing track  Get some basic resume information  queue_resume and queue_resume_index are not used and can be ignored. Get the currently playing file minus the path  This is used when displaying the available bookmarks  create the bookmark  new optional bookmark token descriptors should be inserted
                just before the "%s;%s" in this line...  ... their flags should go here ...  ...and their values should go here  more mandatory tokens  checking to see if the bookmark is valid  -Wformat-truncation  -----------------------------------------------------------------------  This function will determine if an autoload is necessary.  This is an    interface function.                                                      Returns true on bookmark load or bookmark selection.                     ------------------------------------------------------------------------Checking to see if a bookmark file exists. Selected bookmark not found.  Act as if autoload was done even if it failed, since the 
             * user did make an active selection.
              -----------------------------------------------------------------------  This function loads the bookmark information into the resume memory.     This is an interface function.                                           Returns true on successful bookmark load.                                ------------------------------------------------------------------------ This is not an auto-load, so list the bookmarks  Selected bookmark not found.  Entire file fits in buffer  Using count as a guide on how far to move could possibly fail
         * sometimes. Use byte count if that is a problem?
          Move count * 3 / 4 items in the direction the user is moving,
             * but don't go too close to the end.
              -----------------------------------------------------------------------  This displays the bookmarks in a file and allows the user to             select one to play.                                                      *selected_bookmark contains a non NULL value on successful bookmark      selection.                                                               Returns BOOKMARK_SUCCESS on successful bookmark selection, BOOKMARK_FAIL if no selection was made and BOOKMARK_USB_CONNECTED if the selection     menu is forced to exit due to a USB connection.                          ------------------------------------------------------------------------ No more bookmarks, delete file and exit  Selected item has been deleted  -----------------------------------------------------------------------  This function takes a location in a bookmark file and deletes that       bookmark.                                                                Returns true on successful bookmark deletion.                            ------------------------------------------------------------------------ Opening up a temp bookmark file  can't open the temp file  Reading in the previous bookmarks and writing them to the temp file  -----------------------------------------------------------------------  This function parses a bookmark, says the voice UI part of it.           ------------------------------------------------------------------------ HWCODEC cannot enqueue voice file entries and .talk thumbnails
       together, because there is no guarantee that the same mp3
       parameters are used.  It's useful to know which playlist this is  Track filename  -----------------------------------------------------------------------  This function parses a bookmark and then plays it.                       Returns true on successful bookmark play.                                ------------------------------------------------------------------------ preset pitch and speed to 100% in case bookmark doesn't have info  Should be atol, but we don't have it.  -----------------------------------------------------------------------  This function takes a bookmark and parses it.  This function also        validates the bookmark.  The parse_filenames flag indicates whether      the filename tokens are to be extracted.                                 Returns true on successful bookmark parse.                               -----------------------------------------------------------------------  if new format bookmark, extract the optional content flags,
       otherwise treat as an original format bookmark  extract all original bookmark tokens  skip deprecated token  extract all optional bookmark tokens  extract file names  -----------------------------------------------------------------------  This function is used by multiple functions and is used to generate a    bookmark named based off of the input.                                   Changing this function could result in how the bookmarks are stored.     it would be here that the centralized/decentralized bookmark code        could be placed.                                                         Always returns true                                                      -----------------------------------------------------------------------  if this is a root dir MP3, rename the bookmark file root_dir.bmark  otherwise, name it based on the in variable  The "root" of an extra volume need special handling too.  -----------------------------------------------------------------------  Returns true if a bookmark file exists for the current playlist.         This is an interface function.                                           -----------------------------------------------------------------------  -----------------------------------------------------------------------  Checks the current state of the system and returns true if it is in a    bookmarkable state.                                                      This is an interface funtion.                                            -----------------------------------------------------------------------  no track playing  invalid queue info  can't bookmark while in the queue **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C)2003 by Benjamin Metzler
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Used to buffer bookmarks while displaying the bookmark list.  flags for optional bookmark tokens  bookmark values  optional values  File name created by generate_bookmark_file_name  Bookmark created by create_bookmark Filename from parsed bookmark (can be made local where needed)  -----------------------------------------------------------------------  This is an interface function from the context menu.                     Returns true on successful bookmark creation.                            -----------------------------------------------------------------------  -----------------------------------------------------------------------  This function acts as the load interface from the context menu.          This function determines the bookmark file name and then loads that file for the user.  The user can then select or delete previous bookmarks.    This function returns BOOKMARK_SUCCESS on the selection of a track to    resume, BOOKMARK_FAIL if the menu is exited without a selection and      BOOKMARK_USB_CONNECTED if the menu is forced to exit due to a USB        connection.                                                              -----------------------------------------------------------------------  -----------------------------------------------------------------------  Gives the user a list of the Most Recent Bookmarks.  This is an          interface function                                                       Returns true on the successful selection of a recent bookmark.           -----------------------------------------------------------------------  -----------------------------------------------------------------------  This function handles an autobookmark creation.  This is an interface    function.                                                                Returns true on successful bookmark creation.                            -----------------------------------------------------------------------  first pause playback  -----------------------------------------------------------------------  This function takes the current current resume information and writes    that to the beginning of the bookmark file.                              This file will contain N number of bookmarks in the following format:    resume_index*resume_offset*resume_seed*resume_first_index*               resume_file*milliseconds*MP3 Title*                                      Returns true on successful bookmark write.                               Returns false if any part of the bookmarking process fails.  It is       possible that a bookmark is successfully added to the most recent         bookmark list but fails to be added to the bookmark file or vice versa.  ------------------------------------------------------------------------ something didn't happen correctly, do nothing  writing the bookmark  generating bookmark file failed  Get the name of the playlist and the name of the track from a bookmark.  Returns true iff both were extracted.                                    -----------------------------------------------------------------------  This function adds a bookmark to a file.                                 Returns true on successful bookmark add.                                 ------------------------------------------------------------------------ Opening up a temp bookmark file  can't open the temp file  Writing the new bookmark to the begining of the temp file  Reading in the previous bookmarks and writing them to the temp file  The MRB has a max of MAX_BOOKMARKS in it  This keeps it from getting too large  GCC 7 and up complain about the snprintf in create_bookmark() when
   compiled with -D_FORTIFY_SOURCE or -Wformat-truncation
   This is a false positive, so disable it here only  -----------------------------------------------------------------------  This function takes the system resume data and formats it into a valid   bookmark.                                                                Returns not NULL on successful bookmark format.                          -----------------------------------------------------------------------  something didn't happen correctly, do nothing  grab the currently playing track  Get some basic resume information  queue_resume and queue_resume_index are not used and can be ignored. Get the currently playing file minus the path  This is used when displaying the available bookmarks  create the bookmark  new optional bookmark token descriptors should be inserted
                just before the "%s;%s" in this line...  ... their flags should go here ...  ...and their values should go here  more mandatory tokens  checking to see if the bookmark is valid  -Wformat-truncation  -----------------------------------------------------------------------  This function will determine if an autoload is necessary.  This is an    interface function.                                                      Returns true on bookmark load or bookmark selection.                     ------------------------------------------------------------------------Checking to see if a bookmark file exists. Selected bookmark not found.  Act as if autoload was done even if it failed, since the 
             * user did make an active selection.
              -----------------------------------------------------------------------  This function loads the bookmark information into the resume memory.     This is an interface function.                                           Returns true on successful bookmark load.                                ------------------------------------------------------------------------ This is not an auto-load, so list the bookmarks  Selected bookmark not found.  Entire file fits in buffer  Using count as a guide on how far to move could possibly fail
         * sometimes. Use byte count if that is a problem?
          Move count * 3 / 4 items in the direction the user is moving,
             * but don't go too close to the end.
              -----------------------------------------------------------------------  This displays the bookmarks in a file and allows the user to             select one to play.                                                      *selected_bookmark contains a non NULL value on successful bookmark      selection.                                                               Returns BOOKMARK_SUCCESS on successful bookmark selection, BOOKMARK_FAIL if no selection was made and BOOKMARK_USB_CONNECTED if the selection     menu is forced to exit due to a USB connection.                          ------------------------------------------------------------------------ No more bookmarks, delete file and exit  Selected item has been deleted  -----------------------------------------------------------------------  This function takes a location in a bookmark file and deletes that       bookmark.                                                                Returns true on successful bookmark deletion.                            ------------------------------------------------------------------------ Opening up a temp bookmark file  can't open the temp file  Reading in the previous bookmarks and writing them to the temp file  -----------------------------------------------------------------------  This function parses a bookmark, says the voice UI part of it.           ------------------------------------------------------------------------ HWCODEC cannot enqueue voice file entries and .talk thumbnails
       together, because there is no guarantee that the same mp3
       parameters are used.  It's useful to know which playlist this is  Track filename  -----------------------------------------------------------------------  This function parses a bookmark and then plays it.                       Returns true on successful bookmark play.                                ------------------------------------------------------------------------ preset pitch and speed to 100% in case bookmark doesn't have info  Should be atol, but we don't have it.  -----------------------------------------------------------------------  This function takes a bookmark and parses it.  This function also        validates the bookmark.  The parse_filenames flag indicates whether      the filename tokens are to be extracted.                                 Returns true on successful bookmark parse.                               -----------------------------------------------------------------------  if new format bookmark, extract the optional content flags,
       otherwise treat as an original format bookmark  extract all original bookmark tokens  skip deprecated token  extract all optional bookmark tokens  extract file names  -----------------------------------------------------------------------  This function is used by multiple functions and is used to generate a    bookmark named based off of the input.                                   Changing this function could result in how the bookmarks are stored.     it would be here that the centralized/decentralized bookmark code        could be placed.                                                         Always returns true                                                      -----------------------------------------------------------------------  if this is a root dir MP3, rename the bookmark file root_dir.bmark  otherwise, name it based on the in variable  The "root" of an extra volume need special handling too.  -----------------------------------------------------------------------  Returns true if a bookmark file exists for the current playlist.         This is an interface function.                                           -----------------------------------------------------------------------  -----------------------------------------------------------------------  Checks the current state of the system and returns true if it is in a    bookmarkable state.                                                      This is an interface funtion.                                            -----------------------------------------------------------------------  no track playing  invalid queue info  can't bookmark while in the queue 