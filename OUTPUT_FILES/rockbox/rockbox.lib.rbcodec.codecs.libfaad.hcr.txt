
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2004 G.C. Pascutto, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* ISO/IEC 14496-3/Amd.1 
 * 8.5.3.3: Huffman Codeword Reordering for AAC spectral data (HCR) 
 *
 * HCR devides the spectral data in known fixed size segments, and 
 * sorts it by the importance of the data. The importance is firstly 
 * the (lower) position in the spectrum, and secondly the largest 
 * value in the used codebook. 
 * The most important data is written at the start of each segment
 * (at known positions), the remaining data is interleaved inbetween, 
 * with the writing direction alternating.
 * Data length is not increased.
 8.5.3.3.1 Pre-sorting  8.5.3.3.2 Derivation of segment width  bit-twiddling helpers  rewind and reverse  32 bit version  32 bit reverse  shift off low bits  64 bit version  double 32 bit reverse  last 32<>32 bit swap is implicit below  shift off low bits (this is really only one 64 bit shift)  bits_t version  merge bits of a to b  maskoff superfluous high b bits  left shift a b->len bits  merge  only want spectral data CB's  normal codebook pairs  escape codebook  no data (e.g. silence)  since there is spectral data, at least one codeword has nonzero length  VCB11 code books in use  step 1: decode PCW's (set 0), and stuff data in easier-to-use format  select codebook to process this pass  loop over sfbs  loop over all in this sfb, 4 lines per loop  check whether sfb used here is the one we want to process  check whether codebook used here is the one we want to process  precalculate some stuff  read codewords until end of sfb or end of window group (shouldn't only 1 trigger?)  read and decode PCW  read in normal segments  keep leftover bits  remaining stuff after last segment, we unfortunately couldn't read
                                               this in earlier because it might not fit in 64 bits. since we already
                                               decoded (and removed) the PCW it is now guaranteed to fit  step 2: decode nonPCWs  data up 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2004 G.C. Pascutto, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* ISO/IEC 14496-3/Amd.1 
 * 8.5.3.3: Huffman Codeword Reordering for AAC spectral data (HCR) 
 *
 * HCR devides the spectral data in known fixed size segments, and 
 * sorts it by the importance of the data. The importance is firstly 
 * the (lower) position in the spectrum, and secondly the largest 
 * value in the used codebook. 
 * The most important data is written at the start of each segment
 * (at known positions), the remaining data is interleaved inbetween, 
 * with the writing direction alternating.
 * Data length is not increased.
 8.5.3.3.1 Pre-sorting  8.5.3.3.2 Derivation of segment width  bit-twiddling helpers  rewind and reverse  32 bit version  32 bit reverse  shift off low bits  64 bit version  double 32 bit reverse  last 32<>32 bit swap is implicit below  shift off low bits (this is really only one 64 bit shift)  bits_t version  merge bits of a to b  maskoff superfluous high b bits  left shift a b->len bits  merge  only want spectral data CB's  normal codebook pairs  escape codebook  no data (e.g. silence)  since there is spectral data, at least one codeword has nonzero length  VCB11 code books in use  step 1: decode PCW's (set 0), and stuff data in easier-to-use format  select codebook to process this pass  loop over sfbs  loop over all in this sfb, 4 lines per loop  check whether sfb used here is the one we want to process  check whether codebook used here is the one we want to process  precalculate some stuff  read codewords until end of sfb or end of window group (shouldn't only 1 trigger?)  read and decode PCW  read in normal segments  keep leftover bits  remaining stuff after last segment, we unfortunately couldn't read
                                               this in earlier because it might not fit in 64 bits. since we already
                                               decoded (and removed) the PCW it is now guaranteed to fit  step 2: decode nonPCWs  data up 
** FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
** Copyright (C) 2004 G.C. Pascutto, Ahead Software AG, http://www.nero.com
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** Any non-GPL usage of this software or parts of this software is strictly
** forbidden.
**
** Commercial non-GPL licensing of this software is possible.
** For more info contact Ahead Software through Mpeg4AAClicense@nero.com.
**
** $Id$
* ISO/IEC 14496-3/Amd.1 
 * 8.5.3.3: Huffman Codeword Reordering for AAC spectral data (HCR) 
 *
 * HCR devides the spectral data in known fixed size segments, and 
 * sorts it by the importance of the data. The importance is firstly 
 * the (lower) position in the spectrum, and secondly the largest 
 * value in the used codebook. 
 * The most important data is written at the start of each segment
 * (at known positions), the remaining data is interleaved inbetween, 
 * with the writing direction alternating.
 * Data length is not increased.
 8.5.3.3.1 Pre-sorting  8.5.3.3.2 Derivation of segment width  bit-twiddling helpers  rewind and reverse  32 bit version  32 bit reverse  shift off low bits  64 bit version  double 32 bit reverse  last 32<>32 bit swap is implicit below  shift off low bits (this is really only one 64 bit shift)  bits_t version  merge bits of a to b  maskoff superfluous high b bits  left shift a b->len bits  merge  only want spectral data CB's  normal codebook pairs  escape codebook  no data (e.g. silence)  since there is spectral data, at least one codeword has nonzero length  VCB11 code books in use  step 1: decode PCW's (set 0), and stuff data in easier-to-use format  select codebook to process this pass  loop over sfbs  loop over all in this sfb, 4 lines per loop  check whether sfb used here is the one we want to process  check whether codebook used here is the one we want to process  precalculate some stuff  read codewords until end of sfb or end of window group (shouldn't only 1 trigger?)  read and decode PCW  read in normal segments  keep leftover bits  remaining stuff after last segment, we unfortunately couldn't read
                                               this in earlier because it might not fit in 64 bits. since we already
                                               decoded (and removed) the PCW it is now guaranteed to fit  step 2: decode nonPCWs  data up 