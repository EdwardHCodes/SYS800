**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2017 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** {Action Code,    Button code,    Prereq button code }  
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code } 
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping 
     ACTION_STD_QUICKSCREEN,
 *    ACTION_STD_KEYLOCK
 *    ACTION_STD_REC
 *    ACTION_STD_HOTKEY

 *    { ACTION_STD_QUICKSCREEN, BUTTON_SELECT|BUTTON_REPEAT,         BUTTON_SELECT },
  button_context_standard  button_context_mainmenu as with sansa clip mapping - "back" button returns you to WPS     { ACTION_WPS_BROWSE,        BUTTON_UP|BUTTON_REPEAT,  BUTTON_UP },     ACTION_WPS_ID3SCREEN    optional  this should be the same as ACTION_STD_MENU     ACTION_WPS_VIEW_PLAYLIST
 *    ACTION_WPS_LIST_BOOKMARKS,  optional
 *    ACTION_WPS_CREATE_BOOKMARK, optional
  button_context_wps     ACTION_SETTINGS_INCBIGSTEP     ACTION_SETTINGS_DECBIGSTEP     ACTION_SETTINGS_SET, Used by touchscreen targets  button_context_settings     ACTION_LISTTREE_PGUP, optional
 *    ACTION_LISTTREE_PGDOWN, optional
  button_context_list     ACTION_TREE_ROOT_INIT,
 *    ACTION_TREE_PGLEFT, optional
 *    ACTION_TREE_PGRIGHT, optional
 *    ACTION_TREE_STOP,
 *    ACTION_TREE_WPS,
 *    ACTION_TREE_HOTKEY,
     { ACTION_TREE_WPS, BUTTON_UP|BUTTON_REL, BUTTON_UP },
 *    { ACTION_TREE_STOP,   BUTTON_POWER|BUTTON_REL,      BUTTON_POWER },
 *    { ACTION_TREE_HOTKEY, BUTTON_REC|BUTTON_REL,        BUTTON_REC },
  button_context_tree  button_context_settings_yesno  button_context_quickscreen LAST_ITEM_IN_LIST__NEXTLIST(CONTEXT_SETTINGS) button_context_settings_time     { ACTION_PS_NUDGE_LEFTOFF,  BUTTON_LEFT|BUTTON_REL,       BUTTON_NONE },     { ACTION_PS_NUDGE_RIGHTOFF, BUTTON_RIGHT|BUTTON_REL,      BUTTON_NONE },  button_context_pitchscreen  button_context_keyboard  button_context_bmark  get_context_mapping returns a pointer to one of the above defined arrays depending on the context **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2017 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** {Action Code,    Button code,    Prereq button code }  
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code } 
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping 
     ACTION_STD_QUICKSCREEN,
 *    ACTION_STD_KEYLOCK
 *    ACTION_STD_REC
 *    ACTION_STD_HOTKEY

 *    { ACTION_STD_QUICKSCREEN, BUTTON_SELECT|BUTTON_REPEAT,         BUTTON_SELECT },
  button_context_standard  button_context_mainmenu as with sansa clip mapping - "back" button returns you to WPS     { ACTION_WPS_BROWSE,        BUTTON_UP|BUTTON_REPEAT,  BUTTON_UP },     ACTION_WPS_ID3SCREEN    optional  this should be the same as ACTION_STD_MENU     ACTION_WPS_VIEW_PLAYLIST
 *    ACTION_WPS_LIST_BOOKMARKS,  optional
 *    ACTION_WPS_CREATE_BOOKMARK, optional
  button_context_wps     ACTION_SETTINGS_INCBIGSTEP     ACTION_SETTINGS_DECBIGSTEP     ACTION_SETTINGS_SET, Used by touchscreen targets  button_context_settings     ACTION_LISTTREE_PGUP, optional
 *    ACTION_LISTTREE_PGDOWN, optional
  button_context_list     ACTION_TREE_ROOT_INIT,
 *    ACTION_TREE_PGLEFT, optional
 *    ACTION_TREE_PGRIGHT, optional
 *    ACTION_TREE_STOP,
 *    ACTION_TREE_WPS,
 *    ACTION_TREE_HOTKEY,
     { ACTION_TREE_WPS, BUTTON_UP|BUTTON_REL, BUTTON_UP },
 *    { ACTION_TREE_STOP,   BUTTON_POWER|BUTTON_REL,      BUTTON_POWER },
 *    { ACTION_TREE_HOTKEY, BUTTON_REC|BUTTON_REL,        BUTTON_REC },
  button_context_tree  button_context_settings_yesno  button_context_quickscreen LAST_ITEM_IN_LIST__NEXTLIST(CONTEXT_SETTINGS) button_context_settings_time     { ACTION_PS_NUDGE_LEFTOFF,  BUTTON_LEFT|BUTTON_REL,       BUTTON_NONE },     { ACTION_PS_NUDGE_RIGHTOFF, BUTTON_RIGHT|BUTTON_REL,      BUTTON_NONE },  button_context_pitchscreen  button_context_keyboard  button_context_bmark  get_context_mapping returns a pointer to one of the above defined arrays depending on the context **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 *
 * Copyright (C) 2017 Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** {Action Code,    Button code,    Prereq button code }  
 * The format of the list is as follows
 * { Action Code,   Button code,    Prereq button code } 
 * if there's no need to check the previous button's value, use BUTTON_NONE
 * Insert LAST_ITEM_IN_LIST at the end of each mapping 
     ACTION_STD_QUICKSCREEN,
 *    ACTION_STD_KEYLOCK
 *    ACTION_STD_REC
 *    ACTION_STD_HOTKEY

 *    { ACTION_STD_QUICKSCREEN, BUTTON_SELECT|BUTTON_REPEAT,         BUTTON_SELECT },
  button_context_standard  button_context_mainmenu as with sansa clip mapping - "back" button returns you to WPS     { ACTION_WPS_BROWSE,        BUTTON_UP|BUTTON_REPEAT,  BUTTON_UP },     ACTION_WPS_ID3SCREEN    optional  this should be the same as ACTION_STD_MENU     ACTION_WPS_VIEW_PLAYLIST
 *    ACTION_WPS_LIST_BOOKMARKS,  optional
 *    ACTION_WPS_CREATE_BOOKMARK, optional
  button_context_wps     ACTION_SETTINGS_INCBIGSTEP     ACTION_SETTINGS_DECBIGSTEP     ACTION_SETTINGS_SET, Used by touchscreen targets  button_context_settings     ACTION_LISTTREE_PGUP, optional
 *    ACTION_LISTTREE_PGDOWN, optional
  button_context_list     ACTION_TREE_ROOT_INIT,
 *    ACTION_TREE_PGLEFT, optional
 *    ACTION_TREE_PGRIGHT, optional
 *    ACTION_TREE_STOP,
 *    ACTION_TREE_WPS,
 *    ACTION_TREE_HOTKEY,
     { ACTION_TREE_WPS, BUTTON_UP|BUTTON_REL, BUTTON_UP },
 *    { ACTION_TREE_STOP,   BUTTON_POWER|BUTTON_REL,      BUTTON_POWER },
 *    { ACTION_TREE_HOTKEY, BUTTON_REC|BUTTON_REL,        BUTTON_REC },
  button_context_tree  button_context_settings_yesno  button_context_quickscreen LAST_ITEM_IN_LIST__NEXTLIST(CONTEXT_SETTINGS) button_context_settings_time     { ACTION_PS_NUDGE_LEFTOFF,  BUTTON_LEFT|BUTTON_REL,       BUTTON_NONE },     { ACTION_PS_NUDGE_RIGHTOFF, BUTTON_RIGHT|BUTTON_REL,      BUTTON_NONE },  button_context_pitchscreen  button_context_keyboard  button_context_bmark  get_context_mapping returns a pointer to one of the above defined arrays depending on the context 