**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2012 Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** returns <0 on error and status otherwise  read logicial table  locate firmware partition  get drive info  allocate a buffer for one sector  read the first sector to check it is correct and get the total size  see SB file format  if fn is NULL, just return the size immediately  read all sectors one by one  read logicial table  locate firmware partition  get drive info  allocate a buffer for one sector  read the first sector to check it is correct and get the total size  the whole file could be smaller than one sector, but it must be greater
     * then the header size  see SB file format  write all sectors one by one  avoid rereading the first sector **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2012 Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** returns <0 on error and status otherwise  read logicial table  locate firmware partition  get drive info  allocate a buffer for one sector  read the first sector to check it is correct and get the total size  see SB file format  if fn is NULL, just return the size immediately  read all sectors one by one  read logicial table  locate firmware partition  get drive info  allocate a buffer for one sector  read the first sector to check it is correct and get the total size  the whole file could be smaller than one sector, but it must be greater
     * then the header size  see SB file format  write all sectors one by one  avoid rereading the first sector **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2012 Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** returns <0 on error and status otherwise  read logicial table  locate firmware partition  get drive info  allocate a buffer for one sector  read the first sector to check it is correct and get the total size  see SB file format  if fn is NULL, just return the size immediately  read all sectors one by one  read logicial table  locate firmware partition  get drive info  allocate a buffer for one sector  read the first sector to check it is correct and get the total size  the whole file could be smaller than one sector, but it must be greater
     * then the header size  see SB file format  write all sectors one by one  avoid rereading the first sector 