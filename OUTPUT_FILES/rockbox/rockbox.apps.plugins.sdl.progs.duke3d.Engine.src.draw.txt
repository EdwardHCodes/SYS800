 "Build Engine & Tools" Copyright (c) 1993-1997 Ken Silverman Ken Silverman's official web site: "http://www.advsys.net/ken" See the included license file "BUILDLIC.TXT" for license info. This file has been modified from Ken Silverman's original release DDOI - This file is an attempt to reimplement a_nasm.asm in C  FCS: However did that work: This is far from perfect but you have my eternal respect !!!  ---------------  WALLS RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------FCS:   Draw ceiling/floorsDraw a line from destination in the framebuffer to framebuffer-numPixelsFCS: ????Check if this colorIndex is the transparent color (255).Variable used to draw column.This is how much you have to skip in the framebuffer in order to be one pixel below.FCS:  RENDER TOP AND BOTTOM COLUMNFCS: This is used to draw wall border vertical lines255 is the index for transparent color index. Skip drawing this pixel.We are drawing a column ?! tvlineasm1   skipdraw1 skipdraw3 skipdraw2FCS This is used to fill the inside of a wall (so it draws VERTICAL column, always).Only keep 5 first bits END ---------------  WALLS RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- ---------------  SPRITE RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------Skip transparent pixels (index=255)
 FCS: Draw a sprite vertical line of pixels.
 255 is the index of the transparent color: Do not draw it.Move down one pixel on the framebuffer END---------------  SPRITE RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- ---------------  FLOOR/CEILING RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------Skip transparent color. msethlineshift FCS: Render RENDER_SLOPPED_CEILING_AND_FLOORThis is so bad to cast asm3 to int then float :( !!! ------------- All this is calculating a fixed point approx. of 1/a  exponent ------------- register trickery BITSOFPRECISIONPOW END ---------------  FLOOR/CEILING RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- "Build Engine & Tools" Copyright (c) 1993-1997 Ken Silverman Ken Silverman's official web site: "http://www.advsys.net/ken" See the included license file "BUILDLIC.TXT" for license info. This file has been modified from Ken Silverman's original release DDOI - This file is an attempt to reimplement a_nasm.asm in C  FCS: However did that work: This is far from perfect but you have my eternal respect !!!  ---------------  WALLS RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------FCS:   Draw ceiling/floorsDraw a line from destination in the framebuffer to framebuffer-numPixelsFCS: ????Check if this colorIndex is the transparent color (255).Variable used to draw column.This is how much you have to skip in the framebuffer in order to be one pixel below.FCS:  RENDER TOP AND BOTTOM COLUMNFCS: This is used to draw wall border vertical lines255 is the index for transparent color index. Skip drawing this pixel.We are drawing a column ?! tvlineasm1   skipdraw1 skipdraw3 skipdraw2FCS This is used to fill the inside of a wall (so it draws VERTICAL column, always).Only keep 5 first bits END ---------------  WALLS RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- ---------------  SPRITE RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------Skip transparent pixels (index=255)
 FCS: Draw a sprite vertical line of pixels.
 255 is the index of the transparent color: Do not draw it.Move down one pixel on the framebuffer END---------------  SPRITE RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- ---------------  FLOOR/CEILING RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------Skip transparent color. msethlineshift FCS: Render RENDER_SLOPPED_CEILING_AND_FLOORThis is so bad to cast asm3 to int then float :( !!! ------------- All this is calculating a fixed point approx. of 1/a  exponent ------------- register trickery BITSOFPRECISIONPOW END ---------------  FLOOR/CEILING RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- "Build Engine & Tools" Copyright (c) 1993-1997 Ken Silverman Ken Silverman's official web site: "http://www.advsys.net/ken" See the included license file "BUILDLIC.TXT" for license info. This file has been modified from Ken Silverman's original release DDOI - This file is an attempt to reimplement a_nasm.asm in C  FCS: However did that work: This is far from perfect but you have my eternal respect !!!  ---------------  WALLS RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------FCS:   Draw ceiling/floorsDraw a line from destination in the framebuffer to framebuffer-numPixelsFCS: ????Check if this colorIndex is the transparent color (255).Variable used to draw column.This is how much you have to skip in the framebuffer in order to be one pixel below.FCS:  RENDER TOP AND BOTTOM COLUMNFCS: This is used to draw wall border vertical lines255 is the index for transparent color index. Skip drawing this pixel.We are drawing a column ?! tvlineasm1   skipdraw1 skipdraw3 skipdraw2FCS This is used to fill the inside of a wall (so it draws VERTICAL column, always).Only keep 5 first bits END ---------------  WALLS RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- ---------------  SPRITE RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------Skip transparent pixels (index=255)
 FCS: Draw a sprite vertical line of pixels.
 255 is the index of the transparent color: Do not draw it.Move down one pixel on the framebuffer END---------------  SPRITE RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ---------------------------- ---------------  FLOOR/CEILING RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------Skip transparent color. msethlineshift FCS: Render RENDER_SLOPPED_CEILING_AND_FLOORThis is so bad to cast asm3 to int then float :( !!! ------------- All this is calculating a fixed point approx. of 1/a  exponent ------------- register trickery BITSOFPRECISIONPOW END ---------------  FLOOR/CEILING RENDERING METHOD (USED TO BE HIGHLY OPTIMIZED ASSEMBLY) ----------------------------