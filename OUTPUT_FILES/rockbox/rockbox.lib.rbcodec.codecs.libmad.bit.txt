
 * libmad - MPEG audio decoder library
 * Copyright (C) 2000-2004 Underbit Technologies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 
 * This is the lookup table for computing the CRC-check word.
 * As described in section 2.4.3.1 and depicted in Figure A.9
 * of ISO/IEC 11172-3, the generator polynomial is:
 *
 * G(X) = X^16 + X^15 + X^2 + 1
 
 * NAME:        bit->init()
 * DESCRIPTION: initialize bit pointer struct
 
 * NAME:        bit->length()
 * DESCRIPTION: return number of bits between start and end points
  rockbox: not used
unsigned char mad_bit_bitsleft(struct mad_bitptr const *bitptr)
{
  return 8 - (bitptr->readbit & 7);
}

 * NAME:        bit->nextbyte()
 * DESCRIPTION: return pointer to next unprocessed byte
 
 * NAME:        bit->skip()
 * DESCRIPTION: advance bit pointer
 
 * NAME:        bit->read()
 * DESCRIPTION: read an arbitrary number of bits and return their UIMSBF value
  rockbox: not used 
 * NAME:        bit->write()
 * DESCRIPTION: write an arbitrary number of bits
  ... 
 * NAME:        bit->crc()
 * DESCRIPTION: compute CRC-check word
 
 * libmad - MPEG audio decoder library
 * Copyright (C) 2000-2004 Underbit Technologies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 
 * This is the lookup table for computing the CRC-check word.
 * As described in section 2.4.3.1 and depicted in Figure A.9
 * of ISO/IEC 11172-3, the generator polynomial is:
 *
 * G(X) = X^16 + X^15 + X^2 + 1
 
 * NAME:        bit->init()
 * DESCRIPTION: initialize bit pointer struct
 
 * NAME:        bit->length()
 * DESCRIPTION: return number of bits between start and end points
  rockbox: not used
unsigned char mad_bit_bitsleft(struct mad_bitptr const *bitptr)
{
  return 8 - (bitptr->readbit & 7);
}

 * NAME:        bit->nextbyte()
 * DESCRIPTION: return pointer to next unprocessed byte
 
 * NAME:        bit->skip()
 * DESCRIPTION: advance bit pointer
 
 * NAME:        bit->read()
 * DESCRIPTION: read an arbitrary number of bits and return their UIMSBF value
  rockbox: not used 
 * NAME:        bit->write()
 * DESCRIPTION: write an arbitrary number of bits
  ... 
 * NAME:        bit->crc()
 * DESCRIPTION: compute CRC-check word
 
 * libmad - MPEG audio decoder library
 * Copyright (C) 2000-2004 Underbit Technologies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 
 * This is the lookup table for computing the CRC-check word.
 * As described in section 2.4.3.1 and depicted in Figure A.9
 * of ISO/IEC 11172-3, the generator polynomial is:
 *
 * G(X) = X^16 + X^15 + X^2 + 1
 
 * NAME:        bit->init()
 * DESCRIPTION: initialize bit pointer struct
 
 * NAME:        bit->length()
 * DESCRIPTION: return number of bits between start and end points
  rockbox: not used
unsigned char mad_bit_bitsleft(struct mad_bitptr const *bitptr)
{
  return 8 - (bitptr->readbit & 7);
}

 * NAME:        bit->nextbyte()
 * DESCRIPTION: return pointer to next unprocessed byte
 
 * NAME:        bit->skip()
 * DESCRIPTION: advance bit pointer
 
 * NAME:        bit->read()
 * DESCRIPTION: read an arbitrary number of bits and return their UIMSBF value
  rockbox: not used 
 * NAME:        bit->write()
 * DESCRIPTION: write an arbitrary number of bits
  ... 
 * NAME:        bit->crc()
 * DESCRIPTION: compute CRC-check word
 