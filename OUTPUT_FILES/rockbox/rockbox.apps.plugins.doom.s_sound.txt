 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:  Platform-independent sound code
 *
 *----------------------------------------------------------------------------- when to clip out sounds Does not fit the large outdoor areas. Distance tp origin when sounds should be maxed out. This should relate to movement clipping resolution (see BLOCKMAP handling). Originally: (200*0x10000). Adjustable by menu. sound information (if null, channel avail.) origin of sound handle of the sound being played killough 4/25/98: whether sound is a player's weapon the set of channels available These are not used, but should be (menu). Maximum volume of a sound effect. Internal default is max out of 0-15. Maximum volume of music. Useless so far. whether songs are mus_paused music currently being played following is set  by the defaults code in M_misc: number of channels availablejff 3/17/98 to keep track of last IDMUS specified music num Internals. Initializes sound stuff, including volume Sets channels, SFX and music volume,  allocates channel buffer, sets S_sfx lookup.jff 1/22/98 skip sound init if sound not enabled Whatever these did with DMX, these are rather dummies now. Allocating the internal channels for mixing (the maximum numer of sounds rendered simultaneously) within zone memory. CPhipps - calloc no sounds are playing, and they are not mus_paused Note that sounds have not been cached (yet). Per level startup code. Kills playing sounds at start of level,  determines music if any, changes music. kill all playing sounds at start of level  (trust me - a good idea) start new music for the level Song - Who? - Where? American    e4m1 Romero      e4m2 Shawn       e4m3 American    e4m4 Tim         e4m5 Romero      e4m6 J.Anderson  e4m7 CHIRON.WAD Shawn       e4m8 Tim         e4m9 killough 4/25/98 check for bogus sound # Initialize sound parameters Check to see if it is audible,  and if not, modify the params hacks to vary the sfx pitches kill old sound try to find a channel get lumpnum if necessary killough 2/28/98: make missing sounds non-fatal increase the usefulness Assigns the handle to one of the channels in the mix/output buffer. Stop and resume music, during game PAUSE. Updates music & sounds initialize parameters check non-local sounds for distance clipping or modify their params killough 3/20/98 Starts some music with the music id found in sounds.h. shutdown old music get lumpnum if neccessary load & register it   music->handle = I_RegisterSong(music->data, W_LumpLength(music->lumpnum)); load & register it   music->data = (void *) W_CacheLumpNum(music->lumpnum); play it cph - release the music data stop the sound playing check to see  if other channels are playing the sound degrade usefulness of sound data Changes volume, stereo-separation, and pitch variables  from the norm of a sound effect to be played. If the sound is not audible, returns a 0. Otherwise, modifies parameters and returns 1. calculate the distance to sound origin  and clip it if necessary From _GG1_ p.428. Appox. eucledian distance fast. killough 11/98: handle zero-distance as special case angle of source to listener stereo separation volume calculation distance effect S_getChannel :   If none available, return -1.  Otherwise channel #. killough 4/25/98: made static, added is_pickup argument channel number to use Find an open channel None available Look for lower priority No lower priority.  Sorry, Charlie. Otherwise, kick out lower priority. channel is decided to be cnum. killough 4/25/98 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:  Platform-independent sound code
 *
 *----------------------------------------------------------------------------- when to clip out sounds Does not fit the large outdoor areas. Distance tp origin when sounds should be maxed out. This should relate to movement clipping resolution (see BLOCKMAP handling). Originally: (200*0x10000). Adjustable by menu. sound information (if null, channel avail.) origin of sound handle of the sound being played killough 4/25/98: whether sound is a player's weapon the set of channels available These are not used, but should be (menu). Maximum volume of a sound effect. Internal default is max out of 0-15. Maximum volume of music. Useless so far. whether songs are mus_paused music currently being played following is set  by the defaults code in M_misc: number of channels availablejff 3/17/98 to keep track of last IDMUS specified music num Internals. Initializes sound stuff, including volume Sets channels, SFX and music volume,  allocates channel buffer, sets S_sfx lookup.jff 1/22/98 skip sound init if sound not enabled Whatever these did with DMX, these are rather dummies now. Allocating the internal channels for mixing (the maximum numer of sounds rendered simultaneously) within zone memory. CPhipps - calloc no sounds are playing, and they are not mus_paused Note that sounds have not been cached (yet). Per level startup code. Kills playing sounds at start of level,  determines music if any, changes music. kill all playing sounds at start of level  (trust me - a good idea) start new music for the level Song - Who? - Where? American    e4m1 Romero      e4m2 Shawn       e4m3 American    e4m4 Tim         e4m5 Romero      e4m6 J.Anderson  e4m7 CHIRON.WAD Shawn       e4m8 Tim         e4m9 killough 4/25/98 check for bogus sound # Initialize sound parameters Check to see if it is audible,  and if not, modify the params hacks to vary the sfx pitches kill old sound try to find a channel get lumpnum if necessary killough 2/28/98: make missing sounds non-fatal increase the usefulness Assigns the handle to one of the channels in the mix/output buffer. Stop and resume music, during game PAUSE. Updates music & sounds initialize parameters check non-local sounds for distance clipping or modify their params killough 3/20/98 Starts some music with the music id found in sounds.h. shutdown old music get lumpnum if neccessary load & register it   music->handle = I_RegisterSong(music->data, W_LumpLength(music->lumpnum)); load & register it   music->data = (void *) W_CacheLumpNum(music->lumpnum); play it cph - release the music data stop the sound playing check to see  if other channels are playing the sound degrade usefulness of sound data Changes volume, stereo-separation, and pitch variables  from the norm of a sound effect to be played. If the sound is not audible, returns a 0. Otherwise, modifies parameters and returns 1. calculate the distance to sound origin  and clip it if necessary From _GG1_ p.428. Appox. eucledian distance fast. killough 11/98: handle zero-distance as special case angle of source to listener stereo separation volume calculation distance effect S_getChannel :   If none available, return -1.  Otherwise channel #. killough 4/25/98: made static, added is_pickup argument channel number to use Find an open channel None available Look for lower priority No lower priority.  Sorry, Charlie. Otherwise, kick out lower priority. channel is decided to be cnum. killough 4/25/98 Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999 by
 *  id Software, Chi Hoang, Lee Killough, Jim Flynn, Rand Phares, Ty Halderman
 *  Copyright (C) 1999-2000 by
 *  Jess Haas, Nicolas Kalkhof, Colin Phipps, Florian Schulze
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:  Platform-independent sound code
 *
 *----------------------------------------------------------------------------- when to clip out sounds Does not fit the large outdoor areas. Distance tp origin when sounds should be maxed out. This should relate to movement clipping resolution (see BLOCKMAP handling). Originally: (200*0x10000). Adjustable by menu. sound information (if null, channel avail.) origin of sound handle of the sound being played killough 4/25/98: whether sound is a player's weapon the set of channels available These are not used, but should be (menu). Maximum volume of a sound effect. Internal default is max out of 0-15. Maximum volume of music. Useless so far. whether songs are mus_paused music currently being played following is set  by the defaults code in M_misc: number of channels availablejff 3/17/98 to keep track of last IDMUS specified music num Internals. Initializes sound stuff, including volume Sets channels, SFX and music volume,  allocates channel buffer, sets S_sfx lookup.jff 1/22/98 skip sound init if sound not enabled Whatever these did with DMX, these are rather dummies now. Allocating the internal channels for mixing (the maximum numer of sounds rendered simultaneously) within zone memory. CPhipps - calloc no sounds are playing, and they are not mus_paused Note that sounds have not been cached (yet). Per level startup code. Kills playing sounds at start of level,  determines music if any, changes music. kill all playing sounds at start of level  (trust me - a good idea) start new music for the level Song - Who? - Where? American    e4m1 Romero      e4m2 Shawn       e4m3 American    e4m4 Tim         e4m5 Romero      e4m6 J.Anderson  e4m7 CHIRON.WAD Shawn       e4m8 Tim         e4m9 killough 4/25/98 check for bogus sound # Initialize sound parameters Check to see if it is audible,  and if not, modify the params hacks to vary the sfx pitches kill old sound try to find a channel get lumpnum if necessary killough 2/28/98: make missing sounds non-fatal increase the usefulness Assigns the handle to one of the channels in the mix/output buffer. Stop and resume music, during game PAUSE. Updates music & sounds initialize parameters check non-local sounds for distance clipping or modify their params killough 3/20/98 Starts some music with the music id found in sounds.h. shutdown old music get lumpnum if neccessary load & register it   music->handle = I_RegisterSong(music->data, W_LumpLength(music->lumpnum)); load & register it   music->data = (void *) W_CacheLumpNum(music->lumpnum); play it cph - release the music data stop the sound playing check to see  if other channels are playing the sound degrade usefulness of sound data Changes volume, stereo-separation, and pitch variables  from the norm of a sound effect to be played. If the sound is not audible, returns a 0. Otherwise, modifies parameters and returns 1. calculate the distance to sound origin  and clip it if necessary From _GG1_ p.428. Appox. eucledian distance fast. killough 11/98: handle zero-distance as special case angle of source to listener stereo separation volume calculation distance effect S_getChannel :   If none available, return -1.  Otherwise channel #. killough 4/25/98: made static, added is_pickup argument channel number to use Find an open channel None available Look for lower priority No lower priority.  Sorry, Charlie. Otherwise, kick out lower priority. channel is decided to be cnum. killough 4/25/98