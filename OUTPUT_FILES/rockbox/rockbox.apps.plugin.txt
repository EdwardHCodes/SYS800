**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** for actual plugins only, not for codecs  TSR exit callback  NULL if no plugin is loaded, otherwise the handle that lc_open() returned  File handle leak prophylaxis  for MAX_OPEN_FILES  Empty the keyboard buffer  !HAVE_PLUGIN_CHECK_OPEN_CLOSE  HAVE_PLUGIN_CHECK_OPEN_CLOSE  lcd  MEMORYSIZE > 2  LCD_DEPTH  HAVE_LCD_INVERT  remote lcd  HAVE_REMOTE_LCD  lcd backlight  For OLED targets like the Sansa Clip, the backlight_* functions control
     * the display enable, which has essentially the same effect.  HAVE_BACKLIGHT_BRIGHTNESS  HAVE_REMOTE_LCD  HAVE_BACKLIGHT  list  action handling  button  HAVE_BUTTONLIGHT_BRIGHTNESS  HAVE_BUTTON_LIGHT  file  USING_STORAGE_CALLBACK  dir  browsing  talking  kernel/ system stubstub HAVE_ADJUSTABLE_CPU_FREQ  PLATFORM_NATIVE  special simulator hooks  strings and memory  unicode stuff  the buflib memory management library  sound stub HAVE_RECORDING  metadata  HAVE_TAGCACHE  playback control  menu  options  power  usb  misc  Routines for the iriver_flash -plugin. plugin defined in plugin.c  defined in plugin.c  defined in plugin.c  new stuff at the end, sort into place next time
       the API gets incompatible  if we have a resident old plugin and a callback  not allowing another plugin to load  tlsf crashes observed on arm with 0x4 aligned addresses  some plugins assume the entry cache doesn't move and save pointers to it
     * they should be fixed properly instead of this lock  allow voice to back off if the plugin needs lots of memory  close handle if plugin is no tsr one  Go back to the global setting in case the plugin changed it  LCD_DEPTH == 1  LCD_DEPTH  Returns a pointer to the portion of the plugin buffer that is not already
   being used.  If no plugin is loaded, returns the entire plugin buffer  Returns a pointer to the mp3 buffer.
   Playback gets stopped, to avoid conflicts.
   Talk buffer is stolen as well.
  dummy ops with no callbacks, needed because by
     * default buflib buffers can be moved around which must be avoided  The plugin wants to stay resident after leaving its main function, e.g.
   runs from timer or own thread. The callback is registered to later
   instruct it to free its resources before a new plugin gets loaded.  remember the callback for later **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** for actual plugins only, not for codecs  TSR exit callback  NULL if no plugin is loaded, otherwise the handle that lc_open() returned  File handle leak prophylaxis  for MAX_OPEN_FILES  Empty the keyboard buffer  !HAVE_PLUGIN_CHECK_OPEN_CLOSE  HAVE_PLUGIN_CHECK_OPEN_CLOSE  lcd  MEMORYSIZE > 2  LCD_DEPTH  HAVE_LCD_INVERT  remote lcd  HAVE_REMOTE_LCD  lcd backlight  For OLED targets like the Sansa Clip, the backlight_* functions control
     * the display enable, which has essentially the same effect.  HAVE_BACKLIGHT_BRIGHTNESS  HAVE_REMOTE_LCD  HAVE_BACKLIGHT  list  action handling  button  HAVE_BUTTONLIGHT_BRIGHTNESS  HAVE_BUTTON_LIGHT  file  USING_STORAGE_CALLBACK  dir  browsing  talking  kernel/ system stubstub HAVE_ADJUSTABLE_CPU_FREQ  PLATFORM_NATIVE  special simulator hooks  strings and memory  unicode stuff  the buflib memory management library  sound stub HAVE_RECORDING  metadata  HAVE_TAGCACHE  playback control  menu  options  power  usb  misc  Routines for the iriver_flash -plugin. plugin defined in plugin.c  defined in plugin.c  defined in plugin.c  new stuff at the end, sort into place next time
       the API gets incompatible  if we have a resident old plugin and a callback  not allowing another plugin to load  tlsf crashes observed on arm with 0x4 aligned addresses  some plugins assume the entry cache doesn't move and save pointers to it
     * they should be fixed properly instead of this lock  allow voice to back off if the plugin needs lots of memory  close handle if plugin is no tsr one  Go back to the global setting in case the plugin changed it  LCD_DEPTH == 1  LCD_DEPTH  Returns a pointer to the portion of the plugin buffer that is not already
   being used.  If no plugin is loaded, returns the entire plugin buffer  Returns a pointer to the mp3 buffer.
   Playback gets stopped, to avoid conflicts.
   Talk buffer is stolen as well.
  dummy ops with no callbacks, needed because by
     * default buflib buffers can be moved around which must be avoided  The plugin wants to stay resident after leaving its main function, e.g.
   runs from timer or own thread. The callback is registered to later
   instruct it to free its resources before a new plugin gets loaded.  remember the callback for later **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** for actual plugins only, not for codecs  TSR exit callback  NULL if no plugin is loaded, otherwise the handle that lc_open() returned  File handle leak prophylaxis  for MAX_OPEN_FILES  Empty the keyboard buffer  !HAVE_PLUGIN_CHECK_OPEN_CLOSE  HAVE_PLUGIN_CHECK_OPEN_CLOSE  lcd  MEMORYSIZE > 2  LCD_DEPTH  HAVE_LCD_INVERT  remote lcd  HAVE_REMOTE_LCD  lcd backlight  For OLED targets like the Sansa Clip, the backlight_* functions control
     * the display enable, which has essentially the same effect.  HAVE_BACKLIGHT_BRIGHTNESS  HAVE_REMOTE_LCD  HAVE_BACKLIGHT  list  action handling  button  HAVE_BUTTONLIGHT_BRIGHTNESS  HAVE_BUTTON_LIGHT  file  USING_STORAGE_CALLBACK  dir  browsing  talking  kernel/ system stubstub HAVE_ADJUSTABLE_CPU_FREQ  PLATFORM_NATIVE  special simulator hooks  strings and memory  unicode stuff  the buflib memory management library  sound stub HAVE_RECORDING  metadata  HAVE_TAGCACHE  playback control  menu  options  power  usb  misc  Routines for the iriver_flash -plugin. plugin defined in plugin.c  defined in plugin.c  defined in plugin.c  new stuff at the end, sort into place next time
       the API gets incompatible  if we have a resident old plugin and a callback  not allowing another plugin to load  tlsf crashes observed on arm with 0x4 aligned addresses  some plugins assume the entry cache doesn't move and save pointers to it
     * they should be fixed properly instead of this lock  allow voice to back off if the plugin needs lots of memory  close handle if plugin is no tsr one  Go back to the global setting in case the plugin changed it  LCD_DEPTH == 1  LCD_DEPTH  Returns a pointer to the portion of the plugin buffer that is not already
   being used.  If no plugin is loaded, returns the entire plugin buffer  Returns a pointer to the mp3 buffer.
   Playback gets stopped, to avoid conflicts.
   Talk buffer is stolen as well.
  dummy ops with no callbacks, needed because by
     * default buflib buffers can be moved around which must be avoided  The plugin wants to stay resident after leaving its main function, e.g.
   runs from timer or own thread. The callback is registered to later
   instruct it to free its resources before a new plugin gets loaded.  remember the callback for later 