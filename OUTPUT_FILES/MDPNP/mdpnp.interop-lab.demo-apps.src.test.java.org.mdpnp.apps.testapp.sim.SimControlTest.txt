*
 * @author mfeinberg
 *
         * Incoming new values used to calculate the running statistics
         *
         * @param value
         double stdDev = Math.sqrt((pwrSumAvg * count - count * average * average) / (count - 1));*
 * @author mfeinberg
 *
         * Incoming new values used to calculate the running statistics
         *
         * @param value
         double stdDev = Math.sqrt((pwrSumAvg * count - count * average * average) / (count - 1));*
 * @author mfeinberg
 *
         * Incoming new values used to calculate the running statistics
         *
         * @param value
         double stdDev = Math.sqrt((pwrSumAvg * count - count * average * average) / (count - 1));*
 * @author mfeinberg
 *
         * Incoming new values used to calculate the running statistics
         *
         * @param value
         double stdDev = Math.sqrt((pwrSumAvg * count - count * average * average) / (count - 1));*
 * @author mfeinberg
 *
         * Incoming new values used to calculate the running statistics
         *
         * @param value
         double stdDev = Math.sqrt((pwrSumAvg * count - count * average * average) / (count - 1));*
 * @author mfeinberg
 *
         * Incoming new values used to calculate the running statistics
         *
         * @param value
         double stdDev = Math.sqrt((pwrSumAvg * count - count * average * average) / (count - 1));*
 * @author mfeinberg
 *
         * Incoming new values used to calculate the running statistics
         *
         * @param value
         double stdDev = Math.sqrt((pwrSumAvg * count - count * average * average) / (count - 1));