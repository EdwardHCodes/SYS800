**************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Partition table entry layout:
   -----------------------
   0: 0x80 - active
   1: starting head
   2: starting sector
   3: starting cylinder
   4: partition type
   5: end head
   6: end sector
   7: end cylinder
   8-11: starting sector (LBA)
   12-15: nr of sectors in partition
 space for 4 partitions on 2 drives  mounted to which drive (-1 if none)  unassigned?  none found  MAX_LOG_SECTOR_SIZE  out of space in table  check that the boot sector is initialized  For each drive, start at a different position, in order not to
           destroy the first entry of drive 0. That one is needed to calculate
           config sector position.  parse partitions  extended?  not handled yet  reset partition-on-drive flag  try "superfloppy" mode  remember the drive for this volume  not a "superfloppy"?  skip free/extended partitions  remember the drive for this volume  prepare next entry  ndef MAX_LOG_SECTOR_SIZE  remember the drive for this volume  prepare next entry  MAX_LOG_SECTOR_SIZE  reset all mounted partitions  mark all as unassigned  boot volume contained in uint8_t payload  mount boot volume first  force releasing resources  mark unused * Volume-centric functions * FIXME: this is crummy but the only way to ensure a correct freecount
       if other threads are writing and changing the fsinfo; it is possible
       to get multiple threads calling here and also writing and get correct
       freespace counts, however a bit complicated to do; if thou desireth I
       shall implement the concurrent version -- jethead71  HAVE_HOTSWAP  HAVE_MULTIDRIVE  HAVE_DIRCACHE  HAVE_HOTSWAP || HAVE_MULTIDRIVE || HAVE_DIRCACHE **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Partition table entry layout:
   -----------------------
   0: 0x80 - active
   1: starting head
   2: starting sector
   3: starting cylinder
   4: partition type
   5: end head
   6: end sector
   7: end cylinder
   8-11: starting sector (LBA)
   12-15: nr of sectors in partition
 space for 4 partitions on 2 drives  mounted to which drive (-1 if none)  unassigned?  none found  MAX_LOG_SECTOR_SIZE  out of space in table  check that the boot sector is initialized  For each drive, start at a different position, in order not to
           destroy the first entry of drive 0. That one is needed to calculate
           config sector position.  parse partitions  extended?  not handled yet  reset partition-on-drive flag  try "superfloppy" mode  remember the drive for this volume  not a "superfloppy"?  skip free/extended partitions  remember the drive for this volume  prepare next entry  ndef MAX_LOG_SECTOR_SIZE  remember the drive for this volume  prepare next entry  MAX_LOG_SECTOR_SIZE  reset all mounted partitions  mark all as unassigned  boot volume contained in uint8_t payload  mount boot volume first  force releasing resources  mark unused * Volume-centric functions * FIXME: this is crummy but the only way to ensure a correct freecount
       if other threads are writing and changing the fsinfo; it is possible
       to get multiple threads calling here and also writing and get correct
       freespace counts, however a bit complicated to do; if thou desireth I
       shall implement the concurrent version -- jethead71  HAVE_HOTSWAP  HAVE_MULTIDRIVE  HAVE_DIRCACHE  HAVE_HOTSWAP || HAVE_MULTIDRIVE || HAVE_DIRCACHE **************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * $Id$
 *
 * Copyright (C) 2002 by Björn Stenberg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 *************************************************************************** Partition table entry layout:
   -----------------------
   0: 0x80 - active
   1: starting head
   2: starting sector
   3: starting cylinder
   4: partition type
   5: end head
   6: end sector
   7: end cylinder
   8-11: starting sector (LBA)
   12-15: nr of sectors in partition
 space for 4 partitions on 2 drives  mounted to which drive (-1 if none)  unassigned?  none found  MAX_LOG_SECTOR_SIZE  out of space in table  check that the boot sector is initialized  For each drive, start at a different position, in order not to
           destroy the first entry of drive 0. That one is needed to calculate
           config sector position.  parse partitions  extended?  not handled yet  reset partition-on-drive flag  try "superfloppy" mode  remember the drive for this volume  not a "superfloppy"?  skip free/extended partitions  remember the drive for this volume  prepare next entry  ndef MAX_LOG_SECTOR_SIZE  remember the drive for this volume  prepare next entry  MAX_LOG_SECTOR_SIZE  reset all mounted partitions  mark all as unassigned  boot volume contained in uint8_t payload  mount boot volume first  force releasing resources  mark unused * Volume-centric functions * FIXME: this is crummy but the only way to ensure a correct freecount
       if other threads are writing and changing the fsinfo; it is possible
       to get multiple threads calling here and also writing and get correct
       freespace counts, however a bit complicated to do; if thou desireth I
       shall implement the concurrent version -- jethead71  HAVE_HOTSWAP  HAVE_MULTIDRIVE  HAVE_DIRCACHE  HAVE_HOTSWAP || HAVE_MULTIDRIVE || HAVE_DIRCACHE 