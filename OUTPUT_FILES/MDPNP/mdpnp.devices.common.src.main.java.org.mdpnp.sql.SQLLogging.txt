*
	 * In case we have problems logging to the database, we'll log them here...
	 *
	 * A single place to obtain a connection, that means we don't need to have JDBC client
	 * jar files all over the codebase.  It is the callers job to maintain the state of this
	 * connection, and in particular, to close it when it's finished with.
	 *  
	 * @return a JDBC connection object, or null if a connection cannot be created.
	 Populate the properties*
	 * In case we have problems logging to the database, we'll log them here...
	 *
	 * A single place to obtain a connection, that means we don't need to have JDBC client
	 * jar files all over the codebase.  It is the callers job to maintain the state of this
	 * connection, and in particular, to close it when it's finished with.
	 *  
	 * @return a JDBC connection object, or null if a connection cannot be created.
	 Populate the properties*
	 * In case we have problems logging to the database, we'll log them here...
	 *
	 * A single place to obtain a connection, that means we don't need to have JDBC client
	 * jar files all over the codebase.  It is the callers job to maintain the state of this
	 * connection, and in particular, to close it when it's finished with.
	 *  
	 * @return a JDBC connection object, or null if a connection cannot be created.
	 Populate the properties*
	 * In case we have problems logging to the database, we'll log them here...
	 *
	 * A single place to obtain a connection, that means we don't need to have JDBC client
	 * jar files all over the codebase.  It is the callers job to maintain the state of this
	 * connection, and in particular, to close it when it's finished with.
	 *  
	 * @return a JDBC connection object, or null if a connection cannot be created.
	 Populate the properties